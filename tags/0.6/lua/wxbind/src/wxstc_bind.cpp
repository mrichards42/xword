// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxstc_stc.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#include "wx/wxprec.h"

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif


#include "wxlua/include/wxlstate.h"
#include "wxbind/include/wxstc_bind.h"


// ---------------------------------------------------------------------------
// Bind class wxStyledTextCtrl
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxStyledTextCtrl'
int wxluatype_wxStyledTextCtrl = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AddRefDocument[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AddRefDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AddRefDocument[1] = {{ wxLua_wxStyledTextCtrl_AddRefDocument, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AddRefDocument }};
//     void AddRefDocument(void* docPointer);
static int LUACALL wxLua_wxStyledTextCtrl_AddRefDocument(lua_State *L)
{
    // void docPointer
    void * docPointer = (void *)wxlua_touserdata(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AddRefDocument
    self->AddRefDocument(docPointer);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AddText[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AddText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AddText[1] = {{ wxLua_wxStyledTextCtrl_AddText, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AddText }};
//     void AddText(const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_AddText(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AddText
    self->AddText(text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AddTextRaw[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AddTextRaw(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AddTextRaw[1] = {{ wxLua_wxStyledTextCtrl_AddTextRaw, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AddTextRaw }};
//     void AddTextRaw(const char* text);
static int LUACALL wxLua_wxStyledTextCtrl_AddTextRaw(lua_State *L)
{
    // const char text
    wxCharBuffer text = wxlua_getstringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AddTextRaw
    self->AddTextRaw((const char*)text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Allocate[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Allocate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Allocate[1] = {{ wxLua_wxStyledTextCtrl_Allocate, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Allocate }};
//     void Allocate(int bytes);
static int LUACALL wxLua_wxStyledTextCtrl_Allocate(lua_State *L)
{
    // int bytes
    int bytes = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Allocate
    self->Allocate(bytes);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AppendText[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AppendText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AppendText[1] = {{ wxLua_wxStyledTextCtrl_AppendText, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AppendText }};
//     void AppendText(const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_AppendText(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AppendText
    self->AppendText(text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompActive[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompActive(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompActive[1] = {{ wxLua_wxStyledTextCtrl_AutoCompActive, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompActive }};
//     bool AutoCompActive();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompActive(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompActive
    bool returns = (self->AutoCompActive());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompCancel[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompCancel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompCancel[1] = {{ wxLua_wxStyledTextCtrl_AutoCompCancel, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompCancel }};
//     void AutoCompCancel();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompCancel(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompCancel
    self->AutoCompCancel();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompComplete[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompComplete(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompComplete[1] = {{ wxLua_wxStyledTextCtrl_AutoCompComplete, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompComplete }};
//     void AutoCompComplete();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompComplete(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompComplete
    self->AutoCompComplete();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetAutoHide[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetAutoHide(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetAutoHide[1] = {{ wxLua_wxStyledTextCtrl_AutoCompGetAutoHide, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetAutoHide }};
//     bool AutoCompGetAutoHide();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetAutoHide(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompGetAutoHide
    bool returns = (self->AutoCompGetAutoHide());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetCancelAtStart[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetCancelAtStart(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetCancelAtStart[1] = {{ wxLua_wxStyledTextCtrl_AutoCompGetCancelAtStart, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetCancelAtStart }};
//     bool AutoCompGetCancelAtStart();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetCancelAtStart(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompGetCancelAtStart
    bool returns = (self->AutoCompGetCancelAtStart());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetChooseSingle[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetChooseSingle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetChooseSingle[1] = {{ wxLua_wxStyledTextCtrl_AutoCompGetChooseSingle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetChooseSingle }};
//     bool AutoCompGetChooseSingle();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetChooseSingle(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompGetChooseSingle
    bool returns = (self->AutoCompGetChooseSingle());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetCurrent[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetCurrent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetCurrent[1] = {{ wxLua_wxStyledTextCtrl_AutoCompGetCurrent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetCurrent }};
//     int AutoCompGetCurrent();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetCurrent(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompGetCurrent
    int returns = (self->AutoCompGetCurrent());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetDropRestOfWord[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetDropRestOfWord(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetDropRestOfWord[1] = {{ wxLua_wxStyledTextCtrl_AutoCompGetDropRestOfWord, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetDropRestOfWord }};
//     bool AutoCompGetDropRestOfWord();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetDropRestOfWord(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompGetDropRestOfWord
    bool returns = (self->AutoCompGetDropRestOfWord());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetIgnoreCase[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetIgnoreCase(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetIgnoreCase[1] = {{ wxLua_wxStyledTextCtrl_AutoCompGetIgnoreCase, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetIgnoreCase }};
//     bool AutoCompGetIgnoreCase();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetIgnoreCase(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompGetIgnoreCase
    bool returns = (self->AutoCompGetIgnoreCase());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetMaxHeight[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetMaxHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetMaxHeight[1] = {{ wxLua_wxStyledTextCtrl_AutoCompGetMaxHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetMaxHeight }};
//     int AutoCompGetMaxHeight();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetMaxHeight(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompGetMaxHeight
    int returns = (self->AutoCompGetMaxHeight());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetMaxWidth[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetMaxWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetMaxWidth[1] = {{ wxLua_wxStyledTextCtrl_AutoCompGetMaxWidth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetMaxWidth }};
//     int AutoCompGetMaxWidth();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetMaxWidth(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompGetMaxWidth
    int returns = (self->AutoCompGetMaxWidth());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetSeparator[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetSeparator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetSeparator[1] = {{ wxLua_wxStyledTextCtrl_AutoCompGetSeparator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetSeparator }};
//     int AutoCompGetSeparator();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetSeparator(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompGetSeparator
    int returns = (self->AutoCompGetSeparator());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetTypeSeparator[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetTypeSeparator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetTypeSeparator[1] = {{ wxLua_wxStyledTextCtrl_AutoCompGetTypeSeparator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompGetTypeSeparator }};
//     int AutoCompGetTypeSeparator();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompGetTypeSeparator(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompGetTypeSeparator
    int returns = (self->AutoCompGetTypeSeparator());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompPosStart[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompPosStart(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompPosStart[1] = {{ wxLua_wxStyledTextCtrl_AutoCompPosStart, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompPosStart }};
//     int AutoCompPosStart();
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompPosStart(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompPosStart
    int returns = (self->AutoCompPosStart());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSelect[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSelect(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSelect[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSelect, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSelect }};
//     void AutoCompSelect(const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSelect(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSelect
    self->AutoCompSelect(text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetAutoHide[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetAutoHide(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetAutoHide[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSetAutoHide, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetAutoHide }};
//     void AutoCompSetAutoHide(bool autoHide);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetAutoHide(lua_State *L)
{
    // bool autoHide
    bool autoHide = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSetAutoHide
    self->AutoCompSetAutoHide(autoHide);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetCancelAtStart[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetCancelAtStart(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetCancelAtStart[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSetCancelAtStart, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetCancelAtStart }};
//     void AutoCompSetCancelAtStart(bool cancel);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetCancelAtStart(lua_State *L)
{
    // bool cancel
    bool cancel = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSetCancelAtStart
    self->AutoCompSetCancelAtStart(cancel);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetChooseSingle[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetChooseSingle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetChooseSingle[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSetChooseSingle, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetChooseSingle }};
//     void AutoCompSetChooseSingle(bool chooseSingle);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetChooseSingle(lua_State *L)
{
    // bool chooseSingle
    bool chooseSingle = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSetChooseSingle
    self->AutoCompSetChooseSingle(chooseSingle);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetDropRestOfWord[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetDropRestOfWord(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetDropRestOfWord[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSetDropRestOfWord, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetDropRestOfWord }};
//     void AutoCompSetDropRestOfWord(bool dropRestOfWord);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetDropRestOfWord(lua_State *L)
{
    // bool dropRestOfWord
    bool dropRestOfWord = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSetDropRestOfWord
    self->AutoCompSetDropRestOfWord(dropRestOfWord);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetFillUps[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetFillUps(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetFillUps[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSetFillUps, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetFillUps }};
//     void AutoCompSetFillUps(const wxString& characterSet);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetFillUps(lua_State *L)
{
    // const wxString characterSet
    const wxString characterSet = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSetFillUps
    self->AutoCompSetFillUps(characterSet);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetIgnoreCase[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetIgnoreCase(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetIgnoreCase[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSetIgnoreCase, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetIgnoreCase }};
//     void AutoCompSetIgnoreCase(bool ignoreCase);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetIgnoreCase(lua_State *L)
{
    // bool ignoreCase
    bool ignoreCase = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSetIgnoreCase
    self->AutoCompSetIgnoreCase(ignoreCase);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetMaxHeight[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetMaxHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetMaxHeight[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSetMaxHeight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetMaxHeight }};
//     void AutoCompSetMaxHeight(int rowCount);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetMaxHeight(lua_State *L)
{
    // int rowCount
    int rowCount = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSetMaxHeight
    self->AutoCompSetMaxHeight(rowCount);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetMaxWidth[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetMaxWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetMaxWidth[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSetMaxWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetMaxWidth }};
//     void AutoCompSetMaxWidth(int characterCount);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetMaxWidth(lua_State *L)
{
    // int characterCount
    int characterCount = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSetMaxWidth
    self->AutoCompSetMaxWidth(characterCount);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetSeparator[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetSeparator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetSeparator[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSetSeparator, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetSeparator }};
//     void AutoCompSetSeparator(int separatorCharacter);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetSeparator(lua_State *L)
{
    // int separatorCharacter
    int separatorCharacter = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSetSeparator
    self->AutoCompSetSeparator(separatorCharacter);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetTypeSeparator[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetTypeSeparator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetTypeSeparator[1] = {{ wxLua_wxStyledTextCtrl_AutoCompSetTypeSeparator, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompSetTypeSeparator }};
//     void AutoCompSetTypeSeparator(int separatorCharacter);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompSetTypeSeparator(lua_State *L)
{
    // int separatorCharacter
    int separatorCharacter = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompSetTypeSeparator
    self->AutoCompSetTypeSeparator(separatorCharacter);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompShow[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompShow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompShow[1] = {{ wxLua_wxStyledTextCtrl_AutoCompShow, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompShow }};
//     void AutoCompShow(int lenEntered, const wxString& itemList);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompShow(lua_State *L)
{
    // const wxString itemList
    const wxString itemList = wxlua_getwxStringtype(L, 3);
    // int lenEntered
    int lenEntered = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompShow
    self->AutoCompShow(lenEntered, itemList);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompStops[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompStops(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompStops[1] = {{ wxLua_wxStyledTextCtrl_AutoCompStops, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_AutoCompStops }};
//     void AutoCompStops(const wxString& characterSet);
static int LUACALL wxLua_wxStyledTextCtrl_AutoCompStops(lua_State *L)
{
    // const wxString characterSet
    const wxString characterSet = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call AutoCompStops
    self->AutoCompStops(characterSet);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_BackTab[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_BackTab(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_BackTab[1] = {{ wxLua_wxStyledTextCtrl_BackTab, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_BackTab }};
//     void BackTab();
static int LUACALL wxLua_wxStyledTextCtrl_BackTab(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call BackTab
    self->BackTab();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_BeginUndoAction[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_BeginUndoAction(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_BeginUndoAction[1] = {{ wxLua_wxStyledTextCtrl_BeginUndoAction, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_BeginUndoAction }};
//     void BeginUndoAction();
static int LUACALL wxLua_wxStyledTextCtrl_BeginUndoAction(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call BeginUndoAction
    self->BeginUndoAction();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_BraceBadLight[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_BraceBadLight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_BraceBadLight[1] = {{ wxLua_wxStyledTextCtrl_BraceBadLight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_BraceBadLight }};
//     void BraceBadLight(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_BraceBadLight(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call BraceBadLight
    self->BraceBadLight(pos);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_BraceHighlight[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_BraceHighlight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_BraceHighlight[1] = {{ wxLua_wxStyledTextCtrl_BraceHighlight, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_BraceHighlight }};
//     void BraceHighlight(int pos1, int pos2);
static int LUACALL wxLua_wxStyledTextCtrl_BraceHighlight(lua_State *L)
{
    // int pos2
    int pos2 = (int)wxlua_getnumbertype(L, 3);
    // int pos1
    int pos1 = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call BraceHighlight
    self->BraceHighlight(pos1, pos2);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_BraceMatch[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_BraceMatch(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_BraceMatch[1] = {{ wxLua_wxStyledTextCtrl_BraceMatch, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_BraceMatch }};
//     int BraceMatch(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_BraceMatch(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call BraceMatch
    int returns = (self->BraceMatch(pos));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipActive[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CallTipActive(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipActive[1] = {{ wxLua_wxStyledTextCtrl_CallTipActive, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipActive }};
//     bool CallTipActive();
static int LUACALL wxLua_wxStyledTextCtrl_CallTipActive(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CallTipActive
    bool returns = (self->CallTipActive());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipCancel[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CallTipCancel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipCancel[1] = {{ wxLua_wxStyledTextCtrl_CallTipCancel, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipCancel }};
//     void CallTipCancel();
static int LUACALL wxLua_wxStyledTextCtrl_CallTipCancel(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CallTipCancel
    self->CallTipCancel();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipPosAtStart[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CallTipPosAtStart(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipPosAtStart[1] = {{ wxLua_wxStyledTextCtrl_CallTipPosAtStart, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipPosAtStart }};
//     int CallTipPosAtStart();
static int LUACALL wxLua_wxStyledTextCtrl_CallTipPosAtStart(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CallTipPosAtStart
    int returns = (self->CallTipPosAtStart());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipSetBackground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CallTipSetBackground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipSetBackground[1] = {{ wxLua_wxStyledTextCtrl_CallTipSetBackground, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipSetBackground }};
//     void CallTipSetBackground(const wxColour& back);
static int LUACALL wxLua_wxStyledTextCtrl_CallTipSetBackground(lua_State *L)
{
    // const wxColour back
    const wxColour * back = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CallTipSetBackground
    self->CallTipSetBackground(*back);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipSetForeground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CallTipSetForeground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipSetForeground[1] = {{ wxLua_wxStyledTextCtrl_CallTipSetForeground, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipSetForeground }};
//     void CallTipSetForeground(const wxColour& fore);
static int LUACALL wxLua_wxStyledTextCtrl_CallTipSetForeground(lua_State *L)
{
    // const wxColour fore
    const wxColour * fore = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CallTipSetForeground
    self->CallTipSetForeground(*fore);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipSetForegroundHighlight[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CallTipSetForegroundHighlight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipSetForegroundHighlight[1] = {{ wxLua_wxStyledTextCtrl_CallTipSetForegroundHighlight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipSetForegroundHighlight }};
//     void CallTipSetForegroundHighlight(const wxColour& fore);
static int LUACALL wxLua_wxStyledTextCtrl_CallTipSetForegroundHighlight(lua_State *L)
{
    // const wxColour fore
    const wxColour * fore = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CallTipSetForegroundHighlight
    self->CallTipSetForegroundHighlight(*fore);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipSetHighlight[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CallTipSetHighlight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipSetHighlight[1] = {{ wxLua_wxStyledTextCtrl_CallTipSetHighlight, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipSetHighlight }};
//     void CallTipSetHighlight(int start, int end);
static int LUACALL wxLua_wxStyledTextCtrl_CallTipSetHighlight(lua_State *L)
{
    // int end
    int end = (int)wxlua_getnumbertype(L, 3);
    // int start
    int start = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CallTipSetHighlight
    self->CallTipSetHighlight(start, end);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipShow[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CallTipShow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipShow[1] = {{ wxLua_wxStyledTextCtrl_CallTipShow, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CallTipShow }};
//     void CallTipShow(int pos, const wxString& definition);
static int LUACALL wxLua_wxStyledTextCtrl_CallTipShow(lua_State *L)
{
    // const wxString definition
    const wxString definition = wxlua_getwxStringtype(L, 3);
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CallTipShow
    self->CallTipShow(pos, definition);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CanPaste[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CanPaste(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CanPaste[1] = {{ wxLua_wxStyledTextCtrl_CanPaste, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CanPaste }};
//     bool CanPaste();
static int LUACALL wxLua_wxStyledTextCtrl_CanPaste(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CanPaste
    bool returns = (self->CanPaste());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CanRedo[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CanRedo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CanRedo[1] = {{ wxLua_wxStyledTextCtrl_CanRedo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CanRedo }};
//     bool CanRedo();
static int LUACALL wxLua_wxStyledTextCtrl_CanRedo(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CanRedo
    bool returns = (self->CanRedo());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CanUndo[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CanUndo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CanUndo[1] = {{ wxLua_wxStyledTextCtrl_CanUndo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CanUndo }};
//     bool CanUndo();
static int LUACALL wxLua_wxStyledTextCtrl_CanUndo(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CanUndo
    bool returns = (self->CanUndo());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Cancel[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Cancel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Cancel[1] = {{ wxLua_wxStyledTextCtrl_Cancel, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Cancel }};
//     void Cancel();
static int LUACALL wxLua_wxStyledTextCtrl_Cancel(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Cancel
    self->Cancel();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharLeft[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CharLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CharLeft[1] = {{ wxLua_wxStyledTextCtrl_CharLeft, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharLeft }};
//     void CharLeft();
static int LUACALL wxLua_wxStyledTextCtrl_CharLeft(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CharLeft
    self->CharLeft();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharLeftExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CharLeftExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CharLeftExtend[1] = {{ wxLua_wxStyledTextCtrl_CharLeftExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharLeftExtend }};
//     void CharLeftExtend();
static int LUACALL wxLua_wxStyledTextCtrl_CharLeftExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CharLeftExtend
    self->CharLeftExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharLeftRectExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CharLeftRectExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CharLeftRectExtend[1] = {{ wxLua_wxStyledTextCtrl_CharLeftRectExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharLeftRectExtend }};
//     void CharLeftRectExtend();
static int LUACALL wxLua_wxStyledTextCtrl_CharLeftRectExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CharLeftRectExtend
    self->CharLeftRectExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharRight[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CharRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CharRight[1] = {{ wxLua_wxStyledTextCtrl_CharRight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharRight }};
//     void CharRight();
static int LUACALL wxLua_wxStyledTextCtrl_CharRight(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CharRight
    self->CharRight();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharRightExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CharRightExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CharRightExtend[1] = {{ wxLua_wxStyledTextCtrl_CharRightExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharRightExtend }};
//     void CharRightExtend();
static int LUACALL wxLua_wxStyledTextCtrl_CharRightExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CharRightExtend
    self->CharRightExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharRightRectExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CharRightRectExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CharRightRectExtend[1] = {{ wxLua_wxStyledTextCtrl_CharRightRectExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CharRightRectExtend }};
//     void CharRightRectExtend();
static int LUACALL wxLua_wxStyledTextCtrl_CharRightRectExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CharRightRectExtend
    self->CharRightRectExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ChooseCaretX[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ChooseCaretX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ChooseCaretX[1] = {{ wxLua_wxStyledTextCtrl_ChooseCaretX, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ChooseCaretX }};
//     void ChooseCaretX();
static int LUACALL wxLua_wxStyledTextCtrl_ChooseCaretX(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ChooseCaretX
    self->ChooseCaretX();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Clear[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Clear(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Clear[1] = {{ wxLua_wxStyledTextCtrl_Clear, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Clear }};
//     void Clear();
static int LUACALL wxLua_wxStyledTextCtrl_Clear(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Clear
    self->Clear();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ClearAll[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ClearAll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ClearAll[1] = {{ wxLua_wxStyledTextCtrl_ClearAll, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ClearAll }};
//     void ClearAll();
static int LUACALL wxLua_wxStyledTextCtrl_ClearAll(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ClearAll
    self->ClearAll();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ClearDocumentStyle[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ClearDocumentStyle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ClearDocumentStyle[1] = {{ wxLua_wxStyledTextCtrl_ClearDocumentStyle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ClearDocumentStyle }};
//     void ClearDocumentStyle();
static int LUACALL wxLua_wxStyledTextCtrl_ClearDocumentStyle(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ClearDocumentStyle
    self->ClearDocumentStyle();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ClearRegisteredImages[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ClearRegisteredImages(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ClearRegisteredImages[1] = {{ wxLua_wxStyledTextCtrl_ClearRegisteredImages, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ClearRegisteredImages }};
//     void ClearRegisteredImages();
static int LUACALL wxLua_wxStyledTextCtrl_ClearRegisteredImages(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ClearRegisteredImages
    self->ClearRegisteredImages();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CmdKeyAssign[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CmdKeyAssign(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CmdKeyAssign[1] = {{ wxLua_wxStyledTextCtrl_CmdKeyAssign, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CmdKeyAssign }};
//     void CmdKeyAssign(int key, int modifiers, int cmd);
static int LUACALL wxLua_wxStyledTextCtrl_CmdKeyAssign(lua_State *L)
{
    // int cmd
    int cmd = (int)wxlua_getnumbertype(L, 4);
    // int modifiers
    int modifiers = (int)wxlua_getnumbertype(L, 3);
    // int key
    int key = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CmdKeyAssign
    self->CmdKeyAssign(key, modifiers, cmd);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CmdKeyClear[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CmdKeyClear(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CmdKeyClear[1] = {{ wxLua_wxStyledTextCtrl_CmdKeyClear, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CmdKeyClear }};
//     void CmdKeyClear(int key, int modifiers);
static int LUACALL wxLua_wxStyledTextCtrl_CmdKeyClear(lua_State *L)
{
    // int modifiers
    int modifiers = (int)wxlua_getnumbertype(L, 3);
    // int key
    int key = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CmdKeyClear
    self->CmdKeyClear(key, modifiers);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CmdKeyClearAll[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CmdKeyClearAll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CmdKeyClearAll[1] = {{ wxLua_wxStyledTextCtrl_CmdKeyClearAll, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CmdKeyClearAll }};
//     void CmdKeyClearAll();
static int LUACALL wxLua_wxStyledTextCtrl_CmdKeyClearAll(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CmdKeyClearAll
    self->CmdKeyClearAll();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CmdKeyExecute[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CmdKeyExecute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CmdKeyExecute[1] = {{ wxLua_wxStyledTextCtrl_CmdKeyExecute, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CmdKeyExecute }};
//     void CmdKeyExecute(int cmd);
static int LUACALL wxLua_wxStyledTextCtrl_CmdKeyExecute(lua_State *L)
{
    // int cmd
    int cmd = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CmdKeyExecute
    self->CmdKeyExecute(cmd);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Colourise[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Colourise(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Colourise[1] = {{ wxLua_wxStyledTextCtrl_Colourise, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Colourise }};
//     void Colourise(int start, int end);
static int LUACALL wxLua_wxStyledTextCtrl_Colourise(lua_State *L)
{
    // int end
    int end = (int)wxlua_getnumbertype(L, 3);
    // int start
    int start = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Colourise
    self->Colourise(start, end);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ConvertEOLs[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ConvertEOLs(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ConvertEOLs[1] = {{ wxLua_wxStyledTextCtrl_ConvertEOLs, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ConvertEOLs }};
//     void ConvertEOLs(int eolMode);
static int LUACALL wxLua_wxStyledTextCtrl_ConvertEOLs(lua_State *L)
{
    // int eolMode
    int eolMode = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ConvertEOLs
    self->ConvertEOLs(eolMode);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Copy[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Copy(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Copy[1] = {{ wxLua_wxStyledTextCtrl_Copy, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Copy }};
//     void Copy();
static int LUACALL wxLua_wxStyledTextCtrl_Copy(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Copy
    self->Copy();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CopyRange[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CopyRange(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CopyRange[1] = {{ wxLua_wxStyledTextCtrl_CopyRange, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CopyRange }};
//     void CopyRange(int start, int end);
static int LUACALL wxLua_wxStyledTextCtrl_CopyRange(lua_State *L)
{
    // int end
    int end = (int)wxlua_getnumbertype(L, 3);
    // int start
    int start = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CopyRange
    self->CopyRange(start, end);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CopyText[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CopyText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CopyText[1] = {{ wxLua_wxStyledTextCtrl_CopyText, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CopyText }};
//     void CopyText(int length, const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_CopyText(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // int length
    int length = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CopyText
    self->CopyText(length, text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_CreateDocument[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_CreateDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_CreateDocument[1] = {{ wxLua_wxStyledTextCtrl_CreateDocument, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_CreateDocument }};
//     void* CreateDocument();
static int LUACALL wxLua_wxStyledTextCtrl_CreateDocument(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call CreateDocument
    void* returns = (void*)self->CreateDocument();
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Cut[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Cut(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Cut[1] = {{ wxLua_wxStyledTextCtrl_Cut, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Cut }};
//     void Cut();
static int LUACALL wxLua_wxStyledTextCtrl_Cut(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Cut
    self->Cut();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DelLineLeft[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DelLineLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DelLineLeft[1] = {{ wxLua_wxStyledTextCtrl_DelLineLeft, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DelLineLeft }};
//     void DelLineLeft();
static int LUACALL wxLua_wxStyledTextCtrl_DelLineLeft(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DelLineLeft
    self->DelLineLeft();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DelLineRight[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DelLineRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DelLineRight[1] = {{ wxLua_wxStyledTextCtrl_DelLineRight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DelLineRight }};
//     void DelLineRight();
static int LUACALL wxLua_wxStyledTextCtrl_DelLineRight(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DelLineRight
    self->DelLineRight();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DelWordLeft[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DelWordLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DelWordLeft[1] = {{ wxLua_wxStyledTextCtrl_DelWordLeft, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DelWordLeft }};
//     void DelWordLeft();
static int LUACALL wxLua_wxStyledTextCtrl_DelWordLeft(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DelWordLeft
    self->DelWordLeft();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DelWordRight[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DelWordRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DelWordRight[1] = {{ wxLua_wxStyledTextCtrl_DelWordRight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DelWordRight }};
//     void DelWordRight();
static int LUACALL wxLua_wxStyledTextCtrl_DelWordRight(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DelWordRight
    self->DelWordRight();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DeleteBack[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DeleteBack(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DeleteBack[1] = {{ wxLua_wxStyledTextCtrl_DeleteBack, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DeleteBack }};
//     void DeleteBack();
static int LUACALL wxLua_wxStyledTextCtrl_DeleteBack(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DeleteBack
    self->DeleteBack();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DeleteBackNotLine[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DeleteBackNotLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DeleteBackNotLine[1] = {{ wxLua_wxStyledTextCtrl_DeleteBackNotLine, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DeleteBackNotLine }};
//     void DeleteBackNotLine();
static int LUACALL wxLua_wxStyledTextCtrl_DeleteBackNotLine(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DeleteBackNotLine
    self->DeleteBackNotLine();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DocLineFromVisible[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DocLineFromVisible(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DocLineFromVisible[1] = {{ wxLua_wxStyledTextCtrl_DocLineFromVisible, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DocLineFromVisible }};
//     int DocLineFromVisible(int lineDisplay);
static int LUACALL wxLua_wxStyledTextCtrl_DocLineFromVisible(lua_State *L)
{
    // int lineDisplay
    int lineDisplay = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DocLineFromVisible
    int returns = (self->DocLineFromVisible(lineDisplay));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DocumentEnd[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DocumentEnd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DocumentEnd[1] = {{ wxLua_wxStyledTextCtrl_DocumentEnd, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DocumentEnd }};
//     void DocumentEnd();
static int LUACALL wxLua_wxStyledTextCtrl_DocumentEnd(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DocumentEnd
    self->DocumentEnd();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DocumentEndExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DocumentEndExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DocumentEndExtend[1] = {{ wxLua_wxStyledTextCtrl_DocumentEndExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DocumentEndExtend }};
//     void DocumentEndExtend();
static int LUACALL wxLua_wxStyledTextCtrl_DocumentEndExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DocumentEndExtend
    self->DocumentEndExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DocumentStart[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DocumentStart(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DocumentStart[1] = {{ wxLua_wxStyledTextCtrl_DocumentStart, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DocumentStart }};
//     void DocumentStart();
static int LUACALL wxLua_wxStyledTextCtrl_DocumentStart(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DocumentStart
    self->DocumentStart();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_DocumentStartExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_DocumentStartExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_DocumentStartExtend[1] = {{ wxLua_wxStyledTextCtrl_DocumentStartExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_DocumentStartExtend }};
//     void DocumentStartExtend();
static int LUACALL wxLua_wxStyledTextCtrl_DocumentStartExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call DocumentStartExtend
    self->DocumentStartExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_EditToggleOvertype[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_EditToggleOvertype(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_EditToggleOvertype[1] = {{ wxLua_wxStyledTextCtrl_EditToggleOvertype, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_EditToggleOvertype }};
//     void EditToggleOvertype();
static int LUACALL wxLua_wxStyledTextCtrl_EditToggleOvertype(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call EditToggleOvertype
    self->EditToggleOvertype();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_EmptyUndoBuffer[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_EmptyUndoBuffer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_EmptyUndoBuffer[1] = {{ wxLua_wxStyledTextCtrl_EmptyUndoBuffer, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_EmptyUndoBuffer }};
//     void EmptyUndoBuffer();
static int LUACALL wxLua_wxStyledTextCtrl_EmptyUndoBuffer(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call EmptyUndoBuffer
    self->EmptyUndoBuffer();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_EndUndoAction[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_EndUndoAction(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_EndUndoAction[1] = {{ wxLua_wxStyledTextCtrl_EndUndoAction, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_EndUndoAction }};
//     void EndUndoAction();
static int LUACALL wxLua_wxStyledTextCtrl_EndUndoAction(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call EndUndoAction
    self->EndUndoAction();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_EnsureCaretVisible[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_EnsureCaretVisible(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_EnsureCaretVisible[1] = {{ wxLua_wxStyledTextCtrl_EnsureCaretVisible, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_EnsureCaretVisible }};
//     void EnsureCaretVisible();
static int LUACALL wxLua_wxStyledTextCtrl_EnsureCaretVisible(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call EnsureCaretVisible
    self->EnsureCaretVisible();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_EnsureVisible[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_EnsureVisible(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_EnsureVisible[1] = {{ wxLua_wxStyledTextCtrl_EnsureVisible, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_EnsureVisible }};
//     void EnsureVisible(int line);
static int LUACALL wxLua_wxStyledTextCtrl_EnsureVisible(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call EnsureVisible
    self->EnsureVisible(line);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_EnsureVisibleEnforcePolicy[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_EnsureVisibleEnforcePolicy(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_EnsureVisibleEnforcePolicy[1] = {{ wxLua_wxStyledTextCtrl_EnsureVisibleEnforcePolicy, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_EnsureVisibleEnforcePolicy }};
//     void EnsureVisibleEnforcePolicy(int line);
static int LUACALL wxLua_wxStyledTextCtrl_EnsureVisibleEnforcePolicy(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call EnsureVisibleEnforcePolicy
    self->EnsureVisibleEnforcePolicy(line);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_FindColumn[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_FindColumn(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_FindColumn[1] = {{ wxLua_wxStyledTextCtrl_FindColumn, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_FindColumn }};
//     int FindColumn(int line, int column);
static int LUACALL wxLua_wxStyledTextCtrl_FindColumn(lua_State *L)
{
    // int column
    int column = (int)wxlua_getnumbertype(L, 3);
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call FindColumn
    int returns = (self->FindColumn(line, column));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_FindText[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_FindText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_FindText[1] = {{ wxLua_wxStyledTextCtrl_FindText, WXLUAMETHOD_METHOD, 4, 5, s_wxluatypeArray_wxLua_wxStyledTextCtrl_FindText }};
//     int FindText(int minPos, int maxPos, const wxString& text, int flags=0);
static int LUACALL wxLua_wxStyledTextCtrl_FindText(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 5 ? (int)wxlua_getnumbertype(L, 5) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 4);
    // int maxPos
    int maxPos = (int)wxlua_getnumbertype(L, 3);
    // int minPos
    int minPos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call FindText
    int returns = (self->FindText(minPos, maxPos, text, flags));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_FormFeed[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_FormFeed(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_FormFeed[1] = {{ wxLua_wxStyledTextCtrl_FormFeed, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_FormFeed }};
//     void FormFeed();
static int LUACALL wxLua_wxStyledTextCtrl_FormFeed(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call FormFeed
    self->FormFeed();

    return 0;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxDC)
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_FormatRange[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxDC, &wxluatype_wxDC, &wxluatype_wxRect, &wxluatype_wxRect, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_FormatRange(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_FormatRange[1] = {{ wxLua_wxStyledTextCtrl_FormatRange, WXLUAMETHOD_METHOD, 8, 8, s_wxluatypeArray_wxLua_wxStyledTextCtrl_FormatRange }};
//     int FormatRange(bool   doDraw, int    startPos, int    endPos, wxDC*  draw, wxDC*  target,  const wxRect& renderRect, const wxRect& pageRect);
static int LUACALL wxLua_wxStyledTextCtrl_FormatRange(lua_State *L)
{
    // const wxRect pageRect
    const wxRect * pageRect = (const wxRect *)wxluaT_getuserdatatype(L, 8, wxluatype_wxRect);
    // const wxRect renderRect
    const wxRect * renderRect = (const wxRect *)wxluaT_getuserdatatype(L, 7, wxluatype_wxRect);
    // wxDC target
    wxDC * target = (wxDC *)wxluaT_getuserdatatype(L, 6, wxluatype_wxDC);
    // wxDC draw
    wxDC * draw = (wxDC *)wxluaT_getuserdatatype(L, 5, wxluatype_wxDC);
    // int endPos
    int endPos = (int)wxlua_getnumbertype(L, 4);
    // int startPos
    int startPos = (int)wxlua_getnumbertype(L, 3);
    // bool doDraw
    bool doDraw = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call FormatRange
    int returns = (self->FormatRange(doDraw, startPos, endPos, draw, target, *renderRect, *pageRect));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxDC)

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetAnchor[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetAnchor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetAnchor[1] = {{ wxLua_wxStyledTextCtrl_GetAnchor, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetAnchor }};
//     int GetAnchor();
static int LUACALL wxLua_wxStyledTextCtrl_GetAnchor(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetAnchor
    int returns = (self->GetAnchor());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetBackSpaceUnIndents[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetBackSpaceUnIndents(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetBackSpaceUnIndents[1] = {{ wxLua_wxStyledTextCtrl_GetBackSpaceUnIndents, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetBackSpaceUnIndents }};
//     bool GetBackSpaceUnIndents();
static int LUACALL wxLua_wxStyledTextCtrl_GetBackSpaceUnIndents(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetBackSpaceUnIndents
    bool returns = (self->GetBackSpaceUnIndents());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetBufferedDraw[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetBufferedDraw(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetBufferedDraw[1] = {{ wxLua_wxStyledTextCtrl_GetBufferedDraw, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetBufferedDraw }};
//     bool GetBufferedDraw();
static int LUACALL wxLua_wxStyledTextCtrl_GetBufferedDraw(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetBufferedDraw
    bool returns = (self->GetBufferedDraw());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretForeground[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretForeground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretForeground[1] = {{ wxLua_wxStyledTextCtrl_GetCaretForeground, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretForeground }};
//     wxColour GetCaretForeground();
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretForeground(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCaretForeground
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetCaretForeground());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (wxColour*)returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // wxLUA_USE_wxColourPenBrush

#if (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretLineBack[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretLineBack(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretLineBack[1] = {{ wxLua_wxStyledTextCtrl_GetCaretLineBack, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretLineBack }};
//     !%wxchkver_2_8 wxColour GetCaretLineBack();
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretLineBack(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCaretLineBack
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetCaretLineBack());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (wxColour*)returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)

#if (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretLineBackground[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretLineBackground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretLineBackground[1] = {{ wxLua_wxStyledTextCtrl_GetCaretLineBackground, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretLineBackground }};
//     %wxchkver_2_8  wxColour GetCaretLineBackground();
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretLineBackground(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCaretLineBackground
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetCaretLineBackground());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (wxColour*)returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretLineVisible[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretLineVisible(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretLineVisible[1] = {{ wxLua_wxStyledTextCtrl_GetCaretLineVisible, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretLineVisible }};
//     bool GetCaretLineVisible();
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretLineVisible(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCaretLineVisible
    bool returns = (self->GetCaretLineVisible());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretPeriod[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretPeriod(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretPeriod[1] = {{ wxLua_wxStyledTextCtrl_GetCaretPeriod, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretPeriod }};
//     int GetCaretPeriod();
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretPeriod(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCaretPeriod
    int returns = (self->GetCaretPeriod());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretSticky[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretSticky(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretSticky[1] = {{ wxLua_wxStyledTextCtrl_GetCaretSticky, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretSticky }};
//     bool GetCaretSticky();
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretSticky(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCaretSticky
    bool returns = (self->GetCaretSticky());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretWidth[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretWidth[1] = {{ wxLua_wxStyledTextCtrl_GetCaretWidth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCaretWidth }};
//     int GetCaretWidth();
static int LUACALL wxLua_wxStyledTextCtrl_GetCaretWidth(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCaretWidth
    int returns = (self->GetCaretWidth());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCharAt[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCharAt(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCharAt[1] = {{ wxLua_wxStyledTextCtrl_GetCharAt, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCharAt }};
//     int GetCharAt(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_GetCharAt(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCharAt
    int returns = (self->GetCharAt(pos));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCodePage[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCodePage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCodePage[1] = {{ wxLua_wxStyledTextCtrl_GetCodePage, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCodePage }};
//     int GetCodePage();
static int LUACALL wxLua_wxStyledTextCtrl_GetCodePage(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCodePage
    int returns = (self->GetCodePage());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetColumn[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetColumn(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetColumn[1] = {{ wxLua_wxStyledTextCtrl_GetColumn, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetColumn }};
//     int GetColumn(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_GetColumn(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetColumn
    int returns = (self->GetColumn(pos));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetControlCharSymbol[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetControlCharSymbol(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetControlCharSymbol[1] = {{ wxLua_wxStyledTextCtrl_GetControlCharSymbol, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetControlCharSymbol }};
//     int GetControlCharSymbol();
static int LUACALL wxLua_wxStyledTextCtrl_GetControlCharSymbol(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetControlCharSymbol
    int returns = (self->GetControlCharSymbol());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCurLine[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCurLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCurLine[1] = {{ wxLua_wxStyledTextCtrl_GetCurLine, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCurLine }};
// %override wxLua_wxStyledTextCtrl_GetCurLine
// wxString GetCurLine(int* linePos=NULL)
static int LUACALL wxLua_wxStyledTextCtrl_GetCurLine(lua_State *L)
{
    int linePos;
    // get this
    wxStyledTextCtrl *self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCurLine
    wxString returns = self->GetCurLine(&linePos);
    // push the result string
    lua_pushstring(L, wx2lua(returns));
    lua_pushnumber(L, linePos);
    // return the number of parameters
    return 2;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCurrentLine[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCurrentLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCurrentLine[1] = {{ wxLua_wxStyledTextCtrl_GetCurrentLine, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCurrentLine }};
//     int GetCurrentLine();
static int LUACALL wxLua_wxStyledTextCtrl_GetCurrentLine(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCurrentLine
    int returns = (self->GetCurrentLine());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCurrentPos[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetCurrentPos(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetCurrentPos[1] = {{ wxLua_wxStyledTextCtrl_GetCurrentPos, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetCurrentPos }};
//     int GetCurrentPos();
static int LUACALL wxLua_wxStyledTextCtrl_GetCurrentPos(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetCurrentPos
    int returns = (self->GetCurrentPos());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetDocPointer[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetDocPointer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetDocPointer[1] = {{ wxLua_wxStyledTextCtrl_GetDocPointer, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetDocPointer }};
//     void* GetDocPointer();
static int LUACALL wxLua_wxStyledTextCtrl_GetDocPointer(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetDocPointer
    void* returns = (void*)self->GetDocPointer();
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEOLMode[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetEOLMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetEOLMode[1] = {{ wxLua_wxStyledTextCtrl_GetEOLMode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEOLMode }};
//     int GetEOLMode();
static int LUACALL wxLua_wxStyledTextCtrl_GetEOLMode(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetEOLMode
    int returns = (self->GetEOLMode());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEdgeColour[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetEdgeColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetEdgeColour[1] = {{ wxLua_wxStyledTextCtrl_GetEdgeColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEdgeColour }};
//     wxColour GetEdgeColour();
static int LUACALL wxLua_wxStyledTextCtrl_GetEdgeColour(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetEdgeColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetEdgeColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (wxColour*)returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEdgeColumn[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetEdgeColumn(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetEdgeColumn[1] = {{ wxLua_wxStyledTextCtrl_GetEdgeColumn, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEdgeColumn }};
//     int GetEdgeColumn();
static int LUACALL wxLua_wxStyledTextCtrl_GetEdgeColumn(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetEdgeColumn
    int returns = (self->GetEdgeColumn());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEdgeMode[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetEdgeMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetEdgeMode[1] = {{ wxLua_wxStyledTextCtrl_GetEdgeMode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEdgeMode }};
//     int GetEdgeMode();
static int LUACALL wxLua_wxStyledTextCtrl_GetEdgeMode(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetEdgeMode
    int returns = (self->GetEdgeMode());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEndAtLastLine[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetEndAtLastLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetEndAtLastLine[1] = {{ wxLua_wxStyledTextCtrl_GetEndAtLastLine, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEndAtLastLine }};
//     bool GetEndAtLastLine();
static int LUACALL wxLua_wxStyledTextCtrl_GetEndAtLastLine(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetEndAtLastLine
    bool returns = (self->GetEndAtLastLine());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEndStyled[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetEndStyled(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetEndStyled[1] = {{ wxLua_wxStyledTextCtrl_GetEndStyled, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetEndStyled }};
//     int GetEndStyled();
static int LUACALL wxLua_wxStyledTextCtrl_GetEndStyled(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetEndStyled
    int returns = (self->GetEndStyled());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetFirstVisibleLine[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetFirstVisibleLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetFirstVisibleLine[1] = {{ wxLua_wxStyledTextCtrl_GetFirstVisibleLine, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetFirstVisibleLine }};
//     int GetFirstVisibleLine();
static int LUACALL wxLua_wxStyledTextCtrl_GetFirstVisibleLine(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetFirstVisibleLine
    int returns = (self->GetFirstVisibleLine());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetFoldExpanded[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetFoldExpanded(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetFoldExpanded[1] = {{ wxLua_wxStyledTextCtrl_GetFoldExpanded, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetFoldExpanded }};
//     bool GetFoldExpanded(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetFoldExpanded(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetFoldExpanded
    bool returns = (self->GetFoldExpanded(line));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetFoldLevel[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetFoldLevel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetFoldLevel[1] = {{ wxLua_wxStyledTextCtrl_GetFoldLevel, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetFoldLevel }};
//     int GetFoldLevel(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetFoldLevel(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetFoldLevel
    int returns = (self->GetFoldLevel(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetFoldParent[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetFoldParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetFoldParent[1] = {{ wxLua_wxStyledTextCtrl_GetFoldParent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetFoldParent }};
//     int GetFoldParent(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetFoldParent(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetFoldParent
    int returns = (self->GetFoldParent(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetHighlightGuide[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetHighlightGuide(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetHighlightGuide[1] = {{ wxLua_wxStyledTextCtrl_GetHighlightGuide, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetHighlightGuide }};
//     int GetHighlightGuide();
static int LUACALL wxLua_wxStyledTextCtrl_GetHighlightGuide(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetHighlightGuide
    int returns = (self->GetHighlightGuide());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetIndent[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetIndent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetIndent[1] = {{ wxLua_wxStyledTextCtrl_GetIndent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetIndent }};
//     int GetIndent();
static int LUACALL wxLua_wxStyledTextCtrl_GetIndent(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetIndent
    int returns = (self->GetIndent());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetIndentationGuides[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetIndentationGuides(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetIndentationGuides[1] = {{ wxLua_wxStyledTextCtrl_GetIndentationGuides, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetIndentationGuides }};
//     bool GetIndentationGuides();
static int LUACALL wxLua_wxStyledTextCtrl_GetIndentationGuides(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetIndentationGuides
    bool returns = (self->GetIndentationGuides());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLastChild[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLastChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLastChild[1] = {{ wxLua_wxStyledTextCtrl_GetLastChild, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLastChild }};
//     int GetLastChild(int line, int level);
static int LUACALL wxLua_wxStyledTextCtrl_GetLastChild(lua_State *L)
{
    // int level
    int level = (int)wxlua_getnumbertype(L, 3);
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLastChild
    int returns = (self->GetLastChild(line, level));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLastKeydownProcessed[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLastKeydownProcessed(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLastKeydownProcessed[1] = {{ wxLua_wxStyledTextCtrl_GetLastKeydownProcessed, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLastKeydownProcessed }};
//     bool GetLastKeydownProcessed()
static int LUACALL wxLua_wxStyledTextCtrl_GetLastKeydownProcessed(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLastKeydownProcessed
    bool returns = (self->GetLastKeydownProcessed());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLayoutCache[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLayoutCache(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLayoutCache[1] = {{ wxLua_wxStyledTextCtrl_GetLayoutCache, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLayoutCache }};
//     int GetLayoutCache();
static int LUACALL wxLua_wxStyledTextCtrl_GetLayoutCache(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLayoutCache
    int returns = (self->GetLayoutCache());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLength[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLength[1] = {{ wxLua_wxStyledTextCtrl_GetLength, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLength }};
//     int GetLength();
static int LUACALL wxLua_wxStyledTextCtrl_GetLength(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLength
    int returns = (self->GetLength());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLexer[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLexer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLexer[1] = {{ wxLua_wxStyledTextCtrl_GetLexer, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLexer }};
//     int GetLexer();
static int LUACALL wxLua_wxStyledTextCtrl_GetLexer(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLexer
    int returns = (self->GetLexer());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLine[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLine[1] = {{ wxLua_wxStyledTextCtrl_GetLine, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLine }};
//     wxString GetLine(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetLine(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLine
    wxString returns = (self->GetLine(line));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineCount[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLineCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineCount[1] = {{ wxLua_wxStyledTextCtrl_GetLineCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineCount }};
//     int GetLineCount();
static int LUACALL wxLua_wxStyledTextCtrl_GetLineCount(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLineCount
    int returns = (self->GetLineCount());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineEndPosition[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLineEndPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineEndPosition[1] = {{ wxLua_wxStyledTextCtrl_GetLineEndPosition, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineEndPosition }};
//     int GetLineEndPosition(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetLineEndPosition(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLineEndPosition
    int returns = (self->GetLineEndPosition(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineIndentPosition[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLineIndentPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineIndentPosition[1] = {{ wxLua_wxStyledTextCtrl_GetLineIndentPosition, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineIndentPosition }};
//     int GetLineIndentPosition(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetLineIndentPosition(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLineIndentPosition
    int returns = (self->GetLineIndentPosition(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineIndentation[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLineIndentation(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineIndentation[1] = {{ wxLua_wxStyledTextCtrl_GetLineIndentation, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineIndentation }};
//     int GetLineIndentation(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetLineIndentation(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLineIndentation
    int returns = (self->GetLineIndentation(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineSelEndPosition[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLineSelEndPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineSelEndPosition[1] = {{ wxLua_wxStyledTextCtrl_GetLineSelEndPosition, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineSelEndPosition }};
//     int GetLineSelEndPosition(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetLineSelEndPosition(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLineSelEndPosition
    int returns = (self->GetLineSelEndPosition(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineSelStartPosition[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLineSelStartPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineSelStartPosition[1] = {{ wxLua_wxStyledTextCtrl_GetLineSelStartPosition, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineSelStartPosition }};
//     int GetLineSelStartPosition(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetLineSelStartPosition(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLineSelStartPosition
    int returns = (self->GetLineSelStartPosition(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineState[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLineState(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineState[1] = {{ wxLua_wxStyledTextCtrl_GetLineState, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineState }};
//     int GetLineState(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetLineState(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLineState
    int returns = (self->GetLineState(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineVisible[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetLineVisible(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineVisible[1] = {{ wxLua_wxStyledTextCtrl_GetLineVisible, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetLineVisible }};
//     bool GetLineVisible(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GetLineVisible(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetLineVisible
    bool returns = (self->GetLineVisible(line));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginLeft[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginLeft[1] = {{ wxLua_wxStyledTextCtrl_GetMarginLeft, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginLeft }};
//     int GetMarginLeft();
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginLeft(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetMarginLeft
    int returns = (self->GetMarginLeft());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginMask[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginMask(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginMask[1] = {{ wxLua_wxStyledTextCtrl_GetMarginMask, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginMask }};
//     unsigned int GetMarginMask(int margin);
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginMask(lua_State *L)
{
    // int margin
    int margin = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetMarginMask
    unsigned int returns = (self->GetMarginMask(margin));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginRight[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginRight[1] = {{ wxLua_wxStyledTextCtrl_GetMarginRight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginRight }};
//     int GetMarginRight();
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginRight(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetMarginRight
    int returns = (self->GetMarginRight());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginSensitive[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginSensitive(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginSensitive[1] = {{ wxLua_wxStyledTextCtrl_GetMarginSensitive, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginSensitive }};
//     bool GetMarginSensitive(int margin);
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginSensitive(lua_State *L)
{
    // int margin
    int margin = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetMarginSensitive
    bool returns = (self->GetMarginSensitive(margin));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginType[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginType[1] = {{ wxLua_wxStyledTextCtrl_GetMarginType, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginType }};
//     int GetMarginType(int margin);
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginType(lua_State *L)
{
    // int margin
    int margin = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetMarginType
    int returns = (self->GetMarginType(margin));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginWidth[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginWidth[1] = {{ wxLua_wxStyledTextCtrl_GetMarginWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMarginWidth }};
//     int GetMarginWidth(int margin);
static int LUACALL wxLua_wxStyledTextCtrl_GetMarginWidth(lua_State *L)
{
    // int margin
    int margin = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetMarginWidth
    int returns = (self->GetMarginWidth(margin));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMaxLineState[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetMaxLineState(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetMaxLineState[1] = {{ wxLua_wxStyledTextCtrl_GetMaxLineState, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMaxLineState }};
//     int GetMaxLineState();
static int LUACALL wxLua_wxStyledTextCtrl_GetMaxLineState(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetMaxLineState
    int returns = (self->GetMaxLineState());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetModEventMask[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetModEventMask(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetModEventMask[1] = {{ wxLua_wxStyledTextCtrl_GetModEventMask, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetModEventMask }};
//     int GetModEventMask();
static int LUACALL wxLua_wxStyledTextCtrl_GetModEventMask(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetModEventMask
    int returns = (self->GetModEventMask());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetModify[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetModify(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetModify[1] = {{ wxLua_wxStyledTextCtrl_GetModify, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetModify }};
//     bool GetModify();
static int LUACALL wxLua_wxStyledTextCtrl_GetModify(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetModify
    bool returns = (self->GetModify());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMouseDownCaptures[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetMouseDownCaptures(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetMouseDownCaptures[1] = {{ wxLua_wxStyledTextCtrl_GetMouseDownCaptures, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMouseDownCaptures }};
//     bool GetMouseDownCaptures();
static int LUACALL wxLua_wxStyledTextCtrl_GetMouseDownCaptures(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetMouseDownCaptures
    bool returns = (self->GetMouseDownCaptures());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMouseDwellTime[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetMouseDwellTime(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetMouseDwellTime[1] = {{ wxLua_wxStyledTextCtrl_GetMouseDwellTime, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetMouseDwellTime }};
//     int GetMouseDwellTime();
static int LUACALL wxLua_wxStyledTextCtrl_GetMouseDwellTime(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetMouseDwellTime
    int returns = (self->GetMouseDwellTime());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetOvertype[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetOvertype(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetOvertype[1] = {{ wxLua_wxStyledTextCtrl_GetOvertype, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetOvertype }};
//     bool GetOvertype();
static int LUACALL wxLua_wxStyledTextCtrl_GetOvertype(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetOvertype
    bool returns = (self->GetOvertype());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPasteConvertEndings[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetPasteConvertEndings(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetPasteConvertEndings[1] = {{ wxLua_wxStyledTextCtrl_GetPasteConvertEndings, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPasteConvertEndings }};
//     bool GetPasteConvertEndings();
static int LUACALL wxLua_wxStyledTextCtrl_GetPasteConvertEndings(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetPasteConvertEndings
    bool returns = (self->GetPasteConvertEndings());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPrintColourMode[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetPrintColourMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetPrintColourMode[1] = {{ wxLua_wxStyledTextCtrl_GetPrintColourMode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPrintColourMode }};
//     int GetPrintColourMode();
static int LUACALL wxLua_wxStyledTextCtrl_GetPrintColourMode(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetPrintColourMode
    int returns = (self->GetPrintColourMode());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPrintMagnification[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetPrintMagnification(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetPrintMagnification[1] = {{ wxLua_wxStyledTextCtrl_GetPrintMagnification, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPrintMagnification }};
//     int GetPrintMagnification();
static int LUACALL wxLua_wxStyledTextCtrl_GetPrintMagnification(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetPrintMagnification
    int returns = (self->GetPrintMagnification());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPrintWrapMode[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetPrintWrapMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetPrintWrapMode[1] = {{ wxLua_wxStyledTextCtrl_GetPrintWrapMode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPrintWrapMode }};
//     int GetPrintWrapMode();
static int LUACALL wxLua_wxStyledTextCtrl_GetPrintWrapMode(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetPrintWrapMode
    int returns = (self->GetPrintWrapMode());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetProperty[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetProperty[1] = {{ wxLua_wxStyledTextCtrl_GetProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetProperty }};
//     wxString GetProperty(const wxString& key);
static int LUACALL wxLua_wxStyledTextCtrl_GetProperty(lua_State *L)
{
    // const wxString key
    const wxString key = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetProperty
    wxString returns = (self->GetProperty(key));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPropertyExpanded[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetPropertyExpanded(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetPropertyExpanded[1] = {{ wxLua_wxStyledTextCtrl_GetPropertyExpanded, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPropertyExpanded }};
//     wxString GetPropertyExpanded(const wxString& key);
static int LUACALL wxLua_wxStyledTextCtrl_GetPropertyExpanded(lua_State *L)
{
    // const wxString key
    const wxString key = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetPropertyExpanded
    wxString returns = (self->GetPropertyExpanded(key));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPropertyInt[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetPropertyInt(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetPropertyInt[1] = {{ wxLua_wxStyledTextCtrl_GetPropertyInt, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetPropertyInt }};
//     int GetPropertyInt(const wxString& key);
static int LUACALL wxLua_wxStyledTextCtrl_GetPropertyInt(lua_State *L)
{
    // const wxString key
    const wxString key = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetPropertyInt
    int returns = (self->GetPropertyInt(key));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetReadOnly[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetReadOnly(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetReadOnly[1] = {{ wxLua_wxStyledTextCtrl_GetReadOnly, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetReadOnly }};
//     bool GetReadOnly();
static int LUACALL wxLua_wxStyledTextCtrl_GetReadOnly(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetReadOnly
    bool returns = (self->GetReadOnly());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSTCCursor[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetSTCCursor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetSTCCursor[1] = {{ wxLua_wxStyledTextCtrl_GetSTCCursor, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSTCCursor }};
//     int GetSTCCursor();
static int LUACALL wxLua_wxStyledTextCtrl_GetSTCCursor(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetSTCCursor
    int returns = (self->GetSTCCursor());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSTCFocus[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetSTCFocus(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetSTCFocus[1] = {{ wxLua_wxStyledTextCtrl_GetSTCFocus, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSTCFocus }};
//     bool GetSTCFocus();
static int LUACALL wxLua_wxStyledTextCtrl_GetSTCFocus(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetSTCFocus
    bool returns = (self->GetSTCFocus());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetScrollWidth[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetScrollWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetScrollWidth[1] = {{ wxLua_wxStyledTextCtrl_GetScrollWidth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetScrollWidth }};
//     int GetScrollWidth();
static int LUACALL wxLua_wxStyledTextCtrl_GetScrollWidth(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetScrollWidth
    int returns = (self->GetScrollWidth());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSearchFlags[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetSearchFlags(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetSearchFlags[1] = {{ wxLua_wxStyledTextCtrl_GetSearchFlags, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSearchFlags }};
//     int GetSearchFlags();
static int LUACALL wxLua_wxStyledTextCtrl_GetSearchFlags(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetSearchFlags
    int returns = (self->GetSearchFlags());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSelectedText[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetSelectedText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetSelectedText[1] = {{ wxLua_wxStyledTextCtrl_GetSelectedText, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSelectedText }};
//     wxString GetSelectedText();
static int LUACALL wxLua_wxStyledTextCtrl_GetSelectedText(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetSelectedText
    wxString returns = (self->GetSelectedText());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSelection[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetSelection[1] = {{ wxLua_wxStyledTextCtrl_GetSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSelection }};
// %override wxLua_wxStyledTextCtrl_GetSelection
// void GetSelection(int* startPos, int* endPos)
static int LUACALL wxLua_wxStyledTextCtrl_GetSelection(lua_State *L)
{
    int endPos;
    int startPos;
    // get this
    wxStyledTextCtrl *self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetSelection
    self->GetSelection(&startPos, &endPos);
    // push results
    lua_pushnumber(L, startPos);
    lua_pushnumber(L, endPos);
    // return the number of parameters
    return 2;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSelectionEnd[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetSelectionEnd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetSelectionEnd[1] = {{ wxLua_wxStyledTextCtrl_GetSelectionEnd, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSelectionEnd }};
//     int GetSelectionEnd();
static int LUACALL wxLua_wxStyledTextCtrl_GetSelectionEnd(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetSelectionEnd
    int returns = (self->GetSelectionEnd());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSelectionMode[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetSelectionMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetSelectionMode[1] = {{ wxLua_wxStyledTextCtrl_GetSelectionMode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSelectionMode }};
//     int GetSelectionMode();
static int LUACALL wxLua_wxStyledTextCtrl_GetSelectionMode(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetSelectionMode
    int returns = (self->GetSelectionMode());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSelectionStart[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetSelectionStart(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetSelectionStart[1] = {{ wxLua_wxStyledTextCtrl_GetSelectionStart, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetSelectionStart }};
//     int GetSelectionStart();
static int LUACALL wxLua_wxStyledTextCtrl_GetSelectionStart(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetSelectionStart
    int returns = (self->GetSelectionStart());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetStatus[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetStatus(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetStatus[1] = {{ wxLua_wxStyledTextCtrl_GetStatus, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetStatus }};
//     int GetStatus();
static int LUACALL wxLua_wxStyledTextCtrl_GetStatus(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetStatus
    int returns = (self->GetStatus());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetStyleAt[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetStyleAt(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetStyleAt[1] = {{ wxLua_wxStyledTextCtrl_GetStyleAt, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetStyleAt }};
//     int GetStyleAt(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_GetStyleAt(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetStyleAt
    int returns = (self->GetStyleAt(pos));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetStyleBits[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetStyleBits(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetStyleBits[1] = {{ wxLua_wxStyledTextCtrl_GetStyleBits, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetStyleBits }};
//     int GetStyleBits();
static int LUACALL wxLua_wxStyledTextCtrl_GetStyleBits(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetStyleBits
    int returns = (self->GetStyleBits());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetStyleBitsNeeded[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetStyleBitsNeeded(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetStyleBitsNeeded[1] = {{ wxLua_wxStyledTextCtrl_GetStyleBitsNeeded, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetStyleBitsNeeded }};
//     int GetStyleBitsNeeded();
static int LUACALL wxLua_wxStyledTextCtrl_GetStyleBitsNeeded(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetStyleBitsNeeded
    int returns = (self->GetStyleBitsNeeded());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTabIndents[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetTabIndents(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetTabIndents[1] = {{ wxLua_wxStyledTextCtrl_GetTabIndents, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTabIndents }};
//     bool GetTabIndents();
static int LUACALL wxLua_wxStyledTextCtrl_GetTabIndents(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetTabIndents
    bool returns = (self->GetTabIndents());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTabWidth[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetTabWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetTabWidth[1] = {{ wxLua_wxStyledTextCtrl_GetTabWidth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTabWidth }};
//     int GetTabWidth();
static int LUACALL wxLua_wxStyledTextCtrl_GetTabWidth(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetTabWidth
    int returns = (self->GetTabWidth());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTargetEnd[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetTargetEnd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetTargetEnd[1] = {{ wxLua_wxStyledTextCtrl_GetTargetEnd, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTargetEnd }};
//     int GetTargetEnd();
static int LUACALL wxLua_wxStyledTextCtrl_GetTargetEnd(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetTargetEnd
    int returns = (self->GetTargetEnd());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTargetStart[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetTargetStart(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetTargetStart[1] = {{ wxLua_wxStyledTextCtrl_GetTargetStart, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTargetStart }};
//     int GetTargetStart();
static int LUACALL wxLua_wxStyledTextCtrl_GetTargetStart(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetTargetStart
    int returns = (self->GetTargetStart());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetText[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetText[1] = {{ wxLua_wxStyledTextCtrl_GetText, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetText }};
//     wxString GetText();
static int LUACALL wxLua_wxStyledTextCtrl_GetText(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetText
    wxString returns = (self->GetText());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTextLength[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetTextLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetTextLength[1] = {{ wxLua_wxStyledTextCtrl_GetTextLength, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTextLength }};
//     int GetTextLength();
static int LUACALL wxLua_wxStyledTextCtrl_GetTextLength(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetTextLength
    int returns = (self->GetTextLength());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTextRange[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetTextRange(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetTextRange[1] = {{ wxLua_wxStyledTextCtrl_GetTextRange, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTextRange }};
//     wxString GetTextRange(int startPos, int endPos);
static int LUACALL wxLua_wxStyledTextCtrl_GetTextRange(lua_State *L)
{
    // int endPos
    int endPos = (int)wxlua_getnumbertype(L, 3);
    // int startPos
    int startPos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetTextRange
    wxString returns = (self->GetTextRange(startPos, endPos));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTwoPhaseDraw[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetTwoPhaseDraw(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetTwoPhaseDraw[1] = {{ wxLua_wxStyledTextCtrl_GetTwoPhaseDraw, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetTwoPhaseDraw }};
//     bool GetTwoPhaseDraw();
static int LUACALL wxLua_wxStyledTextCtrl_GetTwoPhaseDraw(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetTwoPhaseDraw
    bool returns = (self->GetTwoPhaseDraw());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetUndoCollection[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetUndoCollection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetUndoCollection[1] = {{ wxLua_wxStyledTextCtrl_GetUndoCollection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetUndoCollection }};
//     bool GetUndoCollection();
static int LUACALL wxLua_wxStyledTextCtrl_GetUndoCollection(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetUndoCollection
    bool returns = (self->GetUndoCollection());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetUseAntiAliasing[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetUseAntiAliasing(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetUseAntiAliasing[1] = {{ wxLua_wxStyledTextCtrl_GetUseAntiAliasing, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetUseAntiAliasing }};
//     bool GetUseAntiAliasing();
static int LUACALL wxLua_wxStyledTextCtrl_GetUseAntiAliasing(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetUseAntiAliasing
    bool returns = (self->GetUseAntiAliasing());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetUseHorizontalScrollBar[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetUseHorizontalScrollBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetUseHorizontalScrollBar[1] = {{ wxLua_wxStyledTextCtrl_GetUseHorizontalScrollBar, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetUseHorizontalScrollBar }};
//     bool GetUseHorizontalScrollBar();
static int LUACALL wxLua_wxStyledTextCtrl_GetUseHorizontalScrollBar(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetUseHorizontalScrollBar
    bool returns = (self->GetUseHorizontalScrollBar());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetUseTabs[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetUseTabs(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetUseTabs[1] = {{ wxLua_wxStyledTextCtrl_GetUseTabs, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetUseTabs }};
//     bool GetUseTabs();
static int LUACALL wxLua_wxStyledTextCtrl_GetUseTabs(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetUseTabs
    bool returns = (self->GetUseTabs());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetUseVerticalScrollBar[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetUseVerticalScrollBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetUseVerticalScrollBar[1] = {{ wxLua_wxStyledTextCtrl_GetUseVerticalScrollBar, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetUseVerticalScrollBar }};
//     bool GetUseVerticalScrollBar();
static int LUACALL wxLua_wxStyledTextCtrl_GetUseVerticalScrollBar(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetUseVerticalScrollBar
    bool returns = (self->GetUseVerticalScrollBar());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetViewEOL[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetViewEOL(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetViewEOL[1] = {{ wxLua_wxStyledTextCtrl_GetViewEOL, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetViewEOL }};
//     bool GetViewEOL();
static int LUACALL wxLua_wxStyledTextCtrl_GetViewEOL(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetViewEOL
    bool returns = (self->GetViewEOL());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetViewWhiteSpace[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetViewWhiteSpace(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetViewWhiteSpace[1] = {{ wxLua_wxStyledTextCtrl_GetViewWhiteSpace, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetViewWhiteSpace }};
//     int GetViewWhiteSpace();
static int LUACALL wxLua_wxStyledTextCtrl_GetViewWhiteSpace(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetViewWhiteSpace
    int returns = (self->GetViewWhiteSpace());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetWrapMode[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetWrapMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetWrapMode[1] = {{ wxLua_wxStyledTextCtrl_GetWrapMode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetWrapMode }};
//     int GetWrapMode();
static int LUACALL wxLua_wxStyledTextCtrl_GetWrapMode(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetWrapMode
    int returns = (self->GetWrapMode());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetWrapStartIndent[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetWrapStartIndent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetWrapStartIndent[1] = {{ wxLua_wxStyledTextCtrl_GetWrapStartIndent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetWrapStartIndent }};
//     int GetWrapStartIndent();
static int LUACALL wxLua_wxStyledTextCtrl_GetWrapStartIndent(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetWrapStartIndent
    int returns = (self->GetWrapStartIndent());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetWrapVisualFlags[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetWrapVisualFlags(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetWrapVisualFlags[1] = {{ wxLua_wxStyledTextCtrl_GetWrapVisualFlags, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetWrapVisualFlags }};
//     int GetWrapVisualFlags();
static int LUACALL wxLua_wxStyledTextCtrl_GetWrapVisualFlags(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetWrapVisualFlags
    int returns = (self->GetWrapVisualFlags());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetWrapVisualFlagsLocation[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetWrapVisualFlagsLocation(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetWrapVisualFlagsLocation[1] = {{ wxLua_wxStyledTextCtrl_GetWrapVisualFlagsLocation, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetWrapVisualFlagsLocation }};
//     int GetWrapVisualFlagsLocation();
static int LUACALL wxLua_wxStyledTextCtrl_GetWrapVisualFlagsLocation(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetWrapVisualFlagsLocation
    int returns = (self->GetWrapVisualFlagsLocation());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetXOffset[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetXOffset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetXOffset[1] = {{ wxLua_wxStyledTextCtrl_GetXOffset, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetXOffset }};
//     int GetXOffset();
static int LUACALL wxLua_wxStyledTextCtrl_GetXOffset(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetXOffset
    int returns = (self->GetXOffset());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetZoom[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GetZoom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GetZoom[1] = {{ wxLua_wxStyledTextCtrl_GetZoom, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GetZoom }};
//     int GetZoom();
static int LUACALL wxLua_wxStyledTextCtrl_GetZoom(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GetZoom
    int returns = (self->GetZoom());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GotoLine[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GotoLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GotoLine[1] = {{ wxLua_wxStyledTextCtrl_GotoLine, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GotoLine }};
//     void GotoLine(int line);
static int LUACALL wxLua_wxStyledTextCtrl_GotoLine(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GotoLine
    self->GotoLine(line);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_GotoPos[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_GotoPos(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_GotoPos[1] = {{ wxLua_wxStyledTextCtrl_GotoPos, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_GotoPos }};
//     void GotoPos(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_GotoPos(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call GotoPos
    self->GotoPos(pos);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_HideLines[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_HideLines(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_HideLines[1] = {{ wxLua_wxStyledTextCtrl_HideLines, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_HideLines }};
//     void HideLines(int lineStart, int lineEnd);
static int LUACALL wxLua_wxStyledTextCtrl_HideLines(lua_State *L)
{
    // int lineEnd
    int lineEnd = (int)wxlua_getnumbertype(L, 3);
    // int lineStart
    int lineStart = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call HideLines
    self->HideLines(lineStart, lineEnd);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_HideSelection[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_HideSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_HideSelection[1] = {{ wxLua_wxStyledTextCtrl_HideSelection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_HideSelection }};
//     void HideSelection(bool normal);
static int LUACALL wxLua_wxStyledTextCtrl_HideSelection(lua_State *L)
{
    // bool normal
    bool normal = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call HideSelection
    self->HideSelection(normal);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Home[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Home(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Home[1] = {{ wxLua_wxStyledTextCtrl_Home, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Home }};
//     void Home();
static int LUACALL wxLua_wxStyledTextCtrl_Home(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Home
    self->Home();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeDisplay[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_HomeDisplay(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_HomeDisplay[1] = {{ wxLua_wxStyledTextCtrl_HomeDisplay, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeDisplay }};
//     void HomeDisplay();
static int LUACALL wxLua_wxStyledTextCtrl_HomeDisplay(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call HomeDisplay
    self->HomeDisplay();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeDisplayExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_HomeDisplayExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_HomeDisplayExtend[1] = {{ wxLua_wxStyledTextCtrl_HomeDisplayExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeDisplayExtend }};
//     void HomeDisplayExtend();
static int LUACALL wxLua_wxStyledTextCtrl_HomeDisplayExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call HomeDisplayExtend
    self->HomeDisplayExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_HomeExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_HomeExtend[1] = {{ wxLua_wxStyledTextCtrl_HomeExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeExtend }};
//     void HomeExtend();
static int LUACALL wxLua_wxStyledTextCtrl_HomeExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call HomeExtend
    self->HomeExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeRectExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_HomeRectExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_HomeRectExtend[1] = {{ wxLua_wxStyledTextCtrl_HomeRectExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeRectExtend }};
//     void HomeRectExtend();
static int LUACALL wxLua_wxStyledTextCtrl_HomeRectExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call HomeRectExtend
    self->HomeRectExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeWrap[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_HomeWrap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_HomeWrap[1] = {{ wxLua_wxStyledTextCtrl_HomeWrap, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeWrap }};
//     void HomeWrap();
static int LUACALL wxLua_wxStyledTextCtrl_HomeWrap(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call HomeWrap
    self->HomeWrap();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeWrapExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_HomeWrapExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_HomeWrapExtend[1] = {{ wxLua_wxStyledTextCtrl_HomeWrapExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_HomeWrapExtend }};
//     void HomeWrapExtend();
static int LUACALL wxLua_wxStyledTextCtrl_HomeWrapExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call HomeWrapExtend
    self->HomeWrapExtend();

    return 0;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_IndicatorGetForeground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_IndicatorGetForeground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_IndicatorGetForeground[1] = {{ wxLua_wxStyledTextCtrl_IndicatorGetForeground, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_IndicatorGetForeground }};
//     wxColour IndicatorGetForeground(int indic);
static int LUACALL wxLua_wxStyledTextCtrl_IndicatorGetForeground(lua_State *L)
{
    // int indic
    int indic = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call IndicatorGetForeground
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->IndicatorGetForeground(indic));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (wxColour*)returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_IndicatorGetStyle[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_IndicatorGetStyle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_IndicatorGetStyle[1] = {{ wxLua_wxStyledTextCtrl_IndicatorGetStyle, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_IndicatorGetStyle }};
//     int IndicatorGetStyle(int indic);
static int LUACALL wxLua_wxStyledTextCtrl_IndicatorGetStyle(lua_State *L)
{
    // int indic
    int indic = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call IndicatorGetStyle
    int returns = (self->IndicatorGetStyle(indic));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_IndicatorSetForeground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_IndicatorSetForeground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_IndicatorSetForeground[1] = {{ wxLua_wxStyledTextCtrl_IndicatorSetForeground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_IndicatorSetForeground }};
//     void IndicatorSetForeground(int indic, const wxColour& fore);
static int LUACALL wxLua_wxStyledTextCtrl_IndicatorSetForeground(lua_State *L)
{
    // const wxColour fore
    const wxColour * fore = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // int indic
    int indic = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call IndicatorSetForeground
    self->IndicatorSetForeground(indic, *fore);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_IndicatorSetStyle[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_IndicatorSetStyle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_IndicatorSetStyle[1] = {{ wxLua_wxStyledTextCtrl_IndicatorSetStyle, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_IndicatorSetStyle }};
//     void IndicatorSetStyle(int indic, int style);
static int LUACALL wxLua_wxStyledTextCtrl_IndicatorSetStyle(lua_State *L)
{
    // int style
    int style = (int)wxlua_getnumbertype(L, 3);
    // int indic
    int indic = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call IndicatorSetStyle
    self->IndicatorSetStyle(indic, style);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_InsertText[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_InsertText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_InsertText[1] = {{ wxLua_wxStyledTextCtrl_InsertText, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_InsertText }};
//     void InsertText(int pos, const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_InsertText(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call InsertText
    self->InsertText(pos, text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_InsertTextRaw[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_InsertTextRaw(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_InsertTextRaw[1] = {{ wxLua_wxStyledTextCtrl_InsertTextRaw, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_InsertTextRaw }};
//     void InsertTextRaw(int pos, const char* text);
static int LUACALL wxLua_wxStyledTextCtrl_InsertTextRaw(lua_State *L)
{
    // const char text
    wxCharBuffer text = wxlua_getstringtype(L, 3);
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call InsertTextRaw
    self->InsertTextRaw(pos, (const char*)text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineCopy[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineCopy(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineCopy[1] = {{ wxLua_wxStyledTextCtrl_LineCopy, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineCopy }};
//     void LineCopy();
static int LUACALL wxLua_wxStyledTextCtrl_LineCopy(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineCopy
    self->LineCopy();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineCut[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineCut(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineCut[1] = {{ wxLua_wxStyledTextCtrl_LineCut, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineCut }};
//     void LineCut();
static int LUACALL wxLua_wxStyledTextCtrl_LineCut(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineCut
    self->LineCut();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineDelete[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineDelete(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineDelete[1] = {{ wxLua_wxStyledTextCtrl_LineDelete, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineDelete }};
//     void LineDelete();
static int LUACALL wxLua_wxStyledTextCtrl_LineDelete(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineDelete
    self->LineDelete();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineDown[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineDown(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineDown[1] = {{ wxLua_wxStyledTextCtrl_LineDown, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineDown }};
//     void LineDown();
static int LUACALL wxLua_wxStyledTextCtrl_LineDown(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineDown
    self->LineDown();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineDownExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineDownExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineDownExtend[1] = {{ wxLua_wxStyledTextCtrl_LineDownExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineDownExtend }};
//     void LineDownExtend();
static int LUACALL wxLua_wxStyledTextCtrl_LineDownExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineDownExtend
    self->LineDownExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineDownRectExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineDownRectExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineDownRectExtend[1] = {{ wxLua_wxStyledTextCtrl_LineDownRectExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineDownRectExtend }};
//     void LineDownRectExtend();
static int LUACALL wxLua_wxStyledTextCtrl_LineDownRectExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineDownRectExtend
    self->LineDownRectExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineDuplicate[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineDuplicate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineDuplicate[1] = {{ wxLua_wxStyledTextCtrl_LineDuplicate, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineDuplicate }};
//     void LineDuplicate();
static int LUACALL wxLua_wxStyledTextCtrl_LineDuplicate(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineDuplicate
    self->LineDuplicate();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEnd[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineEnd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineEnd[1] = {{ wxLua_wxStyledTextCtrl_LineEnd, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEnd }};
//     void LineEnd();
static int LUACALL wxLua_wxStyledTextCtrl_LineEnd(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineEnd
    self->LineEnd();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndDisplay[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineEndDisplay(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndDisplay[1] = {{ wxLua_wxStyledTextCtrl_LineEndDisplay, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndDisplay }};
//     void LineEndDisplay();
static int LUACALL wxLua_wxStyledTextCtrl_LineEndDisplay(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineEndDisplay
    self->LineEndDisplay();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndDisplayExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineEndDisplayExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndDisplayExtend[1] = {{ wxLua_wxStyledTextCtrl_LineEndDisplayExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndDisplayExtend }};
//     void LineEndDisplayExtend();
static int LUACALL wxLua_wxStyledTextCtrl_LineEndDisplayExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineEndDisplayExtend
    self->LineEndDisplayExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineEndExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndExtend[1] = {{ wxLua_wxStyledTextCtrl_LineEndExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndExtend }};
//     void LineEndExtend();
static int LUACALL wxLua_wxStyledTextCtrl_LineEndExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineEndExtend
    self->LineEndExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndRectExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineEndRectExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndRectExtend[1] = {{ wxLua_wxStyledTextCtrl_LineEndRectExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndRectExtend }};
//     void LineEndRectExtend();
static int LUACALL wxLua_wxStyledTextCtrl_LineEndRectExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineEndRectExtend
    self->LineEndRectExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndWrap[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineEndWrap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndWrap[1] = {{ wxLua_wxStyledTextCtrl_LineEndWrap, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndWrap }};
//     void LineEndWrap();
static int LUACALL wxLua_wxStyledTextCtrl_LineEndWrap(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineEndWrap
    self->LineEndWrap();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndWrapExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineEndWrapExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndWrapExtend[1] = {{ wxLua_wxStyledTextCtrl_LineEndWrapExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineEndWrapExtend }};
//     void LineEndWrapExtend();
static int LUACALL wxLua_wxStyledTextCtrl_LineEndWrapExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineEndWrapExtend
    self->LineEndWrapExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineFromPosition[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineFromPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineFromPosition[1] = {{ wxLua_wxStyledTextCtrl_LineFromPosition, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineFromPosition }};
//     int LineFromPosition(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_LineFromPosition(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineFromPosition
    int returns = (self->LineFromPosition(pos));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineLength[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineLength[1] = {{ wxLua_wxStyledTextCtrl_LineLength, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineLength }};
//     int LineLength(int line);
static int LUACALL wxLua_wxStyledTextCtrl_LineLength(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineLength
    int returns = (self->LineLength(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineScroll[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineScroll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineScroll[1] = {{ wxLua_wxStyledTextCtrl_LineScroll, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineScroll }};
//     void LineScroll(int columns, int lines);
static int LUACALL wxLua_wxStyledTextCtrl_LineScroll(lua_State *L)
{
    // int lines
    int lines = (int)wxlua_getnumbertype(L, 3);
    // int columns
    int columns = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineScroll
    self->LineScroll(columns, lines);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineScrollDown[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineScrollDown(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineScrollDown[1] = {{ wxLua_wxStyledTextCtrl_LineScrollDown, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineScrollDown }};
//     void LineScrollDown();
static int LUACALL wxLua_wxStyledTextCtrl_LineScrollDown(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineScrollDown
    self->LineScrollDown();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineScrollUp[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineScrollUp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineScrollUp[1] = {{ wxLua_wxStyledTextCtrl_LineScrollUp, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineScrollUp }};
//     void LineScrollUp();
static int LUACALL wxLua_wxStyledTextCtrl_LineScrollUp(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineScrollUp
    self->LineScrollUp();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineTranspose[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineTranspose(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineTranspose[1] = {{ wxLua_wxStyledTextCtrl_LineTranspose, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineTranspose }};
//     void LineTranspose();
static int LUACALL wxLua_wxStyledTextCtrl_LineTranspose(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineTranspose
    self->LineTranspose();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineUp[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineUp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineUp[1] = {{ wxLua_wxStyledTextCtrl_LineUp, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineUp }};
//     void LineUp();
static int LUACALL wxLua_wxStyledTextCtrl_LineUp(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineUp
    self->LineUp();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineUpExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineUpExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineUpExtend[1] = {{ wxLua_wxStyledTextCtrl_LineUpExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineUpExtend }};
//     void LineUpExtend();
static int LUACALL wxLua_wxStyledTextCtrl_LineUpExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineUpExtend
    self->LineUpExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineUpRectExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LineUpRectExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LineUpRectExtend[1] = {{ wxLua_wxStyledTextCtrl_LineUpRectExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LineUpRectExtend }};
//     void LineUpRectExtend();
static int LUACALL wxLua_wxStyledTextCtrl_LineUpRectExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LineUpRectExtend
    self->LineUpRectExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LinesJoin[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LinesJoin(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LinesJoin[1] = {{ wxLua_wxStyledTextCtrl_LinesJoin, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LinesJoin }};
//     void LinesJoin();
static int LUACALL wxLua_wxStyledTextCtrl_LinesJoin(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LinesJoin
    self->LinesJoin();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LinesOnScreen[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LinesOnScreen(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LinesOnScreen[1] = {{ wxLua_wxStyledTextCtrl_LinesOnScreen, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LinesOnScreen }};
//     int LinesOnScreen();
static int LUACALL wxLua_wxStyledTextCtrl_LinesOnScreen(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LinesOnScreen
    int returns = (self->LinesOnScreen());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LinesSplit[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LinesSplit(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LinesSplit[1] = {{ wxLua_wxStyledTextCtrl_LinesSplit, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LinesSplit }};
//     void LinesSplit(int pixelWidth);
static int LUACALL wxLua_wxStyledTextCtrl_LinesSplit(lua_State *L)
{
    // int pixelWidth
    int pixelWidth = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LinesSplit
    self->LinesSplit(pixelWidth);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LoadFile[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LoadFile(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LoadFile[1] = {{ wxLua_wxStyledTextCtrl_LoadFile, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LoadFile }};
//     bool LoadFile(const wxString& filename);
static int LUACALL wxLua_wxStyledTextCtrl_LoadFile(lua_State *L)
{
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LoadFile
    bool returns = (self->LoadFile(filename));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_LowerCase[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_LowerCase(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_LowerCase[1] = {{ wxLua_wxStyledTextCtrl_LowerCase, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_LowerCase }};
//     void LowerCase();
static int LUACALL wxLua_wxStyledTextCtrl_LowerCase(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call LowerCase
    self->LowerCase();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerAdd[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerAdd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerAdd[1] = {{ wxLua_wxStyledTextCtrl_MarkerAdd, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerAdd }};
//     int MarkerAdd(int line, int markerNumber);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerAdd(lua_State *L)
{
    // int markerNumber
    int markerNumber = (int)wxlua_getnumbertype(L, 3);
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerAdd
    int returns = (self->MarkerAdd(line, markerNumber));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerAddSet[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerAddSet(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerAddSet[1] = {{ wxLua_wxStyledTextCtrl_MarkerAddSet, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerAddSet }};
//     void MarkerAddSet(int line, int set);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerAddSet(lua_State *L)
{
    // int set
    int set = (int)wxlua_getnumbertype(L, 3);
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerAddSet
    self->MarkerAddSet(line, set);

    return 0;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerDefine[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxColour, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerDefine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerDefine[1] = {{ wxLua_wxStyledTextCtrl_MarkerDefine, WXLUAMETHOD_METHOD, 3, 5, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerDefine }};
//     void MarkerDefine(int markerNumber, int markerSymbol, const wxColour& foreground = wxNullColour, const wxColour& background = wxNullColour);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerDefine(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxColour background = wxNullColour
    const wxColour * background = (argCount >= 5 ? (const wxColour *)wxluaT_getuserdatatype(L, 5, wxluatype_wxColour) : &wxNullColour);
    // const wxColour foreground = wxNullColour
    const wxColour * foreground = (argCount >= 4 ? (const wxColour *)wxluaT_getuserdatatype(L, 4, wxluatype_wxColour) : &wxNullColour);
    // int markerSymbol
    int markerSymbol = (int)wxlua_getnumbertype(L, 3);
    // int markerNumber
    int markerNumber = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerDefine
    self->MarkerDefine(markerNumber, markerSymbol, *foreground, *background);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxBitmap
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerDefineBitmap[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_wxBitmap, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerDefineBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerDefineBitmap[1] = {{ wxLua_wxStyledTextCtrl_MarkerDefineBitmap, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerDefineBitmap }};
//     void MarkerDefineBitmap(int markerNumber, const wxBitmap& bmp);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerDefineBitmap(lua_State *L)
{
    // const wxBitmap bmp
    const wxBitmap * bmp = (const wxBitmap *)wxluaT_getuserdatatype(L, 3, wxluatype_wxBitmap);
    // int markerNumber
    int markerNumber = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerDefineBitmap
    self->MarkerDefineBitmap(markerNumber, *bmp);

    return 0;
}

#endif // wxLUA_USE_wxBitmap

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerDelete[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerDelete(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerDelete[1] = {{ wxLua_wxStyledTextCtrl_MarkerDelete, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerDelete }};
//     void MarkerDelete(int line, int markerNumber);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerDelete(lua_State *L)
{
    // int markerNumber
    int markerNumber = (int)wxlua_getnumbertype(L, 3);
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerDelete
    self->MarkerDelete(line, markerNumber);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerDeleteAll[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerDeleteAll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerDeleteAll[1] = {{ wxLua_wxStyledTextCtrl_MarkerDeleteAll, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerDeleteAll }};
//     void MarkerDeleteAll(int markerNumber);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerDeleteAll(lua_State *L)
{
    // int markerNumber
    int markerNumber = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerDeleteAll
    self->MarkerDeleteAll(markerNumber);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerDeleteHandle[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerDeleteHandle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerDeleteHandle[1] = {{ wxLua_wxStyledTextCtrl_MarkerDeleteHandle, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerDeleteHandle }};
//     void MarkerDeleteHandle(int handle);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerDeleteHandle(lua_State *L)
{
    // int handle
    int handle = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerDeleteHandle
    self->MarkerDeleteHandle(handle);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerGet[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerGet(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerGet[1] = {{ wxLua_wxStyledTextCtrl_MarkerGet, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerGet }};
//     unsigned int MarkerGet(int line);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerGet(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerGet
    unsigned int returns = (self->MarkerGet(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerLineFromHandle[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerLineFromHandle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerLineFromHandle[1] = {{ wxLua_wxStyledTextCtrl_MarkerLineFromHandle, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerLineFromHandle }};
//     int MarkerLineFromHandle(int handle);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerLineFromHandle(lua_State *L)
{
    // int handle
    int handle = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerLineFromHandle
    int returns = (self->MarkerLineFromHandle(handle));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerNext[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerNext[1] = {{ wxLua_wxStyledTextCtrl_MarkerNext, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerNext }};
//     int MarkerNext(int lineStart, unsigned int markerMask);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerNext(lua_State *L)
{
    // unsigned int markerMask
    unsigned int markerMask = (unsigned int)wxlua_getuintegertype(L, 3);
    // int lineStart
    int lineStart = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerNext
    int returns = (self->MarkerNext(lineStart, markerMask));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerPrevious[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerPrevious(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerPrevious[1] = {{ wxLua_wxStyledTextCtrl_MarkerPrevious, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerPrevious }};
//     int MarkerPrevious(int lineStart, unsigned int markerMask);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerPrevious(lua_State *L)
{
    // unsigned int markerMask
    unsigned int markerMask = (unsigned int)wxlua_getuintegertype(L, 3);
    // int lineStart
    int lineStart = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerPrevious
    int returns = (self->MarkerPrevious(lineStart, markerMask));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerSetBackground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerSetBackground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerSetBackground[1] = {{ wxLua_wxStyledTextCtrl_MarkerSetBackground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerSetBackground }};
//     void MarkerSetBackground(int markerNumber, const wxColour& back);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerSetBackground(lua_State *L)
{
    // const wxColour back
    const wxColour * back = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // int markerNumber
    int markerNumber = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerSetBackground
    self->MarkerSetBackground(markerNumber, *back);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerSetForeground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MarkerSetForeground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerSetForeground[1] = {{ wxLua_wxStyledTextCtrl_MarkerSetForeground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MarkerSetForeground }};
//     void MarkerSetForeground(int markerNumber, const wxColour& fore);
static int LUACALL wxLua_wxStyledTextCtrl_MarkerSetForeground(lua_State *L)
{
    // const wxColour fore
    const wxColour * fore = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // int markerNumber
    int markerNumber = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MarkerSetForeground
    self->MarkerSetForeground(markerNumber, *fore);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_MoveCaretInsideView[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_MoveCaretInsideView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_MoveCaretInsideView[1] = {{ wxLua_wxStyledTextCtrl_MoveCaretInsideView, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_MoveCaretInsideView }};
//     void MoveCaretInsideView();
static int LUACALL wxLua_wxStyledTextCtrl_MoveCaretInsideView(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call MoveCaretInsideView
    self->MoveCaretInsideView();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_NewLine[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_NewLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_NewLine[1] = {{ wxLua_wxStyledTextCtrl_NewLine, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_NewLine }};
//     void NewLine();
static int LUACALL wxLua_wxStyledTextCtrl_NewLine(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call NewLine
    self->NewLine();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageDown[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PageDown(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PageDown[1] = {{ wxLua_wxStyledTextCtrl_PageDown, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageDown }};
//     void PageDown();
static int LUACALL wxLua_wxStyledTextCtrl_PageDown(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PageDown
    self->PageDown();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageDownExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PageDownExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PageDownExtend[1] = {{ wxLua_wxStyledTextCtrl_PageDownExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageDownExtend }};
//     void PageDownExtend();
static int LUACALL wxLua_wxStyledTextCtrl_PageDownExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PageDownExtend
    self->PageDownExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageDownRectExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PageDownRectExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PageDownRectExtend[1] = {{ wxLua_wxStyledTextCtrl_PageDownRectExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageDownRectExtend }};
//     void PageDownRectExtend();
static int LUACALL wxLua_wxStyledTextCtrl_PageDownRectExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PageDownRectExtend
    self->PageDownRectExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageUp[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PageUp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PageUp[1] = {{ wxLua_wxStyledTextCtrl_PageUp, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageUp }};
//     void PageUp();
static int LUACALL wxLua_wxStyledTextCtrl_PageUp(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PageUp
    self->PageUp();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageUpExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PageUpExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PageUpExtend[1] = {{ wxLua_wxStyledTextCtrl_PageUpExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageUpExtend }};
//     void PageUpExtend();
static int LUACALL wxLua_wxStyledTextCtrl_PageUpExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PageUpExtend
    self->PageUpExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageUpRectExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PageUpRectExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PageUpRectExtend[1] = {{ wxLua_wxStyledTextCtrl_PageUpRectExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PageUpRectExtend }};
//     void PageUpRectExtend();
static int LUACALL wxLua_wxStyledTextCtrl_PageUpRectExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PageUpRectExtend
    self->PageUpRectExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ParaDown[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ParaDown(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ParaDown[1] = {{ wxLua_wxStyledTextCtrl_ParaDown, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ParaDown }};
//     void ParaDown();
static int LUACALL wxLua_wxStyledTextCtrl_ParaDown(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ParaDown
    self->ParaDown();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ParaDownExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ParaDownExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ParaDownExtend[1] = {{ wxLua_wxStyledTextCtrl_ParaDownExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ParaDownExtend }};
//     void ParaDownExtend();
static int LUACALL wxLua_wxStyledTextCtrl_ParaDownExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ParaDownExtend
    self->ParaDownExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ParaUp[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ParaUp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ParaUp[1] = {{ wxLua_wxStyledTextCtrl_ParaUp, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ParaUp }};
//     void ParaUp();
static int LUACALL wxLua_wxStyledTextCtrl_ParaUp(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ParaUp
    self->ParaUp();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ParaUpExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ParaUpExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ParaUpExtend[1] = {{ wxLua_wxStyledTextCtrl_ParaUpExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ParaUpExtend }};
//     void ParaUpExtend();
static int LUACALL wxLua_wxStyledTextCtrl_ParaUpExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ParaUpExtend
    self->ParaUpExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Paste[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Paste(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Paste[1] = {{ wxLua_wxStyledTextCtrl_Paste, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Paste }};
//     void Paste();
static int LUACALL wxLua_wxStyledTextCtrl_Paste(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Paste
    self->Paste();

    return 0;
}


#if wxLUA_USE_wxPointSizeRect
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PointFromPosition[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PointFromPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PointFromPosition[1] = {{ wxLua_wxStyledTextCtrl_PointFromPosition, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PointFromPosition }};
//     wxPoint PointFromPosition(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_PointFromPosition(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PointFromPosition
    // allocate a new object using the copy constructor
    wxPoint* returns = new wxPoint(self->PointFromPosition(pos));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint((wxPoint*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint);

    return 1;
}

#endif // wxLUA_USE_wxPointSizeRect

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PositionAfter[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PositionAfter(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PositionAfter[1] = {{ wxLua_wxStyledTextCtrl_PositionAfter, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PositionAfter }};
//     int PositionAfter(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_PositionAfter(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PositionAfter
    int returns = (self->PositionAfter(pos));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PositionBefore[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PositionBefore(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PositionBefore[1] = {{ wxLua_wxStyledTextCtrl_PositionBefore, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PositionBefore }};
//     int PositionBefore(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_PositionBefore(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PositionBefore
    int returns = (self->PositionBefore(pos));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PositionFromLine[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PositionFromLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PositionFromLine[1] = {{ wxLua_wxStyledTextCtrl_PositionFromLine, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PositionFromLine }};
//     int PositionFromLine(int line);
static int LUACALL wxLua_wxStyledTextCtrl_PositionFromLine(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PositionFromLine
    int returns = (self->PositionFromLine(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}


#if wxLUA_USE_wxPointSizeRect
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PositionFromPoint[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_wxPoint, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PositionFromPoint(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PositionFromPoint[1] = {{ wxLua_wxStyledTextCtrl_PositionFromPoint, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PositionFromPoint }};
//     int PositionFromPoint(const wxPoint& pt);
static int LUACALL wxLua_wxStyledTextCtrl_PositionFromPoint(lua_State *L)
{
    // const wxPoint pt
    const wxPoint * pt = (const wxPoint *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PositionFromPoint
    int returns = (self->PositionFromPoint(*pt));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

#endif // wxLUA_USE_wxPointSizeRect

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_PositionFromPointClose[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_PositionFromPointClose(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_PositionFromPointClose[1] = {{ wxLua_wxStyledTextCtrl_PositionFromPointClose, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_PositionFromPointClose }};
//     int PositionFromPointClose(int x, int y);
static int LUACALL wxLua_wxStyledTextCtrl_PositionFromPointClose(lua_State *L)
{
    // int y
    int y = (int)wxlua_getnumbertype(L, 3);
    // int x
    int x = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call PositionFromPointClose
    int returns = (self->PositionFromPointClose(x, y));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Redo[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Redo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Redo[1] = {{ wxLua_wxStyledTextCtrl_Redo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Redo }};
//     void Redo();
static int LUACALL wxLua_wxStyledTextCtrl_Redo(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Redo
    self->Redo();

    return 0;
}


#if wxLUA_USE_wxBitmap
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_RegisterImage[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_wxBitmap, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_RegisterImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_RegisterImage[1] = {{ wxLua_wxStyledTextCtrl_RegisterImage, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_RegisterImage }};
//     void RegisterImage(int type, const wxBitmap& bmp);
static int LUACALL wxLua_wxStyledTextCtrl_RegisterImage(lua_State *L)
{
    // const wxBitmap bmp
    const wxBitmap * bmp = (const wxBitmap *)wxluaT_getuserdatatype(L, 3, wxluatype_wxBitmap);
    // int type
    int type = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call RegisterImage
    self->RegisterImage(type, *bmp);

    return 0;
}

#endif // wxLUA_USE_wxBitmap

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ReleaseDocument[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ReleaseDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ReleaseDocument[1] = {{ wxLua_wxStyledTextCtrl_ReleaseDocument, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ReleaseDocument }};
//     void ReleaseDocument(void* docPointer);
static int LUACALL wxLua_wxStyledTextCtrl_ReleaseDocument(lua_State *L)
{
    // void docPointer
    void * docPointer = (void *)wxlua_touserdata(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ReleaseDocument
    self->ReleaseDocument(docPointer);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ReplaceSelection[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ReplaceSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ReplaceSelection[1] = {{ wxLua_wxStyledTextCtrl_ReplaceSelection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ReplaceSelection }};
//     void ReplaceSelection(const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_ReplaceSelection(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ReplaceSelection
    self->ReplaceSelection(text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ReplaceTarget[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ReplaceTarget(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ReplaceTarget[1] = {{ wxLua_wxStyledTextCtrl_ReplaceTarget, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ReplaceTarget }};
//     int ReplaceTarget(const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_ReplaceTarget(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ReplaceTarget
    int returns = (self->ReplaceTarget(text));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ReplaceTargetRE[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ReplaceTargetRE(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ReplaceTargetRE[1] = {{ wxLua_wxStyledTextCtrl_ReplaceTargetRE, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ReplaceTargetRE }};
//     int ReplaceTargetRE(const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_ReplaceTargetRE(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ReplaceTargetRE
    int returns = (self->ReplaceTargetRE(text));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SaveFile[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SaveFile(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SaveFile[1] = {{ wxLua_wxStyledTextCtrl_SaveFile, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SaveFile }};
//     bool SaveFile(const wxString& filename);
static int LUACALL wxLua_wxStyledTextCtrl_SaveFile(lua_State *L)
{
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SaveFile
    bool returns = (self->SaveFile(filename));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ScrollToColumn[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ScrollToColumn(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ScrollToColumn[1] = {{ wxLua_wxStyledTextCtrl_ScrollToColumn, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ScrollToColumn }};
//     void ScrollToColumn(int column);
static int LUACALL wxLua_wxStyledTextCtrl_ScrollToColumn(lua_State *L)
{
    // int column
    int column = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ScrollToColumn
    self->ScrollToColumn(column);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ScrollToLine[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ScrollToLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ScrollToLine[1] = {{ wxLua_wxStyledTextCtrl_ScrollToLine, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ScrollToLine }};
//     void ScrollToLine(int line);
static int LUACALL wxLua_wxStyledTextCtrl_ScrollToLine(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ScrollToLine
    self->ScrollToLine(line);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SearchAnchor[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SearchAnchor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SearchAnchor[1] = {{ wxLua_wxStyledTextCtrl_SearchAnchor, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SearchAnchor }};
//     void SearchAnchor();
static int LUACALL wxLua_wxStyledTextCtrl_SearchAnchor(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SearchAnchor
    self->SearchAnchor();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SearchInTarget[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SearchInTarget(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SearchInTarget[1] = {{ wxLua_wxStyledTextCtrl_SearchInTarget, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SearchInTarget }};
//     int SearchInTarget(const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_SearchInTarget(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SearchInTarget
    int returns = (self->SearchInTarget(text));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SearchNext[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SearchNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SearchNext[1] = {{ wxLua_wxStyledTextCtrl_SearchNext, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SearchNext }};
//     int SearchNext(int flags, const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_SearchNext(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SearchNext
    int returns = (self->SearchNext(flags, text));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SearchPrev[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SearchPrev(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SearchPrev[1] = {{ wxLua_wxStyledTextCtrl_SearchPrev, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SearchPrev }};
//     int SearchPrev(int flags, const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_SearchPrev(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SearchPrev
    int returns = (self->SearchPrev(flags, text));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SelectAll[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SelectAll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SelectAll[1] = {{ wxLua_wxStyledTextCtrl_SelectAll, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SelectAll }};
//     void SelectAll();
static int LUACALL wxLua_wxStyledTextCtrl_SelectAll(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SelectAll
    self->SelectAll();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SelectionDuplicate[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SelectionDuplicate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SelectionDuplicate[1] = {{ wxLua_wxStyledTextCtrl_SelectionDuplicate, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SelectionDuplicate }};
//     void SelectionDuplicate();
static int LUACALL wxLua_wxStyledTextCtrl_SelectionDuplicate(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SelectionDuplicate
    self->SelectionDuplicate();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SelectionIsRectangle[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SelectionIsRectangle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SelectionIsRectangle[1] = {{ wxLua_wxStyledTextCtrl_SelectionIsRectangle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SelectionIsRectangle }};
//     bool SelectionIsRectangle();
static int LUACALL wxLua_wxStyledTextCtrl_SelectionIsRectangle(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SelectionIsRectangle
    bool returns = (self->SelectionIsRectangle());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SendMsg[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SendMsg(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SendMsg[1] = {{ wxLua_wxStyledTextCtrl_SendMsg, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SendMsg }};
//     long SendMsg(int msg, long wp=0, long lp=0);
static int LUACALL wxLua_wxStyledTextCtrl_SendMsg(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long lp = 0
    long lp = (argCount >= 4 ? (long)wxlua_getnumbertype(L, 4) : 0);
    // long wp = 0
    long wp = (argCount >= 3 ? (long)wxlua_getnumbertype(L, 3) : 0);
    // int msg
    int msg = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SendMsg
    long  returns = (self->SendMsg(msg, wp, lp));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetAnchor[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetAnchor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetAnchor[1] = {{ wxLua_wxStyledTextCtrl_SetAnchor, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetAnchor }};
//     void SetAnchor(int posAnchor);
static int LUACALL wxLua_wxStyledTextCtrl_SetAnchor(lua_State *L)
{
    // int posAnchor
    int posAnchor = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetAnchor
    self->SetAnchor(posAnchor);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetBackSpaceUnIndents[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetBackSpaceUnIndents(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetBackSpaceUnIndents[1] = {{ wxLua_wxStyledTextCtrl_SetBackSpaceUnIndents, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetBackSpaceUnIndents }};
//     void SetBackSpaceUnIndents(bool bsUnIndents);
static int LUACALL wxLua_wxStyledTextCtrl_SetBackSpaceUnIndents(lua_State *L)
{
    // bool bsUnIndents
    bool bsUnIndents = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetBackSpaceUnIndents
    self->SetBackSpaceUnIndents(bsUnIndents);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetBufferedDraw[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetBufferedDraw(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetBufferedDraw[1] = {{ wxLua_wxStyledTextCtrl_SetBufferedDraw, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetBufferedDraw }};
//     void SetBufferedDraw(bool buffered);
static int LUACALL wxLua_wxStyledTextCtrl_SetBufferedDraw(lua_State *L)
{
    // bool buffered
    bool buffered = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetBufferedDraw
    self->SetBufferedDraw(buffered);

    return 0;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretForeground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretForeground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretForeground[1] = {{ wxLua_wxStyledTextCtrl_SetCaretForeground, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretForeground }};
//     void SetCaretForeground(const wxColour& fore);
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretForeground(lua_State *L)
{
    // const wxColour fore
    const wxColour * fore = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetCaretForeground
    self->SetCaretForeground(*fore);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

#if (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretLineBack[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretLineBack(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretLineBack[1] = {{ wxLua_wxStyledTextCtrl_SetCaretLineBack, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretLineBack }};
//     !%wxchkver_2_8 void SetCaretLineBack(const wxColour& back);
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretLineBack(lua_State *L)
{
    // const wxColour back
    const wxColour * back = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetCaretLineBack
    self->SetCaretLineBack(*back);

    return 0;
}

#endif // (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)

#if (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretLineBackground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretLineBackground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretLineBackground[1] = {{ wxLua_wxStyledTextCtrl_SetCaretLineBackground, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretLineBackground }};
//     %wxchkver_2_8  void SetCaretLineBackground(const wxColour& back);
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretLineBackground(lua_State *L)
{
    // const wxColour back
    const wxColour * back = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetCaretLineBackground
    self->SetCaretLineBackground(*back);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretLineVisible[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretLineVisible(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretLineVisible[1] = {{ wxLua_wxStyledTextCtrl_SetCaretLineVisible, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretLineVisible }};
//     void SetCaretLineVisible(bool show);
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretLineVisible(lua_State *L)
{
    // bool show
    bool show = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetCaretLineVisible
    self->SetCaretLineVisible(show);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretPeriod[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretPeriod(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretPeriod[1] = {{ wxLua_wxStyledTextCtrl_SetCaretPeriod, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretPeriod }};
//     void SetCaretPeriod(int periodMilliseconds);
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretPeriod(lua_State *L)
{
    // int periodMilliseconds
    int periodMilliseconds = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetCaretPeriod
    self->SetCaretPeriod(periodMilliseconds);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretSticky[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretSticky(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretSticky[1] = {{ wxLua_wxStyledTextCtrl_SetCaretSticky, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretSticky }};
//     void SetCaretSticky(bool useCaretStickyBehaviour);
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretSticky(lua_State *L)
{
    // bool useCaretStickyBehaviour
    bool useCaretStickyBehaviour = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetCaretSticky
    self->SetCaretSticky(useCaretStickyBehaviour);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretWidth[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretWidth[1] = {{ wxLua_wxStyledTextCtrl_SetCaretWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCaretWidth }};
//     void SetCaretWidth(int pixelWidth);
static int LUACALL wxLua_wxStyledTextCtrl_SetCaretWidth(lua_State *L)
{
    // int pixelWidth
    int pixelWidth = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetCaretWidth
    self->SetCaretWidth(pixelWidth);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCharsDefault[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetCharsDefault(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetCharsDefault[1] = {{ wxLua_wxStyledTextCtrl_SetCharsDefault, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCharsDefault }};
//     void SetCharsDefault();
static int LUACALL wxLua_wxStyledTextCtrl_SetCharsDefault(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetCharsDefault
    self->SetCharsDefault();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCodePage[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetCodePage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetCodePage[1] = {{ wxLua_wxStyledTextCtrl_SetCodePage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCodePage }};
//     void SetCodePage(int codePage);
static int LUACALL wxLua_wxStyledTextCtrl_SetCodePage(lua_State *L)
{
    // int codePage
    int codePage = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetCodePage
    self->SetCodePage(codePage);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetControlCharSymbol[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetControlCharSymbol(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetControlCharSymbol[1] = {{ wxLua_wxStyledTextCtrl_SetControlCharSymbol, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetControlCharSymbol }};
//     void SetControlCharSymbol(int symbol);
static int LUACALL wxLua_wxStyledTextCtrl_SetControlCharSymbol(lua_State *L)
{
    // int symbol
    int symbol = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetControlCharSymbol
    self->SetControlCharSymbol(symbol);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCurrentPos[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetCurrentPos(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetCurrentPos[1] = {{ wxLua_wxStyledTextCtrl_SetCurrentPos, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetCurrentPos }};
//     void SetCurrentPos(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_SetCurrentPos(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetCurrentPos
    self->SetCurrentPos(pos);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetDocPointer[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetDocPointer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetDocPointer[1] = {{ wxLua_wxStyledTextCtrl_SetDocPointer, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetDocPointer }};
//     void SetDocPointer(void* docPointer);
static int LUACALL wxLua_wxStyledTextCtrl_SetDocPointer(lua_State *L)
{
    // void docPointer
    void * docPointer = (void *)wxlua_touserdata(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetDocPointer
    self->SetDocPointer(docPointer);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetEOLMode[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetEOLMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetEOLMode[1] = {{ wxLua_wxStyledTextCtrl_SetEOLMode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetEOLMode }};
//     void SetEOLMode(int eolMode);
static int LUACALL wxLua_wxStyledTextCtrl_SetEOLMode(lua_State *L)
{
    // int eolMode
    int eolMode = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetEOLMode
    self->SetEOLMode(eolMode);

    return 0;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetEdgeColour[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetEdgeColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetEdgeColour[1] = {{ wxLua_wxStyledTextCtrl_SetEdgeColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetEdgeColour }};
//     void SetEdgeColour(const wxColour& edgeColour);
static int LUACALL wxLua_wxStyledTextCtrl_SetEdgeColour(lua_State *L)
{
    // const wxColour edgeColour
    const wxColour * edgeColour = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetEdgeColour
    self->SetEdgeColour(*edgeColour);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetEdgeColumn[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetEdgeColumn(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetEdgeColumn[1] = {{ wxLua_wxStyledTextCtrl_SetEdgeColumn, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetEdgeColumn }};
//     void SetEdgeColumn(int column);
static int LUACALL wxLua_wxStyledTextCtrl_SetEdgeColumn(lua_State *L)
{
    // int column
    int column = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetEdgeColumn
    self->SetEdgeColumn(column);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetEdgeMode[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetEdgeMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetEdgeMode[1] = {{ wxLua_wxStyledTextCtrl_SetEdgeMode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetEdgeMode }};
//     void SetEdgeMode(int mode);
static int LUACALL wxLua_wxStyledTextCtrl_SetEdgeMode(lua_State *L)
{
    // int mode
    int mode = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetEdgeMode
    self->SetEdgeMode(mode);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetEndAtLastLine[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetEndAtLastLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetEndAtLastLine[1] = {{ wxLua_wxStyledTextCtrl_SetEndAtLastLine, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetEndAtLastLine }};
//     void SetEndAtLastLine(bool endAtLastLine);
static int LUACALL wxLua_wxStyledTextCtrl_SetEndAtLastLine(lua_State *L)
{
    // bool endAtLastLine
    bool endAtLastLine = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetEndAtLastLine
    self->SetEndAtLastLine(endAtLastLine);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetFoldExpanded[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetFoldExpanded(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetFoldExpanded[1] = {{ wxLua_wxStyledTextCtrl_SetFoldExpanded, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetFoldExpanded }};
//     void SetFoldExpanded(int line, bool expanded);
static int LUACALL wxLua_wxStyledTextCtrl_SetFoldExpanded(lua_State *L)
{
    // bool expanded
    bool expanded = wxlua_getbooleantype(L, 3);
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetFoldExpanded
    self->SetFoldExpanded(line, expanded);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetFoldFlags[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetFoldFlags(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetFoldFlags[1] = {{ wxLua_wxStyledTextCtrl_SetFoldFlags, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetFoldFlags }};
//     void SetFoldFlags(int flags);
static int LUACALL wxLua_wxStyledTextCtrl_SetFoldFlags(lua_State *L)
{
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetFoldFlags
    self->SetFoldFlags(flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetFoldLevel[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetFoldLevel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetFoldLevel[1] = {{ wxLua_wxStyledTextCtrl_SetFoldLevel, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetFoldLevel }};
//     void SetFoldLevel(int line, int level);
static int LUACALL wxLua_wxStyledTextCtrl_SetFoldLevel(lua_State *L)
{
    // int level
    int level = (int)wxlua_getnumbertype(L, 3);
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetFoldLevel
    self->SetFoldLevel(line, level);

    return 0;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetFoldMarginColour[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetFoldMarginColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetFoldMarginColour[1] = {{ wxLua_wxStyledTextCtrl_SetFoldMarginColour, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetFoldMarginColour }};
//     void SetFoldMarginColour(bool useSetting, const wxColour& back);
static int LUACALL wxLua_wxStyledTextCtrl_SetFoldMarginColour(lua_State *L)
{
    // const wxColour back
    const wxColour * back = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // bool useSetting
    bool useSetting = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetFoldMarginColour
    self->SetFoldMarginColour(useSetting, *back);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetFoldMarginHiColour[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetFoldMarginHiColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetFoldMarginHiColour[1] = {{ wxLua_wxStyledTextCtrl_SetFoldMarginHiColour, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetFoldMarginHiColour }};
//     void SetFoldMarginHiColour(bool useSetting, const wxColour& fore);
static int LUACALL wxLua_wxStyledTextCtrl_SetFoldMarginHiColour(lua_State *L)
{
    // const wxColour fore
    const wxColour * fore = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // bool useSetting
    bool useSetting = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetFoldMarginHiColour
    self->SetFoldMarginHiColour(useSetting, *fore);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHScrollBar[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_wxScrollBar, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetHScrollBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetHScrollBar[1] = {{ wxLua_wxStyledTextCtrl_SetHScrollBar, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHScrollBar }};
//     void SetHScrollBar(wxScrollBar* bar);
static int LUACALL wxLua_wxStyledTextCtrl_SetHScrollBar(lua_State *L)
{
    // wxScrollBar bar
    wxScrollBar * bar = (wxScrollBar *)wxluaT_getuserdatatype(L, 2, wxluatype_wxScrollBar);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetHScrollBar
    self->SetHScrollBar(bar);

    return 0;
}

#endif // wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHighlightGuide[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetHighlightGuide(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetHighlightGuide[1] = {{ wxLua_wxStyledTextCtrl_SetHighlightGuide, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHighlightGuide }};
//     void SetHighlightGuide(int column);
static int LUACALL wxLua_wxStyledTextCtrl_SetHighlightGuide(lua_State *L)
{
    // int column
    int column = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetHighlightGuide
    self->SetHighlightGuide(column);

    return 0;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHotspotActiveBackground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetHotspotActiveBackground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetHotspotActiveBackground[1] = {{ wxLua_wxStyledTextCtrl_SetHotspotActiveBackground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHotspotActiveBackground }};
//     void SetHotspotActiveBackground(bool useSetting, const wxColour& back);
static int LUACALL wxLua_wxStyledTextCtrl_SetHotspotActiveBackground(lua_State *L)
{
    // const wxColour back
    const wxColour * back = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // bool useSetting
    bool useSetting = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetHotspotActiveBackground
    self->SetHotspotActiveBackground(useSetting, *back);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHotspotActiveForeground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetHotspotActiveForeground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetHotspotActiveForeground[1] = {{ wxLua_wxStyledTextCtrl_SetHotspotActiveForeground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHotspotActiveForeground }};
//     void SetHotspotActiveForeground(bool useSetting, const wxColour& fore);
static int LUACALL wxLua_wxStyledTextCtrl_SetHotspotActiveForeground(lua_State *L)
{
    // const wxColour fore
    const wxColour * fore = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // bool useSetting
    bool useSetting = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetHotspotActiveForeground
    self->SetHotspotActiveForeground(useSetting, *fore);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHotspotActiveUnderline[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetHotspotActiveUnderline(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetHotspotActiveUnderline[1] = {{ wxLua_wxStyledTextCtrl_SetHotspotActiveUnderline, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHotspotActiveUnderline }};
//     void SetHotspotActiveUnderline(bool underline);
static int LUACALL wxLua_wxStyledTextCtrl_SetHotspotActiveUnderline(lua_State *L)
{
    // bool underline
    bool underline = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetHotspotActiveUnderline
    self->SetHotspotActiveUnderline(underline);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHotspotSingleLine[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetHotspotSingleLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetHotspotSingleLine[1] = {{ wxLua_wxStyledTextCtrl_SetHotspotSingleLine, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetHotspotSingleLine }};
//     void SetHotspotSingleLine(bool singleLine);
static int LUACALL wxLua_wxStyledTextCtrl_SetHotspotSingleLine(lua_State *L)
{
    // bool singleLine
    bool singleLine = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetHotspotSingleLine
    self->SetHotspotSingleLine(singleLine);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetIndent[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetIndent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetIndent[1] = {{ wxLua_wxStyledTextCtrl_SetIndent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetIndent }};
//     void SetIndent(int indentSize);
static int LUACALL wxLua_wxStyledTextCtrl_SetIndent(lua_State *L)
{
    // int indentSize
    int indentSize = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetIndent
    self->SetIndent(indentSize);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetIndentationGuides[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetIndentationGuides(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetIndentationGuides[1] = {{ wxLua_wxStyledTextCtrl_SetIndentationGuides, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetIndentationGuides }};
//     void SetIndentationGuides(bool show);
static int LUACALL wxLua_wxStyledTextCtrl_SetIndentationGuides(lua_State *L)
{
    // bool show
    bool show = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetIndentationGuides
    self->SetIndentationGuides(show);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetKeyWords[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetKeyWords(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetKeyWords[1] = {{ wxLua_wxStyledTextCtrl_SetKeyWords, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetKeyWords }};
//     void SetKeyWords(int keywordSet, const wxString& keyWords);
static int LUACALL wxLua_wxStyledTextCtrl_SetKeyWords(lua_State *L)
{
    // const wxString keyWords
    const wxString keyWords = wxlua_getwxStringtype(L, 3);
    // int keywordSet
    int keywordSet = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetKeyWords
    self->SetKeyWords(keywordSet, keyWords);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLastKeydownProcessed[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetLastKeydownProcessed(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetLastKeydownProcessed[1] = {{ wxLua_wxStyledTextCtrl_SetLastKeydownProcessed, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLastKeydownProcessed }};
//     void SetLastKeydownProcessed(bool val)
static int LUACALL wxLua_wxStyledTextCtrl_SetLastKeydownProcessed(lua_State *L)
{
    // bool val
    bool val = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetLastKeydownProcessed
    self->SetLastKeydownProcessed(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLayoutCache[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetLayoutCache(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetLayoutCache[1] = {{ wxLua_wxStyledTextCtrl_SetLayoutCache, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLayoutCache }};
//     void SetLayoutCache(int mode);
static int LUACALL wxLua_wxStyledTextCtrl_SetLayoutCache(lua_State *L)
{
    // int mode
    int mode = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetLayoutCache
    self->SetLayoutCache(mode);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLexer[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetLexer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetLexer[1] = {{ wxLua_wxStyledTextCtrl_SetLexer, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLexer }};
//     void SetLexer(int lexer);
static int LUACALL wxLua_wxStyledTextCtrl_SetLexer(lua_State *L)
{
    // int lexer
    int lexer = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetLexer
    self->SetLexer(lexer);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLexerLanguage[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetLexerLanguage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetLexerLanguage[1] = {{ wxLua_wxStyledTextCtrl_SetLexerLanguage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLexerLanguage }};
//     void SetLexerLanguage(const wxString& language);
static int LUACALL wxLua_wxStyledTextCtrl_SetLexerLanguage(lua_State *L)
{
    // const wxString language
    const wxString language = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetLexerLanguage
    self->SetLexerLanguage(language);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLineIndentation[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetLineIndentation(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetLineIndentation[1] = {{ wxLua_wxStyledTextCtrl_SetLineIndentation, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLineIndentation }};
//     void SetLineIndentation(int line, int indentSize);
static int LUACALL wxLua_wxStyledTextCtrl_SetLineIndentation(lua_State *L)
{
    // int indentSize
    int indentSize = (int)wxlua_getnumbertype(L, 3);
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetLineIndentation
    self->SetLineIndentation(line, indentSize);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLineState[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetLineState(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetLineState[1] = {{ wxLua_wxStyledTextCtrl_SetLineState, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetLineState }};
//     void SetLineState(int line, int state);
static int LUACALL wxLua_wxStyledTextCtrl_SetLineState(lua_State *L)
{
    // int state
    int state = (int)wxlua_getnumbertype(L, 3);
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetLineState
    self->SetLineState(line, state);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginLeft[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginLeft[1] = {{ wxLua_wxStyledTextCtrl_SetMarginLeft, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginLeft }};
//     void SetMarginLeft(int pixelWidth);
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginLeft(lua_State *L)
{
    // int pixelWidth
    int pixelWidth = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetMarginLeft
    self->SetMarginLeft(pixelWidth);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginMask[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginMask(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginMask[1] = {{ wxLua_wxStyledTextCtrl_SetMarginMask, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginMask }};
//     void SetMarginMask(int margin, unsigned int mask); // NOTE: wxSTC has "int mask", but we need all the bits so we force uint
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginMask(lua_State *L)
{
    // unsigned int mask
    unsigned int mask = (unsigned int)wxlua_getuintegertype(L, 3);
    // int margin
    int margin = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetMarginMask
    self->SetMarginMask(margin, mask);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginRight[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginRight[1] = {{ wxLua_wxStyledTextCtrl_SetMarginRight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginRight }};
//     void SetMarginRight(int pixelWidth);
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginRight(lua_State *L)
{
    // int pixelWidth
    int pixelWidth = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetMarginRight
    self->SetMarginRight(pixelWidth);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginSensitive[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginSensitive(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginSensitive[1] = {{ wxLua_wxStyledTextCtrl_SetMarginSensitive, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginSensitive }};
//     void SetMarginSensitive(int margin, bool sensitive);
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginSensitive(lua_State *L)
{
    // bool sensitive
    bool sensitive = wxlua_getbooleantype(L, 3);
    // int margin
    int margin = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetMarginSensitive
    self->SetMarginSensitive(margin, sensitive);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginType[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginType[1] = {{ wxLua_wxStyledTextCtrl_SetMarginType, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginType }};
//     void SetMarginType(int margin, int marginType);
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginType(lua_State *L)
{
    // int marginType
    int marginType = (int)wxlua_getnumbertype(L, 3);
    // int margin
    int margin = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetMarginType
    self->SetMarginType(margin, marginType);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginWidth[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginWidth[1] = {{ wxLua_wxStyledTextCtrl_SetMarginWidth, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMarginWidth }};
//     void SetMarginWidth(int margin, int pixelWidth);
static int LUACALL wxLua_wxStyledTextCtrl_SetMarginWidth(lua_State *L)
{
    // int pixelWidth
    int pixelWidth = (int)wxlua_getnumbertype(L, 3);
    // int margin
    int margin = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetMarginWidth
    self->SetMarginWidth(margin, pixelWidth);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMargins[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetMargins(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetMargins[1] = {{ wxLua_wxStyledTextCtrl_SetMargins, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMargins }};
//     void SetMargins(int left, int right);
static int LUACALL wxLua_wxStyledTextCtrl_SetMargins(lua_State *L)
{
    // int right
    int right = (int)wxlua_getnumbertype(L, 3);
    // int left
    int left = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetMargins
    self->SetMargins(left, right);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetModEventMask[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetModEventMask(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetModEventMask[1] = {{ wxLua_wxStyledTextCtrl_SetModEventMask, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetModEventMask }};
//     void SetModEventMask(int mask);
static int LUACALL wxLua_wxStyledTextCtrl_SetModEventMask(lua_State *L)
{
    // int mask
    int mask = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetModEventMask
    self->SetModEventMask(mask);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMouseDownCaptures[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetMouseDownCaptures(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetMouseDownCaptures[1] = {{ wxLua_wxStyledTextCtrl_SetMouseDownCaptures, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMouseDownCaptures }};
//     void SetMouseDownCaptures(bool captures);
static int LUACALL wxLua_wxStyledTextCtrl_SetMouseDownCaptures(lua_State *L)
{
    // bool captures
    bool captures = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetMouseDownCaptures
    self->SetMouseDownCaptures(captures);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMouseDwellTime[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetMouseDwellTime(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetMouseDwellTime[1] = {{ wxLua_wxStyledTextCtrl_SetMouseDwellTime, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetMouseDwellTime }};
//     void SetMouseDwellTime(int periodMilliseconds);
static int LUACALL wxLua_wxStyledTextCtrl_SetMouseDwellTime(lua_State *L)
{
    // int periodMilliseconds
    int periodMilliseconds = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetMouseDwellTime
    self->SetMouseDwellTime(periodMilliseconds);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetOvertype[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetOvertype(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetOvertype[1] = {{ wxLua_wxStyledTextCtrl_SetOvertype, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetOvertype }};
//     void SetOvertype(bool overtype);
static int LUACALL wxLua_wxStyledTextCtrl_SetOvertype(lua_State *L)
{
    // bool overtype
    bool overtype = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetOvertype
    self->SetOvertype(overtype);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetPasteConvertEndings[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetPasteConvertEndings(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetPasteConvertEndings[1] = {{ wxLua_wxStyledTextCtrl_SetPasteConvertEndings, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetPasteConvertEndings }};
//     void SetPasteConvertEndings(bool convert);
static int LUACALL wxLua_wxStyledTextCtrl_SetPasteConvertEndings(lua_State *L)
{
    // bool convert
    bool convert = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetPasteConvertEndings
    self->SetPasteConvertEndings(convert);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetPrintColourMode[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetPrintColourMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetPrintColourMode[1] = {{ wxLua_wxStyledTextCtrl_SetPrintColourMode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetPrintColourMode }};
//     void SetPrintColourMode(int mode);
static int LUACALL wxLua_wxStyledTextCtrl_SetPrintColourMode(lua_State *L)
{
    // int mode
    int mode = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetPrintColourMode
    self->SetPrintColourMode(mode);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetPrintMagnification[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetPrintMagnification(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetPrintMagnification[1] = {{ wxLua_wxStyledTextCtrl_SetPrintMagnification, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetPrintMagnification }};
//     void SetPrintMagnification(int magnification);
static int LUACALL wxLua_wxStyledTextCtrl_SetPrintMagnification(lua_State *L)
{
    // int magnification
    int magnification = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetPrintMagnification
    self->SetPrintMagnification(magnification);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetPrintWrapMode[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetPrintWrapMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetPrintWrapMode[1] = {{ wxLua_wxStyledTextCtrl_SetPrintWrapMode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetPrintWrapMode }};
//     void SetPrintWrapMode(int mode);
static int LUACALL wxLua_wxStyledTextCtrl_SetPrintWrapMode(lua_State *L)
{
    // int mode
    int mode = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetPrintWrapMode
    self->SetPrintWrapMode(mode);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetProperty[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetProperty[1] = {{ wxLua_wxStyledTextCtrl_SetProperty, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetProperty }};
//     void SetProperty(const wxString& key, const wxString& value);
static int LUACALL wxLua_wxStyledTextCtrl_SetProperty(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 3);
    // const wxString key
    const wxString key = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetProperty
    self->SetProperty(key, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetReadOnly[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetReadOnly(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetReadOnly[1] = {{ wxLua_wxStyledTextCtrl_SetReadOnly, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetReadOnly }};
//     void SetReadOnly(bool readOnly);
static int LUACALL wxLua_wxStyledTextCtrl_SetReadOnly(lua_State *L)
{
    // bool readOnly
    bool readOnly = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetReadOnly
    self->SetReadOnly(readOnly);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSTCCursor[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetSTCCursor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetSTCCursor[1] = {{ wxLua_wxStyledTextCtrl_SetSTCCursor, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSTCCursor }};
//     void SetSTCCursor(int cursorType);
static int LUACALL wxLua_wxStyledTextCtrl_SetSTCCursor(lua_State *L)
{
    // int cursorType
    int cursorType = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetSTCCursor
    self->SetSTCCursor(cursorType);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSTCFocus[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetSTCFocus(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetSTCFocus[1] = {{ wxLua_wxStyledTextCtrl_SetSTCFocus, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSTCFocus }};
//     void SetSTCFocus(bool focus);
static int LUACALL wxLua_wxStyledTextCtrl_SetSTCFocus(lua_State *L)
{
    // bool focus
    bool focus = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetSTCFocus
    self->SetSTCFocus(focus);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSavePoint[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetSavePoint(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetSavePoint[1] = {{ wxLua_wxStyledTextCtrl_SetSavePoint, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSavePoint }};
//     void SetSavePoint();
static int LUACALL wxLua_wxStyledTextCtrl_SetSavePoint(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetSavePoint
    self->SetSavePoint();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetScrollWidth[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetScrollWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetScrollWidth[1] = {{ wxLua_wxStyledTextCtrl_SetScrollWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetScrollWidth }};
//     void SetScrollWidth(int pixelWidth);
static int LUACALL wxLua_wxStyledTextCtrl_SetScrollWidth(lua_State *L)
{
    // int pixelWidth
    int pixelWidth = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetScrollWidth
    self->SetScrollWidth(pixelWidth);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSearchFlags[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetSearchFlags(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetSearchFlags[1] = {{ wxLua_wxStyledTextCtrl_SetSearchFlags, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSearchFlags }};
//     void SetSearchFlags(int flags);
static int LUACALL wxLua_wxStyledTextCtrl_SetSearchFlags(lua_State *L)
{
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetSearchFlags
    self->SetSearchFlags(flags);

    return 0;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelBackground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetSelBackground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelBackground[1] = {{ wxLua_wxStyledTextCtrl_SetSelBackground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelBackground }};
//     void SetSelBackground(bool useSetting, const wxColour& back);
static int LUACALL wxLua_wxStyledTextCtrl_SetSelBackground(lua_State *L)
{
    // const wxColour back
    const wxColour * back = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // bool useSetting
    bool useSetting = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetSelBackground
    self->SetSelBackground(useSetting, *back);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelForeground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetSelForeground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelForeground[1] = {{ wxLua_wxStyledTextCtrl_SetSelForeground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelForeground }};
//     void SetSelForeground(bool useSetting, const wxColour& fore);
static int LUACALL wxLua_wxStyledTextCtrl_SetSelForeground(lua_State *L)
{
    // const wxColour fore
    const wxColour * fore = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // bool useSetting
    bool useSetting = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetSelForeground
    self->SetSelForeground(useSetting, *fore);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelection[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelection[1] = {{ wxLua_wxStyledTextCtrl_SetSelection, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelection }};
//     void SetSelection(int start, int end);
static int LUACALL wxLua_wxStyledTextCtrl_SetSelection(lua_State *L)
{
    // int end
    int end = (int)wxlua_getnumbertype(L, 3);
    // int start
    int start = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetSelection
    self->SetSelection(start, end);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelectionEnd[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetSelectionEnd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelectionEnd[1] = {{ wxLua_wxStyledTextCtrl_SetSelectionEnd, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelectionEnd }};
//     void SetSelectionEnd(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_SetSelectionEnd(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetSelectionEnd
    self->SetSelectionEnd(pos);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelectionMode[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetSelectionMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelectionMode[1] = {{ wxLua_wxStyledTextCtrl_SetSelectionMode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelectionMode }};
//     void SetSelectionMode(int mode);
static int LUACALL wxLua_wxStyledTextCtrl_SetSelectionMode(lua_State *L)
{
    // int mode
    int mode = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetSelectionMode
    self->SetSelectionMode(mode);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelectionStart[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetSelectionStart(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelectionStart[1] = {{ wxLua_wxStyledTextCtrl_SetSelectionStart, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetSelectionStart }};
//     void SetSelectionStart(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_SetSelectionStart(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetSelectionStart
    self->SetSelectionStart(pos);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetStatus[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetStatus(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetStatus[1] = {{ wxLua_wxStyledTextCtrl_SetStatus, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetStatus }};
//     void SetStatus(int statusCode);
static int LUACALL wxLua_wxStyledTextCtrl_SetStatus(lua_State *L)
{
    // int statusCode
    int statusCode = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetStatus
    self->SetStatus(statusCode);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetStyleBits[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetStyleBits(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetStyleBits[1] = {{ wxLua_wxStyledTextCtrl_SetStyleBits, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetStyleBits }};
//     void SetStyleBits(int bits);
static int LUACALL wxLua_wxStyledTextCtrl_SetStyleBits(lua_State *L)
{
    // int bits
    int bits = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetStyleBits
    self->SetStyleBits(bits);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetStyleBytes[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetStyleBytes(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetStyleBytes[1] = {{ wxLua_wxStyledTextCtrl_SetStyleBytes, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetStyleBytes }};
// %override wxLua_wxStyledTextCtrl_SetStyleBytes
// void    SetStyleBytes(int length, const wxString &styleBytes)
static int LUACALL wxLua_wxStyledTextCtrl_SetStyleBytes(lua_State *L)
{
    // const wxString &styleBytes
    char* styleBytes = (char*)lua_tostring(L, 3);
    // int length
    int length = (int)lua_tonumber(L, 2);
    // get this
    wxStyledTextCtrl *self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetStyleBytes
    self->SetStyleBytes(length, styleBytes);
    // return the number of parameters
    return 0;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetStyling[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetStyling(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetStyling[1] = {{ wxLua_wxStyledTextCtrl_SetStyling, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetStyling }};
//     void SetStyling(int length, int style);
static int LUACALL wxLua_wxStyledTextCtrl_SetStyling(lua_State *L)
{
    // int style
    int style = (int)wxlua_getnumbertype(L, 3);
    // int length
    int length = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetStyling
    self->SetStyling(length, style);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetTabIndents[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetTabIndents(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetTabIndents[1] = {{ wxLua_wxStyledTextCtrl_SetTabIndents, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetTabIndents }};
//     void SetTabIndents(bool tabIndents);
static int LUACALL wxLua_wxStyledTextCtrl_SetTabIndents(lua_State *L)
{
    // bool tabIndents
    bool tabIndents = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetTabIndents
    self->SetTabIndents(tabIndents);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetTabWidth[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetTabWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetTabWidth[1] = {{ wxLua_wxStyledTextCtrl_SetTabWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetTabWidth }};
//     void SetTabWidth(int tabWidth);
static int LUACALL wxLua_wxStyledTextCtrl_SetTabWidth(lua_State *L)
{
    // int tabWidth
    int tabWidth = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetTabWidth
    self->SetTabWidth(tabWidth);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetTargetEnd[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetTargetEnd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetTargetEnd[1] = {{ wxLua_wxStyledTextCtrl_SetTargetEnd, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetTargetEnd }};
//     void SetTargetEnd(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_SetTargetEnd(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetTargetEnd
    self->SetTargetEnd(pos);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetTargetStart[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetTargetStart(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetTargetStart[1] = {{ wxLua_wxStyledTextCtrl_SetTargetStart, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetTargetStart }};
//     void SetTargetStart(int pos);
static int LUACALL wxLua_wxStyledTextCtrl_SetTargetStart(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetTargetStart
    self->SetTargetStart(pos);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetText[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetText[1] = {{ wxLua_wxStyledTextCtrl_SetText, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetText }};
//     void SetText(const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_SetText(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetText
    self->SetText(text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetTwoPhaseDraw[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetTwoPhaseDraw(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetTwoPhaseDraw[1] = {{ wxLua_wxStyledTextCtrl_SetTwoPhaseDraw, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetTwoPhaseDraw }};
//     void SetTwoPhaseDraw(bool twoPhase);
static int LUACALL wxLua_wxStyledTextCtrl_SetTwoPhaseDraw(lua_State *L)
{
    // bool twoPhase
    bool twoPhase = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetTwoPhaseDraw
    self->SetTwoPhaseDraw(twoPhase);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetUndoCollection[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetUndoCollection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetUndoCollection[1] = {{ wxLua_wxStyledTextCtrl_SetUndoCollection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetUndoCollection }};
//     void SetUndoCollection(bool collectUndo);
static int LUACALL wxLua_wxStyledTextCtrl_SetUndoCollection(lua_State *L)
{
    // bool collectUndo
    bool collectUndo = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetUndoCollection
    self->SetUndoCollection(collectUndo);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetUseAntiAliasing[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetUseAntiAliasing(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetUseAntiAliasing[1] = {{ wxLua_wxStyledTextCtrl_SetUseAntiAliasing, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetUseAntiAliasing }};
//     void SetUseAntiAliasing(bool useAA);
static int LUACALL wxLua_wxStyledTextCtrl_SetUseAntiAliasing(lua_State *L)
{
    // bool useAA
    bool useAA = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetUseAntiAliasing
    self->SetUseAntiAliasing(useAA);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetUseHorizontalScrollBar[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetUseHorizontalScrollBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetUseHorizontalScrollBar[1] = {{ wxLua_wxStyledTextCtrl_SetUseHorizontalScrollBar, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetUseHorizontalScrollBar }};
//     void SetUseHorizontalScrollBar(bool show);
static int LUACALL wxLua_wxStyledTextCtrl_SetUseHorizontalScrollBar(lua_State *L)
{
    // bool show
    bool show = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetUseHorizontalScrollBar
    self->SetUseHorizontalScrollBar(show);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetUseTabs[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetUseTabs(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetUseTabs[1] = {{ wxLua_wxStyledTextCtrl_SetUseTabs, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetUseTabs }};
//     void SetUseTabs(bool useTabs);
static int LUACALL wxLua_wxStyledTextCtrl_SetUseTabs(lua_State *L)
{
    // bool useTabs
    bool useTabs = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetUseTabs
    self->SetUseTabs(useTabs);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetUseVerticalScrollBar[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetUseVerticalScrollBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetUseVerticalScrollBar[1] = {{ wxLua_wxStyledTextCtrl_SetUseVerticalScrollBar, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetUseVerticalScrollBar }};
//     void SetUseVerticalScrollBar(bool show);
static int LUACALL wxLua_wxStyledTextCtrl_SetUseVerticalScrollBar(lua_State *L)
{
    // bool show
    bool show = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetUseVerticalScrollBar
    self->SetUseVerticalScrollBar(show);

    return 0;
}


#if wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetVScrollBar[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_wxScrollBar, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetVScrollBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetVScrollBar[1] = {{ wxLua_wxStyledTextCtrl_SetVScrollBar, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetVScrollBar }};
//     void SetVScrollBar(wxScrollBar* bar);
static int LUACALL wxLua_wxStyledTextCtrl_SetVScrollBar(lua_State *L)
{
    // wxScrollBar bar
    wxScrollBar * bar = (wxScrollBar *)wxluaT_getuserdatatype(L, 2, wxluatype_wxScrollBar);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetVScrollBar
    self->SetVScrollBar(bar);

    return 0;
}

#endif // wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetViewEOL[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetViewEOL(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetViewEOL[1] = {{ wxLua_wxStyledTextCtrl_SetViewEOL, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetViewEOL }};
//     void SetViewEOL(bool visible);
static int LUACALL wxLua_wxStyledTextCtrl_SetViewEOL(lua_State *L)
{
    // bool visible
    bool visible = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetViewEOL
    self->SetViewEOL(visible);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetViewWhiteSpace[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetViewWhiteSpace(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetViewWhiteSpace[1] = {{ wxLua_wxStyledTextCtrl_SetViewWhiteSpace, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetViewWhiteSpace }};
//     void SetViewWhiteSpace(int viewWS);
static int LUACALL wxLua_wxStyledTextCtrl_SetViewWhiteSpace(lua_State *L)
{
    // int viewWS
    int viewWS = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetViewWhiteSpace
    self->SetViewWhiteSpace(viewWS);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetVisiblePolicy[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetVisiblePolicy(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetVisiblePolicy[1] = {{ wxLua_wxStyledTextCtrl_SetVisiblePolicy, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetVisiblePolicy }};
//     void SetVisiblePolicy(int visiblePolicy, int visibleSlop);
static int LUACALL wxLua_wxStyledTextCtrl_SetVisiblePolicy(lua_State *L)
{
    // int visibleSlop
    int visibleSlop = (int)wxlua_getnumbertype(L, 3);
    // int visiblePolicy
    int visiblePolicy = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetVisiblePolicy
    self->SetVisiblePolicy(visiblePolicy, visibleSlop);

    return 0;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWhitespaceBackground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetWhitespaceBackground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetWhitespaceBackground[1] = {{ wxLua_wxStyledTextCtrl_SetWhitespaceBackground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWhitespaceBackground }};
//     void SetWhitespaceBackground(bool useSetting, const wxColour& back);
static int LUACALL wxLua_wxStyledTextCtrl_SetWhitespaceBackground(lua_State *L)
{
    // const wxColour back
    const wxColour * back = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // bool useSetting
    bool useSetting = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetWhitespaceBackground
    self->SetWhitespaceBackground(useSetting, *back);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWhitespaceChars[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetWhitespaceChars(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetWhitespaceChars[1] = {{ wxLua_wxStyledTextCtrl_SetWhitespaceChars, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWhitespaceChars }};
//     void SetWhitespaceChars(const wxString& characters);
static int LUACALL wxLua_wxStyledTextCtrl_SetWhitespaceChars(lua_State *L)
{
    // const wxString characters
    const wxString characters = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetWhitespaceChars
    self->SetWhitespaceChars(characters);

    return 0;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWhitespaceForeground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetWhitespaceForeground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetWhitespaceForeground[1] = {{ wxLua_wxStyledTextCtrl_SetWhitespaceForeground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWhitespaceForeground }};
//     void SetWhitespaceForeground(bool useSetting, const wxColour& fore);
static int LUACALL wxLua_wxStyledTextCtrl_SetWhitespaceForeground(lua_State *L)
{
    // const wxColour fore
    const wxColour * fore = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // bool useSetting
    bool useSetting = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetWhitespaceForeground
    self->SetWhitespaceForeground(useSetting, *fore);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWordChars[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetWordChars(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetWordChars[1] = {{ wxLua_wxStyledTextCtrl_SetWordChars, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWordChars }};
//     void SetWordChars(const wxString& characters);
static int LUACALL wxLua_wxStyledTextCtrl_SetWordChars(lua_State *L)
{
    // const wxString characters
    const wxString characters = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetWordChars
    self->SetWordChars(characters);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWrapMode[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetWrapMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetWrapMode[1] = {{ wxLua_wxStyledTextCtrl_SetWrapMode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWrapMode }};
//     void SetWrapMode(int mode);
static int LUACALL wxLua_wxStyledTextCtrl_SetWrapMode(lua_State *L)
{
    // int mode
    int mode = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetWrapMode
    self->SetWrapMode(mode);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWrapStartIndent[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetWrapStartIndent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetWrapStartIndent[1] = {{ wxLua_wxStyledTextCtrl_SetWrapStartIndent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWrapStartIndent }};
//     void SetWrapStartIndent(int indent);
static int LUACALL wxLua_wxStyledTextCtrl_SetWrapStartIndent(lua_State *L)
{
    // int indent
    int indent = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetWrapStartIndent
    self->SetWrapStartIndent(indent);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWrapVisualFlags[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetWrapVisualFlags(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetWrapVisualFlags[1] = {{ wxLua_wxStyledTextCtrl_SetWrapVisualFlags, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWrapVisualFlags }};
//     void SetWrapVisualFlags(int wrapVisualFlags);
static int LUACALL wxLua_wxStyledTextCtrl_SetWrapVisualFlags(lua_State *L)
{
    // int wrapVisualFlags
    int wrapVisualFlags = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetWrapVisualFlags
    self->SetWrapVisualFlags(wrapVisualFlags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWrapVisualFlagsLocation[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetWrapVisualFlagsLocation(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetWrapVisualFlagsLocation[1] = {{ wxLua_wxStyledTextCtrl_SetWrapVisualFlagsLocation, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetWrapVisualFlagsLocation }};
//     void SetWrapVisualFlagsLocation(int wrapVisualFlagsLocation);
static int LUACALL wxLua_wxStyledTextCtrl_SetWrapVisualFlagsLocation(lua_State *L)
{
    // int wrapVisualFlagsLocation
    int wrapVisualFlagsLocation = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetWrapVisualFlagsLocation
    self->SetWrapVisualFlagsLocation(wrapVisualFlagsLocation);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetXCaretPolicy[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetXCaretPolicy(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetXCaretPolicy[1] = {{ wxLua_wxStyledTextCtrl_SetXCaretPolicy, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetXCaretPolicy }};
//     void SetXCaretPolicy(int caretPolicy, int caretSlop);
static int LUACALL wxLua_wxStyledTextCtrl_SetXCaretPolicy(lua_State *L)
{
    // int caretSlop
    int caretSlop = (int)wxlua_getnumbertype(L, 3);
    // int caretPolicy
    int caretPolicy = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetXCaretPolicy
    self->SetXCaretPolicy(caretPolicy, caretSlop);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetXOffset[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetXOffset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetXOffset[1] = {{ wxLua_wxStyledTextCtrl_SetXOffset, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetXOffset }};
//     void SetXOffset(int newOffset);
static int LUACALL wxLua_wxStyledTextCtrl_SetXOffset(lua_State *L)
{
    // int newOffset
    int newOffset = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetXOffset
    self->SetXOffset(newOffset);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetYCaretPolicy[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetYCaretPolicy(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetYCaretPolicy[1] = {{ wxLua_wxStyledTextCtrl_SetYCaretPolicy, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetYCaretPolicy }};
//     void SetYCaretPolicy(int caretPolicy, int caretSlop);
static int LUACALL wxLua_wxStyledTextCtrl_SetYCaretPolicy(lua_State *L)
{
    // int caretSlop
    int caretSlop = (int)wxlua_getnumbertype(L, 3);
    // int caretPolicy
    int caretPolicy = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetYCaretPolicy
    self->SetYCaretPolicy(caretPolicy, caretSlop);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetZoom[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_SetZoom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_SetZoom[1] = {{ wxLua_wxStyledTextCtrl_SetZoom, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_SetZoom }};
//     void SetZoom(int zoom);
static int LUACALL wxLua_wxStyledTextCtrl_SetZoom(lua_State *L)
{
    // int zoom
    int zoom = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call SetZoom
    self->SetZoom(zoom);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ShowLines[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ShowLines(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ShowLines[1] = {{ wxLua_wxStyledTextCtrl_ShowLines, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ShowLines }};
//     void ShowLines(int lineStart, int lineEnd);
static int LUACALL wxLua_wxStyledTextCtrl_ShowLines(lua_State *L)
{
    // int lineEnd
    int lineEnd = (int)wxlua_getnumbertype(L, 3);
    // int lineStart
    int lineStart = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ShowLines
    self->ShowLines(lineStart, lineEnd);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StartRecord[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StartRecord(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StartRecord[1] = {{ wxLua_wxStyledTextCtrl_StartRecord, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StartRecord }};
//     void StartRecord();
static int LUACALL wxLua_wxStyledTextCtrl_StartRecord(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StartRecord
    self->StartRecord();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StartStyling[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StartStyling(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StartStyling[1] = {{ wxLua_wxStyledTextCtrl_StartStyling, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StartStyling }};
//     void StartStyling(int pos, unsigned int mask);
static int LUACALL wxLua_wxStyledTextCtrl_StartStyling(lua_State *L)
{
    // unsigned int mask
    unsigned int mask = (unsigned int)wxlua_getuintegertype(L, 3);
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StartStyling
    self->StartStyling(pos, mask);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StopRecord[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StopRecord(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StopRecord[1] = {{ wxLua_wxStyledTextCtrl_StopRecord, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StopRecord }};
//     void StopRecord();
static int LUACALL wxLua_wxStyledTextCtrl_StopRecord(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StopRecord
    self->StopRecord();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StutteredPageDown[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StutteredPageDown(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StutteredPageDown[1] = {{ wxLua_wxStyledTextCtrl_StutteredPageDown, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StutteredPageDown }};
//     void StutteredPageDown();
static int LUACALL wxLua_wxStyledTextCtrl_StutteredPageDown(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StutteredPageDown
    self->StutteredPageDown();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StutteredPageDownExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StutteredPageDownExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StutteredPageDownExtend[1] = {{ wxLua_wxStyledTextCtrl_StutteredPageDownExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StutteredPageDownExtend }};
//     void StutteredPageDownExtend();
static int LUACALL wxLua_wxStyledTextCtrl_StutteredPageDownExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StutteredPageDownExtend
    self->StutteredPageDownExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StutteredPageUp[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StutteredPageUp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StutteredPageUp[1] = {{ wxLua_wxStyledTextCtrl_StutteredPageUp, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StutteredPageUp }};
//     void StutteredPageUp();
static int LUACALL wxLua_wxStyledTextCtrl_StutteredPageUp(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StutteredPageUp
    self->StutteredPageUp();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StutteredPageUpExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StutteredPageUpExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StutteredPageUpExtend[1] = {{ wxLua_wxStyledTextCtrl_StutteredPageUpExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StutteredPageUpExtend }};
//     void StutteredPageUpExtend();
static int LUACALL wxLua_wxStyledTextCtrl_StutteredPageUpExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StutteredPageUpExtend
    self->StutteredPageUpExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleClearAll[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleClearAll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleClearAll[1] = {{ wxLua_wxStyledTextCtrl_StyleClearAll, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleClearAll }};
//     void StyleClearAll();
static int LUACALL wxLua_wxStyledTextCtrl_StyleClearAll(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleClearAll
    self->StyleClearAll();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleResetDefault[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleResetDefault(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleResetDefault[1] = {{ wxLua_wxStyledTextCtrl_StyleResetDefault, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleResetDefault }};
//     void StyleResetDefault();
static int LUACALL wxLua_wxStyledTextCtrl_StyleResetDefault(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleResetDefault
    self->StyleResetDefault();

    return 0;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetBackground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetBackground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetBackground[1] = {{ wxLua_wxStyledTextCtrl_StyleSetBackground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetBackground }};
//     void StyleSetBackground(int style, const wxColour& back);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetBackground(lua_State *L)
{
    // const wxColour back
    const wxColour * back = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetBackground
    self->StyleSetBackground(style, *back);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetBold[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetBold(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetBold[1] = {{ wxLua_wxStyledTextCtrl_StyleSetBold, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetBold }};
//     void StyleSetBold(int style, bool bold);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetBold(lua_State *L)
{
    // bool bold
    bool bold = wxlua_getbooleantype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetBold
    self->StyleSetBold(style, bold);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetCase[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetCase(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetCase[1] = {{ wxLua_wxStyledTextCtrl_StyleSetCase, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetCase }};
//     void StyleSetCase(int style, int caseForce);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetCase(lua_State *L)
{
    // int caseForce
    int caseForce = (int)wxlua_getnumbertype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetCase
    self->StyleSetCase(style, caseForce);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetChangeable[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetChangeable(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetChangeable[1] = {{ wxLua_wxStyledTextCtrl_StyleSetChangeable, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetChangeable }};
//     void StyleSetChangeable(int style, bool changeable);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetChangeable(lua_State *L)
{
    // bool changeable
    bool changeable = wxlua_getbooleantype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetChangeable
    self->StyleSetChangeable(style, changeable);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetCharacterSet[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetCharacterSet(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetCharacterSet[1] = {{ wxLua_wxStyledTextCtrl_StyleSetCharacterSet, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetCharacterSet }};
//     void StyleSetCharacterSet(int style, int characterSet);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetCharacterSet(lua_State *L)
{
    // int characterSet
    int characterSet = (int)wxlua_getnumbertype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetCharacterSet
    self->StyleSetCharacterSet(style, characterSet);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetEOLFilled[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetEOLFilled(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetEOLFilled[1] = {{ wxLua_wxStyledTextCtrl_StyleSetEOLFilled, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetEOLFilled }};
//     void StyleSetEOLFilled(int style, bool filled);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetEOLFilled(lua_State *L)
{
    // bool filled
    bool filled = wxlua_getbooleantype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetEOLFilled
    self->StyleSetEOLFilled(style, filled);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetFaceName[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetFaceName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetFaceName[1] = {{ wxLua_wxStyledTextCtrl_StyleSetFaceName, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetFaceName }};
//     void StyleSetFaceName(int style, const wxString& fontName);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetFaceName(lua_State *L)
{
    // const wxString fontName
    const wxString fontName = wxlua_getwxStringtype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetFaceName
    self->StyleSetFaceName(style, fontName);

    return 0;
}


#if wxLUA_USE_wxFont
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetFont[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_wxFont, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetFont(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetFont[1] = {{ wxLua_wxStyledTextCtrl_StyleSetFont, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetFont }};
//     void StyleSetFont(int styleNum, wxFont& font);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetFont(lua_State *L)
{
    // wxFont font
    wxFont * font = (wxFont *)wxluaT_getuserdatatype(L, 3, wxluatype_wxFont);
    // int styleNum
    int styleNum = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetFont
    self->StyleSetFont(styleNum, *font);

    return 0;
}

#endif // wxLUA_USE_wxFont

#if wxUSE_INTL
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetFontAttr[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, &wxluatype_TBOOLEAN, &wxluatype_TBOOLEAN, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetFontAttr(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetFontAttr[1] = {{ wxLua_wxStyledTextCtrl_StyleSetFontAttr, WXLUAMETHOD_METHOD, 7, 8, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetFontAttr }};
//     void StyleSetFontAttr(int styleNum, int size, const wxString& faceName, bool bold, bool italic, bool underline, wxFontEncoding encoding=wxFONTENCODING_DEFAULT);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetFontAttr(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxFontEncoding encoding = wxFONTENCODING_DEFAULT
    wxFontEncoding encoding = (argCount >= 8 ? (wxFontEncoding)wxlua_getenumtype(L, 8) : wxFONTENCODING_DEFAULT);
    // bool underline
    bool underline = wxlua_getbooleantype(L, 7);
    // bool italic
    bool italic = wxlua_getbooleantype(L, 6);
    // bool bold
    bool bold = wxlua_getbooleantype(L, 5);
    // const wxString faceName
    const wxString faceName = wxlua_getwxStringtype(L, 4);
    // int size
    int size = (int)wxlua_getnumbertype(L, 3);
    // int styleNum
    int styleNum = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetFontAttr
    self->StyleSetFontAttr(styleNum, size, faceName, bold, italic, underline, encoding);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetFontEncoding[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetFontEncoding(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetFontEncoding[1] = {{ wxLua_wxStyledTextCtrl_StyleSetFontEncoding, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetFontEncoding }};
//     void StyleSetFontEncoding(int style, wxFontEncoding encoding);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetFontEncoding(lua_State *L)
{
    // wxFontEncoding encoding
    wxFontEncoding encoding = (wxFontEncoding)wxlua_getenumtype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetFontEncoding
    self->StyleSetFontEncoding(style, encoding);

    return 0;
}

#endif // wxUSE_INTL

#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetForeground[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetForeground(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetForeground[1] = {{ wxLua_wxStyledTextCtrl_StyleSetForeground, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetForeground }};
//     void StyleSetForeground(int style, const wxColour& fore);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetForeground(lua_State *L)
{
    // const wxColour fore
    const wxColour * fore = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetForeground
    self->StyleSetForeground(style, *fore);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetHotSpot[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetHotSpot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetHotSpot[1] = {{ wxLua_wxStyledTextCtrl_StyleSetHotSpot, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetHotSpot }};
//     void StyleSetHotSpot(int style, bool hotspot);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetHotSpot(lua_State *L)
{
    // bool hotspot
    bool hotspot = wxlua_getbooleantype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetHotSpot
    self->StyleSetHotSpot(style, hotspot);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetItalic[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetItalic(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetItalic[1] = {{ wxLua_wxStyledTextCtrl_StyleSetItalic, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetItalic }};
//     void StyleSetItalic(int style, bool italic);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetItalic(lua_State *L)
{
    // bool italic
    bool italic = wxlua_getbooleantype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetItalic
    self->StyleSetItalic(style, italic);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetSize[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetSize[1] = {{ wxLua_wxStyledTextCtrl_StyleSetSize, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetSize }};
//     void StyleSetSize(int style, int sizePoints);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetSize(lua_State *L)
{
    // int sizePoints
    int sizePoints = (int)wxlua_getnumbertype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetSize
    self->StyleSetSize(style, sizePoints);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetSpec[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetSpec(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetSpec[1] = {{ wxLua_wxStyledTextCtrl_StyleSetSpec, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetSpec }};
//     void StyleSetSpec(int styleNum, const wxString& spec);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetSpec(lua_State *L)
{
    // const wxString spec
    const wxString spec = wxlua_getwxStringtype(L, 3);
    // int styleNum
    int styleNum = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetSpec
    self->StyleSetSpec(styleNum, spec);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetUnderline[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetUnderline(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetUnderline[1] = {{ wxLua_wxStyledTextCtrl_StyleSetUnderline, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetUnderline }};
//     void StyleSetUnderline(int style, bool underline);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetUnderline(lua_State *L)
{
    // bool underline
    bool underline = wxlua_getbooleantype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetUnderline
    self->StyleSetUnderline(style, underline);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetVisible[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetVisible(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetVisible[1] = {{ wxLua_wxStyledTextCtrl_StyleSetVisible, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_StyleSetVisible }};
//     void StyleSetVisible(int style, bool visible);
static int LUACALL wxLua_wxStyledTextCtrl_StyleSetVisible(lua_State *L)
{
    // bool visible
    bool visible = wxlua_getbooleantype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call StyleSetVisible
    self->StyleSetVisible(style, visible);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Tab[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Tab(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Tab[1] = {{ wxLua_wxStyledTextCtrl_Tab, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Tab }};
//     void Tab();
static int LUACALL wxLua_wxStyledTextCtrl_Tab(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Tab
    self->Tab();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_TargetFromSelection[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_TargetFromSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_TargetFromSelection[1] = {{ wxLua_wxStyledTextCtrl_TargetFromSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_TargetFromSelection }};
//     void TargetFromSelection();
static int LUACALL wxLua_wxStyledTextCtrl_TargetFromSelection(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call TargetFromSelection
    self->TargetFromSelection();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_TextHeight[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_TextHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_TextHeight[1] = {{ wxLua_wxStyledTextCtrl_TextHeight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_TextHeight }};
//     int TextHeight(int line);
static int LUACALL wxLua_wxStyledTextCtrl_TextHeight(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call TextHeight
    int returns = (self->TextHeight(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_TextWidth[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_TextWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_TextWidth[1] = {{ wxLua_wxStyledTextCtrl_TextWidth, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_TextWidth }};
//     int TextWidth(int style, const wxString& text);
static int LUACALL wxLua_wxStyledTextCtrl_TextWidth(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // int style
    int style = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call TextWidth
    int returns = (self->TextWidth(style, text));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ToggleCaretSticky[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ToggleCaretSticky(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ToggleCaretSticky[1] = {{ wxLua_wxStyledTextCtrl_ToggleCaretSticky, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ToggleCaretSticky }};
//     void ToggleCaretSticky();
static int LUACALL wxLua_wxStyledTextCtrl_ToggleCaretSticky(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ToggleCaretSticky
    self->ToggleCaretSticky();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ToggleFold[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ToggleFold(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ToggleFold[1] = {{ wxLua_wxStyledTextCtrl_ToggleFold, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ToggleFold }};
//     void ToggleFold(int line);
static int LUACALL wxLua_wxStyledTextCtrl_ToggleFold(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ToggleFold
    self->ToggleFold(line);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_Undo[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_Undo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_Undo[1] = {{ wxLua_wxStyledTextCtrl_Undo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_Undo }};
//     void Undo();
static int LUACALL wxLua_wxStyledTextCtrl_Undo(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call Undo
    self->Undo();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_UpperCase[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_UpperCase(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_UpperCase[1] = {{ wxLua_wxStyledTextCtrl_UpperCase, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_UpperCase }};
//     void UpperCase();
static int LUACALL wxLua_wxStyledTextCtrl_UpperCase(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call UpperCase
    self->UpperCase();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_UsePopUp[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_UsePopUp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_UsePopUp[1] = {{ wxLua_wxStyledTextCtrl_UsePopUp, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_UsePopUp }};
//     void UsePopUp(bool allowPopUp);
static int LUACALL wxLua_wxStyledTextCtrl_UsePopUp(lua_State *L)
{
    // bool allowPopUp
    bool allowPopUp = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call UsePopUp
    self->UsePopUp(allowPopUp);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_UserListShow[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_UserListShow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_UserListShow[1] = {{ wxLua_wxStyledTextCtrl_UserListShow, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_UserListShow }};
//     void UserListShow(int listType, const wxString& itemList);
static int LUACALL wxLua_wxStyledTextCtrl_UserListShow(lua_State *L)
{
    // const wxString itemList
    const wxString itemList = wxlua_getwxStringtype(L, 3);
    // int listType
    int listType = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call UserListShow
    self->UserListShow(listType, itemList);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_VCHome[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_VCHome(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_VCHome[1] = {{ wxLua_wxStyledTextCtrl_VCHome, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_VCHome }};
//     void VCHome();
static int LUACALL wxLua_wxStyledTextCtrl_VCHome(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call VCHome
    self->VCHome();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_VCHomeExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_VCHomeExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_VCHomeExtend[1] = {{ wxLua_wxStyledTextCtrl_VCHomeExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_VCHomeExtend }};
//     void VCHomeExtend();
static int LUACALL wxLua_wxStyledTextCtrl_VCHomeExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call VCHomeExtend
    self->VCHomeExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_VCHomeRectExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_VCHomeRectExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_VCHomeRectExtend[1] = {{ wxLua_wxStyledTextCtrl_VCHomeRectExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_VCHomeRectExtend }};
//     void VCHomeRectExtend();
static int LUACALL wxLua_wxStyledTextCtrl_VCHomeRectExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call VCHomeRectExtend
    self->VCHomeRectExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_VCHomeWrap[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_VCHomeWrap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_VCHomeWrap[1] = {{ wxLua_wxStyledTextCtrl_VCHomeWrap, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_VCHomeWrap }};
//     void VCHomeWrap();
static int LUACALL wxLua_wxStyledTextCtrl_VCHomeWrap(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call VCHomeWrap
    self->VCHomeWrap();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_VCHomeWrapExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_VCHomeWrapExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_VCHomeWrapExtend[1] = {{ wxLua_wxStyledTextCtrl_VCHomeWrapExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_VCHomeWrapExtend }};
//     void VCHomeWrapExtend();
static int LUACALL wxLua_wxStyledTextCtrl_VCHomeWrapExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call VCHomeWrapExtend
    self->VCHomeWrapExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_VisibleFromDocLine[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_VisibleFromDocLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_VisibleFromDocLine[1] = {{ wxLua_wxStyledTextCtrl_VisibleFromDocLine, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_VisibleFromDocLine }};
//     int VisibleFromDocLine(int line);
static int LUACALL wxLua_wxStyledTextCtrl_VisibleFromDocLine(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call VisibleFromDocLine
    int returns = (self->VisibleFromDocLine(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordEndPosition[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordEndPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordEndPosition[1] = {{ wxLua_wxStyledTextCtrl_WordEndPosition, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordEndPosition }};
//     int WordEndPosition(int pos, bool onlyWordCharacters);
static int LUACALL wxLua_wxStyledTextCtrl_WordEndPosition(lua_State *L)
{
    // bool onlyWordCharacters
    bool onlyWordCharacters = wxlua_getbooleantype(L, 3);
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordEndPosition
    int returns = (self->WordEndPosition(pos, onlyWordCharacters));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordLeft[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordLeft[1] = {{ wxLua_wxStyledTextCtrl_WordLeft, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordLeft }};
//     void WordLeft();
static int LUACALL wxLua_wxStyledTextCtrl_WordLeft(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordLeft
    self->WordLeft();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordLeftEnd[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordLeftEnd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordLeftEnd[1] = {{ wxLua_wxStyledTextCtrl_WordLeftEnd, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordLeftEnd }};
//     void WordLeftEnd();
static int LUACALL wxLua_wxStyledTextCtrl_WordLeftEnd(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordLeftEnd
    self->WordLeftEnd();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordLeftEndExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordLeftEndExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordLeftEndExtend[1] = {{ wxLua_wxStyledTextCtrl_WordLeftEndExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordLeftEndExtend }};
//     void WordLeftEndExtend();
static int LUACALL wxLua_wxStyledTextCtrl_WordLeftEndExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordLeftEndExtend
    self->WordLeftEndExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordLeftExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordLeftExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordLeftExtend[1] = {{ wxLua_wxStyledTextCtrl_WordLeftExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordLeftExtend }};
//     void WordLeftExtend();
static int LUACALL wxLua_wxStyledTextCtrl_WordLeftExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordLeftExtend
    self->WordLeftExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordPartLeft[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordPartLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordPartLeft[1] = {{ wxLua_wxStyledTextCtrl_WordPartLeft, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordPartLeft }};
//     void WordPartLeft();
static int LUACALL wxLua_wxStyledTextCtrl_WordPartLeft(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordPartLeft
    self->WordPartLeft();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordPartLeftExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordPartLeftExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordPartLeftExtend[1] = {{ wxLua_wxStyledTextCtrl_WordPartLeftExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordPartLeftExtend }};
//     void WordPartLeftExtend();
static int LUACALL wxLua_wxStyledTextCtrl_WordPartLeftExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordPartLeftExtend
    self->WordPartLeftExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordPartRight[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordPartRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordPartRight[1] = {{ wxLua_wxStyledTextCtrl_WordPartRight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordPartRight }};
//     void WordPartRight();
static int LUACALL wxLua_wxStyledTextCtrl_WordPartRight(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordPartRight
    self->WordPartRight();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordPartRightExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordPartRightExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordPartRightExtend[1] = {{ wxLua_wxStyledTextCtrl_WordPartRightExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordPartRightExtend }};
//     void WordPartRightExtend();
static int LUACALL wxLua_wxStyledTextCtrl_WordPartRightExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordPartRightExtend
    self->WordPartRightExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordRight[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordRight[1] = {{ wxLua_wxStyledTextCtrl_WordRight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordRight }};
//     void WordRight();
static int LUACALL wxLua_wxStyledTextCtrl_WordRight(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordRight
    self->WordRight();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordRightEnd[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordRightEnd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordRightEnd[1] = {{ wxLua_wxStyledTextCtrl_WordRightEnd, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordRightEnd }};
//     void WordRightEnd();
static int LUACALL wxLua_wxStyledTextCtrl_WordRightEnd(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordRightEnd
    self->WordRightEnd();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordRightEndExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordRightEndExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordRightEndExtend[1] = {{ wxLua_wxStyledTextCtrl_WordRightEndExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordRightEndExtend }};
//     void WordRightEndExtend();
static int LUACALL wxLua_wxStyledTextCtrl_WordRightEndExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordRightEndExtend
    self->WordRightEndExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordRightExtend[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordRightExtend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordRightExtend[1] = {{ wxLua_wxStyledTextCtrl_WordRightExtend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordRightExtend }};
//     void WordRightExtend();
static int LUACALL wxLua_wxStyledTextCtrl_WordRightExtend(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordRightExtend
    self->WordRightExtend();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordStartPosition[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WordStartPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WordStartPosition[1] = {{ wxLua_wxStyledTextCtrl_WordStartPosition, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WordStartPosition }};
//     int WordStartPosition(int pos, bool onlyWordCharacters);
static int LUACALL wxLua_wxStyledTextCtrl_WordStartPosition(lua_State *L)
{
    // bool onlyWordCharacters
    bool onlyWordCharacters = wxlua_getbooleantype(L, 3);
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WordStartPosition
    int returns = (self->WordStartPosition(pos, onlyWordCharacters));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_WrapCount[] = { &wxluatype_wxStyledTextCtrl, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_WrapCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_WrapCount[1] = {{ wxLua_wxStyledTextCtrl_WrapCount, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextCtrl_WrapCount }};
//     int WrapCount(int line);
static int LUACALL wxLua_wxStyledTextCtrl_WrapCount(lua_State *L)
{
    // int line
    int line = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call WrapCount
    int returns = (self->WrapCount(line));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ZoomIn[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ZoomIn(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ZoomIn[1] = {{ wxLua_wxStyledTextCtrl_ZoomIn, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ZoomIn }};
//     void ZoomIn();
static int LUACALL wxLua_wxStyledTextCtrl_ZoomIn(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ZoomIn
    self->ZoomIn();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_ZoomOut[] = { &wxluatype_wxStyledTextCtrl, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_ZoomOut(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_ZoomOut[1] = {{ wxLua_wxStyledTextCtrl_ZoomOut, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextCtrl_ZoomOut }};
//     void ZoomOut();
static int LUACALL wxLua_wxStyledTextCtrl_ZoomOut(lua_State *L)
{
    // get this
    wxStyledTextCtrl * self = (wxStyledTextCtrl *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextCtrl);
    // call ZoomOut
    self->ZoomOut();

    return 0;
}


#if wxLUA_USE_wxPointSizeRect
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextCtrl_constructor[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextCtrl_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextCtrl_constructor[1] = {{ wxLua_wxStyledTextCtrl_constructor, WXLUAMETHOD_CONSTRUCTOR, 2, 6, s_wxluatypeArray_wxLua_wxStyledTextCtrl_constructor }};
//     wxStyledTextCtrl(wxWindow *parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxString &name = "wxStyledTextCtrl")
static int LUACALL wxLua_wxStyledTextCtrl_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxStyledTextCtrl"
    const wxString name = (argCount >= 6 ? wxlua_getwxStringtype(L, 6) : wxString(wxT("wxStyledTextCtrl")));
    // long style = 0
    long style = (argCount >= 5 ? (long)wxlua_getnumbertype(L, 5) : 0);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 4 ? (const wxSize *)wxluaT_getuserdatatype(L, 4, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 3 ? (const wxPoint *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 2);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxStyledTextCtrl* returns = new wxStyledTextCtrl(parent, id, *pos, *size, style, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxStyledTextCtrl);

    return 1;
}

#endif // wxLUA_USE_wxPointSizeRect



// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxStyledTextCtrl_methods[] = {
    { "AddRefDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AddRefDocument, 1, NULL },
    { "AddText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AddText, 1, NULL },
    { "AddTextRaw", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AddTextRaw, 1, NULL },
    { "Allocate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Allocate, 1, NULL },
    { "AppendText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AppendText, 1, NULL },
    { "AutoCompActive", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompActive, 1, NULL },
    { "AutoCompCancel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompCancel, 1, NULL },
    { "AutoCompComplete", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompComplete, 1, NULL },
    { "AutoCompGetAutoHide", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetAutoHide, 1, NULL },
    { "AutoCompGetCancelAtStart", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetCancelAtStart, 1, NULL },
    { "AutoCompGetChooseSingle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetChooseSingle, 1, NULL },
    { "AutoCompGetCurrent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetCurrent, 1, NULL },
    { "AutoCompGetDropRestOfWord", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetDropRestOfWord, 1, NULL },
    { "AutoCompGetIgnoreCase", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetIgnoreCase, 1, NULL },
    { "AutoCompGetMaxHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetMaxHeight, 1, NULL },
    { "AutoCompGetMaxWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetMaxWidth, 1, NULL },
    { "AutoCompGetSeparator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetSeparator, 1, NULL },
    { "AutoCompGetTypeSeparator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompGetTypeSeparator, 1, NULL },
    { "AutoCompPosStart", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompPosStart, 1, NULL },
    { "AutoCompSelect", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSelect, 1, NULL },
    { "AutoCompSetAutoHide", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetAutoHide, 1, NULL },
    { "AutoCompSetCancelAtStart", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetCancelAtStart, 1, NULL },
    { "AutoCompSetChooseSingle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetChooseSingle, 1, NULL },
    { "AutoCompSetDropRestOfWord", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetDropRestOfWord, 1, NULL },
    { "AutoCompSetFillUps", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetFillUps, 1, NULL },
    { "AutoCompSetIgnoreCase", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetIgnoreCase, 1, NULL },
    { "AutoCompSetMaxHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetMaxHeight, 1, NULL },
    { "AutoCompSetMaxWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetMaxWidth, 1, NULL },
    { "AutoCompSetSeparator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetSeparator, 1, NULL },
    { "AutoCompSetTypeSeparator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompSetTypeSeparator, 1, NULL },
    { "AutoCompShow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompShow, 1, NULL },
    { "AutoCompStops", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_AutoCompStops, 1, NULL },
    { "BackTab", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_BackTab, 1, NULL },
    { "BeginUndoAction", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_BeginUndoAction, 1, NULL },
    { "BraceBadLight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_BraceBadLight, 1, NULL },
    { "BraceHighlight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_BraceHighlight, 1, NULL },
    { "BraceMatch", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_BraceMatch, 1, NULL },
    { "CallTipActive", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipActive, 1, NULL },
    { "CallTipCancel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipCancel, 1, NULL },
    { "CallTipPosAtStart", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipPosAtStart, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "CallTipSetBackground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipSetBackground, 1, NULL },
    { "CallTipSetForeground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipSetForeground, 1, NULL },
    { "CallTipSetForegroundHighlight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipSetForegroundHighlight, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "CallTipSetHighlight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipSetHighlight, 1, NULL },
    { "CallTipShow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CallTipShow, 1, NULL },
    { "CanPaste", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CanPaste, 1, NULL },
    { "CanRedo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CanRedo, 1, NULL },
    { "CanUndo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CanUndo, 1, NULL },
    { "Cancel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Cancel, 1, NULL },
    { "CharLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CharLeft, 1, NULL },
    { "CharLeftExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CharLeftExtend, 1, NULL },
    { "CharLeftRectExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CharLeftRectExtend, 1, NULL },
    { "CharRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CharRight, 1, NULL },
    { "CharRightExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CharRightExtend, 1, NULL },
    { "CharRightRectExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CharRightRectExtend, 1, NULL },
    { "ChooseCaretX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ChooseCaretX, 1, NULL },
    { "Clear", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Clear, 1, NULL },
    { "ClearAll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ClearAll, 1, NULL },
    { "ClearDocumentStyle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ClearDocumentStyle, 1, NULL },
    { "ClearRegisteredImages", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ClearRegisteredImages, 1, NULL },
    { "CmdKeyAssign", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CmdKeyAssign, 1, NULL },
    { "CmdKeyClear", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CmdKeyClear, 1, NULL },
    { "CmdKeyClearAll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CmdKeyClearAll, 1, NULL },
    { "CmdKeyExecute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CmdKeyExecute, 1, NULL },
    { "Colourise", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Colourise, 1, NULL },
    { "ConvertEOLs", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ConvertEOLs, 1, NULL },
    { "Copy", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Copy, 1, NULL },
    { "CopyRange", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CopyRange, 1, NULL },
    { "CopyText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CopyText, 1, NULL },
    { "CreateDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_CreateDocument, 1, NULL },
    { "Cut", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Cut, 1, NULL },
    { "DelLineLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DelLineLeft, 1, NULL },
    { "DelLineRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DelLineRight, 1, NULL },
    { "DelWordLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DelWordLeft, 1, NULL },
    { "DelWordRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DelWordRight, 1, NULL },
    { "DeleteBack", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DeleteBack, 1, NULL },
    { "DeleteBackNotLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DeleteBackNotLine, 1, NULL },
    { "DocLineFromVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DocLineFromVisible, 1, NULL },
    { "DocumentEnd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DocumentEnd, 1, NULL },
    { "DocumentEndExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DocumentEndExtend, 1, NULL },
    { "DocumentStart", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DocumentStart, 1, NULL },
    { "DocumentStartExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_DocumentStartExtend, 1, NULL },
    { "EditToggleOvertype", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_EditToggleOvertype, 1, NULL },
    { "EmptyUndoBuffer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_EmptyUndoBuffer, 1, NULL },
    { "EndUndoAction", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_EndUndoAction, 1, NULL },
    { "EnsureCaretVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_EnsureCaretVisible, 1, NULL },
    { "EnsureVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_EnsureVisible, 1, NULL },
    { "EnsureVisibleEnforcePolicy", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_EnsureVisibleEnforcePolicy, 1, NULL },
    { "FindColumn", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_FindColumn, 1, NULL },
    { "FindText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_FindText, 1, NULL },
    { "FormFeed", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_FormFeed, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxDC)
    { "FormatRange", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_FormatRange, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxDC)

    { "GetAnchor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetAnchor, 1, NULL },
    { "GetBackSpaceUnIndents", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetBackSpaceUnIndents, 1, NULL },
    { "GetBufferedDraw", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetBufferedDraw, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "GetCaretForeground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretForeground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

#if (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)
    { "GetCaretLineBack", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretLineBack, 1, NULL },
#endif // (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)

#if (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))
    { "GetCaretLineBackground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretLineBackground, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))

    { "GetCaretLineVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretLineVisible, 1, NULL },
    { "GetCaretPeriod", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretPeriod, 1, NULL },
    { "GetCaretSticky", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretSticky, 1, NULL },
    { "GetCaretWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCaretWidth, 1, NULL },
    { "GetCharAt", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCharAt, 1, NULL },
    { "GetCodePage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCodePage, 1, NULL },
    { "GetColumn", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetColumn, 1, NULL },
    { "GetControlCharSymbol", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetControlCharSymbol, 1, NULL },
    { "GetCurLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCurLine, 1, NULL },
    { "GetCurrentLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCurrentLine, 1, NULL },
    { "GetCurrentPos", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetCurrentPos, 1, NULL },
    { "GetDocPointer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetDocPointer, 1, NULL },
    { "GetEOLMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetEOLMode, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "GetEdgeColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetEdgeColour, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "GetEdgeColumn", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetEdgeColumn, 1, NULL },
    { "GetEdgeMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetEdgeMode, 1, NULL },
    { "GetEndAtLastLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetEndAtLastLine, 1, NULL },
    { "GetEndStyled", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetEndStyled, 1, NULL },
    { "GetFirstVisibleLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetFirstVisibleLine, 1, NULL },
    { "GetFoldExpanded", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetFoldExpanded, 1, NULL },
    { "GetFoldLevel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetFoldLevel, 1, NULL },
    { "GetFoldParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetFoldParent, 1, NULL },
    { "GetHighlightGuide", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetHighlightGuide, 1, NULL },
    { "GetIndent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetIndent, 1, NULL },
    { "GetIndentationGuides", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetIndentationGuides, 1, NULL },
    { "GetLastChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLastChild, 1, NULL },
    { "GetLastKeydownProcessed", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLastKeydownProcessed, 1, NULL },
    { "GetLayoutCache", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLayoutCache, 1, NULL },
    { "GetLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLength, 1, NULL },
    { "GetLexer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLexer, 1, NULL },
    { "GetLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLine, 1, NULL },
    { "GetLineCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineCount, 1, NULL },
    { "GetLineEndPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineEndPosition, 1, NULL },
    { "GetLineIndentPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineIndentPosition, 1, NULL },
    { "GetLineIndentation", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineIndentation, 1, NULL },
    { "GetLineSelEndPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineSelEndPosition, 1, NULL },
    { "GetLineSelStartPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineSelStartPosition, 1, NULL },
    { "GetLineState", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineState, 1, NULL },
    { "GetLineVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetLineVisible, 1, NULL },
    { "GetMarginLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginLeft, 1, NULL },
    { "GetMarginMask", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginMask, 1, NULL },
    { "GetMarginRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginRight, 1, NULL },
    { "GetMarginSensitive", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginSensitive, 1, NULL },
    { "GetMarginType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginType, 1, NULL },
    { "GetMarginWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetMarginWidth, 1, NULL },
    { "GetMaxLineState", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetMaxLineState, 1, NULL },
    { "GetModEventMask", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetModEventMask, 1, NULL },
    { "GetModify", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetModify, 1, NULL },
    { "GetMouseDownCaptures", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetMouseDownCaptures, 1, NULL },
    { "GetMouseDwellTime", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetMouseDwellTime, 1, NULL },
    { "GetOvertype", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetOvertype, 1, NULL },
    { "GetPasteConvertEndings", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetPasteConvertEndings, 1, NULL },
    { "GetPrintColourMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetPrintColourMode, 1, NULL },
    { "GetPrintMagnification", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetPrintMagnification, 1, NULL },
    { "GetPrintWrapMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetPrintWrapMode, 1, NULL },
    { "GetProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetProperty, 1, NULL },
    { "GetPropertyExpanded", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetPropertyExpanded, 1, NULL },
    { "GetPropertyInt", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetPropertyInt, 1, NULL },
    { "GetReadOnly", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetReadOnly, 1, NULL },
    { "GetSTCCursor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetSTCCursor, 1, NULL },
    { "GetSTCFocus", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetSTCFocus, 1, NULL },
    { "GetScrollWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetScrollWidth, 1, NULL },
    { "GetSearchFlags", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetSearchFlags, 1, NULL },
    { "GetSelectedText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetSelectedText, 1, NULL },
    { "GetSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetSelection, 1, NULL },
    { "GetSelectionEnd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetSelectionEnd, 1, NULL },
    { "GetSelectionMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetSelectionMode, 1, NULL },
    { "GetSelectionStart", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetSelectionStart, 1, NULL },
    { "GetStatus", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetStatus, 1, NULL },
    { "GetStyleAt", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetStyleAt, 1, NULL },
    { "GetStyleBits", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetStyleBits, 1, NULL },
    { "GetStyleBitsNeeded", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetStyleBitsNeeded, 1, NULL },
    { "GetTabIndents", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetTabIndents, 1, NULL },
    { "GetTabWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetTabWidth, 1, NULL },
    { "GetTargetEnd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetTargetEnd, 1, NULL },
    { "GetTargetStart", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetTargetStart, 1, NULL },
    { "GetText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetText, 1, NULL },
    { "GetTextLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetTextLength, 1, NULL },
    { "GetTextRange", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetTextRange, 1, NULL },
    { "GetTwoPhaseDraw", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetTwoPhaseDraw, 1, NULL },
    { "GetUndoCollection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetUndoCollection, 1, NULL },
    { "GetUseAntiAliasing", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetUseAntiAliasing, 1, NULL },
    { "GetUseHorizontalScrollBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetUseHorizontalScrollBar, 1, NULL },
    { "GetUseTabs", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetUseTabs, 1, NULL },
    { "GetUseVerticalScrollBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetUseVerticalScrollBar, 1, NULL },
    { "GetViewEOL", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetViewEOL, 1, NULL },
    { "GetViewWhiteSpace", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetViewWhiteSpace, 1, NULL },
    { "GetWrapMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetWrapMode, 1, NULL },
    { "GetWrapStartIndent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetWrapStartIndent, 1, NULL },
    { "GetWrapVisualFlags", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetWrapVisualFlags, 1, NULL },
    { "GetWrapVisualFlagsLocation", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetWrapVisualFlagsLocation, 1, NULL },
    { "GetXOffset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetXOffset, 1, NULL },
    { "GetZoom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GetZoom, 1, NULL },
    { "GotoLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GotoLine, 1, NULL },
    { "GotoPos", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_GotoPos, 1, NULL },
    { "HideLines", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_HideLines, 1, NULL },
    { "HideSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_HideSelection, 1, NULL },
    { "Home", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Home, 1, NULL },
    { "HomeDisplay", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_HomeDisplay, 1, NULL },
    { "HomeDisplayExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_HomeDisplayExtend, 1, NULL },
    { "HomeExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_HomeExtend, 1, NULL },
    { "HomeRectExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_HomeRectExtend, 1, NULL },
    { "HomeWrap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_HomeWrap, 1, NULL },
    { "HomeWrapExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_HomeWrapExtend, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "IndicatorGetForeground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_IndicatorGetForeground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "IndicatorGetStyle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_IndicatorGetStyle, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "IndicatorSetForeground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_IndicatorSetForeground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "IndicatorSetStyle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_IndicatorSetStyle, 1, NULL },
    { "InsertText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_InsertText, 1, NULL },
    { "InsertTextRaw", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_InsertTextRaw, 1, NULL },
    { "LineCopy", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineCopy, 1, NULL },
    { "LineCut", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineCut, 1, NULL },
    { "LineDelete", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineDelete, 1, NULL },
    { "LineDown", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineDown, 1, NULL },
    { "LineDownExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineDownExtend, 1, NULL },
    { "LineDownRectExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineDownRectExtend, 1, NULL },
    { "LineDuplicate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineDuplicate, 1, NULL },
    { "LineEnd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineEnd, 1, NULL },
    { "LineEndDisplay", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndDisplay, 1, NULL },
    { "LineEndDisplayExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndDisplayExtend, 1, NULL },
    { "LineEndExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndExtend, 1, NULL },
    { "LineEndRectExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndRectExtend, 1, NULL },
    { "LineEndWrap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndWrap, 1, NULL },
    { "LineEndWrapExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineEndWrapExtend, 1, NULL },
    { "LineFromPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineFromPosition, 1, NULL },
    { "LineLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineLength, 1, NULL },
    { "LineScroll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineScroll, 1, NULL },
    { "LineScrollDown", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineScrollDown, 1, NULL },
    { "LineScrollUp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineScrollUp, 1, NULL },
    { "LineTranspose", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineTranspose, 1, NULL },
    { "LineUp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineUp, 1, NULL },
    { "LineUpExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineUpExtend, 1, NULL },
    { "LineUpRectExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LineUpRectExtend, 1, NULL },
    { "LinesJoin", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LinesJoin, 1, NULL },
    { "LinesOnScreen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LinesOnScreen, 1, NULL },
    { "LinesSplit", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LinesSplit, 1, NULL },
    { "LoadFile", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LoadFile, 1, NULL },
    { "LowerCase", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_LowerCase, 1, NULL },
    { "MarkerAdd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerAdd, 1, NULL },
    { "MarkerAddSet", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerAddSet, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "MarkerDefine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerDefine, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxBitmap
    { "MarkerDefineBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerDefineBitmap, 1, NULL },
#endif // wxLUA_USE_wxBitmap

    { "MarkerDelete", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerDelete, 1, NULL },
    { "MarkerDeleteAll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerDeleteAll, 1, NULL },
    { "MarkerDeleteHandle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerDeleteHandle, 1, NULL },
    { "MarkerGet", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerGet, 1, NULL },
    { "MarkerLineFromHandle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerLineFromHandle, 1, NULL },
    { "MarkerNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerNext, 1, NULL },
    { "MarkerPrevious", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerPrevious, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "MarkerSetBackground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerSetBackground, 1, NULL },
    { "MarkerSetForeground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MarkerSetForeground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "MoveCaretInsideView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_MoveCaretInsideView, 1, NULL },
    { "NewLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_NewLine, 1, NULL },
    { "PageDown", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PageDown, 1, NULL },
    { "PageDownExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PageDownExtend, 1, NULL },
    { "PageDownRectExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PageDownRectExtend, 1, NULL },
    { "PageUp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PageUp, 1, NULL },
    { "PageUpExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PageUpExtend, 1, NULL },
    { "PageUpRectExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PageUpRectExtend, 1, NULL },
    { "ParaDown", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ParaDown, 1, NULL },
    { "ParaDownExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ParaDownExtend, 1, NULL },
    { "ParaUp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ParaUp, 1, NULL },
    { "ParaUpExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ParaUpExtend, 1, NULL },
    { "Paste", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Paste, 1, NULL },

#if wxLUA_USE_wxPointSizeRect
    { "PointFromPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PointFromPosition, 1, NULL },
#endif // wxLUA_USE_wxPointSizeRect

    { "PositionAfter", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PositionAfter, 1, NULL },
    { "PositionBefore", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PositionBefore, 1, NULL },
    { "PositionFromLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PositionFromLine, 1, NULL },

#if wxLUA_USE_wxPointSizeRect
    { "PositionFromPoint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PositionFromPoint, 1, NULL },
#endif // wxLUA_USE_wxPointSizeRect

    { "PositionFromPointClose", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_PositionFromPointClose, 1, NULL },
    { "Redo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Redo, 1, NULL },

#if wxLUA_USE_wxBitmap
    { "RegisterImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_RegisterImage, 1, NULL },
#endif // wxLUA_USE_wxBitmap

    { "ReleaseDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ReleaseDocument, 1, NULL },
    { "ReplaceSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ReplaceSelection, 1, NULL },
    { "ReplaceTarget", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ReplaceTarget, 1, NULL },
    { "ReplaceTargetRE", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ReplaceTargetRE, 1, NULL },
    { "SaveFile", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SaveFile, 1, NULL },
    { "ScrollToColumn", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ScrollToColumn, 1, NULL },
    { "ScrollToLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ScrollToLine, 1, NULL },
    { "SearchAnchor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SearchAnchor, 1, NULL },
    { "SearchInTarget", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SearchInTarget, 1, NULL },
    { "SearchNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SearchNext, 1, NULL },
    { "SearchPrev", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SearchPrev, 1, NULL },
    { "SelectAll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SelectAll, 1, NULL },
    { "SelectionDuplicate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SelectionDuplicate, 1, NULL },
    { "SelectionIsRectangle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SelectionIsRectangle, 1, NULL },
    { "SendMsg", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SendMsg, 1, NULL },
    { "SetAnchor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetAnchor, 1, NULL },
    { "SetBackSpaceUnIndents", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetBackSpaceUnIndents, 1, NULL },
    { "SetBufferedDraw", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetBufferedDraw, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "SetCaretForeground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretForeground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

#if (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)
    { "SetCaretLineBack", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretLineBack, 1, NULL },
#endif // (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)

#if (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))
    { "SetCaretLineBackground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretLineBackground, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))

    { "SetCaretLineVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretLineVisible, 1, NULL },
    { "SetCaretPeriod", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretPeriod, 1, NULL },
    { "SetCaretSticky", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretSticky, 1, NULL },
    { "SetCaretWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetCaretWidth, 1, NULL },
    { "SetCharsDefault", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetCharsDefault, 1, NULL },
    { "SetCodePage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetCodePage, 1, NULL },
    { "SetControlCharSymbol", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetControlCharSymbol, 1, NULL },
    { "SetCurrentPos", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetCurrentPos, 1, NULL },
    { "SetDocPointer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetDocPointer, 1, NULL },
    { "SetEOLMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetEOLMode, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "SetEdgeColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetEdgeColour, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "SetEdgeColumn", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetEdgeColumn, 1, NULL },
    { "SetEdgeMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetEdgeMode, 1, NULL },
    { "SetEndAtLastLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetEndAtLastLine, 1, NULL },
    { "SetFoldExpanded", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetFoldExpanded, 1, NULL },
    { "SetFoldFlags", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetFoldFlags, 1, NULL },
    { "SetFoldLevel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetFoldLevel, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "SetFoldMarginColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetFoldMarginColour, 1, NULL },
    { "SetFoldMarginHiColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetFoldMarginHiColour, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR
    { "SetHScrollBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetHScrollBar, 1, NULL },
#endif // wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR

    { "SetHighlightGuide", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetHighlightGuide, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "SetHotspotActiveBackground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetHotspotActiveBackground, 1, NULL },
    { "SetHotspotActiveForeground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetHotspotActiveForeground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "SetHotspotActiveUnderline", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetHotspotActiveUnderline, 1, NULL },
    { "SetHotspotSingleLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetHotspotSingleLine, 1, NULL },
    { "SetIndent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetIndent, 1, NULL },
    { "SetIndentationGuides", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetIndentationGuides, 1, NULL },
    { "SetKeyWords", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetKeyWords, 1, NULL },
    { "SetLastKeydownProcessed", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetLastKeydownProcessed, 1, NULL },
    { "SetLayoutCache", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetLayoutCache, 1, NULL },
    { "SetLexer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetLexer, 1, NULL },
    { "SetLexerLanguage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetLexerLanguage, 1, NULL },
    { "SetLineIndentation", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetLineIndentation, 1, NULL },
    { "SetLineState", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetLineState, 1, NULL },
    { "SetMarginLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginLeft, 1, NULL },
    { "SetMarginMask", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginMask, 1, NULL },
    { "SetMarginRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginRight, 1, NULL },
    { "SetMarginSensitive", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginSensitive, 1, NULL },
    { "SetMarginType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginType, 1, NULL },
    { "SetMarginWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetMarginWidth, 1, NULL },
    { "SetMargins", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetMargins, 1, NULL },
    { "SetModEventMask", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetModEventMask, 1, NULL },
    { "SetMouseDownCaptures", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetMouseDownCaptures, 1, NULL },
    { "SetMouseDwellTime", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetMouseDwellTime, 1, NULL },
    { "SetOvertype", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetOvertype, 1, NULL },
    { "SetPasteConvertEndings", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetPasteConvertEndings, 1, NULL },
    { "SetPrintColourMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetPrintColourMode, 1, NULL },
    { "SetPrintMagnification", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetPrintMagnification, 1, NULL },
    { "SetPrintWrapMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetPrintWrapMode, 1, NULL },
    { "SetProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetProperty, 1, NULL },
    { "SetReadOnly", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetReadOnly, 1, NULL },
    { "SetSTCCursor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetSTCCursor, 1, NULL },
    { "SetSTCFocus", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetSTCFocus, 1, NULL },
    { "SetSavePoint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetSavePoint, 1, NULL },
    { "SetScrollWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetScrollWidth, 1, NULL },
    { "SetSearchFlags", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetSearchFlags, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "SetSelBackground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelBackground, 1, NULL },
    { "SetSelForeground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelForeground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "SetSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelection, 1, NULL },
    { "SetSelectionEnd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelectionEnd, 1, NULL },
    { "SetSelectionMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelectionMode, 1, NULL },
    { "SetSelectionStart", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetSelectionStart, 1, NULL },
    { "SetStatus", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetStatus, 1, NULL },
    { "SetStyleBits", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetStyleBits, 1, NULL },
    { "SetStyleBytes", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetStyleBytes, 1, NULL },
    { "SetStyling", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetStyling, 1, NULL },
    { "SetTabIndents", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetTabIndents, 1, NULL },
    { "SetTabWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetTabWidth, 1, NULL },
    { "SetTargetEnd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetTargetEnd, 1, NULL },
    { "SetTargetStart", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetTargetStart, 1, NULL },
    { "SetText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetText, 1, NULL },
    { "SetTwoPhaseDraw", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetTwoPhaseDraw, 1, NULL },
    { "SetUndoCollection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetUndoCollection, 1, NULL },
    { "SetUseAntiAliasing", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetUseAntiAliasing, 1, NULL },
    { "SetUseHorizontalScrollBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetUseHorizontalScrollBar, 1, NULL },
    { "SetUseTabs", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetUseTabs, 1, NULL },
    { "SetUseVerticalScrollBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetUseVerticalScrollBar, 1, NULL },

#if wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR
    { "SetVScrollBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetVScrollBar, 1, NULL },
#endif // wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR

    { "SetViewEOL", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetViewEOL, 1, NULL },
    { "SetViewWhiteSpace", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetViewWhiteSpace, 1, NULL },
    { "SetVisiblePolicy", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetVisiblePolicy, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "SetWhitespaceBackground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetWhitespaceBackground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "SetWhitespaceChars", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetWhitespaceChars, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "SetWhitespaceForeground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetWhitespaceForeground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "SetWordChars", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetWordChars, 1, NULL },
    { "SetWrapMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetWrapMode, 1, NULL },
    { "SetWrapStartIndent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetWrapStartIndent, 1, NULL },
    { "SetWrapVisualFlags", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetWrapVisualFlags, 1, NULL },
    { "SetWrapVisualFlagsLocation", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetWrapVisualFlagsLocation, 1, NULL },
    { "SetXCaretPolicy", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetXCaretPolicy, 1, NULL },
    { "SetXOffset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetXOffset, 1, NULL },
    { "SetYCaretPolicy", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetYCaretPolicy, 1, NULL },
    { "SetZoom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_SetZoom, 1, NULL },
    { "ShowLines", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ShowLines, 1, NULL },
    { "StartRecord", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StartRecord, 1, NULL },
    { "StartStyling", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StartStyling, 1, NULL },
    { "StopRecord", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StopRecord, 1, NULL },
    { "StutteredPageDown", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StutteredPageDown, 1, NULL },
    { "StutteredPageDownExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StutteredPageDownExtend, 1, NULL },
    { "StutteredPageUp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StutteredPageUp, 1, NULL },
    { "StutteredPageUpExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StutteredPageUpExtend, 1, NULL },
    { "StyleClearAll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleClearAll, 1, NULL },
    { "StyleResetDefault", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleResetDefault, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "StyleSetBackground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetBackground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "StyleSetBold", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetBold, 1, NULL },
    { "StyleSetCase", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetCase, 1, NULL },
    { "StyleSetChangeable", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetChangeable, 1, NULL },
    { "StyleSetCharacterSet", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetCharacterSet, 1, NULL },
    { "StyleSetEOLFilled", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetEOLFilled, 1, NULL },
    { "StyleSetFaceName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetFaceName, 1, NULL },

#if wxLUA_USE_wxFont
    { "StyleSetFont", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetFont, 1, NULL },
#endif // wxLUA_USE_wxFont

#if wxUSE_INTL
    { "StyleSetFontAttr", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetFontAttr, 1, NULL },
    { "StyleSetFontEncoding", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetFontEncoding, 1, NULL },
#endif // wxUSE_INTL

#if wxLUA_USE_wxColourPenBrush
    { "StyleSetForeground", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetForeground, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "StyleSetHotSpot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetHotSpot, 1, NULL },
    { "StyleSetItalic", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetItalic, 1, NULL },
    { "StyleSetSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetSize, 1, NULL },
    { "StyleSetSpec", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetSpec, 1, NULL },
    { "StyleSetUnderline", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetUnderline, 1, NULL },
    { "StyleSetVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_StyleSetVisible, 1, NULL },
    { "Tab", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Tab, 1, NULL },
    { "TargetFromSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_TargetFromSelection, 1, NULL },
    { "TextHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_TextHeight, 1, NULL },
    { "TextWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_TextWidth, 1, NULL },
    { "ToggleCaretSticky", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ToggleCaretSticky, 1, NULL },
    { "ToggleFold", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ToggleFold, 1, NULL },
    { "Undo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_Undo, 1, NULL },
    { "UpperCase", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_UpperCase, 1, NULL },
    { "UsePopUp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_UsePopUp, 1, NULL },
    { "UserListShow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_UserListShow, 1, NULL },
    { "VCHome", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_VCHome, 1, NULL },
    { "VCHomeExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_VCHomeExtend, 1, NULL },
    { "VCHomeRectExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_VCHomeRectExtend, 1, NULL },
    { "VCHomeWrap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_VCHomeWrap, 1, NULL },
    { "VCHomeWrapExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_VCHomeWrapExtend, 1, NULL },
    { "VisibleFromDocLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_VisibleFromDocLine, 1, NULL },
    { "WordEndPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordEndPosition, 1, NULL },
    { "WordLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordLeft, 1, NULL },
    { "WordLeftEnd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordLeftEnd, 1, NULL },
    { "WordLeftEndExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordLeftEndExtend, 1, NULL },
    { "WordLeftExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordLeftExtend, 1, NULL },
    { "WordPartLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordPartLeft, 1, NULL },
    { "WordPartLeftExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordPartLeftExtend, 1, NULL },
    { "WordPartRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordPartRight, 1, NULL },
    { "WordPartRightExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordPartRightExtend, 1, NULL },
    { "WordRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordRight, 1, NULL },
    { "WordRightEnd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordRightEnd, 1, NULL },
    { "WordRightEndExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordRightEndExtend, 1, NULL },
    { "WordRightExtend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordRightExtend, 1, NULL },
    { "WordStartPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WordStartPosition, 1, NULL },
    { "WrapCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_WrapCount, 1, NULL },
    { "ZoomIn", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ZoomIn, 1, NULL },
    { "ZoomOut", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextCtrl_ZoomOut, 1, NULL },

#if wxLUA_USE_wxPointSizeRect
    { "wxStyledTextCtrl", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxStyledTextCtrl_constructor, 1, NULL },
#endif // wxLUA_USE_wxPointSizeRect

    { 0, 0, 0, 0 },
};

int wxStyledTextCtrl_methodCount = sizeof(wxStyledTextCtrl_methods)/sizeof(wxLuaBindMethod) - 1;


// ---------------------------------------------------------------------------
// Bind class wxStyledTextEvent
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxStyledTextEvent'
int wxluatype_wxStyledTextEvent = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetAlt[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetAlt(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetAlt[1] = {{ wxLua_wxStyledTextEvent_GetAlt, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetAlt }};
//     bool GetAlt() const
static int LUACALL wxLua_wxStyledTextEvent_GetAlt(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetAlt
    bool returns = (self->GetAlt());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetControl[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetControl[1] = {{ wxLua_wxStyledTextEvent_GetControl, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetControl }};
//     bool GetControl() const
static int LUACALL wxLua_wxStyledTextEvent_GetControl(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetControl
    bool returns = (self->GetControl());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetDragAllowMove[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetDragAllowMove(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetDragAllowMove[1] = {{ wxLua_wxStyledTextEvent_GetDragAllowMove, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetDragAllowMove }};
//     bool GetDragAllowMove()
static int LUACALL wxLua_wxStyledTextEvent_GetDragAllowMove(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetDragAllowMove
    bool returns = (self->GetDragAllowMove());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetDragResult[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetDragResult(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetDragResult[1] = {{ wxLua_wxStyledTextEvent_GetDragResult, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetDragResult }};
//     wxDragResult GetDragResult()
static int LUACALL wxLua_wxStyledTextEvent_GetDragResult(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetDragResult
    wxDragResult returns = (self->GetDragResult());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetDragText[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetDragText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetDragText[1] = {{ wxLua_wxStyledTextEvent_GetDragText, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetDragText }};
//     wxString GetDragText()
static int LUACALL wxLua_wxStyledTextEvent_GetDragText(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetDragText
    wxString returns = (self->GetDragText());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetFoldLevelNow[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetFoldLevelNow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetFoldLevelNow[1] = {{ wxLua_wxStyledTextEvent_GetFoldLevelNow, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetFoldLevelNow }};
//     int  GetFoldLevelNow() const
static int LUACALL wxLua_wxStyledTextEvent_GetFoldLevelNow(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetFoldLevelNow
    int returns = (self->GetFoldLevelNow());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetFoldLevelPrev[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetFoldLevelPrev(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetFoldLevelPrev[1] = {{ wxLua_wxStyledTextEvent_GetFoldLevelPrev, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetFoldLevelPrev }};
//     int  GetFoldLevelPrev() const
static int LUACALL wxLua_wxStyledTextEvent_GetFoldLevelPrev(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetFoldLevelPrev
    int returns = (self->GetFoldLevelPrev());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetKey[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetKey(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetKey[1] = {{ wxLua_wxStyledTextEvent_GetKey, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetKey }};
//     int  GetKey()  const
static int LUACALL wxLua_wxStyledTextEvent_GetKey(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetKey
    int returns = (self->GetKey());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetLParam[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetLParam(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetLParam[1] = {{ wxLua_wxStyledTextEvent_GetLParam, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetLParam }};
//     int  GetLParam() const
static int LUACALL wxLua_wxStyledTextEvent_GetLParam(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetLParam
    int returns = (self->GetLParam());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetLength[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetLength[1] = {{ wxLua_wxStyledTextEvent_GetLength, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetLength }};
//     int  GetLength() const
static int LUACALL wxLua_wxStyledTextEvent_GetLength(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetLength
    int returns = (self->GetLength());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetLine[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetLine[1] = {{ wxLua_wxStyledTextEvent_GetLine, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetLine }};
//     int  GetLine() const
static int LUACALL wxLua_wxStyledTextEvent_GetLine(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetLine
    int returns = (self->GetLine());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetLinesAdded[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetLinesAdded(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetLinesAdded[1] = {{ wxLua_wxStyledTextEvent_GetLinesAdded, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetLinesAdded }};
//     int  GetLinesAdded() const
static int LUACALL wxLua_wxStyledTextEvent_GetLinesAdded(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetLinesAdded
    int returns = (self->GetLinesAdded());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetListType[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetListType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetListType[1] = {{ wxLua_wxStyledTextEvent_GetListType, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetListType }};
//     int  GetListType() const
static int LUACALL wxLua_wxStyledTextEvent_GetListType(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetListType
    int returns = (self->GetListType());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetMargin[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetMargin(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetMargin[1] = {{ wxLua_wxStyledTextEvent_GetMargin, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetMargin }};
//     int  GetMargin() const
static int LUACALL wxLua_wxStyledTextEvent_GetMargin(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetMargin
    int returns = (self->GetMargin());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetMessage[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetMessage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetMessage[1] = {{ wxLua_wxStyledTextEvent_GetMessage, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetMessage }};
//     int  GetMessage() const
static int LUACALL wxLua_wxStyledTextEvent_GetMessage(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetMessage
    int returns = (self->GetMessage());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetModificationType[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetModificationType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetModificationType[1] = {{ wxLua_wxStyledTextEvent_GetModificationType, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetModificationType }};
//     int  GetModificationType() const
static int LUACALL wxLua_wxStyledTextEvent_GetModificationType(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetModificationType
    int returns = (self->GetModificationType());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetModifiers[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetModifiers(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetModifiers[1] = {{ wxLua_wxStyledTextEvent_GetModifiers, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetModifiers }};
//     int  GetModifiers() const
static int LUACALL wxLua_wxStyledTextEvent_GetModifiers(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetModifiers
    int returns = (self->GetModifiers());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetPosition[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetPosition[1] = {{ wxLua_wxStyledTextEvent_GetPosition, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetPosition }};
//     int  GetPosition() const
static int LUACALL wxLua_wxStyledTextEvent_GetPosition(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetPosition
    int returns = (self->GetPosition());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetShift[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetShift(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetShift[1] = {{ wxLua_wxStyledTextEvent_GetShift, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetShift }};
//     bool GetShift() const
static int LUACALL wxLua_wxStyledTextEvent_GetShift(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetShift
    bool returns = (self->GetShift());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetText[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetText[1] = {{ wxLua_wxStyledTextEvent_GetText, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetText }};
//     wxString GetText() const
static int LUACALL wxLua_wxStyledTextEvent_GetText(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetText
    wxString returns = (self->GetText());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetWParam[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetWParam(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetWParam[1] = {{ wxLua_wxStyledTextEvent_GetWParam, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetWParam }};
//     int  GetWParam() const
static int LUACALL wxLua_wxStyledTextEvent_GetWParam(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetWParam
    int returns = (self->GetWParam());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetX[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetX[1] = {{ wxLua_wxStyledTextEvent_GetX, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetX }};
//     int  GetX() const
static int LUACALL wxLua_wxStyledTextEvent_GetX(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetX
    int returns = (self->GetX());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_GetY[] = { &wxluatype_wxStyledTextEvent, NULL };
static int LUACALL wxLua_wxStyledTextEvent_GetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_GetY[1] = {{ wxLua_wxStyledTextEvent_GetY, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_GetY }};
//     int  GetY() const
static int LUACALL wxLua_wxStyledTextEvent_GetY(lua_State *L)
{
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call GetY
    int returns = (self->GetY());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetDragAllowMove[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetDragAllowMove(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetDragAllowMove[1] = {{ wxLua_wxStyledTextEvent_SetDragAllowMove, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetDragAllowMove }};
//     void SetDragAllowMove(bool val)
static int LUACALL wxLua_wxStyledTextEvent_SetDragAllowMove(lua_State *L)
{
    // bool val
    bool val = wxlua_getbooleantype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetDragAllowMove
    self->SetDragAllowMove(val);

    return 0;
}


#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetDragResult[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetDragResult(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetDragResult[1] = {{ wxLua_wxStyledTextEvent_SetDragResult, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetDragResult }};
//     void SetDragResult(wxDragResult val)
static int LUACALL wxLua_wxStyledTextEvent_SetDragResult(lua_State *L)
{
    // wxDragResult val
    wxDragResult val = (wxDragResult)wxlua_getenumtype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetDragResult
    self->SetDragResult(val);

    return 0;
}

#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetDragText[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetDragText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetDragText[1] = {{ wxLua_wxStyledTextEvent_SetDragText, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetDragText }};
//     void SetDragText(const wxString& val)
static int LUACALL wxLua_wxStyledTextEvent_SetDragText(lua_State *L)
{
    // const wxString val
    const wxString val = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetDragText
    self->SetDragText(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetFoldLevelNow[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetFoldLevelNow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetFoldLevelNow[1] = {{ wxLua_wxStyledTextEvent_SetFoldLevelNow, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetFoldLevelNow }};
//     void SetFoldLevelNow(int val)
static int LUACALL wxLua_wxStyledTextEvent_SetFoldLevelNow(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetFoldLevelNow
    self->SetFoldLevelNow(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetFoldLevelPrev[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetFoldLevelPrev(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetFoldLevelPrev[1] = {{ wxLua_wxStyledTextEvent_SetFoldLevelPrev, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetFoldLevelPrev }};
//     void SetFoldLevelPrev(int val)
static int LUACALL wxLua_wxStyledTextEvent_SetFoldLevelPrev(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetFoldLevelPrev
    self->SetFoldLevelPrev(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetKey[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetKey(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetKey[1] = {{ wxLua_wxStyledTextEvent_SetKey, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetKey }};
//     void SetKey(int k)
static int LUACALL wxLua_wxStyledTextEvent_SetKey(lua_State *L)
{
    // int k
    int k = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetKey
    self->SetKey(k);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetLParam[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetLParam(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetLParam[1] = {{ wxLua_wxStyledTextEvent_SetLParam, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetLParam }};
//     void SetLParam(int val)
static int LUACALL wxLua_wxStyledTextEvent_SetLParam(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetLParam
    self->SetLParam(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetLength[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetLength[1] = {{ wxLua_wxStyledTextEvent_SetLength, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetLength }};
//     void SetLength(int len)
static int LUACALL wxLua_wxStyledTextEvent_SetLength(lua_State *L)
{
    // int len
    int len = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetLength
    self->SetLength(len);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetLine[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetLine[1] = {{ wxLua_wxStyledTextEvent_SetLine, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetLine }};
//     void SetLine(int val)
static int LUACALL wxLua_wxStyledTextEvent_SetLine(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetLine
    self->SetLine(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetLinesAdded[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetLinesAdded(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetLinesAdded[1] = {{ wxLua_wxStyledTextEvent_SetLinesAdded, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetLinesAdded }};
//     void SetLinesAdded(int num)
static int LUACALL wxLua_wxStyledTextEvent_SetLinesAdded(lua_State *L)
{
    // int num
    int num = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetLinesAdded
    self->SetLinesAdded(num);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetListType[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetListType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetListType[1] = {{ wxLua_wxStyledTextEvent_SetListType, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetListType }};
//     void SetListType(int val)
static int LUACALL wxLua_wxStyledTextEvent_SetListType(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetListType
    self->SetListType(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetMargin[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetMargin(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetMargin[1] = {{ wxLua_wxStyledTextEvent_SetMargin, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetMargin }};
//     void SetMargin(int val)
static int LUACALL wxLua_wxStyledTextEvent_SetMargin(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetMargin
    self->SetMargin(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetMessage[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetMessage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetMessage[1] = {{ wxLua_wxStyledTextEvent_SetMessage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetMessage }};
//     void SetMessage(int val)
static int LUACALL wxLua_wxStyledTextEvent_SetMessage(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetMessage
    self->SetMessage(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetModificationType[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetModificationType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetModificationType[1] = {{ wxLua_wxStyledTextEvent_SetModificationType, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetModificationType }};
//     void SetModificationType(int t)
static int LUACALL wxLua_wxStyledTextEvent_SetModificationType(lua_State *L)
{
    // int t
    int t = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetModificationType
    self->SetModificationType(t);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetModifiers[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetModifiers(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetModifiers[1] = {{ wxLua_wxStyledTextEvent_SetModifiers, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetModifiers }};
//     void SetModifiers(int m)
static int LUACALL wxLua_wxStyledTextEvent_SetModifiers(lua_State *L)
{
    // int m
    int m = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetModifiers
    self->SetModifiers(m);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetPosition[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetPosition[1] = {{ wxLua_wxStyledTextEvent_SetPosition, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetPosition }};
//     void SetPosition(int pos)
static int LUACALL wxLua_wxStyledTextEvent_SetPosition(lua_State *L)
{
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetPosition
    self->SetPosition(pos);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetText[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetText[1] = {{ wxLua_wxStyledTextEvent_SetText, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetText }};
//     void SetText(const wxString& t)
static int LUACALL wxLua_wxStyledTextEvent_SetText(lua_State *L)
{
    // const wxString t
    const wxString t = wxlua_getwxStringtype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetText
    self->SetText(t);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetWParam[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetWParam(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetWParam[1] = {{ wxLua_wxStyledTextEvent_SetWParam, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetWParam }};
//     void SetWParam(int val)
static int LUACALL wxLua_wxStyledTextEvent_SetWParam(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetWParam
    self->SetWParam(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetX[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetX[1] = {{ wxLua_wxStyledTextEvent_SetX, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetX }};
//     void SetX(int val)
static int LUACALL wxLua_wxStyledTextEvent_SetX(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetX
    self->SetX(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_SetY[] = { &wxluatype_wxStyledTextEvent, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_SetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_SetY[1] = {{ wxLua_wxStyledTextEvent_SetY, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_SetY }};
//     void SetY(int val)
static int LUACALL wxLua_wxStyledTextEvent_SetY(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStyledTextEvent * self = (wxStyledTextEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStyledTextEvent);
    // call SetY
    self->SetY(val);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_delete[] = { &wxluatype_wxStyledTextEvent, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxStyledTextEvent_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxStyledTextEvent_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStyledTextEvent_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStyledTextEvent_constructor[1] = {{ wxLua_wxStyledTextEvent_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxStyledTextEvent_constructor }};
//     wxStyledTextEvent(wxEventType commandType = 0, int id = 0)
static int LUACALL wxLua_wxStyledTextEvent_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int id = 0
    int id = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // wxEventType commandType = 0
    wxEventType commandType = (argCount >= 1 ? (wxEventType)wxlua_getnumbertype(L, 1) : 0);
    // call constructor
    wxStyledTextEvent* returns = new wxStyledTextEvent(commandType, id);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxStyledTextEvent);

    return 1;
}



// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxStyledTextEvent_methods[] = {
    { "GetAlt", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetAlt, 1, NULL },
    { "GetControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetControl, 1, NULL },
    { "GetDragAllowMove", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetDragAllowMove, 1, NULL },

#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
    { "GetDragResult", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetDragResult, 1, NULL },
#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP

    { "GetDragText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetDragText, 1, NULL },
    { "GetFoldLevelNow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetFoldLevelNow, 1, NULL },
    { "GetFoldLevelPrev", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetFoldLevelPrev, 1, NULL },
    { "GetKey", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetKey, 1, NULL },
    { "GetLParam", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetLParam, 1, NULL },
    { "GetLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetLength, 1, NULL },
    { "GetLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetLine, 1, NULL },
    { "GetLinesAdded", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetLinesAdded, 1, NULL },
    { "GetListType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetListType, 1, NULL },
    { "GetMargin", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetMargin, 1, NULL },
    { "GetMessage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetMessage, 1, NULL },
    { "GetModificationType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetModificationType, 1, NULL },
    { "GetModifiers", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetModifiers, 1, NULL },
    { "GetPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetPosition, 1, NULL },
    { "GetShift", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetShift, 1, NULL },
    { "GetText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetText, 1, NULL },
    { "GetWParam", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetWParam, 1, NULL },
    { "GetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetX, 1, NULL },
    { "GetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_GetY, 1, NULL },
    { "SetDragAllowMove", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetDragAllowMove, 1, NULL },

#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
    { "SetDragResult", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetDragResult, 1, NULL },
#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP

    { "SetDragText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetDragText, 1, NULL },
    { "SetFoldLevelNow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetFoldLevelNow, 1, NULL },
    { "SetFoldLevelPrev", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetFoldLevelPrev, 1, NULL },
    { "SetKey", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetKey, 1, NULL },
    { "SetLParam", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetLParam, 1, NULL },
    { "SetLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetLength, 1, NULL },
    { "SetLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetLine, 1, NULL },
    { "SetLinesAdded", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetLinesAdded, 1, NULL },
    { "SetListType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetListType, 1, NULL },
    { "SetMargin", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetMargin, 1, NULL },
    { "SetMessage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetMessage, 1, NULL },
    { "SetModificationType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetModificationType, 1, NULL },
    { "SetModifiers", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetModifiers, 1, NULL },
    { "SetPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetPosition, 1, NULL },
    { "SetText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetText, 1, NULL },
    { "SetWParam", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetWParam, 1, NULL },
    { "SetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetX, 1, NULL },
    { "SetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStyledTextEvent_SetY, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxStyledTextEvent_delete, 1, NULL },
    { "wxStyledTextEvent", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxStyledTextEvent_constructor, 1, NULL },
    { 0, 0, 0, 0 },
};

int wxStyledTextEvent_methodCount = sizeof(wxStyledTextEvent_methods)/sizeof(wxLuaBindMethod) - 1;




// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxstc_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


// ---------------------------------------------------------------------------
// wxLuaGetEventList_wxstc() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_wxstc(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {
        { "wxEVT_STC_AUTOCOMP_SELECTION", &wxEVT_STC_AUTOCOMP_SELECTION, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_CALLTIP_CLICK", &wxEVT_STC_CALLTIP_CLICK, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_CHANGE", &wxEVT_STC_CHANGE, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_CHARADDED", &wxEVT_STC_CHARADDED, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_DOUBLECLICK", &wxEVT_STC_DOUBLECLICK, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_DO_DROP", &wxEVT_STC_DO_DROP, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_DRAG_OVER", &wxEVT_STC_DRAG_OVER, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_DWELLEND", &wxEVT_STC_DWELLEND, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_DWELLSTART", &wxEVT_STC_DWELLSTART, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_HOTSPOT_CLICK", &wxEVT_STC_HOTSPOT_CLICK, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_HOTSPOT_DCLICK", &wxEVT_STC_HOTSPOT_DCLICK, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_KEY", &wxEVT_STC_KEY, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_MACRORECORD", &wxEVT_STC_MACRORECORD, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_MARGINCLICK", &wxEVT_STC_MARGINCLICK, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_MODIFIED", &wxEVT_STC_MODIFIED, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_NEEDSHOWN", &wxEVT_STC_NEEDSHOWN, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_PAINTED", &wxEVT_STC_PAINTED, &wxluatype_wxStyledTextEvent },

#if !wxCHECK_VERSION(2,6,0)
        { "wxEVT_STC_POSCHANGED", &wxEVT_STC_POSCHANGED, &wxluatype_wxStyledTextEvent },
#endif // !wxCHECK_VERSION(2,6,0)

        { "wxEVT_STC_ROMODIFYATTEMPT", &wxEVT_STC_ROMODIFYATTEMPT, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_SAVEPOINTLEFT", &wxEVT_STC_SAVEPOINTLEFT, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_SAVEPOINTREACHED", &wxEVT_STC_SAVEPOINTREACHED, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_START_DRAG", &wxEVT_STC_START_DRAG, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_STYLENEEDED", &wxEVT_STC_STYLENEEDED, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_UPDATEUI", &wxEVT_STC_UPDATEUI, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_URIDROPPED", &wxEVT_STC_URIDROPPED, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_USERLISTSELECTION", &wxEVT_STC_USERLISTSELECTION, &wxluatype_wxStyledTextEvent },
        { "wxEVT_STC_ZOOM", &wxEVT_STC_ZOOM, &wxluatype_wxStyledTextEvent },

        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_wxstc() is called to register %define and %enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_wxstc(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {
        { "wxSTC_ADA_CHARACTER", wxSTC_ADA_CHARACTER },
        { "wxSTC_ADA_CHARACTEREOL", wxSTC_ADA_CHARACTEREOL },
        { "wxSTC_ADA_COMMENTLINE", wxSTC_ADA_COMMENTLINE },
        { "wxSTC_ADA_DEFAULT", wxSTC_ADA_DEFAULT },
        { "wxSTC_ADA_DELIMITER", wxSTC_ADA_DELIMITER },
        { "wxSTC_ADA_IDENTIFIER", wxSTC_ADA_IDENTIFIER },
        { "wxSTC_ADA_ILLEGAL", wxSTC_ADA_ILLEGAL },
        { "wxSTC_ADA_LABEL", wxSTC_ADA_LABEL },
        { "wxSTC_ADA_NUMBER", wxSTC_ADA_NUMBER },
        { "wxSTC_ADA_STRING", wxSTC_ADA_STRING },
        { "wxSTC_ADA_STRINGEOL", wxSTC_ADA_STRINGEOL },
        { "wxSTC_ADA_WORD", wxSTC_ADA_WORD },
        { "wxSTC_APDL_ARGUMENT", wxSTC_APDL_ARGUMENT },
        { "wxSTC_APDL_COMMAND", wxSTC_APDL_COMMAND },
        { "wxSTC_APDL_COMMENT", wxSTC_APDL_COMMENT },
        { "wxSTC_APDL_COMMENTBLOCK", wxSTC_APDL_COMMENTBLOCK },
        { "wxSTC_APDL_DEFAULT", wxSTC_APDL_DEFAULT },
        { "wxSTC_APDL_FUNCTION", wxSTC_APDL_FUNCTION },
        { "wxSTC_APDL_NUMBER", wxSTC_APDL_NUMBER },
        { "wxSTC_APDL_OPERATOR", wxSTC_APDL_OPERATOR },
        { "wxSTC_APDL_PROCESSOR", wxSTC_APDL_PROCESSOR },
        { "wxSTC_APDL_SLASHCOMMAND", wxSTC_APDL_SLASHCOMMAND },
        { "wxSTC_APDL_STARCOMMAND", wxSTC_APDL_STARCOMMAND },
        { "wxSTC_APDL_STRING", wxSTC_APDL_STRING },
        { "wxSTC_APDL_WORD", wxSTC_APDL_WORD },
        { "wxSTC_ASM_CHARACTER", wxSTC_ASM_CHARACTER },
        { "wxSTC_ASM_COMMENT", wxSTC_ASM_COMMENT },
        { "wxSTC_ASM_COMMENTBLOCK", wxSTC_ASM_COMMENTBLOCK },
        { "wxSTC_ASM_CPUINSTRUCTION", wxSTC_ASM_CPUINSTRUCTION },
        { "wxSTC_ASM_DEFAULT", wxSTC_ASM_DEFAULT },
        { "wxSTC_ASM_DIRECTIVE", wxSTC_ASM_DIRECTIVE },
        { "wxSTC_ASM_DIRECTIVEOPERAND", wxSTC_ASM_DIRECTIVEOPERAND },
        { "wxSTC_ASM_EXTINSTRUCTION", wxSTC_ASM_EXTINSTRUCTION },
        { "wxSTC_ASM_IDENTIFIER", wxSTC_ASM_IDENTIFIER },
        { "wxSTC_ASM_MATHINSTRUCTION", wxSTC_ASM_MATHINSTRUCTION },
        { "wxSTC_ASM_NUMBER", wxSTC_ASM_NUMBER },
        { "wxSTC_ASM_OPERATOR", wxSTC_ASM_OPERATOR },
        { "wxSTC_ASM_REGISTER", wxSTC_ASM_REGISTER },
        { "wxSTC_ASM_STRING", wxSTC_ASM_STRING },
        { "wxSTC_ASM_STRINGEOL", wxSTC_ASM_STRINGEOL },
        { "wxSTC_ASN1_ATTRIBUTE", wxSTC_ASN1_ATTRIBUTE },
        { "wxSTC_ASN1_COMMENT", wxSTC_ASN1_COMMENT },
        { "wxSTC_ASN1_DEFAULT", wxSTC_ASN1_DEFAULT },
        { "wxSTC_ASN1_DESCRIPTOR", wxSTC_ASN1_DESCRIPTOR },
        { "wxSTC_ASN1_IDENTIFIER", wxSTC_ASN1_IDENTIFIER },
        { "wxSTC_ASN1_KEYWORD", wxSTC_ASN1_KEYWORD },
        { "wxSTC_ASN1_OID", wxSTC_ASN1_OID },
        { "wxSTC_ASN1_OPERATOR", wxSTC_ASN1_OPERATOR },
        { "wxSTC_ASN1_SCALAR", wxSTC_ASN1_SCALAR },
        { "wxSTC_ASN1_STRING", wxSTC_ASN1_STRING },
        { "wxSTC_ASN1_TYPE", wxSTC_ASN1_TYPE },
        { "wxSTC_AU3_COMMENT", wxSTC_AU3_COMMENT },
        { "wxSTC_AU3_COMMENTBLOCK", wxSTC_AU3_COMMENTBLOCK },
        { "wxSTC_AU3_COMOBJ", wxSTC_AU3_COMOBJ },
        { "wxSTC_AU3_DEFAULT", wxSTC_AU3_DEFAULT },
        { "wxSTC_AU3_EXPAND", wxSTC_AU3_EXPAND },
        { "wxSTC_AU3_FUNCTION", wxSTC_AU3_FUNCTION },
        { "wxSTC_AU3_KEYWORD", wxSTC_AU3_KEYWORD },
        { "wxSTC_AU3_MACRO", wxSTC_AU3_MACRO },
        { "wxSTC_AU3_NUMBER", wxSTC_AU3_NUMBER },
        { "wxSTC_AU3_OPERATOR", wxSTC_AU3_OPERATOR },
        { "wxSTC_AU3_PREPROCESSOR", wxSTC_AU3_PREPROCESSOR },
        { "wxSTC_AU3_SENT", wxSTC_AU3_SENT },
        { "wxSTC_AU3_SPECIAL", wxSTC_AU3_SPECIAL },
        { "wxSTC_AU3_STRING", wxSTC_AU3_STRING },
        { "wxSTC_AU3_VARIABLE", wxSTC_AU3_VARIABLE },
        { "wxSTC_AVE_COMMENT", wxSTC_AVE_COMMENT },
        { "wxSTC_AVE_DEFAULT", wxSTC_AVE_DEFAULT },
        { "wxSTC_AVE_ENUM", wxSTC_AVE_ENUM },
        { "wxSTC_AVE_IDENTIFIER", wxSTC_AVE_IDENTIFIER },
        { "wxSTC_AVE_NUMBER", wxSTC_AVE_NUMBER },
        { "wxSTC_AVE_OPERATOR", wxSTC_AVE_OPERATOR },
        { "wxSTC_AVE_STRING", wxSTC_AVE_STRING },
        { "wxSTC_AVE_STRINGEOL", wxSTC_AVE_STRINGEOL },
        { "wxSTC_AVE_WORD", wxSTC_AVE_WORD },
        { "wxSTC_AVE_WORD1", wxSTC_AVE_WORD1 },
        { "wxSTC_AVE_WORD2", wxSTC_AVE_WORD2 },
        { "wxSTC_AVE_WORD3", wxSTC_AVE_WORD3 },
        { "wxSTC_AVE_WORD4", wxSTC_AVE_WORD4 },
        { "wxSTC_AVE_WORD5", wxSTC_AVE_WORD5 },
        { "wxSTC_AVE_WORD6", wxSTC_AVE_WORD6 },
        { "wxSTC_BAAN_COMMENT", wxSTC_BAAN_COMMENT },
        { "wxSTC_BAAN_COMMENTDOC", wxSTC_BAAN_COMMENTDOC },
        { "wxSTC_BAAN_DEFAULT", wxSTC_BAAN_DEFAULT },
        { "wxSTC_BAAN_IDENTIFIER", wxSTC_BAAN_IDENTIFIER },
        { "wxSTC_BAAN_NUMBER", wxSTC_BAAN_NUMBER },
        { "wxSTC_BAAN_OPERATOR", wxSTC_BAAN_OPERATOR },
        { "wxSTC_BAAN_PREPROCESSOR", wxSTC_BAAN_PREPROCESSOR },
        { "wxSTC_BAAN_STRING", wxSTC_BAAN_STRING },
        { "wxSTC_BAAN_STRINGEOL", wxSTC_BAAN_STRINGEOL },
        { "wxSTC_BAAN_WORD", wxSTC_BAAN_WORD },
        { "wxSTC_BAAN_WORD2", wxSTC_BAAN_WORD2 },
        { "wxSTC_BAT_COMMAND", wxSTC_BAT_COMMAND },
        { "wxSTC_BAT_COMMENT", wxSTC_BAT_COMMENT },
        { "wxSTC_BAT_DEFAULT", wxSTC_BAT_DEFAULT },
        { "wxSTC_BAT_HIDE", wxSTC_BAT_HIDE },
        { "wxSTC_BAT_IDENTIFIER", wxSTC_BAT_IDENTIFIER },
        { "wxSTC_BAT_LABEL", wxSTC_BAT_LABEL },
        { "wxSTC_BAT_OPERATOR", wxSTC_BAT_OPERATOR },
        { "wxSTC_BAT_WORD", wxSTC_BAT_WORD },
        { "wxSTC_B_ASM", wxSTC_B_ASM },
        { "wxSTC_B_BINNUMBER", wxSTC_B_BINNUMBER },
        { "wxSTC_B_COMMENT", wxSTC_B_COMMENT },
        { "wxSTC_B_CONSTANT", wxSTC_B_CONSTANT },
        { "wxSTC_B_DATE", wxSTC_B_DATE },
        { "wxSTC_B_DEFAULT", wxSTC_B_DEFAULT },
        { "wxSTC_B_ERROR", wxSTC_B_ERROR },
        { "wxSTC_B_HEXNUMBER", wxSTC_B_HEXNUMBER },
        { "wxSTC_B_IDENTIFIER", wxSTC_B_IDENTIFIER },
        { "wxSTC_B_KEYWORD", wxSTC_B_KEYWORD },
        { "wxSTC_B_KEYWORD2", wxSTC_B_KEYWORD2 },
        { "wxSTC_B_KEYWORD3", wxSTC_B_KEYWORD3 },
        { "wxSTC_B_KEYWORD4", wxSTC_B_KEYWORD4 },
        { "wxSTC_B_LABEL", wxSTC_B_LABEL },
        { "wxSTC_B_NUMBER", wxSTC_B_NUMBER },
        { "wxSTC_B_OPERATOR", wxSTC_B_OPERATOR },
        { "wxSTC_B_PREPROCESSOR", wxSTC_B_PREPROCESSOR },
        { "wxSTC_B_STRING", wxSTC_B_STRING },
        { "wxSTC_B_STRINGEOL", wxSTC_B_STRINGEOL },
        { "wxSTC_CACHE_CARET", wxSTC_CACHE_CARET },
        { "wxSTC_CACHE_DOCUMENT", wxSTC_CACHE_DOCUMENT },
        { "wxSTC_CACHE_NONE", wxSTC_CACHE_NONE },
        { "wxSTC_CACHE_PAGE", wxSTC_CACHE_PAGE },
        { "wxSTC_CAML_CHAR", wxSTC_CAML_CHAR },
        { "wxSTC_CAML_COMMENT", wxSTC_CAML_COMMENT },
        { "wxSTC_CAML_COMMENT1", wxSTC_CAML_COMMENT1 },
        { "wxSTC_CAML_COMMENT2", wxSTC_CAML_COMMENT2 },
        { "wxSTC_CAML_COMMENT3", wxSTC_CAML_COMMENT3 },
        { "wxSTC_CAML_DEFAULT", wxSTC_CAML_DEFAULT },
        { "wxSTC_CAML_IDENTIFIER", wxSTC_CAML_IDENTIFIER },
        { "wxSTC_CAML_KEYWORD", wxSTC_CAML_KEYWORD },
        { "wxSTC_CAML_KEYWORD2", wxSTC_CAML_KEYWORD2 },
        { "wxSTC_CAML_KEYWORD3", wxSTC_CAML_KEYWORD3 },
        { "wxSTC_CAML_LINENUM", wxSTC_CAML_LINENUM },
        { "wxSTC_CAML_NUMBER", wxSTC_CAML_NUMBER },
        { "wxSTC_CAML_OPERATOR", wxSTC_CAML_OPERATOR },
        { "wxSTC_CAML_STRING", wxSTC_CAML_STRING },
        { "wxSTC_CAML_TAGNAME", wxSTC_CAML_TAGNAME },
        { "wxSTC_CARET_EVEN", wxSTC_CARET_EVEN },
        { "wxSTC_CARET_JUMPS", wxSTC_CARET_JUMPS },
        { "wxSTC_CARET_SLOP", wxSTC_CARET_SLOP },
        { "wxSTC_CARET_STRICT", wxSTC_CARET_STRICT },
        { "wxSTC_CASE_LOWER", wxSTC_CASE_LOWER },
        { "wxSTC_CASE_MIXED", wxSTC_CASE_MIXED },
        { "wxSTC_CASE_UPPER", wxSTC_CASE_UPPER },
        { "wxSTC_CHARSET_8859_15", wxSTC_CHARSET_8859_15 },
        { "wxSTC_CHARSET_ANSI", wxSTC_CHARSET_ANSI },
        { "wxSTC_CHARSET_ARABIC", wxSTC_CHARSET_ARABIC },
        { "wxSTC_CHARSET_BALTIC", wxSTC_CHARSET_BALTIC },
        { "wxSTC_CHARSET_CHINESEBIG5", wxSTC_CHARSET_CHINESEBIG5 },
        { "wxSTC_CHARSET_CYRILLIC", wxSTC_CHARSET_CYRILLIC },
        { "wxSTC_CHARSET_DEFAULT", wxSTC_CHARSET_DEFAULT },
        { "wxSTC_CHARSET_EASTEUROPE", wxSTC_CHARSET_EASTEUROPE },
        { "wxSTC_CHARSET_GB2312", wxSTC_CHARSET_GB2312 },
        { "wxSTC_CHARSET_GREEK", wxSTC_CHARSET_GREEK },
        { "wxSTC_CHARSET_HANGUL", wxSTC_CHARSET_HANGUL },
        { "wxSTC_CHARSET_HEBREW", wxSTC_CHARSET_HEBREW },
        { "wxSTC_CHARSET_JOHAB", wxSTC_CHARSET_JOHAB },
        { "wxSTC_CHARSET_MAC", wxSTC_CHARSET_MAC },
        { "wxSTC_CHARSET_OEM", wxSTC_CHARSET_OEM },
        { "wxSTC_CHARSET_RUSSIAN", wxSTC_CHARSET_RUSSIAN },
        { "wxSTC_CHARSET_SHIFTJIS", wxSTC_CHARSET_SHIFTJIS },
        { "wxSTC_CHARSET_SYMBOL", wxSTC_CHARSET_SYMBOL },
        { "wxSTC_CHARSET_THAI", wxSTC_CHARSET_THAI },
        { "wxSTC_CHARSET_TURKISH", wxSTC_CHARSET_TURKISH },
        { "wxSTC_CHARSET_VIETNAMESE", wxSTC_CHARSET_VIETNAMESE },
        { "wxSTC_CLW_ATTRIBUTE", wxSTC_CLW_ATTRIBUTE },
        { "wxSTC_CLW_BUILTIN_PROCEDURES_FUNCTION", wxSTC_CLW_BUILTIN_PROCEDURES_FUNCTION },
        { "wxSTC_CLW_COMMENT", wxSTC_CLW_COMMENT },
        { "wxSTC_CLW_COMPILER_DIRECTIVE", wxSTC_CLW_COMPILER_DIRECTIVE },
        { "wxSTC_CLW_DEFAULT", wxSTC_CLW_DEFAULT },
        { "wxSTC_CLW_DEPRECATED", wxSTC_CLW_DEPRECATED },
        { "wxSTC_CLW_ERROR", wxSTC_CLW_ERROR },
        { "wxSTC_CLW_INTEGER_CONSTANT", wxSTC_CLW_INTEGER_CONSTANT },
        { "wxSTC_CLW_KEYWORD", wxSTC_CLW_KEYWORD },
        { "wxSTC_CLW_LABEL", wxSTC_CLW_LABEL },
        { "wxSTC_CLW_PICTURE_STRING", wxSTC_CLW_PICTURE_STRING },
        { "wxSTC_CLW_REAL_CONSTANT", wxSTC_CLW_REAL_CONSTANT },
        { "wxSTC_CLW_RUNTIME_EXPRESSIONS", wxSTC_CLW_RUNTIME_EXPRESSIONS },
        { "wxSTC_CLW_STANDARD_EQUATE", wxSTC_CLW_STANDARD_EQUATE },
        { "wxSTC_CLW_STRING", wxSTC_CLW_STRING },
        { "wxSTC_CLW_STRUCTURE_DATA_TYPE", wxSTC_CLW_STRUCTURE_DATA_TYPE },
        { "wxSTC_CLW_USER_IDENTIFIER", wxSTC_CLW_USER_IDENTIFIER },
        { "wxSTC_CMD_BACKTAB", wxSTC_CMD_BACKTAB },
        { "wxSTC_CMD_CANCEL", wxSTC_CMD_CANCEL },
        { "wxSTC_CMD_CHARLEFT", wxSTC_CMD_CHARLEFT },
        { "wxSTC_CMD_CHARLEFTEXTEND", wxSTC_CMD_CHARLEFTEXTEND },
        { "wxSTC_CMD_CHARLEFTRECTEXTEND", wxSTC_CMD_CHARLEFTRECTEXTEND },
        { "wxSTC_CMD_CHARRIGHT", wxSTC_CMD_CHARRIGHT },
        { "wxSTC_CMD_CHARRIGHTEXTEND", wxSTC_CMD_CHARRIGHTEXTEND },
        { "wxSTC_CMD_CHARRIGHTRECTEXTEND", wxSTC_CMD_CHARRIGHTRECTEXTEND },
        { "wxSTC_CMD_CLEAR", wxSTC_CMD_CLEAR },
        { "wxSTC_CMD_COPY", wxSTC_CMD_COPY },
        { "wxSTC_CMD_CUT", wxSTC_CMD_CUT },
        { "wxSTC_CMD_DELETEBACK", wxSTC_CMD_DELETEBACK },
        { "wxSTC_CMD_DELETEBACKNOTLINE", wxSTC_CMD_DELETEBACKNOTLINE },
        { "wxSTC_CMD_DELLINELEFT", wxSTC_CMD_DELLINELEFT },
        { "wxSTC_CMD_DELLINERIGHT", wxSTC_CMD_DELLINERIGHT },
        { "wxSTC_CMD_DELWORDLEFT", wxSTC_CMD_DELWORDLEFT },
        { "wxSTC_CMD_DELWORDRIGHT", wxSTC_CMD_DELWORDRIGHT },
        { "wxSTC_CMD_DOCUMENTEND", wxSTC_CMD_DOCUMENTEND },
        { "wxSTC_CMD_DOCUMENTENDEXTEND", wxSTC_CMD_DOCUMENTENDEXTEND },
        { "wxSTC_CMD_DOCUMENTSTART", wxSTC_CMD_DOCUMENTSTART },
        { "wxSTC_CMD_DOCUMENTSTARTEXTEND", wxSTC_CMD_DOCUMENTSTARTEXTEND },
        { "wxSTC_CMD_EDITTOGGLEOVERTYPE", wxSTC_CMD_EDITTOGGLEOVERTYPE },
        { "wxSTC_CMD_FORMFEED", wxSTC_CMD_FORMFEED },
        { "wxSTC_CMD_HOME", wxSTC_CMD_HOME },
        { "wxSTC_CMD_HOMEDISPLAY", wxSTC_CMD_HOMEDISPLAY },
        { "wxSTC_CMD_HOMEDISPLAYEXTEND", wxSTC_CMD_HOMEDISPLAYEXTEND },
        { "wxSTC_CMD_HOMEEXTEND", wxSTC_CMD_HOMEEXTEND },
        { "wxSTC_CMD_HOMERECTEXTEND", wxSTC_CMD_HOMERECTEXTEND },
        { "wxSTC_CMD_HOMEWRAP", wxSTC_CMD_HOMEWRAP },
        { "wxSTC_CMD_HOMEWRAPEXTEND", wxSTC_CMD_HOMEWRAPEXTEND },
        { "wxSTC_CMD_LINECOPY", wxSTC_CMD_LINECOPY },
        { "wxSTC_CMD_LINECUT", wxSTC_CMD_LINECUT },
        { "wxSTC_CMD_LINEDELETE", wxSTC_CMD_LINEDELETE },
        { "wxSTC_CMD_LINEDOWN", wxSTC_CMD_LINEDOWN },
        { "wxSTC_CMD_LINEDOWNEXTEND", wxSTC_CMD_LINEDOWNEXTEND },
        { "wxSTC_CMD_LINEDOWNRECTEXTEND", wxSTC_CMD_LINEDOWNRECTEXTEND },
        { "wxSTC_CMD_LINEDUPLICATE", wxSTC_CMD_LINEDUPLICATE },
        { "wxSTC_CMD_LINEEND", wxSTC_CMD_LINEEND },
        { "wxSTC_CMD_LINEENDDISPLAY", wxSTC_CMD_LINEENDDISPLAY },
        { "wxSTC_CMD_LINEENDDISPLAYEXTEND", wxSTC_CMD_LINEENDDISPLAYEXTEND },
        { "wxSTC_CMD_LINEENDEXTEND", wxSTC_CMD_LINEENDEXTEND },
        { "wxSTC_CMD_LINEENDRECTEXTEND", wxSTC_CMD_LINEENDRECTEXTEND },
        { "wxSTC_CMD_LINEENDWRAP", wxSTC_CMD_LINEENDWRAP },
        { "wxSTC_CMD_LINEENDWRAPEXTEND", wxSTC_CMD_LINEENDWRAPEXTEND },
        { "wxSTC_CMD_LINESCROLLDOWN", wxSTC_CMD_LINESCROLLDOWN },
        { "wxSTC_CMD_LINESCROLLUP", wxSTC_CMD_LINESCROLLUP },
        { "wxSTC_CMD_LINETRANSPOSE", wxSTC_CMD_LINETRANSPOSE },
        { "wxSTC_CMD_LINEUP", wxSTC_CMD_LINEUP },
        { "wxSTC_CMD_LINEUPEXTEND", wxSTC_CMD_LINEUPEXTEND },
        { "wxSTC_CMD_LINEUPRECTEXTEND", wxSTC_CMD_LINEUPRECTEXTEND },
        { "wxSTC_CMD_LOWERCASE", wxSTC_CMD_LOWERCASE },
        { "wxSTC_CMD_NEWLINE", wxSTC_CMD_NEWLINE },
        { "wxSTC_CMD_PAGEDOWN", wxSTC_CMD_PAGEDOWN },
        { "wxSTC_CMD_PAGEDOWNEXTEND", wxSTC_CMD_PAGEDOWNEXTEND },
        { "wxSTC_CMD_PAGEDOWNRECTEXTEND", wxSTC_CMD_PAGEDOWNRECTEXTEND },
        { "wxSTC_CMD_PAGEUP", wxSTC_CMD_PAGEUP },
        { "wxSTC_CMD_PAGEUPEXTEND", wxSTC_CMD_PAGEUPEXTEND },
        { "wxSTC_CMD_PAGEUPRECTEXTEND", wxSTC_CMD_PAGEUPRECTEXTEND },
        { "wxSTC_CMD_PARADOWN", wxSTC_CMD_PARADOWN },
        { "wxSTC_CMD_PARADOWNEXTEND", wxSTC_CMD_PARADOWNEXTEND },
        { "wxSTC_CMD_PARAUP", wxSTC_CMD_PARAUP },
        { "wxSTC_CMD_PARAUPEXTEND", wxSTC_CMD_PARAUPEXTEND },
        { "wxSTC_CMD_PASTE", wxSTC_CMD_PASTE },
        { "wxSTC_CMD_REDO", wxSTC_CMD_REDO },
        { "wxSTC_CMD_SELECTALL", wxSTC_CMD_SELECTALL },
        { "wxSTC_CMD_STUTTEREDPAGEDOWN", wxSTC_CMD_STUTTEREDPAGEDOWN },
        { "wxSTC_CMD_STUTTEREDPAGEDOWNEXTEND", wxSTC_CMD_STUTTEREDPAGEDOWNEXTEND },
        { "wxSTC_CMD_STUTTEREDPAGEUP", wxSTC_CMD_STUTTEREDPAGEUP },
        { "wxSTC_CMD_STUTTEREDPAGEUPEXTEND", wxSTC_CMD_STUTTEREDPAGEUPEXTEND },
        { "wxSTC_CMD_TAB", wxSTC_CMD_TAB },
        { "wxSTC_CMD_UNDO", wxSTC_CMD_UNDO },
        { "wxSTC_CMD_UPPERCASE", wxSTC_CMD_UPPERCASE },
        { "wxSTC_CMD_VCHOME", wxSTC_CMD_VCHOME },
        { "wxSTC_CMD_VCHOMEEXTEND", wxSTC_CMD_VCHOMEEXTEND },
        { "wxSTC_CMD_VCHOMERECTEXTEND", wxSTC_CMD_VCHOMERECTEXTEND },
        { "wxSTC_CMD_VCHOMEWRAP", wxSTC_CMD_VCHOMEWRAP },
        { "wxSTC_CMD_VCHOMEWRAPEXTEND", wxSTC_CMD_VCHOMEWRAPEXTEND },
        { "wxSTC_CMD_WORDLEFT", wxSTC_CMD_WORDLEFT },
        { "wxSTC_CMD_WORDLEFTEND", wxSTC_CMD_WORDLEFTEND },
        { "wxSTC_CMD_WORDLEFTENDEXTEND", wxSTC_CMD_WORDLEFTENDEXTEND },
        { "wxSTC_CMD_WORDLEFTEXTEND", wxSTC_CMD_WORDLEFTEXTEND },
        { "wxSTC_CMD_WORDPARTLEFT", wxSTC_CMD_WORDPARTLEFT },
        { "wxSTC_CMD_WORDPARTLEFTEXTEND", wxSTC_CMD_WORDPARTLEFTEXTEND },
        { "wxSTC_CMD_WORDPARTRIGHT", wxSTC_CMD_WORDPARTRIGHT },
        { "wxSTC_CMD_WORDPARTRIGHTEXTEND", wxSTC_CMD_WORDPARTRIGHTEXTEND },
        { "wxSTC_CMD_WORDRIGHT", wxSTC_CMD_WORDRIGHT },
        { "wxSTC_CMD_WORDRIGHTEND", wxSTC_CMD_WORDRIGHTEND },
        { "wxSTC_CMD_WORDRIGHTENDEXTEND", wxSTC_CMD_WORDRIGHTENDEXTEND },
        { "wxSTC_CMD_WORDRIGHTEXTEND", wxSTC_CMD_WORDRIGHTEXTEND },
        { "wxSTC_CMD_ZOOMIN", wxSTC_CMD_ZOOMIN },
        { "wxSTC_CMD_ZOOMOUT", wxSTC_CMD_ZOOMOUT },
        { "wxSTC_CONF_COMMENT", wxSTC_CONF_COMMENT },
        { "wxSTC_CONF_DEFAULT", wxSTC_CONF_DEFAULT },
        { "wxSTC_CONF_DIRECTIVE", wxSTC_CONF_DIRECTIVE },
        { "wxSTC_CONF_EXTENSION", wxSTC_CONF_EXTENSION },
        { "wxSTC_CONF_IDENTIFIER", wxSTC_CONF_IDENTIFIER },
        { "wxSTC_CONF_IP", wxSTC_CONF_IP },
        { "wxSTC_CONF_NUMBER", wxSTC_CONF_NUMBER },
        { "wxSTC_CONF_OPERATOR", wxSTC_CONF_OPERATOR },
        { "wxSTC_CONF_PARAMETER", wxSTC_CONF_PARAMETER },
        { "wxSTC_CONF_STRING", wxSTC_CONF_STRING },
        { "wxSTC_CP_DBCS", wxSTC_CP_DBCS },
        { "wxSTC_CP_UTF8", wxSTC_CP_UTF8 },
        { "wxSTC_CSOUND_ARATE_VAR", wxSTC_CSOUND_ARATE_VAR },
        { "wxSTC_CSOUND_COMMENT", wxSTC_CSOUND_COMMENT },
        { "wxSTC_CSOUND_COMMENTBLOCK", wxSTC_CSOUND_COMMENTBLOCK },
        { "wxSTC_CSOUND_DEFAULT", wxSTC_CSOUND_DEFAULT },
        { "wxSTC_CSOUND_GLOBAL_VAR", wxSTC_CSOUND_GLOBAL_VAR },
        { "wxSTC_CSOUND_HEADERSTMT", wxSTC_CSOUND_HEADERSTMT },
        { "wxSTC_CSOUND_IDENTIFIER", wxSTC_CSOUND_IDENTIFIER },
        { "wxSTC_CSOUND_INSTR", wxSTC_CSOUND_INSTR },
        { "wxSTC_CSOUND_IRATE_VAR", wxSTC_CSOUND_IRATE_VAR },
        { "wxSTC_CSOUND_KRATE_VAR", wxSTC_CSOUND_KRATE_VAR },
        { "wxSTC_CSOUND_NUMBER", wxSTC_CSOUND_NUMBER },
        { "wxSTC_CSOUND_OPCODE", wxSTC_CSOUND_OPCODE },
        { "wxSTC_CSOUND_OPERATOR", wxSTC_CSOUND_OPERATOR },
        { "wxSTC_CSOUND_PARAM", wxSTC_CSOUND_PARAM },
        { "wxSTC_CSOUND_STRINGEOL", wxSTC_CSOUND_STRINGEOL },
        { "wxSTC_CSOUND_USERKEYWORD", wxSTC_CSOUND_USERKEYWORD },
        { "wxSTC_CSS_ATTRIBUTE", wxSTC_CSS_ATTRIBUTE },
        { "wxSTC_CSS_CLASS", wxSTC_CSS_CLASS },
        { "wxSTC_CSS_COMMENT", wxSTC_CSS_COMMENT },
        { "wxSTC_CSS_DEFAULT", wxSTC_CSS_DEFAULT },
        { "wxSTC_CSS_DIRECTIVE", wxSTC_CSS_DIRECTIVE },
        { "wxSTC_CSS_DOUBLESTRING", wxSTC_CSS_DOUBLESTRING },
        { "wxSTC_CSS_ID", wxSTC_CSS_ID },
        { "wxSTC_CSS_IDENTIFIER", wxSTC_CSS_IDENTIFIER },
        { "wxSTC_CSS_IDENTIFIER2", wxSTC_CSS_IDENTIFIER2 },
        { "wxSTC_CSS_IMPORTANT", wxSTC_CSS_IMPORTANT },
        { "wxSTC_CSS_OPERATOR", wxSTC_CSS_OPERATOR },
        { "wxSTC_CSS_PSEUDOCLASS", wxSTC_CSS_PSEUDOCLASS },
        { "wxSTC_CSS_SINGLESTRING", wxSTC_CSS_SINGLESTRING },
        { "wxSTC_CSS_TAG", wxSTC_CSS_TAG },
        { "wxSTC_CSS_UNKNOWN_IDENTIFIER", wxSTC_CSS_UNKNOWN_IDENTIFIER },
        { "wxSTC_CSS_UNKNOWN_PSEUDOCLASS", wxSTC_CSS_UNKNOWN_PSEUDOCLASS },
        { "wxSTC_CSS_VALUE", wxSTC_CSS_VALUE },
        { "wxSTC_CURSORNORMAL", wxSTC_CURSORNORMAL },
        { "wxSTC_CURSORWAIT", wxSTC_CURSORWAIT },
        { "wxSTC_C_CHARACTER", wxSTC_C_CHARACTER },
        { "wxSTC_C_COMMENT", wxSTC_C_COMMENT },
        { "wxSTC_C_COMMENTDOC", wxSTC_C_COMMENTDOC },
        { "wxSTC_C_COMMENTDOCKEYWORD", wxSTC_C_COMMENTDOCKEYWORD },
        { "wxSTC_C_COMMENTDOCKEYWORDERROR", wxSTC_C_COMMENTDOCKEYWORDERROR },
        { "wxSTC_C_COMMENTLINE", wxSTC_C_COMMENTLINE },
        { "wxSTC_C_COMMENTLINEDOC", wxSTC_C_COMMENTLINEDOC },
        { "wxSTC_C_DEFAULT", wxSTC_C_DEFAULT },
        { "wxSTC_C_GLOBALCLASS", wxSTC_C_GLOBALCLASS },
        { "wxSTC_C_IDENTIFIER", wxSTC_C_IDENTIFIER },
        { "wxSTC_C_NUMBER", wxSTC_C_NUMBER },
        { "wxSTC_C_OPERATOR", wxSTC_C_OPERATOR },
        { "wxSTC_C_PREPROCESSOR", wxSTC_C_PREPROCESSOR },
        { "wxSTC_C_REGEX", wxSTC_C_REGEX },
        { "wxSTC_C_STRING", wxSTC_C_STRING },
        { "wxSTC_C_STRINGEOL", wxSTC_C_STRINGEOL },
        { "wxSTC_C_UUID", wxSTC_C_UUID },
        { "wxSTC_C_VERBATIM", wxSTC_C_VERBATIM },
        { "wxSTC_C_WORD", wxSTC_C_WORD },
        { "wxSTC_C_WORD2", wxSTC_C_WORD2 },
        { "wxSTC_DIFF_ADDED", wxSTC_DIFF_ADDED },
        { "wxSTC_DIFF_COMMAND", wxSTC_DIFF_COMMAND },
        { "wxSTC_DIFF_COMMENT", wxSTC_DIFF_COMMENT },
        { "wxSTC_DIFF_DEFAULT", wxSTC_DIFF_DEFAULT },
        { "wxSTC_DIFF_DELETED", wxSTC_DIFF_DELETED },
        { "wxSTC_DIFF_HEADER", wxSTC_DIFF_HEADER },
        { "wxSTC_DIFF_POSITION", wxSTC_DIFF_POSITION },
        { "wxSTC_EDGE_BACKGROUND", wxSTC_EDGE_BACKGROUND },
        { "wxSTC_EDGE_LINE", wxSTC_EDGE_LINE },
        { "wxSTC_EDGE_NONE", wxSTC_EDGE_NONE },
        { "wxSTC_EIFFEL_CHARACTER", wxSTC_EIFFEL_CHARACTER },
        { "wxSTC_EIFFEL_COMMENTLINE", wxSTC_EIFFEL_COMMENTLINE },
        { "wxSTC_EIFFEL_DEFAULT", wxSTC_EIFFEL_DEFAULT },
        { "wxSTC_EIFFEL_IDENTIFIER", wxSTC_EIFFEL_IDENTIFIER },
        { "wxSTC_EIFFEL_NUMBER", wxSTC_EIFFEL_NUMBER },
        { "wxSTC_EIFFEL_OPERATOR", wxSTC_EIFFEL_OPERATOR },
        { "wxSTC_EIFFEL_STRING", wxSTC_EIFFEL_STRING },
        { "wxSTC_EIFFEL_STRINGEOL", wxSTC_EIFFEL_STRINGEOL },
        { "wxSTC_EIFFEL_WORD", wxSTC_EIFFEL_WORD },
        { "wxSTC_EOL_CR", wxSTC_EOL_CR },
        { "wxSTC_EOL_CRLF", wxSTC_EOL_CRLF },
        { "wxSTC_EOL_LF", wxSTC_EOL_LF },
        { "wxSTC_ERLANG_ATOM", wxSTC_ERLANG_ATOM },
        { "wxSTC_ERLANG_CHARACTER", wxSTC_ERLANG_CHARACTER },
        { "wxSTC_ERLANG_COMMENT", wxSTC_ERLANG_COMMENT },
        { "wxSTC_ERLANG_DEFAULT", wxSTC_ERLANG_DEFAULT },
        { "wxSTC_ERLANG_FUNCTION_NAME", wxSTC_ERLANG_FUNCTION_NAME },
        { "wxSTC_ERLANG_KEYWORD", wxSTC_ERLANG_KEYWORD },
        { "wxSTC_ERLANG_MACRO", wxSTC_ERLANG_MACRO },
        { "wxSTC_ERLANG_NODE_NAME", wxSTC_ERLANG_NODE_NAME },
        { "wxSTC_ERLANG_NUMBER", wxSTC_ERLANG_NUMBER },
        { "wxSTC_ERLANG_OPERATOR", wxSTC_ERLANG_OPERATOR },
        { "wxSTC_ERLANG_RECORD", wxSTC_ERLANG_RECORD },
        { "wxSTC_ERLANG_SEPARATOR", wxSTC_ERLANG_SEPARATOR },
        { "wxSTC_ERLANG_STRING", wxSTC_ERLANG_STRING },
        { "wxSTC_ERLANG_UNKNOWN", wxSTC_ERLANG_UNKNOWN },
        { "wxSTC_ERLANG_VARIABLE", wxSTC_ERLANG_VARIABLE },
        { "wxSTC_ERR_ABSF", wxSTC_ERR_ABSF },
        { "wxSTC_ERR_BORLAND", wxSTC_ERR_BORLAND },
        { "wxSTC_ERR_CMD", wxSTC_ERR_CMD },
        { "wxSTC_ERR_CTAG", wxSTC_ERR_CTAG },
        { "wxSTC_ERR_DEFAULT", wxSTC_ERR_DEFAULT },
        { "wxSTC_ERR_DIFF_ADDITION", wxSTC_ERR_DIFF_ADDITION },
        { "wxSTC_ERR_DIFF_CHANGED", wxSTC_ERR_DIFF_CHANGED },
        { "wxSTC_ERR_DIFF_DELETION", wxSTC_ERR_DIFF_DELETION },
        { "wxSTC_ERR_DIFF_MESSAGE", wxSTC_ERR_DIFF_MESSAGE },
        { "wxSTC_ERR_ELF", wxSTC_ERR_ELF },
        { "wxSTC_ERR_GCC", wxSTC_ERR_GCC },
        { "wxSTC_ERR_IFC", wxSTC_ERR_IFC },
        { "wxSTC_ERR_IFORT", wxSTC_ERR_IFORT },
        { "wxSTC_ERR_JAVA_STACK", wxSTC_ERR_JAVA_STACK },
        { "wxSTC_ERR_LUA", wxSTC_ERR_LUA },
        { "wxSTC_ERR_MS", wxSTC_ERR_MS },
        { "wxSTC_ERR_NET", wxSTC_ERR_NET },
        { "wxSTC_ERR_PERL", wxSTC_ERR_PERL },
        { "wxSTC_ERR_PHP", wxSTC_ERR_PHP },
        { "wxSTC_ERR_PYTHON", wxSTC_ERR_PYTHON },
        { "wxSTC_ERR_TIDY", wxSTC_ERR_TIDY },
        { "wxSTC_ESCRIPT_BRACE", wxSTC_ESCRIPT_BRACE },
        { "wxSTC_ESCRIPT_COMMENT", wxSTC_ESCRIPT_COMMENT },
        { "wxSTC_ESCRIPT_COMMENTDOC", wxSTC_ESCRIPT_COMMENTDOC },
        { "wxSTC_ESCRIPT_COMMENTLINE", wxSTC_ESCRIPT_COMMENTLINE },
        { "wxSTC_ESCRIPT_DEFAULT", wxSTC_ESCRIPT_DEFAULT },
        { "wxSTC_ESCRIPT_IDENTIFIER", wxSTC_ESCRIPT_IDENTIFIER },
        { "wxSTC_ESCRIPT_NUMBER", wxSTC_ESCRIPT_NUMBER },
        { "wxSTC_ESCRIPT_OPERATOR", wxSTC_ESCRIPT_OPERATOR },
        { "wxSTC_ESCRIPT_STRING", wxSTC_ESCRIPT_STRING },
        { "wxSTC_ESCRIPT_WORD", wxSTC_ESCRIPT_WORD },
        { "wxSTC_ESCRIPT_WORD2", wxSTC_ESCRIPT_WORD2 },
        { "wxSTC_ESCRIPT_WORD3", wxSTC_ESCRIPT_WORD3 },
        { "wxSTC_FIND_MATCHCASE", wxSTC_FIND_MATCHCASE },
        { "wxSTC_FIND_POSIX", wxSTC_FIND_POSIX },
        { "wxSTC_FIND_REGEXP", wxSTC_FIND_REGEXP },
        { "wxSTC_FIND_WHOLEWORD", wxSTC_FIND_WHOLEWORD },
        { "wxSTC_FIND_WORDSTART", wxSTC_FIND_WORDSTART },
        { "wxSTC_FOLDFLAG_BOX", wxSTC_FOLDFLAG_BOX },
        { "wxSTC_FOLDFLAG_LEVELNUMBERS", wxSTC_FOLDFLAG_LEVELNUMBERS },
        { "wxSTC_FOLDFLAG_LINEAFTER_CONTRACTED", wxSTC_FOLDFLAG_LINEAFTER_CONTRACTED },
        { "wxSTC_FOLDFLAG_LINEAFTER_EXPANDED", wxSTC_FOLDFLAG_LINEAFTER_EXPANDED },
        { "wxSTC_FOLDFLAG_LINEBEFORE_CONTRACTED", wxSTC_FOLDFLAG_LINEBEFORE_CONTRACTED },
        { "wxSTC_FOLDFLAG_LINEBEFORE_EXPANDED", wxSTC_FOLDFLAG_LINEBEFORE_EXPANDED },
        { "wxSTC_FOLDLEVELBASE", wxSTC_FOLDLEVELBASE },
        { "wxSTC_FOLDLEVELBOXFOOTERFLAG", wxSTC_FOLDLEVELBOXFOOTERFLAG },
        { "wxSTC_FOLDLEVELBOXHEADERFLAG", wxSTC_FOLDLEVELBOXHEADERFLAG },
        { "wxSTC_FOLDLEVELCONTRACTED", wxSTC_FOLDLEVELCONTRACTED },
        { "wxSTC_FOLDLEVELHEADERFLAG", wxSTC_FOLDLEVELHEADERFLAG },
        { "wxSTC_FOLDLEVELNUMBERMASK", wxSTC_FOLDLEVELNUMBERMASK },
        { "wxSTC_FOLDLEVELUNINDENT", wxSTC_FOLDLEVELUNINDENT },
        { "wxSTC_FOLDLEVELWHITEFLAG", wxSTC_FOLDLEVELWHITEFLAG },
        { "wxSTC_FORTH_COMMENT", wxSTC_FORTH_COMMENT },
        { "wxSTC_FORTH_COMMENT_ML", wxSTC_FORTH_COMMENT_ML },
        { "wxSTC_FORTH_CONTROL", wxSTC_FORTH_CONTROL },
        { "wxSTC_FORTH_DEFAULT", wxSTC_FORTH_DEFAULT },
        { "wxSTC_FORTH_DEFWORD", wxSTC_FORTH_DEFWORD },
        { "wxSTC_FORTH_IDENTIFIER", wxSTC_FORTH_IDENTIFIER },
        { "wxSTC_FORTH_KEYWORD", wxSTC_FORTH_KEYWORD },
        { "wxSTC_FORTH_LOCALE", wxSTC_FORTH_LOCALE },
        { "wxSTC_FORTH_NUMBER", wxSTC_FORTH_NUMBER },
        { "wxSTC_FORTH_PREWORD1", wxSTC_FORTH_PREWORD1 },
        { "wxSTC_FORTH_PREWORD2", wxSTC_FORTH_PREWORD2 },
        { "wxSTC_FORTH_STRING", wxSTC_FORTH_STRING },
        { "wxSTC_FS_ASM", wxSTC_FS_ASM },
        { "wxSTC_FS_BINNUMBER", wxSTC_FS_BINNUMBER },
        { "wxSTC_FS_COMMENT", wxSTC_FS_COMMENT },
        { "wxSTC_FS_COMMENTDOC", wxSTC_FS_COMMENTDOC },
        { "wxSTC_FS_COMMENTDOCKEYWORD", wxSTC_FS_COMMENTDOCKEYWORD },
        { "wxSTC_FS_COMMENTDOCKEYWORDERROR", wxSTC_FS_COMMENTDOCKEYWORDERROR },
        { "wxSTC_FS_COMMENTLINE", wxSTC_FS_COMMENTLINE },
        { "wxSTC_FS_COMMENTLINEDOC", wxSTC_FS_COMMENTLINEDOC },
        { "wxSTC_FS_CONSTANT", wxSTC_FS_CONSTANT },
        { "wxSTC_FS_DATE", wxSTC_FS_DATE },
        { "wxSTC_FS_DEFAULT", wxSTC_FS_DEFAULT },
        { "wxSTC_FS_ERROR", wxSTC_FS_ERROR },
        { "wxSTC_FS_HEXNUMBER", wxSTC_FS_HEXNUMBER },
        { "wxSTC_FS_IDENTIFIER", wxSTC_FS_IDENTIFIER },
        { "wxSTC_FS_KEYWORD", wxSTC_FS_KEYWORD },
        { "wxSTC_FS_KEYWORD2", wxSTC_FS_KEYWORD2 },
        { "wxSTC_FS_KEYWORD3", wxSTC_FS_KEYWORD3 },
        { "wxSTC_FS_KEYWORD4", wxSTC_FS_KEYWORD4 },
        { "wxSTC_FS_LABEL", wxSTC_FS_LABEL },
        { "wxSTC_FS_NUMBER", wxSTC_FS_NUMBER },
        { "wxSTC_FS_OPERATOR", wxSTC_FS_OPERATOR },
        { "wxSTC_FS_PREPROCESSOR", wxSTC_FS_PREPROCESSOR },
        { "wxSTC_FS_STRING", wxSTC_FS_STRING },
        { "wxSTC_FS_STRINGEOL", wxSTC_FS_STRINGEOL },
        { "wxSTC_F_COMMENT", wxSTC_F_COMMENT },
        { "wxSTC_F_CONTINUATION", wxSTC_F_CONTINUATION },
        { "wxSTC_F_DEFAULT", wxSTC_F_DEFAULT },
        { "wxSTC_F_IDENTIFIER", wxSTC_F_IDENTIFIER },
        { "wxSTC_F_LABEL", wxSTC_F_LABEL },
        { "wxSTC_F_NUMBER", wxSTC_F_NUMBER },
        { "wxSTC_F_OPERATOR", wxSTC_F_OPERATOR },
        { "wxSTC_F_OPERATOR2", wxSTC_F_OPERATOR2 },
        { "wxSTC_F_PREPROCESSOR", wxSTC_F_PREPROCESSOR },
        { "wxSTC_F_STRING1", wxSTC_F_STRING1 },
        { "wxSTC_F_STRING2", wxSTC_F_STRING2 },
        { "wxSTC_F_STRINGEOL", wxSTC_F_STRINGEOL },
        { "wxSTC_F_WORD", wxSTC_F_WORD },
        { "wxSTC_F_WORD2", wxSTC_F_WORD2 },
        { "wxSTC_F_WORD3", wxSTC_F_WORD3 },
        { "wxSTC_GC_ATTRIBUTE", wxSTC_GC_ATTRIBUTE },
        { "wxSTC_GC_COMMAND", wxSTC_GC_COMMAND },
        { "wxSTC_GC_COMMENTBLOCK", wxSTC_GC_COMMENTBLOCK },
        { "wxSTC_GC_COMMENTLINE", wxSTC_GC_COMMENTLINE },
        { "wxSTC_GC_CONTROL", wxSTC_GC_CONTROL },
        { "wxSTC_GC_DEFAULT", wxSTC_GC_DEFAULT },
        { "wxSTC_GC_EVENT", wxSTC_GC_EVENT },
        { "wxSTC_GC_GLOBAL", wxSTC_GC_GLOBAL },
        { "wxSTC_GC_OPERATOR", wxSTC_GC_OPERATOR },
        { "wxSTC_GC_STRING", wxSTC_GC_STRING },
        { "wxSTC_HA_CAPITAL", wxSTC_HA_CAPITAL },
        { "wxSTC_HA_CHARACTER", wxSTC_HA_CHARACTER },
        { "wxSTC_HA_CLASS", wxSTC_HA_CLASS },
        { "wxSTC_HA_COMMENTBLOCK", wxSTC_HA_COMMENTBLOCK },
        { "wxSTC_HA_COMMENTBLOCK2", wxSTC_HA_COMMENTBLOCK2 },
        { "wxSTC_HA_COMMENTBLOCK3", wxSTC_HA_COMMENTBLOCK3 },
        { "wxSTC_HA_COMMENTLINE", wxSTC_HA_COMMENTLINE },
        { "wxSTC_HA_DATA", wxSTC_HA_DATA },
        { "wxSTC_HA_DEFAULT", wxSTC_HA_DEFAULT },
        { "wxSTC_HA_IDENTIFIER", wxSTC_HA_IDENTIFIER },
        { "wxSTC_HA_IMPORT", wxSTC_HA_IMPORT },
        { "wxSTC_HA_INSTANCE", wxSTC_HA_INSTANCE },
        { "wxSTC_HA_KEYWORD", wxSTC_HA_KEYWORD },
        { "wxSTC_HA_MODULE", wxSTC_HA_MODULE },
        { "wxSTC_HA_NUMBER", wxSTC_HA_NUMBER },
        { "wxSTC_HA_OPERATOR", wxSTC_HA_OPERATOR },
        { "wxSTC_HA_STRING", wxSTC_HA_STRING },
        { "wxSTC_HBA_COMMENTLINE", wxSTC_HBA_COMMENTLINE },
        { "wxSTC_HBA_DEFAULT", wxSTC_HBA_DEFAULT },
        { "wxSTC_HBA_IDENTIFIER", wxSTC_HBA_IDENTIFIER },
        { "wxSTC_HBA_NUMBER", wxSTC_HBA_NUMBER },
        { "wxSTC_HBA_START", wxSTC_HBA_START },
        { "wxSTC_HBA_STRING", wxSTC_HBA_STRING },
        { "wxSTC_HBA_STRINGEOL", wxSTC_HBA_STRINGEOL },
        { "wxSTC_HBA_WORD", wxSTC_HBA_WORD },
        { "wxSTC_HB_COMMENTLINE", wxSTC_HB_COMMENTLINE },
        { "wxSTC_HB_DEFAULT", wxSTC_HB_DEFAULT },
        { "wxSTC_HB_IDENTIFIER", wxSTC_HB_IDENTIFIER },
        { "wxSTC_HB_NUMBER", wxSTC_HB_NUMBER },
        { "wxSTC_HB_START", wxSTC_HB_START },
        { "wxSTC_HB_STRING", wxSTC_HB_STRING },
        { "wxSTC_HB_STRINGEOL", wxSTC_HB_STRINGEOL },
        { "wxSTC_HB_WORD", wxSTC_HB_WORD },
        { "wxSTC_HJA_COMMENT", wxSTC_HJA_COMMENT },
        { "wxSTC_HJA_COMMENTDOC", wxSTC_HJA_COMMENTDOC },
        { "wxSTC_HJA_COMMENTLINE", wxSTC_HJA_COMMENTLINE },
        { "wxSTC_HJA_DEFAULT", wxSTC_HJA_DEFAULT },
        { "wxSTC_HJA_DOUBLESTRING", wxSTC_HJA_DOUBLESTRING },
        { "wxSTC_HJA_KEYWORD", wxSTC_HJA_KEYWORD },
        { "wxSTC_HJA_NUMBER", wxSTC_HJA_NUMBER },
        { "wxSTC_HJA_REGEX", wxSTC_HJA_REGEX },
        { "wxSTC_HJA_SINGLESTRING", wxSTC_HJA_SINGLESTRING },
        { "wxSTC_HJA_START", wxSTC_HJA_START },
        { "wxSTC_HJA_STRINGEOL", wxSTC_HJA_STRINGEOL },
        { "wxSTC_HJA_SYMBOLS", wxSTC_HJA_SYMBOLS },
        { "wxSTC_HJA_WORD", wxSTC_HJA_WORD },
        { "wxSTC_HJ_COMMENT", wxSTC_HJ_COMMENT },
        { "wxSTC_HJ_COMMENTDOC", wxSTC_HJ_COMMENTDOC },
        { "wxSTC_HJ_COMMENTLINE", wxSTC_HJ_COMMENTLINE },
        { "wxSTC_HJ_DEFAULT", wxSTC_HJ_DEFAULT },
        { "wxSTC_HJ_DOUBLESTRING", wxSTC_HJ_DOUBLESTRING },
        { "wxSTC_HJ_KEYWORD", wxSTC_HJ_KEYWORD },
        { "wxSTC_HJ_NUMBER", wxSTC_HJ_NUMBER },
        { "wxSTC_HJ_REGEX", wxSTC_HJ_REGEX },
        { "wxSTC_HJ_SINGLESTRING", wxSTC_HJ_SINGLESTRING },
        { "wxSTC_HJ_START", wxSTC_HJ_START },
        { "wxSTC_HJ_STRINGEOL", wxSTC_HJ_STRINGEOL },
        { "wxSTC_HJ_SYMBOLS", wxSTC_HJ_SYMBOLS },
        { "wxSTC_HJ_WORD", wxSTC_HJ_WORD },
        { "wxSTC_HPA_CHARACTER", wxSTC_HPA_CHARACTER },
        { "wxSTC_HPA_CLASSNAME", wxSTC_HPA_CLASSNAME },
        { "wxSTC_HPA_COMMENTLINE", wxSTC_HPA_COMMENTLINE },
        { "wxSTC_HPA_DEFAULT", wxSTC_HPA_DEFAULT },
        { "wxSTC_HPA_DEFNAME", wxSTC_HPA_DEFNAME },
        { "wxSTC_HPA_IDENTIFIER", wxSTC_HPA_IDENTIFIER },
        { "wxSTC_HPA_NUMBER", wxSTC_HPA_NUMBER },
        { "wxSTC_HPA_OPERATOR", wxSTC_HPA_OPERATOR },
        { "wxSTC_HPA_START", wxSTC_HPA_START },
        { "wxSTC_HPA_STRING", wxSTC_HPA_STRING },
        { "wxSTC_HPA_TRIPLE", wxSTC_HPA_TRIPLE },
        { "wxSTC_HPA_TRIPLEDOUBLE", wxSTC_HPA_TRIPLEDOUBLE },
        { "wxSTC_HPA_WORD", wxSTC_HPA_WORD },
        { "wxSTC_HPHP_COMMENT", wxSTC_HPHP_COMMENT },
        { "wxSTC_HPHP_COMMENTLINE", wxSTC_HPHP_COMMENTLINE },
        { "wxSTC_HPHP_COMPLEX_VARIABLE", wxSTC_HPHP_COMPLEX_VARIABLE },
        { "wxSTC_HPHP_DEFAULT", wxSTC_HPHP_DEFAULT },
        { "wxSTC_HPHP_HSTRING", wxSTC_HPHP_HSTRING },
        { "wxSTC_HPHP_HSTRING_VARIABLE", wxSTC_HPHP_HSTRING_VARIABLE },
        { "wxSTC_HPHP_NUMBER", wxSTC_HPHP_NUMBER },
        { "wxSTC_HPHP_OPERATOR", wxSTC_HPHP_OPERATOR },
        { "wxSTC_HPHP_SIMPLESTRING", wxSTC_HPHP_SIMPLESTRING },
        { "wxSTC_HPHP_VARIABLE", wxSTC_HPHP_VARIABLE },
        { "wxSTC_HPHP_WORD", wxSTC_HPHP_WORD },
        { "wxSTC_HP_CHARACTER", wxSTC_HP_CHARACTER },
        { "wxSTC_HP_CLASSNAME", wxSTC_HP_CLASSNAME },
        { "wxSTC_HP_COMMENTLINE", wxSTC_HP_COMMENTLINE },
        { "wxSTC_HP_DEFAULT", wxSTC_HP_DEFAULT },
        { "wxSTC_HP_DEFNAME", wxSTC_HP_DEFNAME },
        { "wxSTC_HP_IDENTIFIER", wxSTC_HP_IDENTIFIER },
        { "wxSTC_HP_NUMBER", wxSTC_HP_NUMBER },
        { "wxSTC_HP_OPERATOR", wxSTC_HP_OPERATOR },
        { "wxSTC_HP_START", wxSTC_HP_START },
        { "wxSTC_HP_STRING", wxSTC_HP_STRING },
        { "wxSTC_HP_TRIPLE", wxSTC_HP_TRIPLE },
        { "wxSTC_HP_TRIPLEDOUBLE", wxSTC_HP_TRIPLEDOUBLE },
        { "wxSTC_HP_WORD", wxSTC_HP_WORD },
        { "wxSTC_H_ASP", wxSTC_H_ASP },
        { "wxSTC_H_ASPAT", wxSTC_H_ASPAT },
        { "wxSTC_H_ATTRIBUTE", wxSTC_H_ATTRIBUTE },
        { "wxSTC_H_ATTRIBUTEUNKNOWN", wxSTC_H_ATTRIBUTEUNKNOWN },
        { "wxSTC_H_CDATA", wxSTC_H_CDATA },
        { "wxSTC_H_COMMENT", wxSTC_H_COMMENT },
        { "wxSTC_H_DEFAULT", wxSTC_H_DEFAULT },
        { "wxSTC_H_DOUBLESTRING", wxSTC_H_DOUBLESTRING },
        { "wxSTC_H_ENTITY", wxSTC_H_ENTITY },
        { "wxSTC_H_NUMBER", wxSTC_H_NUMBER },
        { "wxSTC_H_OTHER", wxSTC_H_OTHER },
        { "wxSTC_H_QUESTION", wxSTC_H_QUESTION },
        { "wxSTC_H_SCRIPT", wxSTC_H_SCRIPT },
        { "wxSTC_H_SGML_1ST_PARAM", wxSTC_H_SGML_1ST_PARAM },
        { "wxSTC_H_SGML_1ST_PARAM_COMMENT", wxSTC_H_SGML_1ST_PARAM_COMMENT },
        { "wxSTC_H_SGML_BLOCK_DEFAULT", wxSTC_H_SGML_BLOCK_DEFAULT },
        { "wxSTC_H_SGML_COMMAND", wxSTC_H_SGML_COMMAND },
        { "wxSTC_H_SGML_COMMENT", wxSTC_H_SGML_COMMENT },
        { "wxSTC_H_SGML_DEFAULT", wxSTC_H_SGML_DEFAULT },
        { "wxSTC_H_SGML_DOUBLESTRING", wxSTC_H_SGML_DOUBLESTRING },
        { "wxSTC_H_SGML_ENTITY", wxSTC_H_SGML_ENTITY },
        { "wxSTC_H_SGML_ERROR", wxSTC_H_SGML_ERROR },
        { "wxSTC_H_SGML_SIMPLESTRING", wxSTC_H_SGML_SIMPLESTRING },
        { "wxSTC_H_SGML_SPECIAL", wxSTC_H_SGML_SPECIAL },
        { "wxSTC_H_SINGLESTRING", wxSTC_H_SINGLESTRING },
        { "wxSTC_H_TAG", wxSTC_H_TAG },
        { "wxSTC_H_TAGEND", wxSTC_H_TAGEND },
        { "wxSTC_H_TAGUNKNOWN", wxSTC_H_TAGUNKNOWN },
        { "wxSTC_H_VALUE", wxSTC_H_VALUE },
        { "wxSTC_H_XCCOMMENT", wxSTC_H_XCCOMMENT },
        { "wxSTC_H_XMLEND", wxSTC_H_XMLEND },
        { "wxSTC_H_XMLSTART", wxSTC_H_XMLSTART },
        { "wxSTC_INDIC0_MASK", wxSTC_INDIC0_MASK },
        { "wxSTC_INDIC1_MASK", wxSTC_INDIC1_MASK },
        { "wxSTC_INDIC2_MASK", wxSTC_INDIC2_MASK },
        { "wxSTC_INDICS_MASK", wxSTC_INDICS_MASK },
        { "wxSTC_INDIC_BOX", wxSTC_INDIC_BOX },
        { "wxSTC_INDIC_DIAGONAL", wxSTC_INDIC_DIAGONAL },
        { "wxSTC_INDIC_HIDDEN", wxSTC_INDIC_HIDDEN },
        { "wxSTC_INDIC_MAX", wxSTC_INDIC_MAX },
        { "wxSTC_INDIC_PLAIN", wxSTC_INDIC_PLAIN },
        { "wxSTC_INDIC_SQUIGGLE", wxSTC_INDIC_SQUIGGLE },
        { "wxSTC_INDIC_STRIKE", wxSTC_INDIC_STRIKE },
        { "wxSTC_INDIC_TT", wxSTC_INDIC_TT },
        { "wxSTC_INVALID_POSITION", wxSTC_INVALID_POSITION },
        { "wxSTC_KEYWORDSET_MAX", wxSTC_KEYWORDSET_MAX },
        { "wxSTC_KEY_ADD", wxSTC_KEY_ADD },
        { "wxSTC_KEY_BACK", wxSTC_KEY_BACK },
        { "wxSTC_KEY_DELETE", wxSTC_KEY_DELETE },
        { "wxSTC_KEY_DIVIDE", wxSTC_KEY_DIVIDE },
        { "wxSTC_KEY_DOWN", wxSTC_KEY_DOWN },
        { "wxSTC_KEY_END", wxSTC_KEY_END },
        { "wxSTC_KEY_ESCAPE", wxSTC_KEY_ESCAPE },
        { "wxSTC_KEY_HOME", wxSTC_KEY_HOME },
        { "wxSTC_KEY_INSERT", wxSTC_KEY_INSERT },
        { "wxSTC_KEY_LEFT", wxSTC_KEY_LEFT },
        { "wxSTC_KEY_NEXT", wxSTC_KEY_NEXT },
        { "wxSTC_KEY_PRIOR", wxSTC_KEY_PRIOR },
        { "wxSTC_KEY_RETURN", wxSTC_KEY_RETURN },
        { "wxSTC_KEY_RIGHT", wxSTC_KEY_RIGHT },
        { "wxSTC_KEY_SUBTRACT", wxSTC_KEY_SUBTRACT },
        { "wxSTC_KEY_TAB", wxSTC_KEY_TAB },
        { "wxSTC_KEY_UP", wxSTC_KEY_UP },
        { "wxSTC_KIX_COMMENT", wxSTC_KIX_COMMENT },
        { "wxSTC_KIX_DEFAULT", wxSTC_KIX_DEFAULT },
        { "wxSTC_KIX_FUNCTIONS", wxSTC_KIX_FUNCTIONS },
        { "wxSTC_KIX_IDENTIFIER", wxSTC_KIX_IDENTIFIER },
        { "wxSTC_KIX_KEYWORD", wxSTC_KIX_KEYWORD },
        { "wxSTC_KIX_MACRO", wxSTC_KIX_MACRO },
        { "wxSTC_KIX_NUMBER", wxSTC_KIX_NUMBER },
        { "wxSTC_KIX_OPERATOR", wxSTC_KIX_OPERATOR },
        { "wxSTC_KIX_STRING1", wxSTC_KIX_STRING1 },
        { "wxSTC_KIX_STRING2", wxSTC_KIX_STRING2 },
        { "wxSTC_KIX_VAR", wxSTC_KIX_VAR },
        { "wxSTC_LASTSTEPINUNDOREDO", wxSTC_LASTSTEPINUNDOREDO },
        { "wxSTC_LEXER_START", wxSTC_LEXER_START },
        { "wxSTC_LEX_ADA", wxSTC_LEX_ADA },
        { "wxSTC_LEX_APDL", wxSTC_LEX_APDL },
        { "wxSTC_LEX_ASM", wxSTC_LEX_ASM },
        { "wxSTC_LEX_ASN1", wxSTC_LEX_ASN1 },

#if !wxCHECK_VERSION(2,8,0)
        { "wxSTC_LEX_ASP", wxSTC_LEX_ASP },
#endif // !wxCHECK_VERSION(2,8,0)

        { "wxSTC_LEX_AU3", wxSTC_LEX_AU3 },
        { "wxSTC_LEX_AUTOMATIC", wxSTC_LEX_AUTOMATIC },
        { "wxSTC_LEX_AVE", wxSTC_LEX_AVE },
        { "wxSTC_LEX_BAAN", wxSTC_LEX_BAAN },
        { "wxSTC_LEX_BASH", wxSTC_LEX_BASH },
        { "wxSTC_LEX_BATCH", wxSTC_LEX_BATCH },
        { "wxSTC_LEX_BLITZBASIC", wxSTC_LEX_BLITZBASIC },
        { "wxSTC_LEX_BULLANT", wxSTC_LEX_BULLANT },
        { "wxSTC_LEX_CAML", wxSTC_LEX_CAML },
        { "wxSTC_LEX_CLW", wxSTC_LEX_CLW },
        { "wxSTC_LEX_CLWNOCASE", wxSTC_LEX_CLWNOCASE },
        { "wxSTC_LEX_CONF", wxSTC_LEX_CONF },
        { "wxSTC_LEX_CONTAINER", wxSTC_LEX_CONTAINER },
        { "wxSTC_LEX_CPP", wxSTC_LEX_CPP },
        { "wxSTC_LEX_CPPNOCASE", wxSTC_LEX_CPPNOCASE },
        { "wxSTC_LEX_CSOUND", wxSTC_LEX_CSOUND },
        { "wxSTC_LEX_CSS", wxSTC_LEX_CSS },
        { "wxSTC_LEX_DIFF", wxSTC_LEX_DIFF },
        { "wxSTC_LEX_EIFFEL", wxSTC_LEX_EIFFEL },
        { "wxSTC_LEX_EIFFELKW", wxSTC_LEX_EIFFELKW },
        { "wxSTC_LEX_ERLANG", wxSTC_LEX_ERLANG },
        { "wxSTC_LEX_ERRORLIST", wxSTC_LEX_ERRORLIST },
        { "wxSTC_LEX_ESCRIPT", wxSTC_LEX_ESCRIPT },
        { "wxSTC_LEX_F77", wxSTC_LEX_F77 },
        { "wxSTC_LEX_FLAGSHIP", wxSTC_LEX_FLAGSHIP },
        { "wxSTC_LEX_FORTH", wxSTC_LEX_FORTH },
        { "wxSTC_LEX_FORTRAN", wxSTC_LEX_FORTRAN },
        { "wxSTC_LEX_FREEBASIC", wxSTC_LEX_FREEBASIC },
        { "wxSTC_LEX_GUI4CLI", wxSTC_LEX_GUI4CLI },
        { "wxSTC_LEX_HASKELL", wxSTC_LEX_HASKELL },
        { "wxSTC_LEX_HTML", wxSTC_LEX_HTML },
        { "wxSTC_LEX_KIX", wxSTC_LEX_KIX },
        { "wxSTC_LEX_LATEX", wxSTC_LEX_LATEX },
        { "wxSTC_LEX_LISP", wxSTC_LEX_LISP },
        { "wxSTC_LEX_LOT", wxSTC_LEX_LOT },
        { "wxSTC_LEX_LOUT", wxSTC_LEX_LOUT },
        { "wxSTC_LEX_LUA", wxSTC_LEX_LUA },
        { "wxSTC_LEX_MAKEFILE", wxSTC_LEX_MAKEFILE },
        { "wxSTC_LEX_MATLAB", wxSTC_LEX_MATLAB },
        { "wxSTC_LEX_METAPOST", wxSTC_LEX_METAPOST },
        { "wxSTC_LEX_MMIXAL", wxSTC_LEX_MMIXAL },
        { "wxSTC_LEX_MSSQL", wxSTC_LEX_MSSQL },
        { "wxSTC_LEX_NNCRONTAB", wxSTC_LEX_NNCRONTAB },
        { "wxSTC_LEX_NSIS", wxSTC_LEX_NSIS },
        { "wxSTC_LEX_NULL", wxSTC_LEX_NULL },
        { "wxSTC_LEX_OCTAVE", wxSTC_LEX_OCTAVE },
        { "wxSTC_LEX_PASCAL", wxSTC_LEX_PASCAL },
        { "wxSTC_LEX_PERL", wxSTC_LEX_PERL },

#if !wxCHECK_VERSION(2,8,0)
        { "wxSTC_LEX_PHP", wxSTC_LEX_PHP },
#endif // !wxCHECK_VERSION(2,8,0)

        { "wxSTC_LEX_PHPSCRIPT", wxSTC_LEX_PHPSCRIPT },
        { "wxSTC_LEX_POV", wxSTC_LEX_POV },
        { "wxSTC_LEX_POWERBASIC", wxSTC_LEX_POWERBASIC },
        { "wxSTC_LEX_PROPERTIES", wxSTC_LEX_PROPERTIES },
        { "wxSTC_LEX_PS", wxSTC_LEX_PS },
        { "wxSTC_LEX_PUREBASIC", wxSTC_LEX_PUREBASIC },
        { "wxSTC_LEX_PYTHON", wxSTC_LEX_PYTHON },
        { "wxSTC_LEX_REBOL", wxSTC_LEX_REBOL },
        { "wxSTC_LEX_RUBY", wxSTC_LEX_RUBY },
        { "wxSTC_LEX_SCRIPTOL", wxSTC_LEX_SCRIPTOL },
        { "wxSTC_LEX_SMALLTALK", wxSTC_LEX_SMALLTALK },
        { "wxSTC_LEX_SPECMAN", wxSTC_LEX_SPECMAN },
        { "wxSTC_LEX_SQL", wxSTC_LEX_SQL },
        { "wxSTC_LEX_TADS3", wxSTC_LEX_TADS3 },
        { "wxSTC_LEX_TCL", wxSTC_LEX_TCL },
        { "wxSTC_LEX_TEX", wxSTC_LEX_TEX },
        { "wxSTC_LEX_VB", wxSTC_LEX_VB },
        { "wxSTC_LEX_VBSCRIPT", wxSTC_LEX_VBSCRIPT },
        { "wxSTC_LEX_VERILOG", wxSTC_LEX_VERILOG },
        { "wxSTC_LEX_VHDL", wxSTC_LEX_VHDL },
        { "wxSTC_LEX_XCODE", wxSTC_LEX_XCODE },
        { "wxSTC_LEX_XML", wxSTC_LEX_XML },
        { "wxSTC_LEX_YAML", wxSTC_LEX_YAML },
        { "wxSTC_LISP_COMMENT", wxSTC_LISP_COMMENT },
        { "wxSTC_LISP_DEFAULT", wxSTC_LISP_DEFAULT },
        { "wxSTC_LISP_IDENTIFIER", wxSTC_LISP_IDENTIFIER },
        { "wxSTC_LISP_KEYWORD", wxSTC_LISP_KEYWORD },
        { "wxSTC_LISP_KEYWORD_KW", wxSTC_LISP_KEYWORD_KW },
        { "wxSTC_LISP_MULTI_COMMENT", wxSTC_LISP_MULTI_COMMENT },
        { "wxSTC_LISP_NUMBER", wxSTC_LISP_NUMBER },
        { "wxSTC_LISP_OPERATOR", wxSTC_LISP_OPERATOR },
        { "wxSTC_LISP_SPECIAL", wxSTC_LISP_SPECIAL },
        { "wxSTC_LISP_STRING", wxSTC_LISP_STRING },
        { "wxSTC_LISP_STRINGEOL", wxSTC_LISP_STRINGEOL },
        { "wxSTC_LISP_SYMBOL", wxSTC_LISP_SYMBOL },
        { "wxSTC_LOT_ABORT", wxSTC_LOT_ABORT },
        { "wxSTC_LOT_BREAK", wxSTC_LOT_BREAK },
        { "wxSTC_LOT_DEFAULT", wxSTC_LOT_DEFAULT },
        { "wxSTC_LOT_FAIL", wxSTC_LOT_FAIL },
        { "wxSTC_LOT_HEADER", wxSTC_LOT_HEADER },
        { "wxSTC_LOT_PASS", wxSTC_LOT_PASS },
        { "wxSTC_LOT_SET", wxSTC_LOT_SET },
        { "wxSTC_LOUT_COMMENT", wxSTC_LOUT_COMMENT },
        { "wxSTC_LOUT_DEFAULT", wxSTC_LOUT_DEFAULT },
        { "wxSTC_LOUT_IDENTIFIER", wxSTC_LOUT_IDENTIFIER },
        { "wxSTC_LOUT_NUMBER", wxSTC_LOUT_NUMBER },
        { "wxSTC_LOUT_OPERATOR", wxSTC_LOUT_OPERATOR },
        { "wxSTC_LOUT_STRING", wxSTC_LOUT_STRING },
        { "wxSTC_LOUT_STRINGEOL", wxSTC_LOUT_STRINGEOL },
        { "wxSTC_LOUT_WORD", wxSTC_LOUT_WORD },
        { "wxSTC_LOUT_WORD2", wxSTC_LOUT_WORD2 },
        { "wxSTC_LOUT_WORD3", wxSTC_LOUT_WORD3 },
        { "wxSTC_LOUT_WORD4", wxSTC_LOUT_WORD4 },
        { "wxSTC_LUA_CHARACTER", wxSTC_LUA_CHARACTER },
        { "wxSTC_LUA_COMMENT", wxSTC_LUA_COMMENT },
        { "wxSTC_LUA_COMMENTDOC", wxSTC_LUA_COMMENTDOC },
        { "wxSTC_LUA_COMMENTLINE", wxSTC_LUA_COMMENTLINE },
        { "wxSTC_LUA_DEFAULT", wxSTC_LUA_DEFAULT },
        { "wxSTC_LUA_IDENTIFIER", wxSTC_LUA_IDENTIFIER },
        { "wxSTC_LUA_LITERALSTRING", wxSTC_LUA_LITERALSTRING },
        { "wxSTC_LUA_NUMBER", wxSTC_LUA_NUMBER },
        { "wxSTC_LUA_OPERATOR", wxSTC_LUA_OPERATOR },
        { "wxSTC_LUA_PREPROCESSOR", wxSTC_LUA_PREPROCESSOR },
        { "wxSTC_LUA_STRING", wxSTC_LUA_STRING },
        { "wxSTC_LUA_STRINGEOL", wxSTC_LUA_STRINGEOL },
        { "wxSTC_LUA_WORD", wxSTC_LUA_WORD },
        { "wxSTC_LUA_WORD2", wxSTC_LUA_WORD2 },
        { "wxSTC_LUA_WORD3", wxSTC_LUA_WORD3 },
        { "wxSTC_LUA_WORD4", wxSTC_LUA_WORD4 },
        { "wxSTC_LUA_WORD5", wxSTC_LUA_WORD5 },
        { "wxSTC_LUA_WORD6", wxSTC_LUA_WORD6 },
        { "wxSTC_LUA_WORD7", wxSTC_LUA_WORD7 },
        { "wxSTC_LUA_WORD8", wxSTC_LUA_WORD8 },
        { "wxSTC_L_COMMAND", wxSTC_L_COMMAND },
        { "wxSTC_L_COMMENT", wxSTC_L_COMMENT },
        { "wxSTC_L_DEFAULT", wxSTC_L_DEFAULT },
        { "wxSTC_L_MATH", wxSTC_L_MATH },
        { "wxSTC_L_TAG", wxSTC_L_TAG },
        { "wxSTC_MAKE_COMMENT", wxSTC_MAKE_COMMENT },
        { "wxSTC_MAKE_DEFAULT", wxSTC_MAKE_DEFAULT },
        { "wxSTC_MAKE_IDENTIFIER", wxSTC_MAKE_IDENTIFIER },
        { "wxSTC_MAKE_IDEOL", wxSTC_MAKE_IDEOL },
        { "wxSTC_MAKE_OPERATOR", wxSTC_MAKE_OPERATOR },
        { "wxSTC_MAKE_PREPROCESSOR", wxSTC_MAKE_PREPROCESSOR },
        { "wxSTC_MAKE_TARGET", wxSTC_MAKE_TARGET },
        { "wxSTC_MARGIN_NUMBER", wxSTC_MARGIN_NUMBER },
        { "wxSTC_MARGIN_SYMBOL", wxSTC_MARGIN_SYMBOL },
        { "wxSTC_MARKER_MAX", wxSTC_MARKER_MAX },
        { "wxSTC_MARKNUM_FOLDER", wxSTC_MARKNUM_FOLDER },
        { "wxSTC_MARKNUM_FOLDEREND", wxSTC_MARKNUM_FOLDEREND },
        { "wxSTC_MARKNUM_FOLDERMIDTAIL", wxSTC_MARKNUM_FOLDERMIDTAIL },
        { "wxSTC_MARKNUM_FOLDEROPEN", wxSTC_MARKNUM_FOLDEROPEN },
        { "wxSTC_MARKNUM_FOLDEROPENMID", wxSTC_MARKNUM_FOLDEROPENMID },
        { "wxSTC_MARKNUM_FOLDERSUB", wxSTC_MARKNUM_FOLDERSUB },
        { "wxSTC_MARKNUM_FOLDERTAIL", wxSTC_MARKNUM_FOLDERTAIL },
        { "wxSTC_MARK_ARROW", wxSTC_MARK_ARROW },
        { "wxSTC_MARK_ARROWDOWN", wxSTC_MARK_ARROWDOWN },
        { "wxSTC_MARK_ARROWS", wxSTC_MARK_ARROWS },
        { "wxSTC_MARK_BACKGROUND", wxSTC_MARK_BACKGROUND },
        { "wxSTC_MARK_BOXMINUS", wxSTC_MARK_BOXMINUS },
        { "wxSTC_MARK_BOXMINUSCONNECTED", wxSTC_MARK_BOXMINUSCONNECTED },
        { "wxSTC_MARK_BOXPLUS", wxSTC_MARK_BOXPLUS },
        { "wxSTC_MARK_BOXPLUSCONNECTED", wxSTC_MARK_BOXPLUSCONNECTED },
        { "wxSTC_MARK_CHARACTER", wxSTC_MARK_CHARACTER },
        { "wxSTC_MARK_CIRCLE", wxSTC_MARK_CIRCLE },
        { "wxSTC_MARK_CIRCLEMINUS", wxSTC_MARK_CIRCLEMINUS },
        { "wxSTC_MARK_CIRCLEMINUSCONNECTED", wxSTC_MARK_CIRCLEMINUSCONNECTED },
        { "wxSTC_MARK_CIRCLEPLUS", wxSTC_MARK_CIRCLEPLUS },
        { "wxSTC_MARK_CIRCLEPLUSCONNECTED", wxSTC_MARK_CIRCLEPLUSCONNECTED },
        { "wxSTC_MARK_DOTDOTDOT", wxSTC_MARK_DOTDOTDOT },
        { "wxSTC_MARK_EMPTY", wxSTC_MARK_EMPTY },
        { "wxSTC_MARK_FULLRECT", wxSTC_MARK_FULLRECT },
        { "wxSTC_MARK_LCORNER", wxSTC_MARK_LCORNER },
        { "wxSTC_MARK_LCORNERCURVE", wxSTC_MARK_LCORNERCURVE },
        { "wxSTC_MARK_MINUS", wxSTC_MARK_MINUS },
        { "wxSTC_MARK_PIXMAP", wxSTC_MARK_PIXMAP },
        { "wxSTC_MARK_PLUS", wxSTC_MARK_PLUS },
        { "wxSTC_MARK_ROUNDRECT", wxSTC_MARK_ROUNDRECT },
        { "wxSTC_MARK_SHORTARROW", wxSTC_MARK_SHORTARROW },
        { "wxSTC_MARK_SMALLRECT", wxSTC_MARK_SMALLRECT },
        { "wxSTC_MARK_TCORNER", wxSTC_MARK_TCORNER },
        { "wxSTC_MARK_TCORNERCURVE", wxSTC_MARK_TCORNERCURVE },
        { "wxSTC_MARK_VLINE", wxSTC_MARK_VLINE },
        { "wxSTC_MASK_FOLDERS", wxSTC_MASK_FOLDERS },
        { "wxSTC_MATLAB_COMMAND", wxSTC_MATLAB_COMMAND },
        { "wxSTC_MATLAB_COMMENT", wxSTC_MATLAB_COMMENT },
        { "wxSTC_MATLAB_DEFAULT", wxSTC_MATLAB_DEFAULT },
        { "wxSTC_MATLAB_DOUBLEQUOTESTRING", wxSTC_MATLAB_DOUBLEQUOTESTRING },
        { "wxSTC_MATLAB_IDENTIFIER", wxSTC_MATLAB_IDENTIFIER },
        { "wxSTC_MATLAB_KEYWORD", wxSTC_MATLAB_KEYWORD },
        { "wxSTC_MATLAB_NUMBER", wxSTC_MATLAB_NUMBER },
        { "wxSTC_MATLAB_OPERATOR", wxSTC_MATLAB_OPERATOR },
        { "wxSTC_MATLAB_STRING", wxSTC_MATLAB_STRING },
        { "wxSTC_METAPOST_COMMAND", wxSTC_METAPOST_COMMAND },
        { "wxSTC_METAPOST_DEFAULT", wxSTC_METAPOST_DEFAULT },
        { "wxSTC_METAPOST_EXTRA", wxSTC_METAPOST_EXTRA },
        { "wxSTC_METAPOST_GROUP", wxSTC_METAPOST_GROUP },
        { "wxSTC_METAPOST_SPECIAL", wxSTC_METAPOST_SPECIAL },
        { "wxSTC_METAPOST_SYMBOL", wxSTC_METAPOST_SYMBOL },
        { "wxSTC_METAPOST_TEXT", wxSTC_METAPOST_TEXT },
        { "wxSTC_MMIXAL_CHAR", wxSTC_MMIXAL_CHAR },
        { "wxSTC_MMIXAL_COMMENT", wxSTC_MMIXAL_COMMENT },
        { "wxSTC_MMIXAL_HEX", wxSTC_MMIXAL_HEX },
        { "wxSTC_MMIXAL_INCLUDE", wxSTC_MMIXAL_INCLUDE },
        { "wxSTC_MMIXAL_LABEL", wxSTC_MMIXAL_LABEL },
        { "wxSTC_MMIXAL_LEADWS", wxSTC_MMIXAL_LEADWS },
        { "wxSTC_MMIXAL_NUMBER", wxSTC_MMIXAL_NUMBER },
        { "wxSTC_MMIXAL_OPCODE", wxSTC_MMIXAL_OPCODE },
        { "wxSTC_MMIXAL_OPCODE_POST", wxSTC_MMIXAL_OPCODE_POST },
        { "wxSTC_MMIXAL_OPCODE_PRE", wxSTC_MMIXAL_OPCODE_PRE },
        { "wxSTC_MMIXAL_OPCODE_UNKNOWN", wxSTC_MMIXAL_OPCODE_UNKNOWN },
        { "wxSTC_MMIXAL_OPCODE_VALID", wxSTC_MMIXAL_OPCODE_VALID },
        { "wxSTC_MMIXAL_OPERANDS", wxSTC_MMIXAL_OPERANDS },
        { "wxSTC_MMIXAL_OPERATOR", wxSTC_MMIXAL_OPERATOR },
        { "wxSTC_MMIXAL_REF", wxSTC_MMIXAL_REF },
        { "wxSTC_MMIXAL_REGISTER", wxSTC_MMIXAL_REGISTER },
        { "wxSTC_MMIXAL_STRING", wxSTC_MMIXAL_STRING },
        { "wxSTC_MMIXAL_SYMBOL", wxSTC_MMIXAL_SYMBOL },
        { "wxSTC_MODEVENTMASKALL", wxSTC_MODEVENTMASKALL },
        { "wxSTC_MOD_BEFOREDELETE", wxSTC_MOD_BEFOREDELETE },
        { "wxSTC_MOD_BEFOREINSERT", wxSTC_MOD_BEFOREINSERT },
        { "wxSTC_MOD_CHANGEFOLD", wxSTC_MOD_CHANGEFOLD },
        { "wxSTC_MOD_CHANGEMARKER", wxSTC_MOD_CHANGEMARKER },
        { "wxSTC_MOD_CHANGESTYLE", wxSTC_MOD_CHANGESTYLE },
        { "wxSTC_MOD_DELETETEXT", wxSTC_MOD_DELETETEXT },
        { "wxSTC_MOD_INSERTTEXT", wxSTC_MOD_INSERTTEXT },
        { "wxSTC_MSSQL_COLUMN_NAME", wxSTC_MSSQL_COLUMN_NAME },
        { "wxSTC_MSSQL_COLUMN_NAME_2", wxSTC_MSSQL_COLUMN_NAME_2 },
        { "wxSTC_MSSQL_COMMENT", wxSTC_MSSQL_COMMENT },
        { "wxSTC_MSSQL_DATATYPE", wxSTC_MSSQL_DATATYPE },
        { "wxSTC_MSSQL_DEFAULT", wxSTC_MSSQL_DEFAULT },
        { "wxSTC_MSSQL_DEFAULT_PREF_DATATYPE", wxSTC_MSSQL_DEFAULT_PREF_DATATYPE },
        { "wxSTC_MSSQL_FUNCTION", wxSTC_MSSQL_FUNCTION },
        { "wxSTC_MSSQL_GLOBAL_VARIABLE", wxSTC_MSSQL_GLOBAL_VARIABLE },
        { "wxSTC_MSSQL_IDENTIFIER", wxSTC_MSSQL_IDENTIFIER },
        { "wxSTC_MSSQL_LINE_COMMENT", wxSTC_MSSQL_LINE_COMMENT },
        { "wxSTC_MSSQL_NUMBER", wxSTC_MSSQL_NUMBER },
        { "wxSTC_MSSQL_OPERATOR", wxSTC_MSSQL_OPERATOR },
        { "wxSTC_MSSQL_STATEMENT", wxSTC_MSSQL_STATEMENT },
        { "wxSTC_MSSQL_STORED_PROCEDURE", wxSTC_MSSQL_STORED_PROCEDURE },
        { "wxSTC_MSSQL_STRING", wxSTC_MSSQL_STRING },
        { "wxSTC_MSSQL_SYSTABLE", wxSTC_MSSQL_SYSTABLE },
        { "wxSTC_MSSQL_VARIABLE", wxSTC_MSSQL_VARIABLE },
        { "wxSTC_MULTILINEUNDOREDO", wxSTC_MULTILINEUNDOREDO },
        { "wxSTC_MULTISTEPUNDOREDO", wxSTC_MULTISTEPUNDOREDO },
        { "wxSTC_NNCRONTAB_ASTERISK", wxSTC_NNCRONTAB_ASTERISK },
        { "wxSTC_NNCRONTAB_COMMENT", wxSTC_NNCRONTAB_COMMENT },
        { "wxSTC_NNCRONTAB_DEFAULT", wxSTC_NNCRONTAB_DEFAULT },
        { "wxSTC_NNCRONTAB_ENVIRONMENT", wxSTC_NNCRONTAB_ENVIRONMENT },
        { "wxSTC_NNCRONTAB_IDENTIFIER", wxSTC_NNCRONTAB_IDENTIFIER },
        { "wxSTC_NNCRONTAB_KEYWORD", wxSTC_NNCRONTAB_KEYWORD },
        { "wxSTC_NNCRONTAB_MODIFIER", wxSTC_NNCRONTAB_MODIFIER },
        { "wxSTC_NNCRONTAB_NUMBER", wxSTC_NNCRONTAB_NUMBER },
        { "wxSTC_NNCRONTAB_SECTION", wxSTC_NNCRONTAB_SECTION },
        { "wxSTC_NNCRONTAB_STRING", wxSTC_NNCRONTAB_STRING },
        { "wxSTC_NNCRONTAB_TASK", wxSTC_NNCRONTAB_TASK },
        { "wxSTC_NSIS_COMMENT", wxSTC_NSIS_COMMENT },
        { "wxSTC_NSIS_COMMENTBOX", wxSTC_NSIS_COMMENTBOX },
        { "wxSTC_NSIS_DEFAULT", wxSTC_NSIS_DEFAULT },
        { "wxSTC_NSIS_FUNCTION", wxSTC_NSIS_FUNCTION },
        { "wxSTC_NSIS_FUNCTIONDEF", wxSTC_NSIS_FUNCTIONDEF },
        { "wxSTC_NSIS_IFDEFINEDEF", wxSTC_NSIS_IFDEFINEDEF },
        { "wxSTC_NSIS_LABEL", wxSTC_NSIS_LABEL },
        { "wxSTC_NSIS_MACRODEF", wxSTC_NSIS_MACRODEF },
        { "wxSTC_NSIS_NUMBER", wxSTC_NSIS_NUMBER },
        { "wxSTC_NSIS_PAGEEX", wxSTC_NSIS_PAGEEX },
        { "wxSTC_NSIS_SECTIONDEF", wxSTC_NSIS_SECTIONDEF },
        { "wxSTC_NSIS_SECTIONGROUP", wxSTC_NSIS_SECTIONGROUP },
        { "wxSTC_NSIS_STRINGDQ", wxSTC_NSIS_STRINGDQ },
        { "wxSTC_NSIS_STRINGLQ", wxSTC_NSIS_STRINGLQ },
        { "wxSTC_NSIS_STRINGRQ", wxSTC_NSIS_STRINGRQ },
        { "wxSTC_NSIS_STRINGVAR", wxSTC_NSIS_STRINGVAR },
        { "wxSTC_NSIS_SUBSECTIONDEF", wxSTC_NSIS_SUBSECTIONDEF },
        { "wxSTC_NSIS_USERDEFINED", wxSTC_NSIS_USERDEFINED },
        { "wxSTC_NSIS_VARIABLE", wxSTC_NSIS_VARIABLE },
        { "wxSTC_OPTIONAL_START", wxSTC_OPTIONAL_START },
        { "wxSTC_PERFORMED_REDO", wxSTC_PERFORMED_REDO },
        { "wxSTC_PERFORMED_UNDO", wxSTC_PERFORMED_UNDO },
        { "wxSTC_PERFORMED_USER", wxSTC_PERFORMED_USER },
        { "wxSTC_PL_ARRAY", wxSTC_PL_ARRAY },
        { "wxSTC_PL_BACKTICKS", wxSTC_PL_BACKTICKS },
        { "wxSTC_PL_CHARACTER", wxSTC_PL_CHARACTER },
        { "wxSTC_PL_COMMENTLINE", wxSTC_PL_COMMENTLINE },
        { "wxSTC_PL_DATASECTION", wxSTC_PL_DATASECTION },
        { "wxSTC_PL_DEFAULT", wxSTC_PL_DEFAULT },
        { "wxSTC_PL_ERROR", wxSTC_PL_ERROR },
        { "wxSTC_PL_HASH", wxSTC_PL_HASH },
        { "wxSTC_PL_HERE_DELIM", wxSTC_PL_HERE_DELIM },
        { "wxSTC_PL_HERE_Q", wxSTC_PL_HERE_Q },
        { "wxSTC_PL_HERE_QQ", wxSTC_PL_HERE_QQ },
        { "wxSTC_PL_HERE_QX", wxSTC_PL_HERE_QX },
        { "wxSTC_PL_IDENTIFIER", wxSTC_PL_IDENTIFIER },
        { "wxSTC_PL_LONGQUOTE", wxSTC_PL_LONGQUOTE },
        { "wxSTC_PL_NUMBER", wxSTC_PL_NUMBER },
        { "wxSTC_PL_OPERATOR", wxSTC_PL_OPERATOR },
        { "wxSTC_PL_POD", wxSTC_PL_POD },
        { "wxSTC_PL_POD_VERB", wxSTC_PL_POD_VERB },
        { "wxSTC_PL_PREPROCESSOR", wxSTC_PL_PREPROCESSOR },
        { "wxSTC_PL_PUNCTUATION", wxSTC_PL_PUNCTUATION },
        { "wxSTC_PL_REGEX", wxSTC_PL_REGEX },
        { "wxSTC_PL_REGSUBST", wxSTC_PL_REGSUBST },
        { "wxSTC_PL_SCALAR", wxSTC_PL_SCALAR },
        { "wxSTC_PL_STRING", wxSTC_PL_STRING },
        { "wxSTC_PL_STRING_Q", wxSTC_PL_STRING_Q },
        { "wxSTC_PL_STRING_QQ", wxSTC_PL_STRING_QQ },
        { "wxSTC_PL_STRING_QR", wxSTC_PL_STRING_QR },
        { "wxSTC_PL_STRING_QW", wxSTC_PL_STRING_QW },
        { "wxSTC_PL_STRING_QX", wxSTC_PL_STRING_QX },
        { "wxSTC_PL_SYMBOLTABLE", wxSTC_PL_SYMBOLTABLE },
        { "wxSTC_PL_VARIABLE_INDEXER", wxSTC_PL_VARIABLE_INDEXER },
        { "wxSTC_PL_WORD", wxSTC_PL_WORD },
        { "wxSTC_POV_BADDIRECTIVE", wxSTC_POV_BADDIRECTIVE },
        { "wxSTC_POV_COMMENT", wxSTC_POV_COMMENT },
        { "wxSTC_POV_COMMENTLINE", wxSTC_POV_COMMENTLINE },
        { "wxSTC_POV_DEFAULT", wxSTC_POV_DEFAULT },
        { "wxSTC_POV_DIRECTIVE", wxSTC_POV_DIRECTIVE },
        { "wxSTC_POV_IDENTIFIER", wxSTC_POV_IDENTIFIER },
        { "wxSTC_POV_NUMBER", wxSTC_POV_NUMBER },
        { "wxSTC_POV_OPERATOR", wxSTC_POV_OPERATOR },
        { "wxSTC_POV_STRING", wxSTC_POV_STRING },
        { "wxSTC_POV_STRINGEOL", wxSTC_POV_STRINGEOL },
        { "wxSTC_POV_WORD2", wxSTC_POV_WORD2 },
        { "wxSTC_POV_WORD3", wxSTC_POV_WORD3 },
        { "wxSTC_POV_WORD4", wxSTC_POV_WORD4 },
        { "wxSTC_POV_WORD5", wxSTC_POV_WORD5 },
        { "wxSTC_POV_WORD6", wxSTC_POV_WORD6 },
        { "wxSTC_POV_WORD7", wxSTC_POV_WORD7 },
        { "wxSTC_POV_WORD8", wxSTC_POV_WORD8 },
        { "wxSTC_PRINT_BLACKONWHITE", wxSTC_PRINT_BLACKONWHITE },
        { "wxSTC_PRINT_COLOURONWHITE", wxSTC_PRINT_COLOURONWHITE },
        { "wxSTC_PRINT_COLOURONWHITEDEFAULTBG", wxSTC_PRINT_COLOURONWHITEDEFAULTBG },
        { "wxSTC_PRINT_INVERTLIGHT", wxSTC_PRINT_INVERTLIGHT },
        { "wxSTC_PRINT_NORMAL", wxSTC_PRINT_NORMAL },
        { "wxSTC_PROPS_ASSIGNMENT", wxSTC_PROPS_ASSIGNMENT },
        { "wxSTC_PROPS_COMMENT", wxSTC_PROPS_COMMENT },
        { "wxSTC_PROPS_DEFAULT", wxSTC_PROPS_DEFAULT },
        { "wxSTC_PROPS_DEFVAL", wxSTC_PROPS_DEFVAL },
        { "wxSTC_PROPS_SECTION", wxSTC_PROPS_SECTION },
        { "wxSTC_PS_BADSTRINGCHAR", wxSTC_PS_BADSTRINGCHAR },
        { "wxSTC_PS_BASE85STRING", wxSTC_PS_BASE85STRING },
        { "wxSTC_PS_COMMENT", wxSTC_PS_COMMENT },
        { "wxSTC_PS_DEFAULT", wxSTC_PS_DEFAULT },
        { "wxSTC_PS_DSC_COMMENT", wxSTC_PS_DSC_COMMENT },
        { "wxSTC_PS_DSC_VALUE", wxSTC_PS_DSC_VALUE },
        { "wxSTC_PS_HEXSTRING", wxSTC_PS_HEXSTRING },
        { "wxSTC_PS_IMMEVAL", wxSTC_PS_IMMEVAL },
        { "wxSTC_PS_KEYWORD", wxSTC_PS_KEYWORD },
        { "wxSTC_PS_LITERAL", wxSTC_PS_LITERAL },
        { "wxSTC_PS_NAME", wxSTC_PS_NAME },
        { "wxSTC_PS_NUMBER", wxSTC_PS_NUMBER },
        { "wxSTC_PS_PAREN_ARRAY", wxSTC_PS_PAREN_ARRAY },
        { "wxSTC_PS_PAREN_DICT", wxSTC_PS_PAREN_DICT },
        { "wxSTC_PS_PAREN_PROC", wxSTC_PS_PAREN_PROC },
        { "wxSTC_PS_TEXT", wxSTC_PS_TEXT },
        { "wxSTC_P_CHARACTER", wxSTC_P_CHARACTER },
        { "wxSTC_P_CLASSNAME", wxSTC_P_CLASSNAME },
        { "wxSTC_P_COMMENTBLOCK", wxSTC_P_COMMENTBLOCK },
        { "wxSTC_P_COMMENTLINE", wxSTC_P_COMMENTLINE },
        { "wxSTC_P_DECORATOR", wxSTC_P_DECORATOR },
        { "wxSTC_P_DEFAULT", wxSTC_P_DEFAULT },
        { "wxSTC_P_DEFNAME", wxSTC_P_DEFNAME },
        { "wxSTC_P_IDENTIFIER", wxSTC_P_IDENTIFIER },
        { "wxSTC_P_NUMBER", wxSTC_P_NUMBER },
        { "wxSTC_P_OPERATOR", wxSTC_P_OPERATOR },
        { "wxSTC_P_STRING", wxSTC_P_STRING },
        { "wxSTC_P_STRINGEOL", wxSTC_P_STRINGEOL },
        { "wxSTC_P_TRIPLE", wxSTC_P_TRIPLE },
        { "wxSTC_P_TRIPLEDOUBLE", wxSTC_P_TRIPLEDOUBLE },
        { "wxSTC_P_WORD", wxSTC_P_WORD },
        { "wxSTC_P_WORD2", wxSTC_P_WORD2 },
        { "wxSTC_RB_BACKTICKS", wxSTC_RB_BACKTICKS },
        { "wxSTC_RB_CHARACTER", wxSTC_RB_CHARACTER },
        { "wxSTC_RB_CLASSNAME", wxSTC_RB_CLASSNAME },
        { "wxSTC_RB_CLASS_VAR", wxSTC_RB_CLASS_VAR },
        { "wxSTC_RB_COMMENTLINE", wxSTC_RB_COMMENTLINE },
        { "wxSTC_RB_DATASECTION", wxSTC_RB_DATASECTION },
        { "wxSTC_RB_DEFAULT", wxSTC_RB_DEFAULT },
        { "wxSTC_RB_DEFNAME", wxSTC_RB_DEFNAME },
        { "wxSTC_RB_ERROR", wxSTC_RB_ERROR },
        { "wxSTC_RB_GLOBAL", wxSTC_RB_GLOBAL },
        { "wxSTC_RB_HERE_DELIM", wxSTC_RB_HERE_DELIM },
        { "wxSTC_RB_HERE_Q", wxSTC_RB_HERE_Q },
        { "wxSTC_RB_HERE_QQ", wxSTC_RB_HERE_QQ },
        { "wxSTC_RB_HERE_QX", wxSTC_RB_HERE_QX },
        { "wxSTC_RB_IDENTIFIER", wxSTC_RB_IDENTIFIER },
        { "wxSTC_RB_INSTANCE_VAR", wxSTC_RB_INSTANCE_VAR },
        { "wxSTC_RB_MODULE_NAME", wxSTC_RB_MODULE_NAME },
        { "wxSTC_RB_NUMBER", wxSTC_RB_NUMBER },
        { "wxSTC_RB_OPERATOR", wxSTC_RB_OPERATOR },
        { "wxSTC_RB_POD", wxSTC_RB_POD },
        { "wxSTC_RB_REGEX", wxSTC_RB_REGEX },
        { "wxSTC_RB_STDERR", wxSTC_RB_STDERR },
        { "wxSTC_RB_STDIN", wxSTC_RB_STDIN },
        { "wxSTC_RB_STDOUT", wxSTC_RB_STDOUT },
        { "wxSTC_RB_STRING", wxSTC_RB_STRING },
        { "wxSTC_RB_STRING_Q", wxSTC_RB_STRING_Q },
        { "wxSTC_RB_STRING_QQ", wxSTC_RB_STRING_QQ },
        { "wxSTC_RB_STRING_QR", wxSTC_RB_STRING_QR },
        { "wxSTC_RB_STRING_QW", wxSTC_RB_STRING_QW },
        { "wxSTC_RB_STRING_QX", wxSTC_RB_STRING_QX },
        { "wxSTC_RB_SYMBOL", wxSTC_RB_SYMBOL },
        { "wxSTC_RB_UPPER_BOUND", wxSTC_RB_UPPER_BOUND },
        { "wxSTC_RB_WORD", wxSTC_RB_WORD },
        { "wxSTC_RB_WORD_DEMOTED", wxSTC_RB_WORD_DEMOTED },
        { "wxSTC_REBOL_BINARY", wxSTC_REBOL_BINARY },
        { "wxSTC_REBOL_BRACEDSTRING", wxSTC_REBOL_BRACEDSTRING },
        { "wxSTC_REBOL_CHARACTER", wxSTC_REBOL_CHARACTER },
        { "wxSTC_REBOL_COMMENTBLOCK", wxSTC_REBOL_COMMENTBLOCK },
        { "wxSTC_REBOL_COMMENTLINE", wxSTC_REBOL_COMMENTLINE },
        { "wxSTC_REBOL_DATE", wxSTC_REBOL_DATE },
        { "wxSTC_REBOL_DEFAULT", wxSTC_REBOL_DEFAULT },
        { "wxSTC_REBOL_EMAIL", wxSTC_REBOL_EMAIL },
        { "wxSTC_REBOL_FILE", wxSTC_REBOL_FILE },
        { "wxSTC_REBOL_IDENTIFIER", wxSTC_REBOL_IDENTIFIER },
        { "wxSTC_REBOL_ISSUE", wxSTC_REBOL_ISSUE },
        { "wxSTC_REBOL_MONEY", wxSTC_REBOL_MONEY },
        { "wxSTC_REBOL_NUMBER", wxSTC_REBOL_NUMBER },
        { "wxSTC_REBOL_OPERATOR", wxSTC_REBOL_OPERATOR },
        { "wxSTC_REBOL_PAIR", wxSTC_REBOL_PAIR },
        { "wxSTC_REBOL_PREFACE", wxSTC_REBOL_PREFACE },
        { "wxSTC_REBOL_QUOTEDSTRING", wxSTC_REBOL_QUOTEDSTRING },
        { "wxSTC_REBOL_TAG", wxSTC_REBOL_TAG },
        { "wxSTC_REBOL_TIME", wxSTC_REBOL_TIME },
        { "wxSTC_REBOL_TUPLE", wxSTC_REBOL_TUPLE },
        { "wxSTC_REBOL_URL", wxSTC_REBOL_URL },
        { "wxSTC_REBOL_WORD", wxSTC_REBOL_WORD },
        { "wxSTC_REBOL_WORD2", wxSTC_REBOL_WORD2 },
        { "wxSTC_REBOL_WORD3", wxSTC_REBOL_WORD3 },
        { "wxSTC_REBOL_WORD4", wxSTC_REBOL_WORD4 },
        { "wxSTC_REBOL_WORD5", wxSTC_REBOL_WORD5 },
        { "wxSTC_REBOL_WORD6", wxSTC_REBOL_WORD6 },
        { "wxSTC_REBOL_WORD7", wxSTC_REBOL_WORD7 },
        { "wxSTC_REBOL_WORD8", wxSTC_REBOL_WORD8 },
        { "wxSTC_SCMOD_ALT", wxSTC_SCMOD_ALT },
        { "wxSTC_SCMOD_CTRL", wxSTC_SCMOD_CTRL },
        { "wxSTC_SCMOD_NORM", wxSTC_SCMOD_NORM },
        { "wxSTC_SCMOD_SHIFT", wxSTC_SCMOD_SHIFT },

#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_CHARACTER", wxSTC_SCRIPTOL_CHARACTER },
#elif !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_CHARACTER", wxSTC_SCRIPTOL_CHARACTER },
#endif // !wxCHECK_VERSION(2,6,0)
#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_CLASSNAME", wxSTC_SCRIPTOL_CLASSNAME },
#endif // wxCHECK_VERSION(2,6,0)

#if !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_COMMENT", wxSTC_SCRIPTOL_COMMENT },
        { "wxSTC_SCRIPTOL_COMMENTBASIC", wxSTC_SCRIPTOL_COMMENTBASIC },
#endif // !wxCHECK_VERSION(2,6,0)

#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_COMMENTBLOCK", wxSTC_SCRIPTOL_COMMENTBLOCK },
#endif // wxCHECK_VERSION(2,6,0)

#if !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_COMMENTDOC", wxSTC_SCRIPTOL_COMMENTDOC },
        { "wxSTC_SCRIPTOL_COMMENTDOCKEYWORD", wxSTC_SCRIPTOL_COMMENTDOCKEYWORD },
        { "wxSTC_SCRIPTOL_COMMENTDOCKEYWORDERROR", wxSTC_SCRIPTOL_COMMENTDOCKEYWORDERROR },
#endif // !wxCHECK_VERSION(2,6,0)

#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_COMMENTLINE", wxSTC_SCRIPTOL_COMMENTLINE },
#elif !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_COMMENTLINE", wxSTC_SCRIPTOL_COMMENTLINE },
#endif // !wxCHECK_VERSION(2,6,0)
#if !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_COMMENTLINEDOC", wxSTC_SCRIPTOL_COMMENTLINEDOC },
#endif // !wxCHECK_VERSION(2,6,0)

#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_CSTYLE", wxSTC_SCRIPTOL_CSTYLE },
        { "wxSTC_SCRIPTOL_DEFAULT", wxSTC_SCRIPTOL_DEFAULT },
#elif !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_DEFAULT", wxSTC_SCRIPTOL_DEFAULT },
#endif // !wxCHECK_VERSION(2,6,0)
#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_IDENTIFIER", wxSTC_SCRIPTOL_IDENTIFIER },
#elif !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_IDENTIFIER", wxSTC_SCRIPTOL_IDENTIFIER },
#endif // !wxCHECK_VERSION(2,6,0)
#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_KEYWORD", wxSTC_SCRIPTOL_KEYWORD },
        { "wxSTC_SCRIPTOL_NUMBER", wxSTC_SCRIPTOL_NUMBER },
#elif !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_NUMBER", wxSTC_SCRIPTOL_NUMBER },
#endif // !wxCHECK_VERSION(2,6,0)
#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_OPERATOR", wxSTC_SCRIPTOL_OPERATOR },
#elif !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_OPERATOR", wxSTC_SCRIPTOL_OPERATOR },
#endif // !wxCHECK_VERSION(2,6,0)
#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_PERSISTENT", wxSTC_SCRIPTOL_PERSISTENT },
        { "wxSTC_SCRIPTOL_PREPROCESSOR", wxSTC_SCRIPTOL_PREPROCESSOR },
#elif !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_PREPROCESSOR", wxSTC_SCRIPTOL_PREPROCESSOR },
#endif // !wxCHECK_VERSION(2,6,0)
#if !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_REGEX", wxSTC_SCRIPTOL_REGEX },
#endif // !wxCHECK_VERSION(2,6,0)

#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_STRING", wxSTC_SCRIPTOL_STRING },
#elif !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_STRING", wxSTC_SCRIPTOL_STRING },
#endif // !wxCHECK_VERSION(2,6,0)
#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_STRINGEOL", wxSTC_SCRIPTOL_STRINGEOL },
#elif !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_STRINGEOL", wxSTC_SCRIPTOL_STRINGEOL },
#endif // !wxCHECK_VERSION(2,6,0)
#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_TRIPLE", wxSTC_SCRIPTOL_TRIPLE },
#endif // wxCHECK_VERSION(2,6,0)

#if !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_UUID", wxSTC_SCRIPTOL_UUID },
        { "wxSTC_SCRIPTOL_VERBATIM", wxSTC_SCRIPTOL_VERBATIM },
#endif // !wxCHECK_VERSION(2,6,0)

#if wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_WHITE", wxSTC_SCRIPTOL_WHITE },
#endif // wxCHECK_VERSION(2,6,0)

#if !wxCHECK_VERSION(2,6,0)
        { "wxSTC_SCRIPTOL_WORD", wxSTC_SCRIPTOL_WORD },
        { "wxSTC_SCRIPTOL_WORD2", wxSTC_SCRIPTOL_WORD2 },
#endif // !wxCHECK_VERSION(2,6,0)

        { "wxSTC_SEL_LINES", wxSTC_SEL_LINES },
        { "wxSTC_SEL_RECTANGLE", wxSTC_SEL_RECTANGLE },
        { "wxSTC_SEL_STREAM", wxSTC_SEL_STREAM },
        { "wxSTC_SH_BACKTICKS", wxSTC_SH_BACKTICKS },
        { "wxSTC_SH_CHARACTER", wxSTC_SH_CHARACTER },
        { "wxSTC_SH_COMMENTLINE", wxSTC_SH_COMMENTLINE },
        { "wxSTC_SH_DEFAULT", wxSTC_SH_DEFAULT },
        { "wxSTC_SH_ERROR", wxSTC_SH_ERROR },
        { "wxSTC_SH_HERE_DELIM", wxSTC_SH_HERE_DELIM },
        { "wxSTC_SH_HERE_Q", wxSTC_SH_HERE_Q },
        { "wxSTC_SH_IDENTIFIER", wxSTC_SH_IDENTIFIER },
        { "wxSTC_SH_NUMBER", wxSTC_SH_NUMBER },
        { "wxSTC_SH_OPERATOR", wxSTC_SH_OPERATOR },
        { "wxSTC_SH_PARAM", wxSTC_SH_PARAM },
        { "wxSTC_SH_SCALAR", wxSTC_SH_SCALAR },
        { "wxSTC_SH_STRING", wxSTC_SH_STRING },
        { "wxSTC_SH_WORD", wxSTC_SH_WORD },
        { "wxSTC_SN_CODE", wxSTC_SN_CODE },
        { "wxSTC_SN_COMMENTLINE", wxSTC_SN_COMMENTLINE },
        { "wxSTC_SN_COMMENTLINEBANG", wxSTC_SN_COMMENTLINEBANG },
        { "wxSTC_SN_DEFAULT", wxSTC_SN_DEFAULT },
        { "wxSTC_SN_IDENTIFIER", wxSTC_SN_IDENTIFIER },
        { "wxSTC_SN_NUMBER", wxSTC_SN_NUMBER },
        { "wxSTC_SN_OPERATOR", wxSTC_SN_OPERATOR },
        { "wxSTC_SN_PREPROCESSOR", wxSTC_SN_PREPROCESSOR },
        { "wxSTC_SN_REGEXTAG", wxSTC_SN_REGEXTAG },
        { "wxSTC_SN_SIGNAL", wxSTC_SN_SIGNAL },
        { "wxSTC_SN_STRING", wxSTC_SN_STRING },
        { "wxSTC_SN_STRINGEOL", wxSTC_SN_STRINGEOL },
        { "wxSTC_SN_USER", wxSTC_SN_USER },
        { "wxSTC_SN_WORD", wxSTC_SN_WORD },
        { "wxSTC_SN_WORD2", wxSTC_SN_WORD2 },
        { "wxSTC_SN_WORD3", wxSTC_SN_WORD3 },
        { "wxSTC_SQL_CHARACTER", wxSTC_SQL_CHARACTER },
        { "wxSTC_SQL_COMMENT", wxSTC_SQL_COMMENT },
        { "wxSTC_SQL_COMMENTDOC", wxSTC_SQL_COMMENTDOC },
        { "wxSTC_SQL_COMMENTDOCKEYWORD", wxSTC_SQL_COMMENTDOCKEYWORD },
        { "wxSTC_SQL_COMMENTDOCKEYWORDERROR", wxSTC_SQL_COMMENTDOCKEYWORDERROR },
        { "wxSTC_SQL_COMMENTLINE", wxSTC_SQL_COMMENTLINE },
        { "wxSTC_SQL_COMMENTLINEDOC", wxSTC_SQL_COMMENTLINEDOC },
        { "wxSTC_SQL_DEFAULT", wxSTC_SQL_DEFAULT },
        { "wxSTC_SQL_IDENTIFIER", wxSTC_SQL_IDENTIFIER },
        { "wxSTC_SQL_NUMBER", wxSTC_SQL_NUMBER },
        { "wxSTC_SQL_OPERATOR", wxSTC_SQL_OPERATOR },
        { "wxSTC_SQL_QUOTEDIDENTIFIER", wxSTC_SQL_QUOTEDIDENTIFIER },
        { "wxSTC_SQL_SQLPLUS", wxSTC_SQL_SQLPLUS },
        { "wxSTC_SQL_SQLPLUS_COMMENT", wxSTC_SQL_SQLPLUS_COMMENT },
        { "wxSTC_SQL_SQLPLUS_PROMPT", wxSTC_SQL_SQLPLUS_PROMPT },
        { "wxSTC_SQL_STRING", wxSTC_SQL_STRING },
        { "wxSTC_SQL_USER1", wxSTC_SQL_USER1 },
        { "wxSTC_SQL_USER2", wxSTC_SQL_USER2 },
        { "wxSTC_SQL_USER3", wxSTC_SQL_USER3 },
        { "wxSTC_SQL_USER4", wxSTC_SQL_USER4 },
        { "wxSTC_SQL_WORD", wxSTC_SQL_WORD },
        { "wxSTC_SQL_WORD2", wxSTC_SQL_WORD2 },
        { "wxSTC_START", wxSTC_START },
        { "wxSTC_STYLE_BRACEBAD", wxSTC_STYLE_BRACEBAD },
        { "wxSTC_STYLE_BRACELIGHT", wxSTC_STYLE_BRACELIGHT },
        { "wxSTC_STYLE_CONTROLCHAR", wxSTC_STYLE_CONTROLCHAR },
        { "wxSTC_STYLE_DEFAULT", wxSTC_STYLE_DEFAULT },
        { "wxSTC_STYLE_INDENTGUIDE", wxSTC_STYLE_INDENTGUIDE },
        { "wxSTC_STYLE_LASTPREDEFINED", wxSTC_STYLE_LASTPREDEFINED },
        { "wxSTC_STYLE_LINENUMBER", wxSTC_STYLE_LINENUMBER },
        { "wxSTC_STYLE_MAX", wxSTC_STYLE_MAX },
        { "wxSTC_ST_ASSIGN", wxSTC_ST_ASSIGN },
        { "wxSTC_ST_BINARY", wxSTC_ST_BINARY },
        { "wxSTC_ST_BOOL", wxSTC_ST_BOOL },
        { "wxSTC_ST_CHARACTER", wxSTC_ST_CHARACTER },
        { "wxSTC_ST_COMMENT", wxSTC_ST_COMMENT },
        { "wxSTC_ST_DEFAULT", wxSTC_ST_DEFAULT },
        { "wxSTC_ST_GLOBAL", wxSTC_ST_GLOBAL },
        { "wxSTC_ST_KWSEND", wxSTC_ST_KWSEND },
        { "wxSTC_ST_NIL", wxSTC_ST_NIL },
        { "wxSTC_ST_NUMBER", wxSTC_ST_NUMBER },
        { "wxSTC_ST_RETURN", wxSTC_ST_RETURN },
        { "wxSTC_ST_SELF", wxSTC_ST_SELF },
        { "wxSTC_ST_SPECIAL", wxSTC_ST_SPECIAL },
        { "wxSTC_ST_SPEC_SEL", wxSTC_ST_SPEC_SEL },
        { "wxSTC_ST_STRING", wxSTC_ST_STRING },
        { "wxSTC_ST_SUPER", wxSTC_ST_SUPER },
        { "wxSTC_ST_SYMBOL", wxSTC_ST_SYMBOL },
        { "wxSTC_T3_BLOCK_COMMENT", wxSTC_T3_BLOCK_COMMENT },
        { "wxSTC_T3_DEFAULT", wxSTC_T3_DEFAULT },
        { "wxSTC_T3_D_STRING", wxSTC_T3_D_STRING },
        { "wxSTC_T3_HTML_DEFAULT", wxSTC_T3_HTML_DEFAULT },
        { "wxSTC_T3_HTML_STRING", wxSTC_T3_HTML_STRING },
        { "wxSTC_T3_HTML_TAG", wxSTC_T3_HTML_TAG },
        { "wxSTC_T3_IDENTIFIER", wxSTC_T3_IDENTIFIER },
        { "wxSTC_T3_KEYWORD", wxSTC_T3_KEYWORD },
        { "wxSTC_T3_LIB_DIRECTIVE", wxSTC_T3_LIB_DIRECTIVE },
        { "wxSTC_T3_LINE_COMMENT", wxSTC_T3_LINE_COMMENT },
        { "wxSTC_T3_MSG_PARAM", wxSTC_T3_MSG_PARAM },
        { "wxSTC_T3_NUMBER", wxSTC_T3_NUMBER },
        { "wxSTC_T3_OPERATOR", wxSTC_T3_OPERATOR },
        { "wxSTC_T3_PREPROCESSOR", wxSTC_T3_PREPROCESSOR },
        { "wxSTC_T3_S_STRING", wxSTC_T3_S_STRING },
        { "wxSTC_T3_USER1", wxSTC_T3_USER1 },
        { "wxSTC_T3_USER2", wxSTC_T3_USER2 },
        { "wxSTC_T3_USER3", wxSTC_T3_USER3 },
        { "wxSTC_T3_X_DEFAULT", wxSTC_T3_X_DEFAULT },
        { "wxSTC_T3_X_STRING", wxSTC_T3_X_STRING },
        { "wxSTC_TEX_COMMAND", wxSTC_TEX_COMMAND },
        { "wxSTC_TEX_DEFAULT", wxSTC_TEX_DEFAULT },
        { "wxSTC_TEX_GROUP", wxSTC_TEX_GROUP },
        { "wxSTC_TEX_SPECIAL", wxSTC_TEX_SPECIAL },
        { "wxSTC_TEX_SYMBOL", wxSTC_TEX_SYMBOL },
        { "wxSTC_TEX_TEXT", wxSTC_TEX_TEXT },
        { "wxSTC_TIME_FOREVER", wxSTC_TIME_FOREVER },
        { "wxSTC_VHDL_ATTRIBUTE", wxSTC_VHDL_ATTRIBUTE },
        { "wxSTC_VHDL_COMMENT", wxSTC_VHDL_COMMENT },
        { "wxSTC_VHDL_COMMENTLINEBANG", wxSTC_VHDL_COMMENTLINEBANG },
        { "wxSTC_VHDL_DEFAULT", wxSTC_VHDL_DEFAULT },
        { "wxSTC_VHDL_IDENTIFIER", wxSTC_VHDL_IDENTIFIER },
        { "wxSTC_VHDL_KEYWORD", wxSTC_VHDL_KEYWORD },
        { "wxSTC_VHDL_NUMBER", wxSTC_VHDL_NUMBER },
        { "wxSTC_VHDL_OPERATOR", wxSTC_VHDL_OPERATOR },
        { "wxSTC_VHDL_STDFUNCTION", wxSTC_VHDL_STDFUNCTION },
        { "wxSTC_VHDL_STDOPERATOR", wxSTC_VHDL_STDOPERATOR },
        { "wxSTC_VHDL_STDPACKAGE", wxSTC_VHDL_STDPACKAGE },
        { "wxSTC_VHDL_STDTYPE", wxSTC_VHDL_STDTYPE },
        { "wxSTC_VHDL_STRING", wxSTC_VHDL_STRING },
        { "wxSTC_VHDL_STRINGEOL", wxSTC_VHDL_STRINGEOL },
        { "wxSTC_VHDL_USERWORD", wxSTC_VHDL_USERWORD },
        { "wxSTC_VISIBLE_SLOP", wxSTC_VISIBLE_SLOP },
        { "wxSTC_VISIBLE_STRICT", wxSTC_VISIBLE_STRICT },
        { "wxSTC_V_COMMENT", wxSTC_V_COMMENT },
        { "wxSTC_V_COMMENTLINE", wxSTC_V_COMMENTLINE },
        { "wxSTC_V_COMMENTLINEBANG", wxSTC_V_COMMENTLINEBANG },
        { "wxSTC_V_DEFAULT", wxSTC_V_DEFAULT },
        { "wxSTC_V_IDENTIFIER", wxSTC_V_IDENTIFIER },
        { "wxSTC_V_NUMBER", wxSTC_V_NUMBER },
        { "wxSTC_V_OPERATOR", wxSTC_V_OPERATOR },
        { "wxSTC_V_PREPROCESSOR", wxSTC_V_PREPROCESSOR },
        { "wxSTC_V_STRING", wxSTC_V_STRING },
        { "wxSTC_V_STRINGEOL", wxSTC_V_STRINGEOL },
        { "wxSTC_V_USER", wxSTC_V_USER },
        { "wxSTC_V_WORD", wxSTC_V_WORD },
        { "wxSTC_V_WORD2", wxSTC_V_WORD2 },
        { "wxSTC_V_WORD3", wxSTC_V_WORD3 },
        { "wxSTC_WRAPVISUALFLAGLOC_DEFAULT", wxSTC_WRAPVISUALFLAGLOC_DEFAULT },
        { "wxSTC_WRAPVISUALFLAGLOC_END_BY_TEXT", wxSTC_WRAPVISUALFLAGLOC_END_BY_TEXT },
        { "wxSTC_WRAPVISUALFLAGLOC_START_BY_TEXT", wxSTC_WRAPVISUALFLAGLOC_START_BY_TEXT },
        { "wxSTC_WRAPVISUALFLAG_END", wxSTC_WRAPVISUALFLAG_END },
        { "wxSTC_WRAPVISUALFLAG_NONE", wxSTC_WRAPVISUALFLAG_NONE },
        { "wxSTC_WRAPVISUALFLAG_START", wxSTC_WRAPVISUALFLAG_START },
        { "wxSTC_WRAP_CHAR", wxSTC_WRAP_CHAR },
        { "wxSTC_WRAP_NONE", wxSTC_WRAP_NONE },
        { "wxSTC_WRAP_WORD", wxSTC_WRAP_WORD },
        { "wxSTC_WS_INVISIBLE", wxSTC_WS_INVISIBLE },
        { "wxSTC_WS_VISIBLEAFTERINDENT", wxSTC_WS_VISIBLEAFTERINDENT },
        { "wxSTC_WS_VISIBLEALWAYS", wxSTC_WS_VISIBLEALWAYS },
        { "wxSTC_YAML_COMMENT", wxSTC_YAML_COMMENT },
        { "wxSTC_YAML_DEFAULT", wxSTC_YAML_DEFAULT },
        { "wxSTC_YAML_DOCUMENT", wxSTC_YAML_DOCUMENT },
        { "wxSTC_YAML_ERROR", wxSTC_YAML_ERROR },
        { "wxSTC_YAML_IDENTIFIER", wxSTC_YAML_IDENTIFIER },
        { "wxSTC_YAML_KEYWORD", wxSTC_YAML_KEYWORD },
        { "wxSTC_YAML_NUMBER", wxSTC_YAML_NUMBER },
        { "wxSTC_YAML_REFERENCE", wxSTC_YAML_REFERENCE },
        { "wxSTC_YAML_TEXT", wxSTC_YAML_TEXT },

        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_wxstc() is called to register %define %string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_wxstc(size_t &count)
{
    static wxLuaBindString stringList[] =
    {

        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_wxstc() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_wxstc(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {

        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxstc() is called to register global functions
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxstc() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_wxstc(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {

        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_wxstc() is called to register classes
// ---------------------------------------------------------------------------

static const char* wxluaclassname_wxCommandEvent = "wxCommandEvent";
static const char* wxluaclassname_wxControl = "wxControl";
static const char* wxluaclassname_wxStyledTextCtrl = "wxStyledTextCtrl";
static const char* wxluaclassname_wxStyledTextEvent = "wxStyledTextEvent";

static const char* wxluabaseclassnames_wxStyledTextCtrl[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStyledTextCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxStyledTextEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStyledTextEvent[] = { NULL };
// ---------------------------------------------------------------------------
// Lua Tag Method Values and Tables for each Class
// ---------------------------------------------------------------------------

extern wxLuaBindMethod wxStyledTextCtrl_methods[];
extern int wxStyledTextCtrl_methodCount;
extern wxLuaBindMethod wxStyledTextEvent_methods[];
extern int wxStyledTextEvent_methodCount;




wxLuaBindClass* wxLuaGetClassList_wxstc(size_t &count)
{
    static wxLuaBindClass classList[] =
    {
        { wxluaclassname_wxStyledTextCtrl, wxStyledTextCtrl_methods, wxStyledTextCtrl_methodCount, CLASSINFO(wxStyledTextCtrl), &wxluatype_wxStyledTextCtrl, wxluabaseclassnames_wxStyledTextCtrl, wxluabaseclassbinds_wxStyledTextCtrl, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxStyledTextEvent, wxStyledTextEvent_methods, wxStyledTextEvent_methodCount, CLASSINFO(wxStyledTextEvent), &wxluatype_wxStyledTextEvent, wxluabaseclassnames_wxStyledTextEvent, wxluabaseclassbinds_wxStyledTextEvent, g_wxluanumberArray_None, 0, }, 

        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_wxstc() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_wxstc, wxLuaBinding)

wxLuaBinding_wxstc::wxLuaBinding_wxstc() : wxLuaBinding()
{
    m_bindingName   = wxT("wxstc");
    m_nameSpace     = wxT("wxstc");
    m_classArray    = wxLuaGetClassList_wxstc(m_classCount);
    m_numberArray   = wxLuaGetDefineList_wxstc(m_numberCount);
    m_stringArray   = wxLuaGetStringList_wxstc(m_stringCount);
    m_eventArray    = wxLuaGetEventList_wxstc(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_wxstc(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_wxstc(m_functionCount);
}



// ---------------------------------------------------------------------------

bool wxLuaBinding_wxstc_init()
{
    static wxLuaBinding_wxstc m_binding;
    if (wxLuaBinding::GetBindingList()->Find(&m_binding)) return false;

    wxLuaBinding::GetBindingList()->Append(&m_binding);
    return true;
}


