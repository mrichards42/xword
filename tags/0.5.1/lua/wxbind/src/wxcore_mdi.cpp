// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxcore_mdi.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#include "wx/wxprec.h"

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif


#include "wxlua/include/wxlstate.h"
#include "wxbind/include/wxcore_bind.h"
#ifdef Above
    #undef Above
#endif
#ifdef Below
    #undef Below
#endif



#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxMDIClientWindow
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxMDIClientWindow'
int wxluatype_wxMDIClientWindow = WXLUA_TUNKNOWN;



// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxMDIClientWindow_methods[] = {
    { 0, 0, 0, 0 },
};

int wxMDIClientWindow_methodCount = sizeof(wxMDIClientWindow_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxMDIParentFrame
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxMDIParentFrame'
int wxluatype_wxMDIParentFrame = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_ActivateNext[] = { &wxluatype_wxMDIParentFrame, NULL };
static int LUACALL wxLua_wxMDIParentFrame_ActivateNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_ActivateNext[1] = {{ wxLua_wxMDIParentFrame_ActivateNext, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMDIParentFrame_ActivateNext }};
//     void ActivateNext()
static int LUACALL wxLua_wxMDIParentFrame_ActivateNext(lua_State *L)
{
    // get this
    wxMDIParentFrame * self = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call ActivateNext
    self->ActivateNext();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_ActivatePrevious[] = { &wxluatype_wxMDIParentFrame, NULL };
static int LUACALL wxLua_wxMDIParentFrame_ActivatePrevious(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_ActivatePrevious[1] = {{ wxLua_wxMDIParentFrame_ActivatePrevious, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMDIParentFrame_ActivatePrevious }};
//     void ActivatePrevious()
static int LUACALL wxLua_wxMDIParentFrame_ActivatePrevious(lua_State *L)
{
    // get this
    wxMDIParentFrame * self = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call ActivatePrevious
    self->ActivatePrevious();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_ArrangeIcons[] = { &wxluatype_wxMDIParentFrame, NULL };
static int LUACALL wxLua_wxMDIParentFrame_ArrangeIcons(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_ArrangeIcons[1] = {{ wxLua_wxMDIParentFrame_ArrangeIcons, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMDIParentFrame_ArrangeIcons }};
//     void ArrangeIcons()
static int LUACALL wxLua_wxMDIParentFrame_ArrangeIcons(lua_State *L)
{
    // get this
    wxMDIParentFrame * self = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call ArrangeIcons
    self->ArrangeIcons();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_Cascade[] = { &wxluatype_wxMDIParentFrame, NULL };
static int LUACALL wxLua_wxMDIParentFrame_Cascade(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_Cascade[1] = {{ wxLua_wxMDIParentFrame_Cascade, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMDIParentFrame_Cascade }};
//     void Cascade()
static int LUACALL wxLua_wxMDIParentFrame_Cascade(lua_State *L)
{
    // get this
    wxMDIParentFrame * self = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call Cascade
    self->Cascade();

    return 0;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_Create[] = { &wxluatype_wxMDIParentFrame, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxMDIParentFrame_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_Create[1] = {{ wxLua_wxMDIParentFrame_Create, WXLUAMETHOD_METHOD, 4, 8, s_wxluatypeArray_wxLua_wxMDIParentFrame_Create }};
//     bool Create(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL, const wxString& name = "wxMDIParentFrame")
static int LUACALL wxLua_wxMDIParentFrame_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxMDIParentFrame"
    const wxString name = (argCount >= 8 ? wxlua_getwxStringtype(L, 8) : wxString(wxT("wxMDIParentFrame")));
    // long style = wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL
    long style = (argCount >= 7 ? (long)wxlua_getnumbertype(L, 7) : wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 6 ? (const wxSize *)wxluaT_getuserdatatype(L, 6, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 5 ? (const wxPoint *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 4);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 3);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxMDIParentFrame * self = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call Create
    bool returns = (self->Create(parent, id, title, *pos, *size, style, name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)

static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_GetActiveChild[] = { &wxluatype_wxMDIParentFrame, NULL };
static int LUACALL wxLua_wxMDIParentFrame_GetActiveChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_GetActiveChild[1] = {{ wxLua_wxMDIParentFrame_GetActiveChild, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMDIParentFrame_GetActiveChild }};
//     wxMDIChildFrame* GetActiveChild() const
static int LUACALL wxLua_wxMDIParentFrame_GetActiveChild(lua_State *L)
{
    // get this
    wxMDIParentFrame * self = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call GetActiveChild
    wxMDIChildFrame* returns = (wxMDIChildFrame*)self->GetActiveChild();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMDIChildFrame);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_GetClientWindow[] = { &wxluatype_wxMDIParentFrame, NULL };
static int LUACALL wxLua_wxMDIParentFrame_GetClientWindow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_GetClientWindow[1] = {{ wxLua_wxMDIParentFrame_GetClientWindow, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMDIParentFrame_GetClientWindow }};
//     wxMDIClientWindow* GetClientWindow() const
static int LUACALL wxLua_wxMDIParentFrame_GetClientWindow(lua_State *L)
{
    // get this
    wxMDIParentFrame * self = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call GetClientWindow
    wxMDIClientWindow* returns = (wxMDIClientWindow*)self->GetClientWindow();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMDIClientWindow);

    return 1;
}


#if ((defined(__WXMSW__)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_GetWindowMenu[] = { &wxluatype_wxMDIParentFrame, NULL };
static int LUACALL wxLua_wxMDIParentFrame_GetWindowMenu(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_GetWindowMenu[1] = {{ wxLua_wxMDIParentFrame_GetWindowMenu, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMDIParentFrame_GetWindowMenu }};
//     %win wxMenu* GetWindowMenu() const
static int LUACALL wxLua_wxMDIParentFrame_GetWindowMenu(lua_State *L)
{
    // get this
    wxMDIParentFrame * self = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call GetWindowMenu
    wxMenu* returns = (wxMenu*)self->GetWindowMenu();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMenu);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_SetWindowMenu[] = { &wxluatype_wxMDIParentFrame, &wxluatype_wxMenu, NULL };
static int LUACALL wxLua_wxMDIParentFrame_SetWindowMenu(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_SetWindowMenu[1] = {{ wxLua_wxMDIParentFrame_SetWindowMenu, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxMDIParentFrame_SetWindowMenu }};
//     %win void SetWindowMenu(%ungc wxMenu* menu)
static int LUACALL wxLua_wxMDIParentFrame_SetWindowMenu(lua_State *L)
{
    // wxMenu menu
    wxMenu * menu = (wxMenu *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMenu);
    if (wxluaO_isgcobject(L, menu)) wxluaO_undeletegcobject(L, menu);
    // get this
    wxMDIParentFrame * self = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call SetWindowMenu
    self->SetWindowMenu(menu);

    return 0;
}

#endif // ((defined(__WXMSW__)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_Tile[] = { &wxluatype_wxMDIParentFrame, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxMDIParentFrame_Tile(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_Tile[1] = {{ wxLua_wxMDIParentFrame_Tile, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxMDIParentFrame_Tile }};
//     void Tile(wxOrientation orient = wxHORIZONTAL)
static int LUACALL wxLua_wxMDIParentFrame_Tile(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxOrientation orient = wxHORIZONTAL
    wxOrientation orient = (argCount >= 2 ? (wxOrientation)wxlua_getenumtype(L, 2) : wxHORIZONTAL);
    // get this
    wxMDIParentFrame * self = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call Tile
    self->Tile(orient);

    return 0;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIParentFrame_constructor1[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxMDIParentFrame_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_constructor1[1] = {{ wxLua_wxMDIParentFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 7, s_wxluatypeArray_wxLua_wxMDIParentFrame_constructor1 }};
//     wxMDIParentFrame(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL, const wxString& name = "wxMDIParentFrame")
static int LUACALL wxLua_wxMDIParentFrame_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxMDIParentFrame"
    const wxString name = (argCount >= 7 ? wxlua_getwxStringtype(L, 7) : wxString(wxT("wxMDIParentFrame")));
    // long style = wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL
    long style = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 3);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 2);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxMDIParentFrame* returns = new wxMDIParentFrame(parent, id, title, *pos, *size, style, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMDIParentFrame);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)

static int LUACALL wxLua_wxMDIParentFrame_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_constructor[1] = {{ wxLua_wxMDIParentFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxMDIParentFrame()
static int LUACALL wxLua_wxMDIParentFrame_constructor(lua_State *L)
{
    // call constructor
    wxMDIParentFrame* returns = new wxMDIParentFrame();
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMDIParentFrame);

    return 1;
}




#if ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIParentFrame_constructor_overload[] =
{

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxMDIParentFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 7, s_wxluatypeArray_wxLua_wxMDIParentFrame_constructor1 },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxMDIParentFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxMDIParentFrame_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxMDIParentFrame_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxMDIParentFrame_methods[] = {
    { "ActivateNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIParentFrame_ActivateNext, 1, NULL },
    { "ActivatePrevious", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIParentFrame_ActivatePrevious, 1, NULL },
    { "ArrangeIcons", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIParentFrame_ArrangeIcons, 1, NULL },
    { "Cascade", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIParentFrame_Cascade, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIParentFrame_Create, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)

    { "GetActiveChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIParentFrame_GetActiveChild, 1, NULL },
    { "GetClientWindow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIParentFrame_GetClientWindow, 1, NULL },

#if ((defined(__WXMSW__)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { "GetWindowMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIParentFrame_GetWindowMenu, 1, NULL },
    { "SetWindowMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIParentFrame_SetWindowMenu, 1, NULL },
#endif // ((defined(__WXMSW__)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

    { "Tile", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIParentFrame_Tile, 1, NULL },

#if ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "wxMDIParentFrame", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxMDIParentFrame_constructor_overload, s_wxluafunc_wxLua_wxMDIParentFrame_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

    { 0, 0, 0, 0 },
};

int wxMDIParentFrame_methodCount = sizeof(wxMDIParentFrame_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxMDIChildFrame
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxMDIChildFrame'
int wxluatype_wxMDIChildFrame = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIChildFrame_Activate[] = { &wxluatype_wxMDIChildFrame, NULL };
static int LUACALL wxLua_wxMDIChildFrame_Activate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIChildFrame_Activate[1] = {{ wxLua_wxMDIChildFrame_Activate, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMDIChildFrame_Activate }};
//     void Activate()
static int LUACALL wxLua_wxMDIChildFrame_Activate(lua_State *L)
{
    // get this
    wxMDIChildFrame * self = (wxMDIChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIChildFrame);
    // call Activate
    self->Activate();

    return 0;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIChildFrame_Create[] = { &wxluatype_wxMDIChildFrame, &wxluatype_wxMDIParentFrame, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxMDIChildFrame_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIChildFrame_Create[1] = {{ wxLua_wxMDIChildFrame_Create, WXLUAMETHOD_METHOD, 4, 8, s_wxluatypeArray_wxLua_wxMDIChildFrame_Create }};
//     bool Create(wxMDIParentFrame* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxMDIChildFrame")
static int LUACALL wxLua_wxMDIChildFrame_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxMDIChildFrame"
    const wxString name = (argCount >= 8 ? wxlua_getwxStringtype(L, 8) : wxString(wxT("wxMDIChildFrame")));
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (argCount >= 7 ? (long)wxlua_getnumbertype(L, 7) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 6 ? (const wxSize *)wxluaT_getuserdatatype(L, 6, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 5 ? (const wxPoint *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 4);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 3);
    // wxMDIParentFrame parent
    wxMDIParentFrame * parent = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMDIParentFrame);
    // get this
    wxMDIChildFrame * self = (wxMDIChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIChildFrame);
    // call Create
    bool returns = (self->Create(parent, id, title, *pos, *size, style, name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)

#if (defined(__WXMSW__)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIChildFrame_Maximize[] = { &wxluatype_wxMDIChildFrame, NULL };
static int LUACALL wxLua_wxMDIChildFrame_Maximize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIChildFrame_Maximize[1] = {{ wxLua_wxMDIChildFrame_Maximize, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMDIChildFrame_Maximize }};
//     %win void Maximize()
static int LUACALL wxLua_wxMDIChildFrame_Maximize(lua_State *L)
{
    // get this
    wxMDIChildFrame * self = (wxMDIChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIChildFrame);
    // call Maximize
    self->Maximize();

    return 0;
}

#endif // (defined(__WXMSW__)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIChildFrame_Restore[] = { &wxluatype_wxMDIChildFrame, NULL };
static int LUACALL wxLua_wxMDIChildFrame_Restore(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIChildFrame_Restore[1] = {{ wxLua_wxMDIChildFrame_Restore, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMDIChildFrame_Restore }};
//     void Restore()
static int LUACALL wxLua_wxMDIChildFrame_Restore(lua_State *L)
{
    // get this
    wxMDIChildFrame * self = (wxMDIChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIChildFrame);
    // call Restore
    self->Restore();

    return 0;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxMDIChildFrame_constructor1[] = { &wxluatype_wxMDIParentFrame, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxMDIChildFrame_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIChildFrame_constructor1[1] = {{ wxLua_wxMDIChildFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 7, s_wxluatypeArray_wxLua_wxMDIChildFrame_constructor1 }};
//     wxMDIChildFrame(wxMDIParentFrame* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxMDIChildFrame")
static int LUACALL wxLua_wxMDIChildFrame_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxMDIChildFrame"
    const wxString name = (argCount >= 7 ? wxlua_getwxStringtype(L, 7) : wxString(wxT("wxMDIChildFrame")));
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 3);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 2);
    // wxMDIParentFrame parent
    wxMDIParentFrame * parent = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMDIParentFrame);
    // call constructor
    wxMDIChildFrame* returns = new wxMDIChildFrame(parent, id, title, *pos, *size, style, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMDIChildFrame);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)

static int LUACALL wxLua_wxMDIChildFrame_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIChildFrame_constructor[1] = {{ wxLua_wxMDIChildFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxMDIChildFrame()
static int LUACALL wxLua_wxMDIChildFrame_constructor(lua_State *L)
{
    // call constructor
    wxMDIChildFrame* returns = new wxMDIChildFrame();
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMDIChildFrame);

    return 1;
}




#if ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMDIChildFrame_constructor_overload[] =
{

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxMDIChildFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 7, s_wxluatypeArray_wxLua_wxMDIChildFrame_constructor1 },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxMDIChildFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxMDIChildFrame_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxMDIChildFrame_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxMDIChildFrame_methods[] = {
    { "Activate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIChildFrame_Activate, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIChildFrame_Create, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)

#if (defined(__WXMSW__)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "Maximize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIChildFrame_Maximize, 1, NULL },
#endif // (defined(__WXMSW__)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

    { "Restore", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMDIChildFrame_Restore, 1, NULL },

#if ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "wxMDIChildFrame", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxMDIChildFrame_constructor_overload, s_wxluafunc_wxLua_wxMDIChildFrame_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

    { 0, 0, 0, 0 },
};

int wxMDIChildFrame_methodCount = sizeof(wxMDIChildFrame_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxDocMDIParentFrame
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxDocMDIParentFrame'
int wxluatype_wxDocMDIParentFrame = WXLUA_TUNKNOWN;

#if ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocMDIParentFrame_Create[] = { &wxluatype_wxDocMDIParentFrame, &wxluatype_wxDocManager, &wxluatype_wxFrame, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocMDIParentFrame_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIParentFrame_Create[1] = {{ wxLua_wxDocMDIParentFrame_Create, WXLUAMETHOD_METHOD, 5, 9, s_wxluatypeArray_wxLua_wxDocMDIParentFrame_Create }};
//     bool Create(wxDocManager *manager, wxFrame *parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxDocMDIParentFrame")
static int LUACALL wxLua_wxDocMDIParentFrame_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxDocMDIParentFrame"
    const wxString name = (argCount >= 9 ? wxlua_getwxStringtype(L, 9) : wxString(wxT("wxDocMDIParentFrame")));
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (argCount >= 8 ? (long)wxlua_getnumbertype(L, 8) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 7 ? (const wxSize *)wxluaT_getuserdatatype(L, 7, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 6 ? (const wxPoint *)wxluaT_getuserdatatype(L, 6, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 5);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 4);
    // wxFrame parent
    wxFrame * parent = (wxFrame *)wxluaT_getuserdatatype(L, 3, wxluatype_wxFrame);
    // wxDocManager manager
    wxDocManager * manager = (wxDocManager *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocManager);
    // get this
    wxDocMDIParentFrame * self = (wxDocMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocMDIParentFrame);
    // call Create
    bool returns = (self->Create(manager, parent, id, title, *pos, *size, style, name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocMDIParentFrame_GetDocumentManager[] = { &wxluatype_wxDocMDIParentFrame, NULL };
static int LUACALL wxLua_wxDocMDIParentFrame_GetDocumentManager(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIParentFrame_GetDocumentManager[1] = {{ wxLua_wxDocMDIParentFrame_GetDocumentManager, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocMDIParentFrame_GetDocumentManager }};
//     wxDocManager *GetDocumentManager() const
static int LUACALL wxLua_wxDocMDIParentFrame_GetDocumentManager(lua_State *L)
{
    // get this
    wxDocMDIParentFrame * self = (wxDocMDIParentFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocMDIParentFrame);
    // call GetDocumentManager
    wxDocManager* returns = (wxDocManager*)self->GetDocumentManager();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocManager);

    return 1;
}


#if ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocMDIParentFrame_constructor1[] = { &wxluatype_wxDocManager, &wxluatype_wxFrame, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocMDIParentFrame_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIParentFrame_constructor1[1] = {{ wxLua_wxDocMDIParentFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 4, 8, s_wxluatypeArray_wxLua_wxDocMDIParentFrame_constructor1 }};
//     wxDocMDIParentFrame(wxDocManager *manager, wxFrame *parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxDocMDIParentFrame")
static int LUACALL wxLua_wxDocMDIParentFrame_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxDocMDIParentFrame"
    const wxString name = (argCount >= 8 ? wxlua_getwxStringtype(L, 8) : wxString(wxT("wxDocMDIParentFrame")));
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (argCount >= 7 ? (long)wxlua_getnumbertype(L, 7) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 6 ? (const wxSize *)wxluaT_getuserdatatype(L, 6, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 5 ? (const wxPoint *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 4);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 3);
    // wxFrame parent
    wxFrame * parent = (wxFrame *)wxluaT_getuserdatatype(L, 2, wxluatype_wxFrame);
    // wxDocManager manager
    wxDocManager * manager = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call constructor
    wxDocMDIParentFrame* returns = new wxDocMDIParentFrame(manager, parent, id, title, *pos, *size, style, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocMDIParentFrame);

    return 1;
}

#endif // ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)

static int LUACALL wxLua_wxDocMDIParentFrame_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIParentFrame_constructor[1] = {{ wxLua_wxDocMDIParentFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxDocMDIParentFrame()
static int LUACALL wxLua_wxDocMDIParentFrame_constructor(lua_State *L)
{
    // call constructor
    wxDocMDIParentFrame* returns = new wxDocMDIParentFrame();
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocMDIParentFrame);

    return 1;
}




#if (((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIParentFrame_constructor_overload[] =
{

#if ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxDocMDIParentFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 4, 8, s_wxluatypeArray_wxLua_wxDocMDIParentFrame_constructor1 },
#endif // ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxDocMDIParentFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxDocMDIParentFrame_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxDocMDIParentFrame_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxDocMDIParentFrame_methods[] = {
#if ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocMDIParentFrame_Create, 1, NULL },
#endif // ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)

    { "GetDocumentManager", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocMDIParentFrame_GetDocumentManager, 1, NULL },

#if (((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "wxDocMDIParentFrame", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxDocMDIParentFrame_constructor_overload, s_wxluafunc_wxLua_wxDocMDIParentFrame_constructor_overload_count, 0 },
#endif // (((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

    { 0, 0, 0, 0 },
};

int wxDocMDIParentFrame_methodCount = sizeof(wxDocMDIParentFrame_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxDocMDIChildFrame
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxDocMDIChildFrame'
int wxluatype_wxDocMDIChildFrame = WXLUA_TUNKNOWN;

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocMDIChildFrame_Create[] = { &wxluatype_wxDocMDIChildFrame, &wxluatype_wxDocument, &wxluatype_wxView, &wxluatype_wxMDIParentFrame, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocMDIChildFrame_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIChildFrame_Create[1] = {{ wxLua_wxDocMDIChildFrame_Create, WXLUAMETHOD_METHOD, 6, 10, s_wxluatypeArray_wxLua_wxDocMDIChildFrame_Create }};
//     bool Create(wxDocument *doc, wxView *view, wxMDIParentFrame *frame, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long type = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxDocMDIChildFrame")
static int LUACALL wxLua_wxDocMDIChildFrame_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxDocMDIChildFrame"
    const wxString name = (argCount >= 10 ? wxlua_getwxStringtype(L, 10) : wxString(wxT("wxDocMDIChildFrame")));
    // long type = wxDEFAULT_FRAME_STYLE
    long type = (argCount >= 9 ? (long)wxlua_getnumbertype(L, 9) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 8 ? (const wxSize *)wxluaT_getuserdatatype(L, 8, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 7 ? (const wxPoint *)wxluaT_getuserdatatype(L, 7, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 6);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 5);
    // wxMDIParentFrame frame
    wxMDIParentFrame * frame = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 4, wxluatype_wxMDIParentFrame);
    // wxView view
    wxView * view = (wxView *)wxluaT_getuserdatatype(L, 3, wxluatype_wxView);
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocument);
    // get this
    wxDocMDIChildFrame * self = (wxDocMDIChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocMDIChildFrame);
    // call Create
    bool returns = (self->Create(doc, view, frame, id, title, *pos, *size, type, name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocMDIChildFrame_GetDocument[] = { &wxluatype_wxDocMDIChildFrame, NULL };
static int LUACALL wxLua_wxDocMDIChildFrame_GetDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIChildFrame_GetDocument[1] = {{ wxLua_wxDocMDIChildFrame_GetDocument, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocMDIChildFrame_GetDocument }};
//     wxDocument *GetDocument() const
static int LUACALL wxLua_wxDocMDIChildFrame_GetDocument(lua_State *L)
{
    // get this
    wxDocMDIChildFrame * self = (wxDocMDIChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocMDIChildFrame);
    // call GetDocument
    wxDocument* returns = (wxDocument*)self->GetDocument();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocument);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocMDIChildFrame_GetView[] = { &wxluatype_wxDocMDIChildFrame, NULL };
static int LUACALL wxLua_wxDocMDIChildFrame_GetView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIChildFrame_GetView[1] = {{ wxLua_wxDocMDIChildFrame_GetView, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocMDIChildFrame_GetView }};
//     wxView *GetView() const
static int LUACALL wxLua_wxDocMDIChildFrame_GetView(lua_State *L)
{
    // get this
    wxDocMDIChildFrame * self = (wxDocMDIChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocMDIChildFrame);
    // call GetView
    wxView* returns = (wxView*)self->GetView();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxView);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocMDIChildFrame_SetDocument[] = { &wxluatype_wxDocMDIChildFrame, &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocMDIChildFrame_SetDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIChildFrame_SetDocument[1] = {{ wxLua_wxDocMDIChildFrame_SetDocument, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocMDIChildFrame_SetDocument }};
//     void SetDocument(wxDocument *doc)
static int LUACALL wxLua_wxDocMDIChildFrame_SetDocument(lua_State *L)
{
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocument);
    // get this
    wxDocMDIChildFrame * self = (wxDocMDIChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocMDIChildFrame);
    // call SetDocument
    self->SetDocument(doc);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocMDIChildFrame_SetView[] = { &wxluatype_wxDocMDIChildFrame, &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxDocMDIChildFrame_SetView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIChildFrame_SetView[1] = {{ wxLua_wxDocMDIChildFrame_SetView, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocMDIChildFrame_SetView }};
//     void SetView(wxView *view)
static int LUACALL wxLua_wxDocMDIChildFrame_SetView(lua_State *L)
{
    // wxView view
    wxView * view = (wxView *)wxluaT_getuserdatatype(L, 2, wxluatype_wxView);
    // get this
    wxDocMDIChildFrame * self = (wxDocMDIChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocMDIChildFrame);
    // call SetView
    self->SetView(view);

    return 0;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocMDIChildFrame_constructor1[] = { &wxluatype_wxDocument, &wxluatype_wxView, &wxluatype_wxMDIParentFrame, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocMDIChildFrame_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIChildFrame_constructor1[1] = {{ wxLua_wxDocMDIChildFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 5, 9, s_wxluatypeArray_wxLua_wxDocMDIChildFrame_constructor1 }};
//     wxDocMDIChildFrame(wxDocument *doc, wxView *view, wxMDIParentFrame *frame, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize,long type = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxDocMDIChildFrame")
static int LUACALL wxLua_wxDocMDIChildFrame_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxDocMDIChildFrame"
    const wxString name = (argCount >= 9 ? wxlua_getwxStringtype(L, 9) : wxString(wxT("wxDocMDIChildFrame")));
    // long type = wxDEFAULT_FRAME_STYLE
    long type = (argCount >= 8 ? (long)wxlua_getnumbertype(L, 8) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 7 ? (const wxSize *)wxluaT_getuserdatatype(L, 7, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 6 ? (const wxPoint *)wxluaT_getuserdatatype(L, 6, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 5);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 4);
    // wxMDIParentFrame frame
    wxMDIParentFrame * frame = (wxMDIParentFrame *)wxluaT_getuserdatatype(L, 3, wxluatype_wxMDIParentFrame);
    // wxView view
    wxView * view = (wxView *)wxluaT_getuserdatatype(L, 2, wxluatype_wxView);
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call constructor
    wxDocMDIChildFrame* returns = new wxDocMDIChildFrame(doc, view, frame, id, title, *pos, *size, type, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocMDIChildFrame);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)

static int LUACALL wxLua_wxDocMDIChildFrame_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIChildFrame_constructor[1] = {{ wxLua_wxDocMDIChildFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxDocMDIChildFrame()
static int LUACALL wxLua_wxDocMDIChildFrame_constructor(lua_State *L)
{
    // call constructor
    wxDocMDIChildFrame* returns = new wxDocMDIChildFrame();
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocMDIChildFrame);

    return 1;
}




#if ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocMDIChildFrame_constructor_overload[] =
{

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxDocMDIChildFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 5, 9, s_wxluatypeArray_wxLua_wxDocMDIChildFrame_constructor1 },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxDocMDIChildFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxDocMDIChildFrame_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxDocMDIChildFrame_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxDocMDIChildFrame_methods[] = {
#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocMDIChildFrame_Create, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect)

    { "GetDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocMDIChildFrame_GetDocument, 1, NULL },
    { "GetView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocMDIChildFrame_GetView, 1, NULL },
    { "SetDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocMDIChildFrame_SetDocument, 1, NULL },
    { "SetView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocMDIChildFrame_SetView, 1, NULL },

#if ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "wxDocMDIChildFrame", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxDocMDIChildFrame_constructor_overload, s_wxluafunc_wxLua_wxDocMDIChildFrame_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

    { 0, 0, 0, 0 },
};

int wxDocMDIChildFrame_methodCount = sizeof(wxDocMDIChildFrame_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxDocChildFrame
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxDocChildFrame'
int wxluatype_wxDocChildFrame = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocChildFrame_GetDocument[] = { &wxluatype_wxDocChildFrame, NULL };
static int LUACALL wxLua_wxDocChildFrame_GetDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocChildFrame_GetDocument[1] = {{ wxLua_wxDocChildFrame_GetDocument, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocChildFrame_GetDocument }};
//     wxDocument* GetDocument() const
static int LUACALL wxLua_wxDocChildFrame_GetDocument(lua_State *L)
{
    // get this
    wxDocChildFrame * self = (wxDocChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocChildFrame);
    // call GetDocument
    wxDocument* returns = (wxDocument*)self->GetDocument();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocument);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocChildFrame_GetView[] = { &wxluatype_wxDocChildFrame, NULL };
static int LUACALL wxLua_wxDocChildFrame_GetView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocChildFrame_GetView[1] = {{ wxLua_wxDocChildFrame_GetView, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocChildFrame_GetView }};
//     wxView* GetView() const
static int LUACALL wxLua_wxDocChildFrame_GetView(lua_State *L)
{
    // get this
    wxDocChildFrame * self = (wxDocChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocChildFrame);
    // call GetView
    wxView* returns = (wxView*)self->GetView();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxView);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocChildFrame_SetDocument[] = { &wxluatype_wxDocChildFrame, &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocChildFrame_SetDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocChildFrame_SetDocument[1] = {{ wxLua_wxDocChildFrame_SetDocument, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocChildFrame_SetDocument }};
//     void SetDocument(wxDocument *doc)
static int LUACALL wxLua_wxDocChildFrame_SetDocument(lua_State *L)
{
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocument);
    // get this
    wxDocChildFrame * self = (wxDocChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocChildFrame);
    // call SetDocument
    self->SetDocument(doc);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocChildFrame_SetView[] = { &wxluatype_wxDocChildFrame, &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxDocChildFrame_SetView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocChildFrame_SetView[1] = {{ wxLua_wxDocChildFrame_SetView, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocChildFrame_SetView }};
//     void SetView(wxView *view)
static int LUACALL wxLua_wxDocChildFrame_SetView(lua_State *L)
{
    // wxView view
    wxView * view = (wxView *)wxluaT_getuserdatatype(L, 2, wxluatype_wxView);
    // get this
    wxDocChildFrame * self = (wxDocChildFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocChildFrame);
    // call SetView
    self->SetView(view);

    return 0;
}


#if ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocChildFrame_constructor[] = { &wxluatype_wxDocument, &wxluatype_wxView, &wxluatype_wxFrame, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocChildFrame_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocChildFrame_constructor[1] = {{ wxLua_wxDocChildFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 5, 9, s_wxluatypeArray_wxLua_wxDocChildFrame_constructor }};
//     wxDocChildFrame(wxDocument* doc, wxView* view, wxFrame* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxDocChildFrame")
static int LUACALL wxLua_wxDocChildFrame_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxDocChildFrame"
    const wxString name = (argCount >= 9 ? wxlua_getwxStringtype(L, 9) : wxString(wxT("wxDocChildFrame")));
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (argCount >= 8 ? (long)wxlua_getnumbertype(L, 8) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 7 ? (const wxSize *)wxluaT_getuserdatatype(L, 7, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 6 ? (const wxPoint *)wxluaT_getuserdatatype(L, 6, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 5);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 4);
    // wxFrame parent
    wxFrame * parent = (wxFrame *)wxluaT_getuserdatatype(L, 3, wxluatype_wxFrame);
    // wxView view
    wxView * view = (wxView *)wxluaT_getuserdatatype(L, 2, wxluatype_wxView);
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call constructor
    wxDocChildFrame* returns = new wxDocChildFrame(doc, view, parent, id, title, *pos, *size, style, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocChildFrame);

    return 1;
}

#endif // ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)



// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxDocChildFrame_methods[] = {
    { "GetDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocChildFrame_GetDocument, 1, NULL },
    { "GetView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocChildFrame_GetView, 1, NULL },
    { "SetDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocChildFrame_SetDocument, 1, NULL },
    { "SetView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocChildFrame_SetView, 1, NULL },

#if ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)
    { "wxDocChildFrame", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxDocChildFrame_constructor, 1, NULL },
#endif // ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)

    { 0, 0, 0, 0 },
};

int wxDocChildFrame_methodCount = sizeof(wxDocChildFrame_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxDocManager
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxDocManager'
int wxluatype_wxDocManager = WXLUA_TUNKNOWN;

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && ((!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE))
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_ActivateView1[] = { &wxluatype_wxDocManager, &wxluatype_wxView, &wxluatype_TBOOLEAN, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxDocManager_ActivateView1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_ActivateView1[1] = {{ wxLua_wxDocManager_ActivateView1, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxDocManager_ActivateView1 }};
//     !%wxchkver_2_6 void ActivateView(wxView* view, bool activate, bool deleting)
static int LUACALL wxLua_wxDocManager_ActivateView1(lua_State *L)
{
    // bool deleting
    bool deleting = wxlua_getbooleantype(L, 4);
    // bool activate
    bool activate = wxlua_getbooleantype(L, 3);
    // wxView view
    wxView * view = (wxView *)wxluaT_getuserdatatype(L, 2, wxluatype_wxView);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call ActivateView
    self->ActivateView(view, activate, deleting);

    return 0;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && ((!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE))

#if ((wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_ActivateView[] = { &wxluatype_wxDocManager, &wxluatype_wxView, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxDocManager_ActivateView(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_ActivateView[1] = {{ wxLua_wxDocManager_ActivateView, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxDocManager_ActivateView }};
//     %wxchkver_2_6 void ActivateView(wxView* view, bool activate)
static int LUACALL wxLua_wxDocManager_ActivateView(lua_State *L)
{
    // bool activate
    bool activate = wxlua_getbooleantype(L, 3);
    // wxView view
    wxView * view = (wxView *)wxluaT_getuserdatatype(L, 2, wxluatype_wxView);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call ActivateView
    self->ActivateView(view, activate);

    return 0;
}

#endif // ((wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_AddDocument[] = { &wxluatype_wxDocManager, &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocManager_AddDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_AddDocument[1] = {{ wxLua_wxDocManager_AddDocument, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_AddDocument }};
//     void AddDocument(wxDocument *doc)
static int LUACALL wxLua_wxDocManager_AddDocument(lua_State *L)
{
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocument);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call AddDocument
    self->AddDocument(doc);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_AddFileToHistory[] = { &wxluatype_wxDocManager, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocManager_AddFileToHistory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_AddFileToHistory[1] = {{ wxLua_wxDocManager_AddFileToHistory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_AddFileToHistory }};
//     void AddFileToHistory(const wxString& filename)
static int LUACALL wxLua_wxDocManager_AddFileToHistory(lua_State *L)
{
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call AddFileToHistory
    self->AddFileToHistory(filename);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_AssociateTemplate[] = { &wxluatype_wxDocManager, &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocManager_AssociateTemplate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_AssociateTemplate[1] = {{ wxLua_wxDocManager_AssociateTemplate, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_AssociateTemplate }};
//     void AssociateTemplate(wxDocTemplate *temp)
static int LUACALL wxLua_wxDocManager_AssociateTemplate(lua_State *L)
{
    // wxDocTemplate temp
    wxDocTemplate * temp = (wxDocTemplate *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocTemplate);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call AssociateTemplate
    self->AssociateTemplate(temp);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_CloseDocuments[] = { &wxluatype_wxDocManager, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxDocManager_CloseDocuments(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_CloseDocuments[1] = {{ wxLua_wxDocManager_CloseDocuments, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxDocManager_CloseDocuments }};
//     bool CloseDocuments(bool force = true)
static int LUACALL wxLua_wxDocManager_CloseDocuments(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool force = true
    bool force = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call CloseDocuments
    bool returns = (self->CloseDocuments(force));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_CreateDocument[] = { &wxluatype_wxDocManager, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDocManager_CreateDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_CreateDocument[1] = {{ wxLua_wxDocManager_CreateDocument, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxDocManager_CreateDocument }};
//     wxDocument* CreateDocument(const wxString& path, long flags)
static int LUACALL wxLua_wxDocManager_CreateDocument(lua_State *L)
{
    // long flags
    long flags = (long)wxlua_getnumbertype(L, 3);
    // const wxString path
    const wxString path = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call CreateDocument
    wxDocument* returns = (wxDocument*)self->CreateDocument(path, flags);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocument);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_CreateView[] = { &wxluatype_wxDocManager, &wxluatype_wxDocument, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDocManager_CreateView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_CreateView[1] = {{ wxLua_wxDocManager_CreateView, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxDocManager_CreateView }};
//     wxView* CreateView(wxDocument*doc, long flags)
static int LUACALL wxLua_wxDocManager_CreateView(lua_State *L)
{
    // long flags
    long flags = (long)wxlua_getnumbertype(L, 3);
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocument);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call CreateView
    wxView* returns = (wxView*)self->CreateView(doc, flags);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxView);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_DisassociateTemplate[] = { &wxluatype_wxDocManager, &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocManager_DisassociateTemplate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_DisassociateTemplate[1] = {{ wxLua_wxDocManager_DisassociateTemplate, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_DisassociateTemplate }};
//     void DisassociateTemplate(wxDocTemplate *temp)
static int LUACALL wxLua_wxDocManager_DisassociateTemplate(lua_State *L)
{
    // wxDocTemplate temp
    wxDocTemplate * temp = (wxDocTemplate *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocTemplate);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call DisassociateTemplate
    self->DisassociateTemplate(temp);

    return 0;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_FileHistoryAddFilesToMenu1[] = { &wxluatype_wxDocManager, &wxluatype_wxMenu, NULL };
static int LUACALL wxLua_wxDocManager_FileHistoryAddFilesToMenu1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_FileHistoryAddFilesToMenu1[1] = {{ wxLua_wxDocManager_FileHistoryAddFilesToMenu1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_FileHistoryAddFilesToMenu1 }};
//     void FileHistoryAddFilesToMenu(wxMenu* menu)
static int LUACALL wxLua_wxDocManager_FileHistoryAddFilesToMenu1(lua_State *L)
{
    // wxMenu menu
    wxMenu * menu = (wxMenu *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMenu);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call FileHistoryAddFilesToMenu
    self->FileHistoryAddFilesToMenu(menu);

    return 0;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_FileHistoryAddFilesToMenu[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_FileHistoryAddFilesToMenu(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_FileHistoryAddFilesToMenu[1] = {{ wxLua_wxDocManager_FileHistoryAddFilesToMenu, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_FileHistoryAddFilesToMenu }};
//     void FileHistoryAddFilesToMenu()
static int LUACALL wxLua_wxDocManager_FileHistoryAddFilesToMenu(lua_State *L)
{
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call FileHistoryAddFilesToMenu
    self->FileHistoryAddFilesToMenu();

    return 0;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_FileHistoryLoad[] = { &wxluatype_wxDocManager, &wxluatype_wxConfigBase, NULL };
static int LUACALL wxLua_wxDocManager_FileHistoryLoad(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_FileHistoryLoad[1] = {{ wxLua_wxDocManager_FileHistoryLoad, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_FileHistoryLoad }};
//     void FileHistoryLoad(wxConfigBase& config)
static int LUACALL wxLua_wxDocManager_FileHistoryLoad(lua_State *L)
{
    // wxConfigBase config
    wxConfigBase * config = (wxConfigBase *)wxluaT_getuserdatatype(L, 2, wxluatype_wxConfigBase);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call FileHistoryLoad
    self->FileHistoryLoad(*config);

    return 0;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_FileHistoryRemoveMenu[] = { &wxluatype_wxDocManager, &wxluatype_wxMenu, NULL };
static int LUACALL wxLua_wxDocManager_FileHistoryRemoveMenu(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_FileHistoryRemoveMenu[1] = {{ wxLua_wxDocManager_FileHistoryRemoveMenu, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_FileHistoryRemoveMenu }};
//     void FileHistoryRemoveMenu(wxMenu* menu)
static int LUACALL wxLua_wxDocManager_FileHistoryRemoveMenu(lua_State *L)
{
    // wxMenu menu
    wxMenu * menu = (wxMenu *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMenu);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call FileHistoryRemoveMenu
    self->FileHistoryRemoveMenu(menu);

    return 0;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_FileHistorySave[] = { &wxluatype_wxDocManager, &wxluatype_wxConfigBase, NULL };
static int LUACALL wxLua_wxDocManager_FileHistorySave(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_FileHistorySave[1] = {{ wxLua_wxDocManager_FileHistorySave, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_FileHistorySave }};
//     void FileHistorySave(wxConfigBase& resourceFile)
static int LUACALL wxLua_wxDocManager_FileHistorySave(lua_State *L)
{
    // wxConfigBase resourceFile
    wxConfigBase * resourceFile = (wxConfigBase *)wxluaT_getuserdatatype(L, 2, wxluatype_wxConfigBase);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call FileHistorySave
    self->FileHistorySave(*resourceFile);

    return 0;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_FileHistoryUseMenu[] = { &wxluatype_wxDocManager, &wxluatype_wxMenu, NULL };
static int LUACALL wxLua_wxDocManager_FileHistoryUseMenu(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_FileHistoryUseMenu[1] = {{ wxLua_wxDocManager_FileHistoryUseMenu, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_FileHistoryUseMenu }};
//     void FileHistoryUseMenu(wxMenu* menu)
static int LUACALL wxLua_wxDocManager_FileHistoryUseMenu(lua_State *L)
{
    // wxMenu menu
    wxMenu * menu = (wxMenu *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMenu);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call FileHistoryUseMenu
    self->FileHistoryUseMenu(menu);

    return 0;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_FindTemplateForPath[] = { &wxluatype_wxDocManager, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocManager_FindTemplateForPath(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_FindTemplateForPath[1] = {{ wxLua_wxDocManager_FindTemplateForPath, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_FindTemplateForPath }};
//     wxDocTemplate * FindTemplateForPath(const wxString& path)
static int LUACALL wxLua_wxDocManager_FindTemplateForPath(lua_State *L)
{
    // const wxString path
    const wxString path = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call FindTemplateForPath
    wxDocTemplate* returns = (wxDocTemplate*)self->FindTemplateForPath(path);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocTemplate);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_GetCurrentDocument[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_GetCurrentDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_GetCurrentDocument[1] = {{ wxLua_wxDocManager_GetCurrentDocument, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_GetCurrentDocument }};
//     wxDocument * GetCurrentDocument()
static int LUACALL wxLua_wxDocManager_GetCurrentDocument(lua_State *L)
{
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call GetCurrentDocument
    wxDocument* returns = (wxDocument*)self->GetCurrentDocument();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocument);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_GetCurrentView[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_GetCurrentView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_GetCurrentView[1] = {{ wxLua_wxDocManager_GetCurrentView, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_GetCurrentView }};
//     wxView * GetCurrentView()
static int LUACALL wxLua_wxDocManager_GetCurrentView(lua_State *L)
{
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call GetCurrentView
    wxView* returns = (wxView*)self->GetCurrentView();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxView);

    return 1;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_GetDocuments[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_GetDocuments(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_GetDocuments[1] = {{ wxLua_wxDocManager_GetDocuments, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_GetDocuments }};
// %override wxLua_wxDocManager_GetDocuments
// wxList& GetDocuments()
static int LUACALL wxLua_wxDocManager_GetDocuments(lua_State *L)
{
    // get this
    wxDocManager *self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call GetDocuments
    wxList &docs = self->GetDocuments();
    wxList *returns = new wxList(docs);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxList);
    // return the number of parameters
    return 1;
}


#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_GetFileHistory[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_GetFileHistory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_GetFileHistory[1] = {{ wxLua_wxDocManager_GetFileHistory, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_GetFileHistory }};
//     wxFileHistory * GetFileHistory()
static int LUACALL wxLua_wxDocManager_GetFileHistory(lua_State *L)
{
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call GetFileHistory
    wxFileHistory* returns = (wxFileHistory*)self->GetFileHistory();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFileHistory);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)

#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_GetHistoryFilesCount[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_GetHistoryFilesCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_GetHistoryFilesCount[1] = {{ wxLua_wxDocManager_GetHistoryFilesCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_GetHistoryFilesCount }};
//     %wxchkver_2_6 size_t GetHistoryFilesCount() const
static int LUACALL wxLua_wxDocManager_GetHistoryFilesCount(lua_State *L)
{
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call GetHistoryFilesCount
    size_t returns = (self->GetHistoryFilesCount());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

#endif // (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_GetLastDirectory[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_GetLastDirectory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_GetLastDirectory[1] = {{ wxLua_wxDocManager_GetLastDirectory, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_GetLastDirectory }};
//     wxString GetLastDirectory() const
static int LUACALL wxLua_wxDocManager_GetLastDirectory(lua_State *L)
{
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call GetLastDirectory
    wxString returns = (self->GetLastDirectory());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_GetMaxDocsOpen[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_GetMaxDocsOpen(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_GetMaxDocsOpen[1] = {{ wxLua_wxDocManager_GetMaxDocsOpen, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_GetMaxDocsOpen }};
//     int GetMaxDocsOpen()
static int LUACALL wxLua_wxDocManager_GetMaxDocsOpen(lua_State *L)
{
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call GetMaxDocsOpen
    int returns = (self->GetMaxDocsOpen());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}


#if (!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_GetNoHistoryFiles[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_GetNoHistoryFiles(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_GetNoHistoryFiles[1] = {{ wxLua_wxDocManager_GetNoHistoryFiles, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_GetNoHistoryFiles }};
//     !%wxchkver_2_6 int GetNoHistoryFiles()
static int LUACALL wxLua_wxDocManager_GetNoHistoryFiles(lua_State *L)
{
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call GetNoHistoryFiles
    int returns = (self->GetNoHistoryFiles());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

#endif // (!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_GetTemplates[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_GetTemplates(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_GetTemplates[1] = {{ wxLua_wxDocManager_GetTemplates, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_GetTemplates }};
// %override wxLua_wxDocManager_GetTemplates
// wxList& GetTemplates()
static int LUACALL wxLua_wxDocManager_GetTemplates(lua_State *L)
{
    // get this
    wxDocManager *self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call GetDocuments
    wxList &docs = self->GetTemplates();
    wxList *returns = new wxList(docs);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxList);
    // return the number of parameters
    return 1;
}


#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_Initialize[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_Initialize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_Initialize[1] = {{ wxLua_wxDocManager_Initialize, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_Initialize }};
//     bool Initialize()
static int LUACALL wxLua_wxDocManager_Initialize(lua_State *L)
{
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call Initialize
    bool returns = (self->Initialize());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_MakeDefaultName[] = { &wxluatype_wxDocManager, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocManager_MakeDefaultName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_MakeDefaultName[1] = {{ wxLua_wxDocManager_MakeDefaultName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_MakeDefaultName }};
// %override wxLua_wxDocManager_MakeDefaultName
//     bool MakeDefaultName(wxString& buf)
static int LUACALL wxLua_wxDocManager_MakeDefaultName(lua_State *L)
{
    // wxString buf
    wxString buf = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call MakeDefaultName
    bool returns = self->MakeDefaultName(buf);
    // push the result flag
    lua_pushboolean(L, returns);
    wxlua_pushwxString(L, buf);

    return 2;
}



#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_OnCreateFileHistory[] = { &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocManager_OnCreateFileHistory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_OnCreateFileHistory[1] = {{ wxLua_wxDocManager_OnCreateFileHistory, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_OnCreateFileHistory }};
//     wxFileHistory* OnCreateFileHistory()
static int LUACALL wxLua_wxDocManager_OnCreateFileHistory(lua_State *L)
{
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call OnCreateFileHistory
    wxFileHistory* returns = (wxFileHistory*)self->OnCreateFileHistory();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFileHistory);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_OnFileClose[] = { &wxluatype_wxDocManager, &wxluatype_wxCommandEvent, NULL };
static int LUACALL wxLua_wxDocManager_OnFileClose(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_OnFileClose[1] = {{ wxLua_wxDocManager_OnFileClose, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_OnFileClose }};
//     void OnFileClose(wxCommandEvent &event)
static int LUACALL wxLua_wxDocManager_OnFileClose(lua_State *L)
{
    // wxCommandEvent event
    wxCommandEvent * event = (wxCommandEvent *)wxluaT_getuserdatatype(L, 2, wxluatype_wxCommandEvent);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call OnFileClose
    self->OnFileClose(*event);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_OnFileCloseAll[] = { &wxluatype_wxDocManager, &wxluatype_wxCommandEvent, NULL };
static int LUACALL wxLua_wxDocManager_OnFileCloseAll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_OnFileCloseAll[1] = {{ wxLua_wxDocManager_OnFileCloseAll, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_OnFileCloseAll }};
//     void OnFileCloseAll(wxCommandEvent& event)
static int LUACALL wxLua_wxDocManager_OnFileCloseAll(lua_State *L)
{
    // wxCommandEvent event
    wxCommandEvent * event = (wxCommandEvent *)wxluaT_getuserdatatype(L, 2, wxluatype_wxCommandEvent);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call OnFileCloseAll
    self->OnFileCloseAll(*event);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_OnFileNew[] = { &wxluatype_wxDocManager, &wxluatype_wxCommandEvent, NULL };
static int LUACALL wxLua_wxDocManager_OnFileNew(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_OnFileNew[1] = {{ wxLua_wxDocManager_OnFileNew, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_OnFileNew }};
//     void OnFileNew(wxCommandEvent &event)
static int LUACALL wxLua_wxDocManager_OnFileNew(lua_State *L)
{
    // wxCommandEvent event
    wxCommandEvent * event = (wxCommandEvent *)wxluaT_getuserdatatype(L, 2, wxluatype_wxCommandEvent);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call OnFileNew
    self->OnFileNew(*event);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_OnFileOpen[] = { &wxluatype_wxDocManager, &wxluatype_wxCommandEvent, NULL };
static int LUACALL wxLua_wxDocManager_OnFileOpen(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_OnFileOpen[1] = {{ wxLua_wxDocManager_OnFileOpen, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_OnFileOpen }};
//     void OnFileOpen(wxCommandEvent &event)
static int LUACALL wxLua_wxDocManager_OnFileOpen(lua_State *L)
{
    // wxCommandEvent event
    wxCommandEvent * event = (wxCommandEvent *)wxluaT_getuserdatatype(L, 2, wxluatype_wxCommandEvent);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call OnFileOpen
    self->OnFileOpen(*event);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_OnFileRevert[] = { &wxluatype_wxDocManager, &wxluatype_wxCommandEvent, NULL };
static int LUACALL wxLua_wxDocManager_OnFileRevert(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_OnFileRevert[1] = {{ wxLua_wxDocManager_OnFileRevert, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_OnFileRevert }};
//     void OnFileRevert(wxCommandEvent& event)
static int LUACALL wxLua_wxDocManager_OnFileRevert(lua_State *L)
{
    // wxCommandEvent event
    wxCommandEvent * event = (wxCommandEvent *)wxluaT_getuserdatatype(L, 2, wxluatype_wxCommandEvent);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call OnFileRevert
    self->OnFileRevert(*event);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_OnFileSave[] = { &wxluatype_wxDocManager, &wxluatype_wxCommandEvent, NULL };
static int LUACALL wxLua_wxDocManager_OnFileSave(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_OnFileSave[1] = {{ wxLua_wxDocManager_OnFileSave, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_OnFileSave }};
//     void OnFileSave(wxCommandEvent &event)
static int LUACALL wxLua_wxDocManager_OnFileSave(lua_State *L)
{
    // wxCommandEvent event
    wxCommandEvent * event = (wxCommandEvent *)wxluaT_getuserdatatype(L, 2, wxluatype_wxCommandEvent);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call OnFileSave
    self->OnFileSave(*event);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_OnFileSaveAs[] = { &wxluatype_wxDocManager, &wxluatype_wxCommandEvent, NULL };
static int LUACALL wxLua_wxDocManager_OnFileSaveAs(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_OnFileSaveAs[1] = {{ wxLua_wxDocManager_OnFileSaveAs, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_OnFileSaveAs }};
//     void OnFileSaveAs(wxCommandEvent &event)
static int LUACALL wxLua_wxDocManager_OnFileSaveAs(lua_State *L)
{
    // wxCommandEvent event
    wxCommandEvent * event = (wxCommandEvent *)wxluaT_getuserdatatype(L, 2, wxluatype_wxCommandEvent);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call OnFileSaveAs
    self->OnFileSaveAs(*event);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_RemoveDocument[] = { &wxluatype_wxDocManager, &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocManager_RemoveDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_RemoveDocument[1] = {{ wxLua_wxDocManager_RemoveDocument, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_RemoveDocument }};
//     void RemoveDocument(wxDocument *doc)
static int LUACALL wxLua_wxDocManager_RemoveDocument(lua_State *L)
{
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocument);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call RemoveDocument
    self->RemoveDocument(doc);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_SetLastDirectory[] = { &wxluatype_wxDocManager, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocManager_SetLastDirectory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_SetLastDirectory[1] = {{ wxLua_wxDocManager_SetLastDirectory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_SetLastDirectory }};
//     void SetLastDirectory(const wxString& dir)
static int LUACALL wxLua_wxDocManager_SetLastDirectory(lua_State *L)
{
    // const wxString dir
    const wxString dir = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call SetLastDirectory
    self->SetLastDirectory(dir);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_SetMaxDocsOpen[] = { &wxluatype_wxDocManager, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDocManager_SetMaxDocsOpen(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_SetMaxDocsOpen[1] = {{ wxLua_wxDocManager_SetMaxDocsOpen, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_SetMaxDocsOpen }};
//     void SetMaxDocsOpen(int n)
static int LUACALL wxLua_wxDocManager_SetMaxDocsOpen(lua_State *L)
{
    // int n
    int n = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxDocManager * self = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call SetMaxDocsOpen
    self->SetMaxDocsOpen(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocManager_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxDocManager_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_constructor[1] = {{ wxLua_wxDocManager_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxDocManager_constructor }};
//     wxDocManager(long flags = wxDEFAULT_DOCMAN_FLAGS, bool initialize = true)
static int LUACALL wxLua_wxDocManager_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool initialize = true
    bool initialize = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // long flags = wxDEFAULT_DOCMAN_FLAGS
    long flags = (argCount >= 1 ? (long)wxlua_getnumbertype(L, 1) : wxDEFAULT_DOCMAN_FLAGS);
    // call constructor
    wxDocManager* returns = new wxDocManager(flags, initialize);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocManager);

    return 1;
}




#if ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && ((!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)))||(((wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_ActivateView_overload[] =
{

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && ((!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE))
    { wxLua_wxDocManager_ActivateView1, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxDocManager_ActivateView1 },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && ((!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE))

#if ((wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
    { wxLua_wxDocManager_ActivateView, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxDocManager_ActivateView },
#endif // ((wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
};
static int s_wxluafunc_wxLua_wxDocManager_ActivateView_overload_count = sizeof(s_wxluafunc_wxLua_wxDocManager_ActivateView_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && ((!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)))||(((wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE))

#if ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocManager_FileHistoryAddFilesToMenu_overload[] =
{

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { wxLua_wxDocManager_FileHistoryAddFilesToMenu1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocManager_FileHistoryAddFilesToMenu1 },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { wxLua_wxDocManager_FileHistoryAddFilesToMenu, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocManager_FileHistoryAddFilesToMenu },
};
static int s_wxluafunc_wxLua_wxDocManager_FileHistoryAddFilesToMenu_overload_count = sizeof(s_wxluafunc_wxLua_wxDocManager_FileHistoryAddFilesToMenu_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxDocManager_methods[] = {
#if ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && ((!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)))||(((wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE))
    { "ActivateView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_ActivateView_overload, s_wxluafunc_wxLua_wxDocManager_ActivateView_overload_count, 0 },
#endif // ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && ((!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)))||(((wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE))

    { "AddDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_AddDocument, 1, NULL },
    { "AddFileToHistory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_AddFileToHistory, 1, NULL },
    { "AssociateTemplate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_AssociateTemplate, 1, NULL },
    { "CloseDocuments", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_CloseDocuments, 1, NULL },
    { "CreateDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_CreateDocument, 1, NULL },
    { "CreateView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_CreateView, 1, NULL },
    { "DisassociateTemplate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_DisassociateTemplate, 1, NULL },

#if ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "FileHistoryAddFilesToMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_FileHistoryAddFilesToMenu_overload, s_wxluafunc_wxLua_wxDocManager_FileHistoryAddFilesToMenu_overload_count, 0 },
#endif // ((wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS))||(wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)
    { "FileHistoryLoad", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_FileHistoryLoad, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { "FileHistoryRemoveMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_FileHistoryRemoveMenu, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)
    { "FileHistorySave", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_FileHistorySave, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { "FileHistoryUseMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_FileHistoryUseMenu, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

    { "FindTemplateForPath", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_FindTemplateForPath, 1, NULL },
    { "GetCurrentDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_GetCurrentDocument, 1, NULL },
    { "GetCurrentView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_GetCurrentView, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)
    { "GetDocuments", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_GetDocuments, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "GetFileHistory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_GetFileHistory, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)

#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "GetHistoryFilesCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_GetHistoryFilesCount, 1, NULL },
#endif // (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

    { "GetLastDirectory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_GetLastDirectory, 1, NULL },
    { "GetMaxDocsOpen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_GetMaxDocsOpen, 1, NULL },

#if (!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "GetNoHistoryFiles", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_GetNoHistoryFiles, 1, NULL },
#endif // (!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)
    { "GetTemplates", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_GetTemplates, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)

    { "Initialize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_Initialize, 1, NULL },
    { "MakeDefaultName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_MakeDefaultName, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "OnCreateFileHistory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_OnCreateFileHistory, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)

    { "OnFileClose", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_OnFileClose, 1, NULL },
    { "OnFileCloseAll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_OnFileCloseAll, 1, NULL },
    { "OnFileNew", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_OnFileNew, 1, NULL },
    { "OnFileOpen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_OnFileOpen, 1, NULL },
    { "OnFileRevert", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_OnFileRevert, 1, NULL },
    { "OnFileSave", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_OnFileSave, 1, NULL },
    { "OnFileSaveAs", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_OnFileSaveAs, 1, NULL },
    { "RemoveDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_RemoveDocument, 1, NULL },
    { "SetLastDirectory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_SetLastDirectory, 1, NULL },
    { "SetMaxDocsOpen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocManager_SetMaxDocsOpen, 1, NULL },
    { "wxDocManager", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxDocManager_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxDocManager_methodCount = sizeof(wxDocManager_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxDocParentFrame
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxDocParentFrame'
int wxluatype_wxDocParentFrame = WXLUA_TUNKNOWN;

#if ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocParentFrame_constructor[] = { &wxluatype_wxDocManager, &wxluatype_wxFrame, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocParentFrame_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocParentFrame_constructor[1] = {{ wxLua_wxDocParentFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 4, 8, s_wxluatypeArray_wxLua_wxDocParentFrame_constructor }};
//     wxDocParentFrame(wxDocManager* manager, wxFrame *parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxDocParentFrame")
static int LUACALL wxLua_wxDocParentFrame_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxDocParentFrame"
    const wxString name = (argCount >= 8 ? wxlua_getwxStringtype(L, 8) : wxString(wxT("wxDocParentFrame")));
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (argCount >= 7 ? (long)wxlua_getnumbertype(L, 7) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 6 ? (const wxSize *)wxluaT_getuserdatatype(L, 6, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 5 ? (const wxPoint *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 4);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 3);
    // wxFrame parent
    wxFrame * parent = (wxFrame *)wxluaT_getuserdatatype(L, 2, wxluatype_wxFrame);
    // wxDocManager manager
    wxDocManager * manager = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call constructor
    wxDocParentFrame* returns = new wxDocParentFrame(manager, parent, id, title, *pos, *size, style, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocParentFrame);

    return 1;
}

#endif // ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)



// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxDocParentFrame_methods[] = {
#if ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)
    { "wxDocParentFrame", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxDocParentFrame_constructor, 1, NULL },
#endif // ((wxLUA_USE_wxFrame) && (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE)) && (wxLUA_USE_wxPointSizeRect)

    { 0, 0, 0, 0 },
};

int wxDocParentFrame_methodCount = sizeof(wxDocParentFrame_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxDocTemplate
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxDocTemplate'
int wxluatype_wxDocTemplate = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_CreateDocument[] = { &wxluatype_wxDocTemplate, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDocTemplate_CreateDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_CreateDocument[1] = {{ wxLua_wxDocTemplate_CreateDocument, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxDocTemplate_CreateDocument }};
//     wxDocument* CreateDocument(const wxString& path, long flags = 0)
static int LUACALL wxLua_wxDocTemplate_CreateDocument(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long flags = 0
    long flags = (argCount >= 3 ? (long)wxlua_getnumbertype(L, 3) : 0);
    // const wxString path
    const wxString path = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call CreateDocument
    wxDocument* returns = (wxDocument*)self->CreateDocument(path, flags);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocument);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_CreateView[] = { &wxluatype_wxDocTemplate, &wxluatype_wxDocument, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDocTemplate_CreateView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_CreateView[1] = {{ wxLua_wxDocTemplate_CreateView, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxDocTemplate_CreateView }};
//     wxView* CreateView(wxDocument *doc, long flags = 0)
static int LUACALL wxLua_wxDocTemplate_CreateView(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long flags = 0
    long flags = (argCount >= 3 ? (long)wxlua_getnumbertype(L, 3) : 0);
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocument);
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call CreateView
    wxView* returns = (wxView*)self->CreateView(doc, flags);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxView);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_GetDefaultExtension[] = { &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocTemplate_GetDefaultExtension(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_GetDefaultExtension[1] = {{ wxLua_wxDocTemplate_GetDefaultExtension, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocTemplate_GetDefaultExtension }};
//     wxString GetDefaultExtension()
static int LUACALL wxLua_wxDocTemplate_GetDefaultExtension(lua_State *L)
{
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call GetDefaultExtension
    wxString returns = (self->GetDefaultExtension());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_GetDescription[] = { &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocTemplate_GetDescription(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_GetDescription[1] = {{ wxLua_wxDocTemplate_GetDescription, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocTemplate_GetDescription }};
//     wxString GetDescription()
static int LUACALL wxLua_wxDocTemplate_GetDescription(lua_State *L)
{
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call GetDescription
    wxString returns = (self->GetDescription());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_GetDirectory[] = { &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocTemplate_GetDirectory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_GetDirectory[1] = {{ wxLua_wxDocTemplate_GetDirectory, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocTemplate_GetDirectory }};
//     wxString GetDirectory()
static int LUACALL wxLua_wxDocTemplate_GetDirectory(lua_State *L)
{
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call GetDirectory
    wxString returns = (self->GetDirectory());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_GetDocumentManager[] = { &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocTemplate_GetDocumentManager(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_GetDocumentManager[1] = {{ wxLua_wxDocTemplate_GetDocumentManager, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocTemplate_GetDocumentManager }};
//     wxDocManager * GetDocumentManager()
static int LUACALL wxLua_wxDocTemplate_GetDocumentManager(lua_State *L)
{
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call GetDocumentManager
    wxDocManager* returns = (wxDocManager*)self->GetDocumentManager();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocManager);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_GetDocumentName[] = { &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocTemplate_GetDocumentName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_GetDocumentName[1] = {{ wxLua_wxDocTemplate_GetDocumentName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocTemplate_GetDocumentName }};
//     wxString GetDocumentName()
static int LUACALL wxLua_wxDocTemplate_GetDocumentName(lua_State *L)
{
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call GetDocumentName
    wxString returns = (self->GetDocumentName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_GetFileFilter[] = { &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocTemplate_GetFileFilter(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_GetFileFilter[1] = {{ wxLua_wxDocTemplate_GetFileFilter, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocTemplate_GetFileFilter }};
//     wxString GetFileFilter()
static int LUACALL wxLua_wxDocTemplate_GetFileFilter(lua_State *L)
{
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call GetFileFilter
    wxString returns = (self->GetFileFilter());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_GetFlags[] = { &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocTemplate_GetFlags(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_GetFlags[1] = {{ wxLua_wxDocTemplate_GetFlags, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocTemplate_GetFlags }};
//     long GetFlags()
static int LUACALL wxLua_wxDocTemplate_GetFlags(lua_State *L)
{
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call GetFlags
    long  returns = (self->GetFlags());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_GetViewName[] = { &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocTemplate_GetViewName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_GetViewName[1] = {{ wxLua_wxDocTemplate_GetViewName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocTemplate_GetViewName }};
//     wxString GetViewName()
static int LUACALL wxLua_wxDocTemplate_GetViewName(lua_State *L)
{
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call GetViewName
    wxString returns = (self->GetViewName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_InitDocument[] = { &wxluatype_wxDocTemplate, &wxluatype_wxDocument, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDocTemplate_InitDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_InitDocument[1] = {{ wxLua_wxDocTemplate_InitDocument, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxDocTemplate_InitDocument }};
//     bool InitDocument(wxDocument* doc, const wxString& path, long flags = 0)
static int LUACALL wxLua_wxDocTemplate_InitDocument(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long flags = 0
    long flags = (argCount >= 4 ? (long)wxlua_getnumbertype(L, 4) : 0);
    // const wxString path
    const wxString path = wxlua_getwxStringtype(L, 3);
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocument);
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call InitDocument
    bool returns = (self->InitDocument(doc, path, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_IsVisible[] = { &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocTemplate_IsVisible(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_IsVisible[1] = {{ wxLua_wxDocTemplate_IsVisible, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocTemplate_IsVisible }};
//     bool IsVisible()
static int LUACALL wxLua_wxDocTemplate_IsVisible(lua_State *L)
{
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call IsVisible
    bool returns = (self->IsVisible());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_SetDefaultExtension[] = { &wxluatype_wxDocTemplate, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocTemplate_SetDefaultExtension(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_SetDefaultExtension[1] = {{ wxLua_wxDocTemplate_SetDefaultExtension, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocTemplate_SetDefaultExtension }};
//     void SetDefaultExtension(const wxString& ext)
static int LUACALL wxLua_wxDocTemplate_SetDefaultExtension(lua_State *L)
{
    // const wxString ext
    const wxString ext = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call SetDefaultExtension
    self->SetDefaultExtension(ext);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_SetDescription[] = { &wxluatype_wxDocTemplate, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocTemplate_SetDescription(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_SetDescription[1] = {{ wxLua_wxDocTemplate_SetDescription, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocTemplate_SetDescription }};
//     void SetDescription(const wxString& descr)
static int LUACALL wxLua_wxDocTemplate_SetDescription(lua_State *L)
{
    // const wxString descr
    const wxString descr = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call SetDescription
    self->SetDescription(descr);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_SetDirectory[] = { &wxluatype_wxDocTemplate, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocTemplate_SetDirectory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_SetDirectory[1] = {{ wxLua_wxDocTemplate_SetDirectory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocTemplate_SetDirectory }};
//     void SetDirectory(const wxString& dir)
static int LUACALL wxLua_wxDocTemplate_SetDirectory(lua_State *L)
{
    // const wxString dir
    const wxString dir = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call SetDirectory
    self->SetDirectory(dir);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_SetDocumentManager[] = { &wxluatype_wxDocTemplate, &wxluatype_wxDocManager, NULL };
static int LUACALL wxLua_wxDocTemplate_SetDocumentManager(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_SetDocumentManager[1] = {{ wxLua_wxDocTemplate_SetDocumentManager, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocTemplate_SetDocumentManager }};
//     void SetDocumentManager(wxDocManager *manager)
static int LUACALL wxLua_wxDocTemplate_SetDocumentManager(lua_State *L)
{
    // wxDocManager manager
    wxDocManager * manager = (wxDocManager *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocManager);
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call SetDocumentManager
    self->SetDocumentManager(manager);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_SetFileFilter[] = { &wxluatype_wxDocTemplate, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocTemplate_SetFileFilter(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_SetFileFilter[1] = {{ wxLua_wxDocTemplate_SetFileFilter, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocTemplate_SetFileFilter }};
//     void SetFileFilter(const wxString& filter)
static int LUACALL wxLua_wxDocTemplate_SetFileFilter(lua_State *L)
{
    // const wxString filter
    const wxString filter = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call SetFileFilter
    self->SetFileFilter(filter);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_SetFlags[] = { &wxluatype_wxDocTemplate, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDocTemplate_SetFlags(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_SetFlags[1] = {{ wxLua_wxDocTemplate_SetFlags, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocTemplate_SetFlags }};
//     void SetFlags(long flags)
static int LUACALL wxLua_wxDocTemplate_SetFlags(lua_State *L)
{
    // long flags
    long flags = (long)wxlua_getnumbertype(L, 2);
    // get this
    wxDocTemplate * self = (wxDocTemplate *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocTemplate);
    // call SetFlags
    self->SetFlags(flags);

    return 0;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxClassInfo)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocTemplate_constructor[] = { &wxluatype_wxDocManager, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxClassInfo, &wxluatype_wxClassInfo, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDocTemplate_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocTemplate_constructor[1] = {{ wxLua_wxDocTemplate_constructor, WXLUAMETHOD_CONSTRUCTOR, 7, 10, s_wxluatypeArray_wxLua_wxDocTemplate_constructor }};
//     wxDocTemplate(wxDocManager* manager, const wxString& descr, const wxString& filter, const wxString& dir, const wxString& ext, const wxString& docTypeName, const wxString& viewTypeName, wxClassInfo* docClassInfo = NULL, wxClassInfo* viewClassInfo = NULL, long flags = wxDEFAULT_TEMPLATE_FLAGS)
static int LUACALL wxLua_wxDocTemplate_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long flags = wxDEFAULT_TEMPLATE_FLAGS
    long flags = (argCount >= 10 ? (long)wxlua_getnumbertype(L, 10) : wxDEFAULT_TEMPLATE_FLAGS);
    // wxClassInfo viewClassInfo = NULL
    wxClassInfo * viewClassInfo = (argCount >= 9 ? (wxClassInfo *)wxluaT_getuserdatatype(L, 9, wxluatype_wxClassInfo) : NULL);
    // wxClassInfo docClassInfo = NULL
    wxClassInfo * docClassInfo = (argCount >= 8 ? (wxClassInfo *)wxluaT_getuserdatatype(L, 8, wxluatype_wxClassInfo) : NULL);
    // const wxString viewTypeName
    const wxString viewTypeName = wxlua_getwxStringtype(L, 7);
    // const wxString docTypeName
    const wxString docTypeName = wxlua_getwxStringtype(L, 6);
    // const wxString ext
    const wxString ext = wxlua_getwxStringtype(L, 5);
    // const wxString dir
    const wxString dir = wxlua_getwxStringtype(L, 4);
    // const wxString filter
    const wxString filter = wxlua_getwxStringtype(L, 3);
    // const wxString descr
    const wxString descr = wxlua_getwxStringtype(L, 2);
    // wxDocManager manager
    wxDocManager * manager = (wxDocManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocManager);
    // call constructor
    wxDocTemplate* returns = new wxDocTemplate(manager, descr, filter, dir, ext, docTypeName, viewTypeName, docClassInfo, viewClassInfo, flags);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocTemplate);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxClassInfo)



// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxDocTemplate_methods[] = {
    { "CreateDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_CreateDocument, 1, NULL },
    { "CreateView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_CreateView, 1, NULL },
    { "GetDefaultExtension", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_GetDefaultExtension, 1, NULL },
    { "GetDescription", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_GetDescription, 1, NULL },
    { "GetDirectory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_GetDirectory, 1, NULL },
    { "GetDocumentManager", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_GetDocumentManager, 1, NULL },
    { "GetDocumentName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_GetDocumentName, 1, NULL },
    { "GetFileFilter", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_GetFileFilter, 1, NULL },
    { "GetFlags", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_GetFlags, 1, NULL },
    { "GetViewName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_GetViewName, 1, NULL },
    { "InitDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_InitDocument, 1, NULL },
    { "IsVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_IsVisible, 1, NULL },
    { "SetDefaultExtension", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_SetDefaultExtension, 1, NULL },
    { "SetDescription", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_SetDescription, 1, NULL },
    { "SetDirectory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_SetDirectory, 1, NULL },
    { "SetDocumentManager", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_SetDocumentManager, 1, NULL },
    { "SetFileFilter", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_SetFileFilter, 1, NULL },
    { "SetFlags", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocTemplate_SetFlags, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxClassInfo)
    { "wxDocTemplate", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxDocTemplate_constructor, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxClassInfo)

    { 0, 0, 0, 0 },
};

int wxDocTemplate_methodCount = sizeof(wxDocTemplate_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxDocument
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxDocument'
int wxluatype_wxDocument = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_AddView[] = { &wxluatype_wxDocument, &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxDocument_AddView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_AddView[1] = {{ wxLua_wxDocument_AddView, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocument_AddView }};
//     virtual bool AddView(wxView *view)
static int LUACALL wxLua_wxDocument_AddView(lua_State *L)
{
    // wxView view
    wxView * view = (wxView *)wxluaT_getuserdatatype(L, 2, wxluatype_wxView);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call AddView
    bool returns = (self->AddView(view));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_Close[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_Close(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_Close[1] = {{ wxLua_wxDocument_Close, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_Close }};
//     virtual bool Close()
static int LUACALL wxLua_wxDocument_Close(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call Close
    bool returns = (self->Close());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_DeleteAllViews[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_DeleteAllViews(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_DeleteAllViews[1] = {{ wxLua_wxDocument_DeleteAllViews, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_DeleteAllViews }};
//     virtual bool DeleteAllViews()
static int LUACALL wxLua_wxDocument_DeleteAllViews(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call DeleteAllViews
    bool returns = (self->DeleteAllViews());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_GetCommandProcessor[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_GetCommandProcessor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_GetCommandProcessor[1] = {{ wxLua_wxDocument_GetCommandProcessor, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_GetCommandProcessor }};
//     wxCommandProcessor* GetCommandProcessor() const
static int LUACALL wxLua_wxDocument_GetCommandProcessor(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call GetCommandProcessor
    wxCommandProcessor* returns = (wxCommandProcessor*)self->GetCommandProcessor();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxCommandProcessor);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_GetDocumentManager[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_GetDocumentManager(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_GetDocumentManager[1] = {{ wxLua_wxDocument_GetDocumentManager, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_GetDocumentManager }};
//     wxDocManager* GetDocumentManager() const
static int LUACALL wxLua_wxDocument_GetDocumentManager(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call GetDocumentManager
    wxDocManager* returns = (wxDocManager*)self->GetDocumentManager();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocManager);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_GetDocumentName[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_GetDocumentName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_GetDocumentName[1] = {{ wxLua_wxDocument_GetDocumentName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_GetDocumentName }};
//     wxString GetDocumentName() const
static int LUACALL wxLua_wxDocument_GetDocumentName(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call GetDocumentName
    wxString returns = (self->GetDocumentName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_GetDocumentTemplate[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_GetDocumentTemplate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_GetDocumentTemplate[1] = {{ wxLua_wxDocument_GetDocumentTemplate, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_GetDocumentTemplate }};
//     wxDocTemplate* GetDocumentTemplate() const
static int LUACALL wxLua_wxDocument_GetDocumentTemplate(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call GetDocumentTemplate
    wxDocTemplate* returns = (wxDocTemplate*)self->GetDocumentTemplate();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocTemplate);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_GetDocumentWindow[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_GetDocumentWindow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_GetDocumentWindow[1] = {{ wxLua_wxDocument_GetDocumentWindow, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_GetDocumentWindow }};
//     wxWindow* GetDocumentWindow() const
static int LUACALL wxLua_wxDocument_GetDocumentWindow(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call GetDocumentWindow
    wxWindow* returns = (wxWindow*)self->GetDocumentWindow();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_GetFilename[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_GetFilename(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_GetFilename[1] = {{ wxLua_wxDocument_GetFilename, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_GetFilename }};
//     wxString GetFilename() const
static int LUACALL wxLua_wxDocument_GetFilename(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call GetFilename
    wxString returns = (self->GetFilename());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_GetFirstView[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_GetFirstView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_GetFirstView[1] = {{ wxLua_wxDocument_GetFirstView, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_GetFirstView }};
//     wxView * GetFirstView() const
static int LUACALL wxLua_wxDocument_GetFirstView(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call GetFirstView
    wxView* returns = (wxView*)self->GetFirstView();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxView);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_GetPrintableName[] = { &wxluatype_wxDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocument_GetPrintableName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_GetPrintableName[1] = {{ wxLua_wxDocument_GetPrintableName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocument_GetPrintableName }};
// %override wxLua_wxDocument_GetPrintableName
//     virtual void GetPrintableName(wxString& name) const
static int LUACALL wxLua_wxDocument_GetPrintableName(lua_State *L)
{
    // wxString name
    wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call GetPrintableName
    self->GetPrintableName(name);
    wxlua_pushwxString(L, name);

    return 1;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_GetTitle[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_GetTitle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_GetTitle[1] = {{ wxLua_wxDocument_GetTitle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_GetTitle }};
//     wxString GetTitle() const
static int LUACALL wxLua_wxDocument_GetTitle(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call GetTitle
    wxString returns = (self->GetTitle());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_GetViews[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_GetViews(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_GetViews[1] = {{ wxLua_wxDocument_GetViews, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_GetViews }};
// %override wxLua_wxDocument_GetViews
// wxList& GetViews() const
static int LUACALL wxLua_wxDocument_GetViews(lua_State *L)
{
    // get this
    wxDocument *self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call GetViews
    wxList &views = self->GetViews();
    wxList *returns = new wxList(views);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxList);
    // return the number of parameters
    return 1;
}


#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_IsModified[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_IsModified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_IsModified[1] = {{ wxLua_wxDocument_IsModified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_IsModified }};
//     virtual bool IsModified() const
static int LUACALL wxLua_wxDocument_IsModified(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call IsModified
    bool returns = (self->IsModified());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_Modify[] = { &wxluatype_wxDocument, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxDocument_Modify(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_Modify[1] = {{ wxLua_wxDocument_Modify, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocument_Modify }};
//     virtual void Modify(bool modify)
static int LUACALL wxLua_wxDocument_Modify(lua_State *L)
{
    // bool modify
    bool modify = wxlua_getbooleantype(L, 2);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call Modify
    self->Modify(modify);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_OnChangedViewList[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_OnChangedViewList(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_OnChangedViewList[1] = {{ wxLua_wxDocument_OnChangedViewList, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_OnChangedViewList }};
//     virtual void OnChangedViewList()
static int LUACALL wxLua_wxDocument_OnChangedViewList(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call OnChangedViewList
    self->OnChangedViewList();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_OnCloseDocument[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_OnCloseDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_OnCloseDocument[1] = {{ wxLua_wxDocument_OnCloseDocument, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_OnCloseDocument }};
//     virtual bool OnCloseDocument()
static int LUACALL wxLua_wxDocument_OnCloseDocument(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call OnCloseDocument
    bool returns = (self->OnCloseDocument());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_OnCreate[] = { &wxluatype_wxDocument, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDocument_OnCreate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_OnCreate[1] = {{ wxLua_wxDocument_OnCreate, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxDocument_OnCreate }};
//     virtual bool OnCreate(const wxString& path, long flags)
static int LUACALL wxLua_wxDocument_OnCreate(lua_State *L)
{
    // long flags
    long flags = (long)wxlua_getnumbertype(L, 3);
    // const wxString path
    const wxString path = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call OnCreate
    bool returns = (self->OnCreate(path, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_OnCreateCommandProcessor[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_OnCreateCommandProcessor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_OnCreateCommandProcessor[1] = {{ wxLua_wxDocument_OnCreateCommandProcessor, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_OnCreateCommandProcessor }};
//     virtual wxCommandProcessor* OnCreateCommandProcessor()
static int LUACALL wxLua_wxDocument_OnCreateCommandProcessor(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call OnCreateCommandProcessor
    wxCommandProcessor* returns = (wxCommandProcessor*)self->OnCreateCommandProcessor();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxCommandProcessor);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_OnNewDocument[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_OnNewDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_OnNewDocument[1] = {{ wxLua_wxDocument_OnNewDocument, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_OnNewDocument }};
//     virtual bool OnNewDocument()
static int LUACALL wxLua_wxDocument_OnNewDocument(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call OnNewDocument
    bool returns = (self->OnNewDocument());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_OnOpenDocument[] = { &wxluatype_wxDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocument_OnOpenDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_OnOpenDocument[1] = {{ wxLua_wxDocument_OnOpenDocument, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocument_OnOpenDocument }};
//     virtual bool OnOpenDocument(const wxString& filename)
static int LUACALL wxLua_wxDocument_OnOpenDocument(lua_State *L)
{
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call OnOpenDocument
    bool returns = (self->OnOpenDocument(filename));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_OnSaveDocument[] = { &wxluatype_wxDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocument_OnSaveDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_OnSaveDocument[1] = {{ wxLua_wxDocument_OnSaveDocument, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocument_OnSaveDocument }};
//     virtual bool OnSaveDocument(const wxString& filename)
static int LUACALL wxLua_wxDocument_OnSaveDocument(lua_State *L)
{
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call OnSaveDocument
    bool returns = (self->OnSaveDocument(filename));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_OnSaveModified[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_OnSaveModified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_OnSaveModified[1] = {{ wxLua_wxDocument_OnSaveModified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_OnSaveModified }};
//     virtual bool OnSaveModified()
static int LUACALL wxLua_wxDocument_OnSaveModified(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call OnSaveModified
    bool returns = (self->OnSaveModified());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_RemoveView[] = { &wxluatype_wxDocument, &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxDocument_RemoveView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_RemoveView[1] = {{ wxLua_wxDocument_RemoveView, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocument_RemoveView }};
//     virtual bool RemoveView(wxView* view)
static int LUACALL wxLua_wxDocument_RemoveView(lua_State *L)
{
    // wxView view
    wxView * view = (wxView *)wxluaT_getuserdatatype(L, 2, wxluatype_wxView);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call RemoveView
    bool returns = (self->RemoveView(view));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_Save[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_Save(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_Save[1] = {{ wxLua_wxDocument_Save, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_Save }};
//     virtual bool Save()
static int LUACALL wxLua_wxDocument_Save(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call Save
    bool returns = (self->Save());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_SaveAs[] = { &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxDocument_SaveAs(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_SaveAs[1] = {{ wxLua_wxDocument_SaveAs, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDocument_SaveAs }};
//     virtual bool SaveAs()
static int LUACALL wxLua_wxDocument_SaveAs(lua_State *L)
{
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call SaveAs
    bool returns = (self->SaveAs());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_SetCommandProcessor[] = { &wxluatype_wxDocument, &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxDocument_SetCommandProcessor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_SetCommandProcessor[1] = {{ wxLua_wxDocument_SetCommandProcessor, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocument_SetCommandProcessor }};
//     virtual void SetCommandProcessor(wxCommandProcessor *processor)
static int LUACALL wxLua_wxDocument_SetCommandProcessor(lua_State *L)
{
    // wxCommandProcessor processor
    wxCommandProcessor * processor = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 2, wxluatype_wxCommandProcessor);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call SetCommandProcessor
    self->SetCommandProcessor(processor);

    return 0;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_SetDocumentName[] = { &wxluatype_wxDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocument_SetDocumentName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_SetDocumentName[1] = {{ wxLua_wxDocument_SetDocumentName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocument_SetDocumentName }};
//     void SetDocumentName(const wxString& name)
static int LUACALL wxLua_wxDocument_SetDocumentName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call SetDocumentName
    self->SetDocumentName(name);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_SetDocumentTemplate[] = { &wxluatype_wxDocument, &wxluatype_wxDocTemplate, NULL };
static int LUACALL wxLua_wxDocument_SetDocumentTemplate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_SetDocumentTemplate[1] = {{ wxLua_wxDocument_SetDocumentTemplate, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocument_SetDocumentTemplate }};
//     void SetDocumentTemplate(wxDocTemplate* templ)
static int LUACALL wxLua_wxDocument_SetDocumentTemplate(lua_State *L)
{
    // wxDocTemplate templ
    wxDocTemplate * templ = (wxDocTemplate *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocTemplate);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call SetDocumentTemplate
    self->SetDocumentTemplate(templ);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_SetFilename[] = { &wxluatype_wxDocument, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxDocument_SetFilename(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_SetFilename[1] = {{ wxLua_wxDocument_SetFilename, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxDocument_SetFilename }};
//     void SetFilename(const wxString& filename, bool notifyViews = false)
static int LUACALL wxLua_wxDocument_SetFilename(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool notifyViews = false
    bool notifyViews = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : false);
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call SetFilename
    self->SetFilename(filename, notifyViews);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_SetTitle[] = { &wxluatype_wxDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDocument_SetTitle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_SetTitle[1] = {{ wxLua_wxDocument_SetTitle, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDocument_SetTitle }};
//     void SetTitle(const wxString& title)
static int LUACALL wxLua_wxDocument_SetTitle(lua_State *L)
{
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 2);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call SetTitle
    self->SetTitle(title);

    return 0;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxObject)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDocument_UpdateAllViews[] = { &wxluatype_wxDocument, &wxluatype_wxView, &wxluatype_wxObject, NULL };
static int LUACALL wxLua_wxDocument_UpdateAllViews(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_UpdateAllViews[1] = {{ wxLua_wxDocument_UpdateAllViews, WXLUAMETHOD_METHOD, 1, 3, s_wxluatypeArray_wxLua_wxDocument_UpdateAllViews }};
//     void UpdateAllViews(wxView* sender = NULL, wxObject* hint = NULL)
static int LUACALL wxLua_wxDocument_UpdateAllViews(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxObject hint = NULL
    wxObject * hint = (argCount >= 3 ? (wxObject *)wxluaT_getuserdatatype(L, 3, wxluatype_wxObject) : NULL);
    // wxView sender = NULL
    wxView * sender = (argCount >= 2 ? (wxView *)wxluaT_getuserdatatype(L, 2, wxluatype_wxView) : NULL);
    // get this
    wxDocument * self = (wxDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDocument);
    // call UpdateAllViews
    self->UpdateAllViews(sender, hint);

    return 0;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxObject)

static int LUACALL wxLua_wxDocument_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDocument_constructor[1] = {{ wxLua_wxDocument_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxDocument()
static int LUACALL wxLua_wxDocument_constructor(lua_State *L)
{
    // call constructor
    wxDocument* returns = new wxDocument();
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocument);

    return 1;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxDocument_methods[] = {
    { "AddView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_AddView, 1, NULL },
    { "Close", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_Close, 1, NULL },
    { "DeleteAllViews", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_DeleteAllViews, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)
    { "GetCommandProcessor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_GetCommandProcessor, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)

    { "GetDocumentManager", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_GetDocumentManager, 1, NULL },
    { "GetDocumentName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_GetDocumentName, 1, NULL },
    { "GetDocumentTemplate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_GetDocumentTemplate, 1, NULL },
    { "GetDocumentWindow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_GetDocumentWindow, 1, NULL },
    { "GetFilename", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_GetFilename, 1, NULL },
    { "GetFirstView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_GetFirstView, 1, NULL },
    { "GetPrintableName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_GetPrintableName, 1, NULL },
    { "GetTitle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_GetTitle, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)
    { "GetViews", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_GetViews, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxList && !wxUSE_STL)

    { "IsModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_IsModified, 1, NULL },
    { "Modify", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_Modify, 1, NULL },
    { "OnChangedViewList", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_OnChangedViewList, 1, NULL },
    { "OnCloseDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_OnCloseDocument, 1, NULL },
    { "OnCreate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_OnCreate, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)
    { "OnCreateCommandProcessor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_OnCreateCommandProcessor, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)

    { "OnNewDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_OnNewDocument, 1, NULL },
    { "OnOpenDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_OnOpenDocument, 1, NULL },
    { "OnSaveDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_OnSaveDocument, 1, NULL },
    { "OnSaveModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_OnSaveModified, 1, NULL },
    { "RemoveView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_RemoveView, 1, NULL },
    { "Save", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_Save, 1, NULL },
    { "SaveAs", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_SaveAs, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)
    { "SetCommandProcessor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_SetCommandProcessor, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxCommandProcessor)

    { "SetDocumentName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_SetDocumentName, 1, NULL },
    { "SetDocumentTemplate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_SetDocumentTemplate, 1, NULL },
    { "SetFilename", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_SetFilename, 1, NULL },
    { "SetTitle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_SetTitle, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxObject)
    { "UpdateAllViews", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDocument_UpdateAllViews, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxObject)

    { "wxDocument", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxDocument_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxDocument_methodCount = sizeof(wxDocument_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxView
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxView'
int wxluatype_wxView = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_Activate[] = { &wxluatype_wxView, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxView_Activate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_Activate[1] = {{ wxLua_wxView_Activate, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxView_Activate }};
//     virtual void Activate(bool activate)
static int LUACALL wxLua_wxView_Activate(lua_State *L)
{
    // bool activate
    bool activate = wxlua_getbooleantype(L, 2);
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call Activate
    self->Activate(activate);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_Close[] = { &wxluatype_wxView, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxView_Close(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_Close[1] = {{ wxLua_wxView_Close, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxView_Close }};
//     virtual bool Close(bool deleteWindow = true)
static int LUACALL wxLua_wxView_Close(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool deleteWindow = true
    bool deleteWindow = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call Close
    bool returns = (self->Close(deleteWindow));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_GetDocument[] = { &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxView_GetDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_GetDocument[1] = {{ wxLua_wxView_GetDocument, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxView_GetDocument }};
//     wxDocument* GetDocument() const
static int LUACALL wxLua_wxView_GetDocument(lua_State *L)
{
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call GetDocument
    wxDocument* returns = (wxDocument*)self->GetDocument();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocument);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_GetDocumentManager[] = { &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxView_GetDocumentManager(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_GetDocumentManager[1] = {{ wxLua_wxView_GetDocumentManager, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxView_GetDocumentManager }};
//     wxDocManager* GetDocumentManager() const
static int LUACALL wxLua_wxView_GetDocumentManager(lua_State *L)
{
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call GetDocumentManager
    wxDocManager* returns = (wxDocManager*)self->GetDocumentManager();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDocManager);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_GetFrame[] = { &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxView_GetFrame(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_GetFrame[1] = {{ wxLua_wxView_GetFrame, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxView_GetFrame }};
//     wxWindow * GetFrame()
static int LUACALL wxLua_wxView_GetFrame(lua_State *L)
{
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call GetFrame
    wxWindow* returns = (wxWindow*)self->GetFrame();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_GetViewName[] = { &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxView_GetViewName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_GetViewName[1] = {{ wxLua_wxView_GetViewName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxView_GetViewName }};
//     wxString GetViewName() const
static int LUACALL wxLua_wxView_GetViewName(lua_State *L)
{
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call GetViewName
    wxString returns = (self->GetViewName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_OnActivateView[] = { &wxluatype_wxView, &wxluatype_TBOOLEAN, &wxluatype_wxView, &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxView_OnActivateView(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_OnActivateView[1] = {{ wxLua_wxView_OnActivateView, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxView_OnActivateView }};
//     virtual void OnActivateView(bool activate, wxView *activeView, wxView *deactiveView)
static int LUACALL wxLua_wxView_OnActivateView(lua_State *L)
{
    // wxView deactiveView
    wxView * deactiveView = (wxView *)wxluaT_getuserdatatype(L, 4, wxluatype_wxView);
    // wxView activeView
    wxView * activeView = (wxView *)wxluaT_getuserdatatype(L, 3, wxluatype_wxView);
    // bool activate
    bool activate = wxlua_getbooleantype(L, 2);
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call OnActivateView
    self->OnActivateView(activate, activeView, deactiveView);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_OnChangeFilename[] = { &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxView_OnChangeFilename(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_OnChangeFilename[1] = {{ wxLua_wxView_OnChangeFilename, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxView_OnChangeFilename }};
//     virtual void OnChangeFilename()
static int LUACALL wxLua_wxView_OnChangeFilename(lua_State *L)
{
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call OnChangeFilename
    self->OnChangeFilename();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_OnClose[] = { &wxluatype_wxView, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxView_OnClose(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_OnClose[1] = {{ wxLua_wxView_OnClose, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxView_OnClose }};
//     virtual bool OnClose(bool deleteWindow)
static int LUACALL wxLua_wxView_OnClose(lua_State *L)
{
    // bool deleteWindow
    bool deleteWindow = wxlua_getbooleantype(L, 2);
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call OnClose
    bool returns = (self->OnClose(deleteWindow));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_OnCreate[] = { &wxluatype_wxView, &wxluatype_wxDocument, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxView_OnCreate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_OnCreate[1] = {{ wxLua_wxView_OnCreate, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxView_OnCreate }};
//     virtual bool OnCreate(wxDocument* doc, long flags)
static int LUACALL wxLua_wxView_OnCreate(lua_State *L)
{
    // long flags
    long flags = (long)wxlua_getnumbertype(L, 3);
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocument);
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call OnCreate
    bool returns = (self->OnCreate(doc, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)
static wxLuaArgType s_wxluatypeArray_wxLua_wxView_OnCreatePrintout[] = { &wxluatype_wxView, NULL };
static int LUACALL wxLua_wxView_OnCreatePrintout(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_OnCreatePrintout[1] = {{ wxLua_wxView_OnCreatePrintout, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxView_OnCreatePrintout }};
//     virtual wxPrintout* OnCreatePrintout()
static int LUACALL wxLua_wxView_OnCreatePrintout(lua_State *L)
{
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call OnCreatePrintout
    wxPrintout* returns = (wxPrintout*)self->OnCreatePrintout();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPrintout);

    return 1;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxObject)
static wxLuaArgType s_wxluatypeArray_wxLua_wxView_OnUpdate[] = { &wxluatype_wxView, &wxluatype_wxView, &wxluatype_wxObject, NULL };
static int LUACALL wxLua_wxView_OnUpdate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_OnUpdate[1] = {{ wxLua_wxView_OnUpdate, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxView_OnUpdate }};
//     virtual void OnUpdate(wxView* sender, wxObject* hint)
static int LUACALL wxLua_wxView_OnUpdate(lua_State *L)
{
    // wxObject hint
    wxObject * hint = (wxObject *)wxluaT_getuserdatatype(L, 3, wxluatype_wxObject);
    // wxView sender
    wxView * sender = (wxView *)wxluaT_getuserdatatype(L, 2, wxluatype_wxView);
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call OnUpdate
    self->OnUpdate(sender, hint);

    return 0;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxObject)

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_SetDocument[] = { &wxluatype_wxView, &wxluatype_wxDocument, NULL };
static int LUACALL wxLua_wxView_SetDocument(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_SetDocument[1] = {{ wxLua_wxView_SetDocument, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxView_SetDocument }};
//     void SetDocument(wxDocument* doc)
static int LUACALL wxLua_wxView_SetDocument(lua_State *L)
{
    // wxDocument doc
    wxDocument * doc = (wxDocument *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDocument);
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call SetDocument
    self->SetDocument(doc);

    return 0;
}


#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFrame)
static wxLuaArgType s_wxluatypeArray_wxLua_wxView_SetFrame[] = { &wxluatype_wxView, &wxluatype_wxFrame, NULL };
static int LUACALL wxLua_wxView_SetFrame(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_SetFrame[1] = {{ wxLua_wxView_SetFrame, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxView_SetFrame }};
//     void SetFrame(wxFrame* frame)
static int LUACALL wxLua_wxView_SetFrame(lua_State *L)
{
    // wxFrame frame
    wxFrame * frame = (wxFrame *)wxluaT_getuserdatatype(L, 2, wxluatype_wxFrame);
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call SetFrame
    self->SetFrame(frame);

    return 0;
}

#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFrame)

static wxLuaArgType s_wxluatypeArray_wxLua_wxView_SetViewName[] = { &wxluatype_wxView, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxView_SetViewName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxView_SetViewName[1] = {{ wxLua_wxView_SetViewName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxView_SetViewName }};
//     void SetViewName(const wxString& name)
static int LUACALL wxLua_wxView_SetViewName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxView * self = (wxView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxView);
    // call SetViewName
    self->SetViewName(name);

    return 0;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxView_methods[] = {
    { "Activate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_Activate, 1, NULL },
    { "Close", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_Close, 1, NULL },
    { "GetDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_GetDocument, 1, NULL },
    { "GetDocumentManager", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_GetDocumentManager, 1, NULL },
    { "GetFrame", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_GetFrame, 1, NULL },
    { "GetViewName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_GetViewName, 1, NULL },
    { "OnActivateView", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_OnActivateView, 1, NULL },
    { "OnChangeFilename", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_OnChangeFilename, 1, NULL },
    { "OnClose", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_OnClose, 1, NULL },
    { "OnCreate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_OnCreate, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)
    { "OnCreatePrintout", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_OnCreatePrintout, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxObject)
    { "OnUpdate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_OnUpdate, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxObject)

    { "SetDocument", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_SetDocument, 1, NULL },

#if (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFrame)
    { "SetFrame", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_SetFrame, 1, NULL },
#endif // (wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxFrame)

    { "SetViewName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxView_SetViewName, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxView_methodCount = sizeof(wxView_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE


#if wxLUA_USE_wxCommandProcessor
// ---------------------------------------------------------------------------
// Bind class wxCommandProcessor
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxCommandProcessor'
int wxluatype_wxCommandProcessor = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_CanRedo[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_CanRedo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_CanRedo[1] = {{ wxLua_wxCommandProcessor_CanRedo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_CanRedo }};
//     virtual bool CanRedo() const
static int LUACALL wxLua_wxCommandProcessor_CanRedo(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call CanRedo
    bool returns = (self->CanRedo());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_CanUndo[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_CanUndo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_CanUndo[1] = {{ wxLua_wxCommandProcessor_CanUndo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_CanUndo }};
//     virtual bool CanUndo() const
static int LUACALL wxLua_wxCommandProcessor_CanUndo(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call CanUndo
    bool returns = (self->CanUndo());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_ClearCommands[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_ClearCommands(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_ClearCommands[1] = {{ wxLua_wxCommandProcessor_ClearCommands, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_ClearCommands }};
//     virtual void ClearCommands()
static int LUACALL wxLua_wxCommandProcessor_ClearCommands(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call ClearCommands
    self->ClearCommands();

    return 0;
}


#if (wxLUA_USE_wxList && !wxUSE_STL) && (wxLUA_USE_wxCommandProcessor)
static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_GetCommands[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_GetCommands(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_GetCommands[1] = {{ wxLua_wxCommandProcessor_GetCommands, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_GetCommands }};
// %override wxLua_wxCommandProcessor_GetCommands
// wxList& GetCommands() const
static int LUACALL wxLua_wxCommandProcessor_GetCommands(lua_State *L)
{
    // get this
    wxCommandProcessor *self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call GetCommands
    wxList &commands = self->GetCommands();
    wxList *returns = new wxList(commands);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxList);
    // return the number of parameters
    return 1;
}


#endif // (wxLUA_USE_wxList && !wxUSE_STL) && (wxLUA_USE_wxCommandProcessor)

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_GetCurrentCommand[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_GetCurrentCommand(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_GetCurrentCommand[1] = {{ wxLua_wxCommandProcessor_GetCurrentCommand, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_GetCurrentCommand }};
//     wxCommand *GetCurrentCommand() const
static int LUACALL wxLua_wxCommandProcessor_GetCurrentCommand(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call GetCurrentCommand
    wxCommand* returns = (wxCommand*)self->GetCurrentCommand();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxCommand);

    return 1;
}


#if (wxLUA_USE_wxMenu && wxUSE_MENUS) && (wxLUA_USE_wxCommandProcessor)
static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_GetEditMenu[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_GetEditMenu(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_GetEditMenu[1] = {{ wxLua_wxCommandProcessor_GetEditMenu, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_GetEditMenu }};
//     wxMenu *GetEditMenu() const
static int LUACALL wxLua_wxCommandProcessor_GetEditMenu(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call GetEditMenu
    wxMenu* returns = (wxMenu*)self->GetEditMenu();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMenu);

    return 1;
}

#endif // (wxLUA_USE_wxMenu && wxUSE_MENUS) && (wxLUA_USE_wxCommandProcessor)

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_GetMaxCommands[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_GetMaxCommands(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_GetMaxCommands[1] = {{ wxLua_wxCommandProcessor_GetMaxCommands, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_GetMaxCommands }};
//     int GetMaxCommands() const
static int LUACALL wxLua_wxCommandProcessor_GetMaxCommands(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call GetMaxCommands
    int returns = (self->GetMaxCommands());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_GetRedoAccelerator[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_GetRedoAccelerator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_GetRedoAccelerator[1] = {{ wxLua_wxCommandProcessor_GetRedoAccelerator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_GetRedoAccelerator }};
//     wxString GetRedoAccelerator() const
static int LUACALL wxLua_wxCommandProcessor_GetRedoAccelerator(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call GetRedoAccelerator
    wxString returns = (self->GetRedoAccelerator());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_GetRedoMenuLabel[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_GetRedoMenuLabel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_GetRedoMenuLabel[1] = {{ wxLua_wxCommandProcessor_GetRedoMenuLabel, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_GetRedoMenuLabel }};
//     wxString GetRedoMenuLabel() const
static int LUACALL wxLua_wxCommandProcessor_GetRedoMenuLabel(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call GetRedoMenuLabel
    wxString returns = (self->GetRedoMenuLabel());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_GetUndoAccelerator[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_GetUndoAccelerator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_GetUndoAccelerator[1] = {{ wxLua_wxCommandProcessor_GetUndoAccelerator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_GetUndoAccelerator }};
//     wxString GetUndoAccelerator() const
static int LUACALL wxLua_wxCommandProcessor_GetUndoAccelerator(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call GetUndoAccelerator
    wxString returns = (self->GetUndoAccelerator());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_GetUndoMenuLabel[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_GetUndoMenuLabel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_GetUndoMenuLabel[1] = {{ wxLua_wxCommandProcessor_GetUndoMenuLabel, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_GetUndoMenuLabel }};
//     wxString GetUndoMenuLabel() const
static int LUACALL wxLua_wxCommandProcessor_GetUndoMenuLabel(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call GetUndoMenuLabel
    wxString returns = (self->GetUndoMenuLabel());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_Initialize[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_Initialize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_Initialize[1] = {{ wxLua_wxCommandProcessor_Initialize, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_Initialize }};
//     virtual void Initialize()
static int LUACALL wxLua_wxCommandProcessor_Initialize(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call Initialize
    self->Initialize();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_IsDirty[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_IsDirty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_IsDirty[1] = {{ wxLua_wxCommandProcessor_IsDirty, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_IsDirty }};
//     virtual bool IsDirty()
static int LUACALL wxLua_wxCommandProcessor_IsDirty(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call IsDirty
    bool returns = (self->IsDirty());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_MarkAsSaved[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_MarkAsSaved(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_MarkAsSaved[1] = {{ wxLua_wxCommandProcessor_MarkAsSaved, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_MarkAsSaved }};
//     virtual void MarkAsSaved()
static int LUACALL wxLua_wxCommandProcessor_MarkAsSaved(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call MarkAsSaved
    self->MarkAsSaved();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_Redo[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_Redo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_Redo[1] = {{ wxLua_wxCommandProcessor_Redo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_Redo }};
//     virtual bool Redo()
static int LUACALL wxLua_wxCommandProcessor_Redo(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call Redo
    bool returns = (self->Redo());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxMenu && wxUSE_MENUS) && (wxLUA_USE_wxCommandProcessor)
static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_SetEditMenu[] = { &wxluatype_wxCommandProcessor, &wxluatype_wxMenu, NULL };
static int LUACALL wxLua_wxCommandProcessor_SetEditMenu(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_SetEditMenu[1] = {{ wxLua_wxCommandProcessor_SetEditMenu, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxCommandProcessor_SetEditMenu }};
//     void SetEditMenu(wxMenu *menu)
static int LUACALL wxLua_wxCommandProcessor_SetEditMenu(lua_State *L)
{
    // wxMenu menu
    wxMenu * menu = (wxMenu *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMenu);
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call SetEditMenu
    self->SetEditMenu(menu);

    return 0;
}

#endif // (wxLUA_USE_wxMenu && wxUSE_MENUS) && (wxLUA_USE_wxCommandProcessor)

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_SetMenuStrings[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_SetMenuStrings(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_SetMenuStrings[1] = {{ wxLua_wxCommandProcessor_SetMenuStrings, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_SetMenuStrings }};
//     virtual void SetMenuStrings()
static int LUACALL wxLua_wxCommandProcessor_SetMenuStrings(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call SetMenuStrings
    self->SetMenuStrings();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_SetRedoAccelerator[] = { &wxluatype_wxCommandProcessor, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxCommandProcessor_SetRedoAccelerator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_SetRedoAccelerator[1] = {{ wxLua_wxCommandProcessor_SetRedoAccelerator, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxCommandProcessor_SetRedoAccelerator }};
//     void SetRedoAccelerator(const wxString& accel)
static int LUACALL wxLua_wxCommandProcessor_SetRedoAccelerator(lua_State *L)
{
    // const wxString accel
    const wxString accel = wxlua_getwxStringtype(L, 2);
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call SetRedoAccelerator
    self->SetRedoAccelerator(accel);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_SetUndoAccelerator[] = { &wxluatype_wxCommandProcessor, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxCommandProcessor_SetUndoAccelerator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_SetUndoAccelerator[1] = {{ wxLua_wxCommandProcessor_SetUndoAccelerator, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxCommandProcessor_SetUndoAccelerator }};
//     void SetUndoAccelerator(const wxString& accel)
static int LUACALL wxLua_wxCommandProcessor_SetUndoAccelerator(lua_State *L)
{
    // const wxString accel
    const wxString accel = wxlua_getwxStringtype(L, 2);
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call SetUndoAccelerator
    self->SetUndoAccelerator(accel);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_Store[] = { &wxluatype_wxCommandProcessor, &wxluatype_wxCommand, NULL };
static int LUACALL wxLua_wxCommandProcessor_Store(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_Store[1] = {{ wxLua_wxCommandProcessor_Store, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxCommandProcessor_Store }};
//     virtual void Store(wxCommand *command)
static int LUACALL wxLua_wxCommandProcessor_Store(lua_State *L)
{
    // wxCommand command
    wxCommand * command = (wxCommand *)wxluaT_getuserdatatype(L, 2, wxluatype_wxCommand);
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call Store
    self->Store(command);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_Submit[] = { &wxluatype_wxCommandProcessor, &wxluatype_wxCommand, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxCommandProcessor_Submit(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_Submit[1] = {{ wxLua_wxCommandProcessor_Submit, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxCommandProcessor_Submit }};
//     virtual bool Submit(wxCommand *command, bool storeIt = true)
static int LUACALL wxLua_wxCommandProcessor_Submit(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool storeIt = true
    bool storeIt = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // wxCommand command
    wxCommand * command = (wxCommand *)wxluaT_getuserdatatype(L, 2, wxluatype_wxCommand);
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call Submit
    bool returns = (self->Submit(command, storeIt));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_Undo[] = { &wxluatype_wxCommandProcessor, NULL };
static int LUACALL wxLua_wxCommandProcessor_Undo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_Undo[1] = {{ wxLua_wxCommandProcessor_Undo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_Undo }};
//     virtual bool Undo()
static int LUACALL wxLua_wxCommandProcessor_Undo(lua_State *L)
{
    // get this
    wxCommandProcessor * self = (wxCommandProcessor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommandProcessor);
    // call Undo
    bool returns = (self->Undo());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommandProcessor_constructor[] = { &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxCommandProcessor_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommandProcessor_constructor[1] = {{ wxLua_wxCommandProcessor_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 1, s_wxluatypeArray_wxLua_wxCommandProcessor_constructor }};
//     wxCommandProcessor(int maxCommands = -1)
static int LUACALL wxLua_wxCommandProcessor_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int maxCommands = -1
    int maxCommands = (argCount >= 1 ? (int)wxlua_getnumbertype(L, 1) : -1);
    // call constructor
    wxCommandProcessor* returns = new wxCommandProcessor(maxCommands);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxCommandProcessor);

    return 1;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxCommandProcessor_methods[] = {
    { "CanRedo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_CanRedo, 1, NULL },
    { "CanUndo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_CanUndo, 1, NULL },
    { "ClearCommands", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_ClearCommands, 1, NULL },

#if (wxLUA_USE_wxList && !wxUSE_STL) && (wxLUA_USE_wxCommandProcessor)
    { "GetCommands", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_GetCommands, 1, NULL },
#endif // (wxLUA_USE_wxList && !wxUSE_STL) && (wxLUA_USE_wxCommandProcessor)

    { "GetCurrentCommand", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_GetCurrentCommand, 1, NULL },

#if (wxLUA_USE_wxMenu && wxUSE_MENUS) && (wxLUA_USE_wxCommandProcessor)
    { "GetEditMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_GetEditMenu, 1, NULL },
#endif // (wxLUA_USE_wxMenu && wxUSE_MENUS) && (wxLUA_USE_wxCommandProcessor)

    { "GetMaxCommands", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_GetMaxCommands, 1, NULL },
    { "GetRedoAccelerator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_GetRedoAccelerator, 1, NULL },
    { "GetRedoMenuLabel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_GetRedoMenuLabel, 1, NULL },
    { "GetUndoAccelerator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_GetUndoAccelerator, 1, NULL },
    { "GetUndoMenuLabel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_GetUndoMenuLabel, 1, NULL },
    { "Initialize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_Initialize, 1, NULL },
    { "IsDirty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_IsDirty, 1, NULL },
    { "MarkAsSaved", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_MarkAsSaved, 1, NULL },
    { "Redo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_Redo, 1, NULL },

#if (wxLUA_USE_wxMenu && wxUSE_MENUS) && (wxLUA_USE_wxCommandProcessor)
    { "SetEditMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_SetEditMenu, 1, NULL },
#endif // (wxLUA_USE_wxMenu && wxUSE_MENUS) && (wxLUA_USE_wxCommandProcessor)

    { "SetMenuStrings", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_SetMenuStrings, 1, NULL },
    { "SetRedoAccelerator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_SetRedoAccelerator, 1, NULL },
    { "SetUndoAccelerator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_SetUndoAccelerator, 1, NULL },
    { "Store", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_Store, 1, NULL },
    { "Submit", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_Submit, 1, NULL },
    { "Undo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommandProcessor_Undo, 1, NULL },
    { "wxCommandProcessor", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxCommandProcessor_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxCommandProcessor_methodCount = sizeof(wxCommandProcessor_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxCommandProcessor


#if wxLUA_USE_wxCommandProcessor
// ---------------------------------------------------------------------------
// Bind class wxCommand
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxCommand'
int wxluatype_wxCommand = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommand_CanUndo[] = { &wxluatype_wxCommand, NULL };
static int LUACALL wxLua_wxCommand_CanUndo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommand_CanUndo[1] = {{ wxLua_wxCommand_CanUndo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommand_CanUndo }};
//     virtual bool CanUndo()
static int LUACALL wxLua_wxCommand_CanUndo(lua_State *L)
{
    // get this
    wxCommand * self = (wxCommand *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommand);
    // call CanUndo
    bool returns = (self->CanUndo());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommand_Do[] = { &wxluatype_wxCommand, NULL };
static int LUACALL wxLua_wxCommand_Do(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommand_Do[1] = {{ wxLua_wxCommand_Do, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommand_Do }};
//     virtual bool Do() // pure virtual
static int LUACALL wxLua_wxCommand_Do(lua_State *L)
{
    // get this
    wxCommand * self = (wxCommand *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommand);
    // call Do
    bool returns = (self->Do());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommand_GetName[] = { &wxluatype_wxCommand, NULL };
static int LUACALL wxLua_wxCommand_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommand_GetName[1] = {{ wxLua_wxCommand_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommand_GetName }};
//     virtual wxString GetName()
static int LUACALL wxLua_wxCommand_GetName(lua_State *L)
{
    // get this
    wxCommand * self = (wxCommand *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommand);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxCommand_Undo[] = { &wxluatype_wxCommand, NULL };
static int LUACALL wxLua_wxCommand_Undo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCommand_Undo[1] = {{ wxLua_wxCommand_Undo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxCommand_Undo }};
//     virtual bool Undo() // pure virtual
static int LUACALL wxLua_wxCommand_Undo(lua_State *L)
{
    // get this
    wxCommand * self = (wxCommand *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCommand);
    // call Undo
    bool returns = (self->Undo());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxCommand_methods[] = {
    { "CanUndo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommand_CanUndo, 1, NULL },
    { "Do", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommand_Do, 1, NULL },
    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommand_GetName, 1, NULL },
    { "Undo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCommand_Undo, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxCommand_methodCount = sizeof(wxCommand_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxCommandProcessor


#if wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE
// ---------------------------------------------------------------------------
// Bind class wxFileHistory
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxFileHistory'
int wxluatype_wxFileHistory = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_AddFileToHistory[] = { &wxluatype_wxFileHistory, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxFileHistory_AddFileToHistory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_AddFileToHistory[1] = {{ wxLua_wxFileHistory_AddFileToHistory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFileHistory_AddFileToHistory }};
//     void AddFileToHistory(const wxString& filename)
static int LUACALL wxLua_wxFileHistory_AddFileToHistory(lua_State *L)
{
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call AddFileToHistory
    self->AddFileToHistory(filename);

    return 0;
}


#if (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_AddFilesToMenu1[] = { &wxluatype_wxFileHistory, &wxluatype_wxMenu, NULL };
static int LUACALL wxLua_wxFileHistory_AddFilesToMenu1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_AddFilesToMenu1[1] = {{ wxLua_wxFileHistory_AddFilesToMenu1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFileHistory_AddFilesToMenu1 }};
//     void AddFilesToMenu(wxMenu* menu)
static int LUACALL wxLua_wxFileHistory_AddFilesToMenu1(lua_State *L)
{
    // wxMenu menu
    wxMenu * menu = (wxMenu *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMenu);
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call AddFilesToMenu
    self->AddFilesToMenu(menu);

    return 0;
}

#endif // (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_AddFilesToMenu[] = { &wxluatype_wxFileHistory, NULL };
static int LUACALL wxLua_wxFileHistory_AddFilesToMenu(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_AddFilesToMenu[1] = {{ wxLua_wxFileHistory_AddFilesToMenu, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFileHistory_AddFilesToMenu }};
//     void AddFilesToMenu()
static int LUACALL wxLua_wxFileHistory_AddFilesToMenu(lua_State *L)
{
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call AddFilesToMenu
    self->AddFilesToMenu();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_GetCount[] = { &wxluatype_wxFileHistory, NULL };
static int LUACALL wxLua_wxFileHistory_GetCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_GetCount[1] = {{ wxLua_wxFileHistory_GetCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFileHistory_GetCount }};
//     size_t GetCount() const
static int LUACALL wxLua_wxFileHistory_GetCount(lua_State *L)
{
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call GetCount
    size_t returns = (self->GetCount());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_GetHistoryFile[] = { &wxluatype_wxFileHistory, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFileHistory_GetHistoryFile(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_GetHistoryFile[1] = {{ wxLua_wxFileHistory_GetHistoryFile, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFileHistory_GetHistoryFile }};
//     wxString GetHistoryFile(int index) const
static int LUACALL wxLua_wxFileHistory_GetHistoryFile(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call GetHistoryFile
    wxString returns = (self->GetHistoryFile(index));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_GetMaxFiles[] = { &wxluatype_wxFileHistory, NULL };
static int LUACALL wxLua_wxFileHistory_GetMaxFiles(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_GetMaxFiles[1] = {{ wxLua_wxFileHistory_GetMaxFiles, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFileHistory_GetMaxFiles }};
//     int GetMaxFiles() const
static int LUACALL wxLua_wxFileHistory_GetMaxFiles(lua_State *L)
{
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call GetMaxFiles
    int returns = (self->GetMaxFiles());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}


#if (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_Load[] = { &wxluatype_wxFileHistory, &wxluatype_wxConfigBase, NULL };
static int LUACALL wxLua_wxFileHistory_Load(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_Load[1] = {{ wxLua_wxFileHistory_Load, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFileHistory_Load }};
//     void Load(wxConfigBase& config)
static int LUACALL wxLua_wxFileHistory_Load(lua_State *L)
{
    // wxConfigBase config
    wxConfigBase * config = (wxConfigBase *)wxluaT_getuserdatatype(L, 2, wxluatype_wxConfigBase);
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call Load
    self->Load(*config);

    return 0;
}

#endif // (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_RemoveFileFromHistory[] = { &wxluatype_wxFileHistory, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxFileHistory_RemoveFileFromHistory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_RemoveFileFromHistory[1] = {{ wxLua_wxFileHistory_RemoveFileFromHistory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFileHistory_RemoveFileFromHistory }};
//     void RemoveFileFromHistory(size_t i)
static int LUACALL wxLua_wxFileHistory_RemoveFileFromHistory(lua_State *L)
{
    // size_t i
    size_t i = (size_t)wxlua_getuintegertype(L, 2);
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call RemoveFileFromHistory
    self->RemoveFileFromHistory(i);

    return 0;
}


#if (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_RemoveMenu[] = { &wxluatype_wxFileHistory, &wxluatype_wxMenu, NULL };
static int LUACALL wxLua_wxFileHistory_RemoveMenu(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_RemoveMenu[1] = {{ wxLua_wxFileHistory_RemoveMenu, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFileHistory_RemoveMenu }};
//     void RemoveMenu(wxMenu* menu)
static int LUACALL wxLua_wxFileHistory_RemoveMenu(lua_State *L)
{
    // wxMenu menu
    wxMenu * menu = (wxMenu *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMenu);
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call RemoveMenu
    self->RemoveMenu(menu);

    return 0;
}

#endif // (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

#if (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_Save[] = { &wxluatype_wxFileHistory, &wxluatype_wxConfigBase, NULL };
static int LUACALL wxLua_wxFileHistory_Save(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_Save[1] = {{ wxLua_wxFileHistory_Save, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFileHistory_Save }};
//     void Save(wxConfigBase& config)
static int LUACALL wxLua_wxFileHistory_Save(lua_State *L)
{
    // wxConfigBase config
    wxConfigBase * config = (wxConfigBase *)wxluaT_getuserdatatype(L, 2, wxluatype_wxConfigBase);
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call Save
    self->Save(*config);

    return 0;
}

#endif // (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)

#if (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_UseMenu[] = { &wxluatype_wxFileHistory, &wxluatype_wxMenu, NULL };
static int LUACALL wxLua_wxFileHistory_UseMenu(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_UseMenu[1] = {{ wxLua_wxFileHistory_UseMenu, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFileHistory_UseMenu }};
//     void UseMenu(wxMenu* menu)
static int LUACALL wxLua_wxFileHistory_UseMenu(lua_State *L)
{
    // wxMenu menu
    wxMenu * menu = (wxMenu *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMenu);
    // get this
    wxFileHistory * self = (wxFileHistory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileHistory);
    // call UseMenu
    self->UseMenu(menu);

    return 0;
}

#endif // (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_delete[] = { &wxluatype_wxFileHistory, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxFileHistory_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileHistory_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFileHistory_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_constructor[1] = {{ wxLua_wxFileHistory_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxFileHistory_constructor }};
//     wxFileHistory(int maxFiles = 9, wxWindowID idBase = wxID_FILE1)
static int LUACALL wxLua_wxFileHistory_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxWindowID idBase = wxID_FILE1
    wxWindowID idBase = (argCount >= 2 ? (wxWindowID)wxlua_getnumbertype(L, 2) : wxID_FILE1);
    // int maxFiles = 9
    int maxFiles = (argCount >= 1 ? (int)wxlua_getnumbertype(L, 1) : 9);
    // call constructor
    wxFileHistory* returns = new wxFileHistory(maxFiles, idBase);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFileHistory);

    return 1;
}




#if ((wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS))||(wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileHistory_AddFilesToMenu_overload[] =
{

#if (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { wxLua_wxFileHistory_AddFilesToMenu1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFileHistory_AddFilesToMenu1 },
#endif // (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { wxLua_wxFileHistory_AddFilesToMenu, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFileHistory_AddFilesToMenu },
};
static int s_wxluafunc_wxLua_wxFileHistory_AddFilesToMenu_overload_count = sizeof(s_wxluafunc_wxLua_wxFileHistory_AddFilesToMenu_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS))||(wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxFileHistory_methods[] = {
    { "AddFileToHistory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileHistory_AddFileToHistory, 1, NULL },

#if ((wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS))||(wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)
    { "AddFilesToMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileHistory_AddFilesToMenu_overload, s_wxluafunc_wxLua_wxFileHistory_AddFilesToMenu_overload_count, 0 },
#endif // ((wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS))||(wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE)

    { "GetCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileHistory_GetCount, 1, NULL },
    { "GetHistoryFile", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileHistory_GetHistoryFile, 1, NULL },
    { "GetMaxFiles", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileHistory_GetMaxFiles, 1, NULL },

#if (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)
    { "Load", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileHistory_Load, 1, NULL },
#endif // (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)

    { "RemoveFileFromHistory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileHistory_RemoveFileFromHistory, 1, NULL },

#if (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { "RemoveMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileHistory_RemoveMenu, 1, NULL },
#endif // (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

#if (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)
    { "Save", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileHistory_Save, 1, NULL },
#endif // (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)

#if (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { "UseMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileHistory_UseMenu, 1, NULL },
#endif // (wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxFileHistory_delete, 1, NULL },
    { "wxFileHistory", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxFileHistory_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxFileHistory_methodCount = sizeof(wxFileHistory_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE

