// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxcore_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#include "wx/wxprec.h"

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif


#include "wxlua/include/wxlstate.h"
#include "wxbind/include/wxcore_bind.h"
#ifdef Above
    #undef Above
#endif
#ifdef Below
    #undef Below
#endif

// wxWidgets >= 2.7 doesn't have static versions of stock GDI objects anymore
wxColour* wxLua_wxBLACK = NULL;
wxColour* wxLua_wxWHITE = NULL;
wxColour* wxLua_wxRED = NULL;
wxColour* wxLua_wxBLUE = NULL;
wxColour* wxLua_wxGREEN = NULL;
wxColour* wxLua_wxCYAN = NULL;
wxColour* wxLua_wxLIGHT_GREY = NULL;
wxPen* wxLua_wxRED_PEN = NULL;
wxPen* wxLua_wxCYAN_PEN = NULL;
wxPen* wxLua_wxGREEN_PEN = NULL;
wxPen* wxLua_wxBLACK_PEN = NULL;
wxPen* wxLua_wxWHITE_PEN = NULL;
wxPen* wxLua_wxTRANSPARENT_PEN = NULL;
wxPen* wxLua_wxBLACK_DASHED_PEN = NULL;
wxPen* wxLua_wxGREY_PEN = NULL;
wxPen* wxLua_wxMEDIUM_GREY_PEN = NULL;
wxPen* wxLua_wxLIGHT_GREY_PEN = NULL;
wxBrush* wxLua_wxBLUE_BRUSH = NULL;
wxBrush* wxLua_wxGREEN_BRUSH = NULL;
wxBrush* wxLua_wxWHITE_BRUSH = NULL;
wxBrush* wxLua_wxBLACK_BRUSH = NULL;
wxBrush* wxLua_wxGREY_BRUSH = NULL;
wxBrush* wxLua_wxMEDIUM_GREY_BRUSH = NULL;
wxBrush* wxLua_wxLIGHT_GREY_BRUSH = NULL;
wxBrush* wxLua_wxTRANSPARENT_BRUSH = NULL;
wxBrush* wxLua_wxCYAN_BRUSH = NULL;
wxBrush* wxLua_wxRED_BRUSH = NULL;
wxFont* wxLua_wxNORMAL_FONT = NULL;
wxFont* wxLua_wxSMALL_FONT = NULL;
wxFont* wxLua_wxITALIC_FONT = NULL;
wxFont* wxLua_wxSWISS_FONT = NULL;
wxCursor* wxLua_wxSTANDARD_CURSOR = NULL;
wxCursor* wxLua_wxHOURGLASS_CURSOR = NULL;
wxCursor* wxLua_wxCROSS_CURSOR = NULL;

#if defined(__MINGW32__) || defined(__GNUWIN32__)
    // FIX: "internal compiler error: output_operand: invalid expression as operand"
    // We set their value again later since some compilers (gcc) won't set their value yet
    static wxPoint wxLua_wxDefaultPosition = wxDefaultPosition;
    static wxSize wxLua_wxDefaultSize      = wxDefaultSize;
    static wxEventType wxLua_wxEVT_COMMAND_DIRPICKER_CHANGED  = wxEVT_COMMAND_DIRPICKER_CHANGED;
    static wxEventType wxLua_wxEVT_COMMAND_FILEPICKER_CHANGED = wxEVT_COMMAND_FILEPICKER_CHANGED;

    #define wxDefaultPosition wxLua_wxDefaultPosition
    #define wxDefaultSize     wxLua_wxDefaultSize
    #define wxEVT_COMMAND_DIRPICKER_CHANGED  wxLua_wxEVT_COMMAND_DIRPICKER_CHANGED
    #define wxEVT_COMMAND_FILEPICKER_CHANGED wxLua_wxEVT_COMMAND_FILEPICKER_CHANGED
#endif //__MINGW32__

// ---------------------------------------------------------------------------
// wxLuaGetEventList_wxcore() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_wxcore(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {
        { "wxEVT_ACTIVATE", &wxEVT_ACTIVATE, &wxluatype_wxActivateEvent },
        { "wxEVT_ACTIVATE_APP", &wxEVT_ACTIVATE_APP, &wxluatype_wxActivateEvent },
        { "wxEVT_CHAR", &wxEVT_CHAR, &wxluatype_wxKeyEvent },
        { "wxEVT_CHAR_HOOK", &wxEVT_CHAR_HOOK, &wxluatype_wxKeyEvent },
        { "wxEVT_CHILD_FOCUS", &wxEVT_CHILD_FOCUS, &wxluatype_wxChildFocusEvent },
        { "wxEVT_CLOSE_WINDOW", &wxEVT_CLOSE_WINDOW, &wxluatype_wxCloseEvent },
        { "wxEVT_COMMAND_BUTTON_CLICKED", &wxEVT_COMMAND_BUTTON_CLICKED, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_CHECKBOX_CLICKED", &wxEVT_COMMAND_CHECKBOX_CLICKED, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_CHECKLISTBOX_TOGGLED", &wxEVT_COMMAND_CHECKLISTBOX_TOGGLED, &wxluatype_wxCommandEvent },

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxChoice && wxUSE_CHOICEBOOK
        { "wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED", &wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED, &wxluatype_wxChoicebookEvent },
        { "wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING", &wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING, &wxluatype_wxChoicebookEvent },
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxChoice && wxUSE_CHOICEBOOK

        { "wxEVT_COMMAND_CHOICE_SELECTED", &wxEVT_COMMAND_CHOICE_SELECTED, &wxluatype_wxCommandEvent },

#if wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxCollapsiblePane && wxUSE_COLLPANE
        { "wxEVT_COMMAND_COLLPANE_CHANGED", &wxEVT_COMMAND_COLLPANE_CHANGED, &wxluatype_wxCollapsiblePaneEvent },
#endif // wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxCollapsiblePane && wxUSE_COLLPANE

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxColourPickerCtrl && wxUSE_COLOURPICKERCTRL)
        { "wxEVT_COMMAND_COLOURPICKER_CHANGED", &wxEVT_COMMAND_COLOURPICKER_CHANGED, &wxluatype_wxColourPickerEvent },
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxColourPickerCtrl && wxUSE_COLOURPICKERCTRL)

        { "wxEVT_COMMAND_COMBOBOX_SELECTED", &wxEVT_COMMAND_COMBOBOX_SELECTED, &wxluatype_wxCommandEvent },

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && ((wxLUA_USE_wxDirPickerCtrl || wxLUA_USE_wxFilePickerCtrl ) && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))
        { "wxEVT_COMMAND_DIRPICKER_CHANGED", &wxEVT_COMMAND_DIRPICKER_CHANGED, &wxluatype_wxFileDirPickerEvent },
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && ((wxLUA_USE_wxDirPickerCtrl || wxLUA_USE_wxFilePickerCtrl ) && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))

        { "wxEVT_COMMAND_ENTER", &wxEVT_COMMAND_ENTER, &wxluatype_wxCommandEvent },

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && ((wxLUA_USE_wxDirPickerCtrl || wxLUA_USE_wxFilePickerCtrl ) && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))
        { "wxEVT_COMMAND_FILEPICKER_CHANGED", &wxEVT_COMMAND_FILEPICKER_CHANGED, &wxluatype_wxFileDirPickerEvent },
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && ((wxLUA_USE_wxDirPickerCtrl || wxLUA_USE_wxFilePickerCtrl ) && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))

#if wxUSE_FINDREPLDLG && wxLUA_USE_wxFindReplaceDialog
        { "wxEVT_COMMAND_FIND", &wxEVT_COMMAND_FIND, &wxluatype_wxFindDialogEvent },
        { "wxEVT_COMMAND_FIND_CLOSE", &wxEVT_COMMAND_FIND_CLOSE, &wxluatype_wxFindDialogEvent },
        { "wxEVT_COMMAND_FIND_NEXT", &wxEVT_COMMAND_FIND_NEXT, &wxluatype_wxFindDialogEvent },
        { "wxEVT_COMMAND_FIND_REPLACE", &wxEVT_COMMAND_FIND_REPLACE, &wxluatype_wxFindDialogEvent },
        { "wxEVT_COMMAND_FIND_REPLACE_ALL", &wxEVT_COMMAND_FIND_REPLACE_ALL, &wxluatype_wxFindDialogEvent },
#endif // wxUSE_FINDREPLDLG && wxLUA_USE_wxFindReplaceDialog

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxFontPickerCtrl && wxUSE_FONTPICKERCTRL)
        { "wxEVT_COMMAND_FONTPICKER_CHANGED", &wxEVT_COMMAND_FONTPICKER_CHANGED, &wxluatype_wxFontPickerEvent },
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxFontPickerCtrl && wxUSE_FONTPICKERCTRL)

        { "wxEVT_COMMAND_KILL_FOCUS", &wxEVT_COMMAND_KILL_FOCUS, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_LEFT_CLICK", &wxEVT_COMMAND_LEFT_CLICK, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_LEFT_DCLICK", &wxEVT_COMMAND_LEFT_DCLICK, &wxluatype_wxCommandEvent },

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK
        { "wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED", &wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED, &wxluatype_wxListbookEvent },
        { "wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING", &wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING, &wxluatype_wxListbookEvent },
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK

        { "wxEVT_COMMAND_LISTBOX_DOUBLECLICKED", &wxEVT_COMMAND_LISTBOX_DOUBLECLICKED, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_LISTBOX_SELECTED", &wxEVT_COMMAND_LISTBOX_SELECTED, &wxluatype_wxCommandEvent },

#if wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL
        { "wxEVT_COMMAND_LIST_BEGIN_DRAG", &wxEVT_COMMAND_LIST_BEGIN_DRAG, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_BEGIN_LABEL_EDIT", &wxEVT_COMMAND_LIST_BEGIN_LABEL_EDIT, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_BEGIN_RDRAG", &wxEVT_COMMAND_LIST_BEGIN_RDRAG, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_CACHE_HINT", &wxEVT_COMMAND_LIST_CACHE_HINT, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_COL_BEGIN_DRAG", &wxEVT_COMMAND_LIST_COL_BEGIN_DRAG, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_COL_CLICK", &wxEVT_COMMAND_LIST_COL_CLICK, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_COL_DRAGGING", &wxEVT_COMMAND_LIST_COL_DRAGGING, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_COL_END_DRAG", &wxEVT_COMMAND_LIST_COL_END_DRAG, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_COL_RIGHT_CLICK", &wxEVT_COMMAND_LIST_COL_RIGHT_CLICK, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_DELETE_ALL_ITEMS", &wxEVT_COMMAND_LIST_DELETE_ALL_ITEMS, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_DELETE_ITEM", &wxEVT_COMMAND_LIST_DELETE_ITEM, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_END_LABEL_EDIT", &wxEVT_COMMAND_LIST_END_LABEL_EDIT, &wxluatype_wxListEvent },
#endif // wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL

#if (!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL)
        { "wxEVT_COMMAND_LIST_GET_INFO", &wxEVT_COMMAND_LIST_GET_INFO, &wxluatype_wxListEvent },
#endif // (!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL)

#if wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL
        { "wxEVT_COMMAND_LIST_INSERT_ITEM", &wxEVT_COMMAND_LIST_INSERT_ITEM, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_ITEM_ACTIVATED", &wxEVT_COMMAND_LIST_ITEM_ACTIVATED, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_ITEM_DESELECTED", &wxEVT_COMMAND_LIST_ITEM_DESELECTED, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_ITEM_FOCUSED", &wxEVT_COMMAND_LIST_ITEM_FOCUSED, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_ITEM_MIDDLE_CLICK", &wxEVT_COMMAND_LIST_ITEM_MIDDLE_CLICK, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_ITEM_RIGHT_CLICK", &wxEVT_COMMAND_LIST_ITEM_RIGHT_CLICK, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_ITEM_SELECTED", &wxEVT_COMMAND_LIST_ITEM_SELECTED, &wxluatype_wxListEvent },
        { "wxEVT_COMMAND_LIST_KEY_DOWN", &wxEVT_COMMAND_LIST_KEY_DOWN, &wxluatype_wxListEvent },
#endif // wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL

#if (!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL)
        { "wxEVT_COMMAND_LIST_SET_INFO", &wxEVT_COMMAND_LIST_SET_INFO, &wxluatype_wxListEvent },
#endif // (!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL)

        { "wxEVT_COMMAND_MENU_SELECTED", &wxEVT_COMMAND_MENU_SELECTED, &wxluatype_wxCommandEvent },

#if wxLUA_USE_wxNotebook && wxUSE_NOTEBOOK
        { "wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED", &wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, &wxluatype_wxNotebookEvent },
        { "wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING", &wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, &wxluatype_wxNotebookEvent },
#endif // wxLUA_USE_wxNotebook && wxUSE_NOTEBOOK

        { "wxEVT_COMMAND_RADIOBOX_SELECTED", &wxEVT_COMMAND_RADIOBOX_SELECTED, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_RADIOBUTTON_SELECTED", &wxEVT_COMMAND_RADIOBUTTON_SELECTED, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_RIGHT_CLICK", &wxEVT_COMMAND_RIGHT_CLICK, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_RIGHT_DCLICK", &wxEVT_COMMAND_RIGHT_DCLICK, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_SET_FOCUS", &wxEVT_COMMAND_SET_FOCUS, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_SLIDER_UPDATED", &wxEVT_COMMAND_SLIDER_UPDATED, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_SPINCTRL_UPDATED", &wxEVT_COMMAND_SPINCTRL_UPDATED, &wxluatype_wxCommandEvent },

#if wxLUA_USE_wxSplitterWindow
        { "wxEVT_COMMAND_SPLITTER_DOUBLECLICKED", &wxEVT_COMMAND_SPLITTER_DOUBLECLICKED, &wxluatype_wxSplitterEvent },
        { "wxEVT_COMMAND_SPLITTER_SASH_POS_CHANGED", &wxEVT_COMMAND_SPLITTER_SASH_POS_CHANGED, &wxluatype_wxSplitterEvent },
        { "wxEVT_COMMAND_SPLITTER_SASH_POS_CHANGING", &wxEVT_COMMAND_SPLITTER_SASH_POS_CHANGING, &wxluatype_wxSplitterEvent },
        { "wxEVT_COMMAND_SPLITTER_UNSPLIT", &wxEVT_COMMAND_SPLITTER_UNSPLIT, &wxluatype_wxSplitterEvent },
#endif // wxLUA_USE_wxSplitterWindow

#if (defined(__WXMSW__)) && (wxCHECK_VERSION(2,4,0) && defined(__WXMSW__) && wxLUA_USE_wxTabCtrl && wxUSE_TAB_DIALOG)
        { "wxEVT_COMMAND_TAB_SEL_CHANGED", &wxEVT_COMMAND_TAB_SEL_CHANGED, &wxluatype_wxTabEvent },
        { "wxEVT_COMMAND_TAB_SEL_CHANGING", &wxEVT_COMMAND_TAB_SEL_CHANGING, &wxluatype_wxTabEvent },
#endif // (defined(__WXMSW__)) && (wxCHECK_VERSION(2,4,0) && defined(__WXMSW__) && wxLUA_USE_wxTabCtrl && wxUSE_TAB_DIALOG)

#if (wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD) && (wxCHECK_VERSION(2,8,0))
        { "wxEVT_COMMAND_TEXT_COPY", &wxEVT_COMMAND_TEXT_COPY, &wxluatype_wxClipboardTextEvent },
        { "wxEVT_COMMAND_TEXT_CUT", &wxEVT_COMMAND_TEXT_CUT, &wxluatype_wxClipboardTextEvent },
#endif // (wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD) && (wxCHECK_VERSION(2,8,0))

        { "wxEVT_COMMAND_TEXT_ENTER", &wxEVT_COMMAND_TEXT_ENTER, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_TEXT_MAXLEN", &wxEVT_COMMAND_TEXT_MAXLEN, &wxluatype_wxCommandEvent },

#if (wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD) && (wxCHECK_VERSION(2,8,0))
        { "wxEVT_COMMAND_TEXT_PASTE", &wxEVT_COMMAND_TEXT_PASTE, &wxluatype_wxClipboardTextEvent },
#endif // (wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD) && (wxCHECK_VERSION(2,8,0))

        { "wxEVT_COMMAND_TEXT_UPDATED", &wxEVT_COMMAND_TEXT_UPDATED, &wxluatype_wxCommandEvent },

#if !wxCHECK_VERSION(2,8,0)
        { "wxEVT_COMMAND_TEXT_URL", &wxEVT_COMMAND_TEXT_URL, &wxluatype_wxCommandEvent },
#elif (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)
        { "wxEVT_COMMAND_TEXT_URL", &wxEVT_COMMAND_TEXT_URL, &wxluatype_wxTextUrlEvent },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)
#if wxCHECK_VERSION(2,4,0)
        { "wxEVT_COMMAND_TOGGLEBUTTON_CLICKED", &wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, &wxluatype_wxCommandEvent },
#endif // wxCHECK_VERSION(2,4,0)

#if wxCHECK_VERSION(2,8,0) && wxUSE_TOOLBOOK && wxLUA_USE_wxToolbook
        { "wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED", &wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED, &wxluatype_wxToolbookEvent },
        { "wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING", &wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING, &wxluatype_wxToolbookEvent },
#endif // wxCHECK_VERSION(2,8,0) && wxUSE_TOOLBOOK && wxLUA_USE_wxToolbook

        { "wxEVT_COMMAND_TOOL_CLICKED", &wxEVT_COMMAND_TOOL_CLICKED, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_TOOL_ENTER", &wxEVT_COMMAND_TOOL_ENTER, &wxluatype_wxCommandEvent },
        { "wxEVT_COMMAND_TOOL_RCLICKED", &wxEVT_COMMAND_TOOL_RCLICKED, &wxluatype_wxCommandEvent },

#if wxCHECK_VERSION(2,8,0) && wxUSE_TREEBOOK && wxLUA_USE_wxTreebook
        { "wxEVT_COMMAND_TREEBOOK_NODE_COLLAPSED", &wxEVT_COMMAND_TREEBOOK_NODE_COLLAPSED, &wxluatype_wxTreebookEvent },
        { "wxEVT_COMMAND_TREEBOOK_NODE_EXPANDED", &wxEVT_COMMAND_TREEBOOK_NODE_EXPANDED, &wxluatype_wxTreebookEvent },
        { "wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED", &wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED, &wxluatype_wxTreebookEvent },
        { "wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING", &wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING, &wxluatype_wxTreebookEvent },
#endif // wxCHECK_VERSION(2,8,0) && wxUSE_TREEBOOK && wxLUA_USE_wxTreebook

#if wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL
        { "wxEVT_COMMAND_TREE_BEGIN_DRAG", &wxEVT_COMMAND_TREE_BEGIN_DRAG, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_BEGIN_LABEL_EDIT", &wxEVT_COMMAND_TREE_BEGIN_LABEL_EDIT, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_BEGIN_RDRAG", &wxEVT_COMMAND_TREE_BEGIN_RDRAG, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_DELETE_ITEM", &wxEVT_COMMAND_TREE_DELETE_ITEM, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_END_DRAG", &wxEVT_COMMAND_TREE_END_DRAG, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_END_LABEL_EDIT", &wxEVT_COMMAND_TREE_END_LABEL_EDIT, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_GET_INFO", &wxEVT_COMMAND_TREE_GET_INFO, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_ITEM_ACTIVATED", &wxEVT_COMMAND_TREE_ITEM_ACTIVATED, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_ITEM_COLLAPSED", &wxEVT_COMMAND_TREE_ITEM_COLLAPSED, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_ITEM_COLLAPSING", &wxEVT_COMMAND_TREE_ITEM_COLLAPSING, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_ITEM_EXPANDED", &wxEVT_COMMAND_TREE_ITEM_EXPANDED, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_ITEM_EXPANDING", &wxEVT_COMMAND_TREE_ITEM_EXPANDING, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_ITEM_GETTOOLTIP", &wxEVT_COMMAND_TREE_ITEM_GETTOOLTIP, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_ITEM_MENU", &wxEVT_COMMAND_TREE_ITEM_MENU, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_ITEM_MIDDLE_CLICK", &wxEVT_COMMAND_TREE_ITEM_MIDDLE_CLICK, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_ITEM_RIGHT_CLICK", &wxEVT_COMMAND_TREE_ITEM_RIGHT_CLICK, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_KEY_DOWN", &wxEVT_COMMAND_TREE_KEY_DOWN, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_SEL_CHANGED", &wxEVT_COMMAND_TREE_SEL_CHANGED, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_SEL_CHANGING", &wxEVT_COMMAND_TREE_SEL_CHANGING, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_SET_INFO", &wxEVT_COMMAND_TREE_SET_INFO, &wxluatype_wxTreeEvent },
        { "wxEVT_COMMAND_TREE_STATE_IMAGE_CLICK", &wxEVT_COMMAND_TREE_STATE_IMAGE_CLICK, &wxluatype_wxTreeEvent },
#endif // wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL

        { "wxEVT_CONTEXT_MENU", &wxEVT_CONTEXT_MENU, &wxluatype_wxContextMenuEvent },
        { "wxEVT_CREATE", &wxEVT_CREATE, &wxluatype_wxWindowCreateEvent },
        { "wxEVT_DESTROY", &wxEVT_DESTROY, &wxluatype_wxWindowDestroyEvent },
        { "wxEVT_DETAILED_HELP", &wxEVT_DETAILED_HELP, &wxluatype_wxHelpEvent },
        { "wxEVT_DISPLAY_CHANGED", &wxEVT_DISPLAY_CHANGED, &wxluatype_wxDisplayChangedEvent },

#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
        { "wxEVT_DROP_FILES", &wxEVT_DROP_FILES, &wxluatype_wxDropFilesEvent },
#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP

        { "wxEVT_END_PROCESS", &wxEVT_END_PROCESS, &wxluatype_wxProcessEvent },
        { "wxEVT_END_SESSION", &wxEVT_END_SESSION, &wxluatype_wxCloseEvent },
        { "wxEVT_ENTER_WINDOW", &wxEVT_ENTER_WINDOW, &wxluatype_wxMouseEvent },
        { "wxEVT_ERASE_BACKGROUND", &wxEVT_ERASE_BACKGROUND, &wxluatype_wxEraseEvent },
        { "wxEVT_HELP", &wxEVT_HELP, &wxluatype_wxHelpEvent },
        { "wxEVT_HIBERNATE", &wxEVT_HIBERNATE, &wxluatype_wxActivateEvent },

#if wxUSE_HOTKEY
        { "wxEVT_HOTKEY", &wxEVT_HOTKEY, &wxluatype_wxKeyEvent },
#endif // wxUSE_HOTKEY

        { "wxEVT_ICONIZE", &wxEVT_ICONIZE, &wxluatype_wxIconizeEvent },
        { "wxEVT_IDLE", &wxEVT_IDLE, &wxluatype_wxIdleEvent },
        { "wxEVT_INIT_DIALOG", &wxEVT_INIT_DIALOG, &wxluatype_wxInitDialogEvent },
        { "wxEVT_KEY_DOWN", &wxEVT_KEY_DOWN, &wxluatype_wxKeyEvent },
        { "wxEVT_KEY_UP", &wxEVT_KEY_UP, &wxluatype_wxKeyEvent },
        { "wxEVT_KILL_FOCUS", &wxEVT_KILL_FOCUS, &wxluatype_wxFocusEvent },
        { "wxEVT_LEAVE_WINDOW", &wxEVT_LEAVE_WINDOW, &wxluatype_wxMouseEvent },
        { "wxEVT_LEFT_DCLICK", &wxEVT_LEFT_DCLICK, &wxluatype_wxMouseEvent },
        { "wxEVT_LEFT_DOWN", &wxEVT_LEFT_DOWN, &wxluatype_wxMouseEvent },
        { "wxEVT_LEFT_UP", &wxEVT_LEFT_UP, &wxluatype_wxMouseEvent },
        { "wxEVT_MAXIMIZE", &wxEVT_MAXIMIZE, &wxluatype_wxMaximizeEvent },

#if wxLUA_USE_wxMenu && wxUSE_MENUS
        { "wxEVT_MENU_CLOSE", &wxEVT_MENU_CLOSE, &wxluatype_wxMenuEvent },
        { "wxEVT_MENU_HIGHLIGHT", &wxEVT_MENU_HIGHLIGHT, &wxluatype_wxMenuEvent },
        { "wxEVT_MENU_OPEN", &wxEVT_MENU_OPEN, &wxluatype_wxMenuEvent },
#endif // wxLUA_USE_wxMenu && wxUSE_MENUS

        { "wxEVT_MIDDLE_DCLICK", &wxEVT_MIDDLE_DCLICK, &wxluatype_wxMouseEvent },
        { "wxEVT_MIDDLE_DOWN", &wxEVT_MIDDLE_DOWN, &wxluatype_wxMouseEvent },
        { "wxEVT_MIDDLE_UP", &wxEVT_MIDDLE_UP, &wxluatype_wxMouseEvent },
        { "wxEVT_MOTION", &wxEVT_MOTION, &wxluatype_wxMouseEvent },
        { "wxEVT_MOUSEWHEEL", &wxEVT_MOUSEWHEEL, &wxluatype_wxMouseEvent },
        { "wxEVT_MOUSE_CAPTURE_CHANGED", &wxEVT_MOUSE_CAPTURE_CHANGED, &wxluatype_wxMouseCaptureChangedEvent },

#if wxCHECK_VERSION(2,8,0)
        { "wxEVT_MOUSE_CAPTURE_LOST", &wxEVT_MOUSE_CAPTURE_LOST, &wxluatype_wxMouseCaptureLostEvent },
#endif // wxCHECK_VERSION(2,8,0)

        { "wxEVT_MOVE", &wxEVT_MOVE, &wxluatype_wxMoveEvent },

#if wxCHECK_VERSION(2,6,0)
        { "wxEVT_MOVING", &wxEVT_MOVING, &wxluatype_wxMoveEvent },
#endif // wxCHECK_VERSION(2,6,0)

        { "wxEVT_NAVIGATION_KEY", &wxEVT_NAVIGATION_KEY, &wxluatype_wxNavigationKeyEvent },
        { "wxEVT_NULL", &wxEVT_NULL, &wxluatype_wxCommandEvent },
        { "wxEVT_PAINT", &wxEVT_PAINT, &wxluatype_wxPaintEvent },
        { "wxEVT_PALETTE_CHANGED", &wxEVT_PALETTE_CHANGED, &wxluatype_wxPaletteChangedEvent },

#if (wxCHECK_VERSION(2,8,0)) && (defined(wxHAS_POWER_EVENTS))
        { "wxEVT_POWER_RESUME", &wxEVT_POWER_RESUME, &wxluatype_wxPowerEvent },
        { "wxEVT_POWER_SUSPENDED", &wxEVT_POWER_SUSPENDED, &wxluatype_wxPowerEvent },
        { "wxEVT_POWER_SUSPENDING", &wxEVT_POWER_SUSPENDING, &wxluatype_wxPowerEvent },
        { "wxEVT_POWER_SUSPEND_CANCEL", &wxEVT_POWER_SUSPEND_CANCEL, &wxluatype_wxPowerEvent },
#endif // (wxCHECK_VERSION(2,8,0)) && (defined(wxHAS_POWER_EVENTS))

        { "wxEVT_QUERY_END_SESSION", &wxEVT_QUERY_END_SESSION, &wxluatype_wxCloseEvent },
        { "wxEVT_QUERY_NEW_PALETTE", &wxEVT_QUERY_NEW_PALETTE, &wxluatype_wxQueryNewPaletteEvent },
        { "wxEVT_RIGHT_DCLICK", &wxEVT_RIGHT_DCLICK, &wxluatype_wxMouseEvent },
        { "wxEVT_RIGHT_DOWN", &wxEVT_RIGHT_DOWN, &wxluatype_wxMouseEvent },
        { "wxEVT_RIGHT_UP", &wxEVT_RIGHT_UP, &wxluatype_wxMouseEvent },
        { "wxEVT_SCROLLWIN_BOTTOM", &wxEVT_SCROLLWIN_BOTTOM, &wxluatype_wxScrollWinEvent },
        { "wxEVT_SCROLLWIN_LINEDOWN", &wxEVT_SCROLLWIN_LINEDOWN, &wxluatype_wxScrollWinEvent },
        { "wxEVT_SCROLLWIN_LINEUP", &wxEVT_SCROLLWIN_LINEUP, &wxluatype_wxScrollWinEvent },
        { "wxEVT_SCROLLWIN_PAGEDOWN", &wxEVT_SCROLLWIN_PAGEDOWN, &wxluatype_wxScrollWinEvent },
        { "wxEVT_SCROLLWIN_PAGEUP", &wxEVT_SCROLLWIN_PAGEUP, &wxluatype_wxScrollWinEvent },
        { "wxEVT_SCROLLWIN_THUMBRELEASE", &wxEVT_SCROLLWIN_THUMBRELEASE, &wxluatype_wxScrollWinEvent },
        { "wxEVT_SCROLLWIN_THUMBTRACK", &wxEVT_SCROLLWIN_THUMBTRACK, &wxluatype_wxScrollWinEvent },
        { "wxEVT_SCROLLWIN_TOP", &wxEVT_SCROLLWIN_TOP, &wxluatype_wxScrollWinEvent },
        { "wxEVT_SCROLL_BOTTOM", &wxEVT_SCROLL_BOTTOM, &wxluatype_wxScrollEvent },

#if wxCHECK_VERSION(2,8,0)
        { "wxEVT_SCROLL_CHANGED", &wxEVT_SCROLL_CHANGED, &wxluatype_wxScrollEvent },
#endif // wxCHECK_VERSION(2,8,0)

#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
        { "wxEVT_SCROLL_ENDSCROLL", &wxEVT_SCROLL_ENDSCROLL, &wxluatype_wxScrollEvent },
#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

#if wxLUA_USE_wxSpinButton && wxUSE_SPINBTN
        { "wxEVT_SCROLL_LINEDOWN", &wxEVT_SCROLL_LINEDOWN, &wxluatype_wxSpinEvent },
#elif 1
        { "wxEVT_SCROLL_LINEDOWN", &wxEVT_SCROLL_LINEDOWN, &wxluatype_wxScrollEvent },
#endif // 1
#if wxLUA_USE_wxSpinButton && wxUSE_SPINBTN
        { "wxEVT_SCROLL_LINEUP", &wxEVT_SCROLL_LINEUP, &wxluatype_wxSpinEvent },
#elif 1
        { "wxEVT_SCROLL_LINEUP", &wxEVT_SCROLL_LINEUP, &wxluatype_wxScrollEvent },
#endif // 1
        { "wxEVT_SCROLL_PAGEDOWN", &wxEVT_SCROLL_PAGEDOWN, &wxluatype_wxScrollEvent },
        { "wxEVT_SCROLL_PAGEUP", &wxEVT_SCROLL_PAGEUP, &wxluatype_wxScrollEvent },
        { "wxEVT_SCROLL_THUMBRELEASE", &wxEVT_SCROLL_THUMBRELEASE, &wxluatype_wxScrollEvent },

#if wxLUA_USE_wxSpinButton && wxUSE_SPINBTN
        { "wxEVT_SCROLL_THUMBTRACK", &wxEVT_SCROLL_THUMBTRACK, &wxluatype_wxSpinEvent },
#elif 1
        { "wxEVT_SCROLL_THUMBTRACK", &wxEVT_SCROLL_THUMBTRACK, &wxluatype_wxScrollEvent },
#endif // 1
        { "wxEVT_SCROLL_TOP", &wxEVT_SCROLL_TOP, &wxluatype_wxScrollEvent },
        { "wxEVT_SET_CURSOR", &wxEVT_SET_CURSOR, &wxluatype_wxSetCursorEvent },
        { "wxEVT_SET_FOCUS", &wxEVT_SET_FOCUS, &wxluatype_wxFocusEvent },
        { "wxEVT_SHOW", &wxEVT_SHOW, &wxluatype_wxShowEvent },
        { "wxEVT_SIZE", &wxEVT_SIZE, &wxluatype_wxSizeEvent },

#if wxCHECK_VERSION(2,6,0)
        { "wxEVT_SIZING", &wxEVT_SIZING, &wxluatype_wxSizeEvent },
#endif // wxCHECK_VERSION(2,6,0)

        { "wxEVT_SYS_COLOUR_CHANGED", &wxEVT_SYS_COLOUR_CHANGED, &wxluatype_wxSysColourChangedEvent },

#if wxLUA_USE_wxTimer && wxUSE_TIMER
        { "wxEVT_TIMER", &wxEVT_TIMER, &wxluatype_wxTimerEvent },
#endif // wxLUA_USE_wxTimer && wxUSE_TIMER

        { "wxEVT_UPDATE_UI", &wxEVT_UPDATE_UI, &wxluatype_wxUpdateUIEvent },

        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_wxcore() is called to register %define and %enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_wxcore(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {
        { "WXK_ADD", WXK_ADD },
        { "WXK_ALT", WXK_ALT },
        { "WXK_BACK", WXK_BACK },
        { "WXK_CANCEL", WXK_CANCEL },
        { "WXK_CAPITAL", WXK_CAPITAL },
        { "WXK_CLEAR", WXK_CLEAR },
        { "WXK_CONTROL", WXK_CONTROL },
        { "WXK_DECIMAL", WXK_DECIMAL },
        { "WXK_DELETE", WXK_DELETE },
        { "WXK_DIVIDE", WXK_DIVIDE },
        { "WXK_DOWN", WXK_DOWN },
        { "WXK_END", WXK_END },
        { "WXK_ESCAPE", WXK_ESCAPE },
        { "WXK_EXECUTE", WXK_EXECUTE },
        { "WXK_F1", WXK_F1 },
        { "WXK_F10", WXK_F10 },
        { "WXK_F11", WXK_F11 },
        { "WXK_F12", WXK_F12 },
        { "WXK_F13", WXK_F13 },
        { "WXK_F14", WXK_F14 },
        { "WXK_F15", WXK_F15 },
        { "WXK_F16", WXK_F16 },
        { "WXK_F17", WXK_F17 },
        { "WXK_F18", WXK_F18 },
        { "WXK_F19", WXK_F19 },
        { "WXK_F2", WXK_F2 },
        { "WXK_F20", WXK_F20 },
        { "WXK_F21", WXK_F21 },
        { "WXK_F22", WXK_F22 },
        { "WXK_F23", WXK_F23 },
        { "WXK_F24", WXK_F24 },
        { "WXK_F3", WXK_F3 },
        { "WXK_F4", WXK_F4 },
        { "WXK_F5", WXK_F5 },
        { "WXK_F6", WXK_F6 },
        { "WXK_F7", WXK_F7 },
        { "WXK_F8", WXK_F8 },
        { "WXK_F9", WXK_F9 },
        { "WXK_HELP", WXK_HELP },
        { "WXK_HOME", WXK_HOME },
        { "WXK_INSERT", WXK_INSERT },
        { "WXK_LBUTTON", WXK_LBUTTON },
        { "WXK_LEFT", WXK_LEFT },
        { "WXK_MBUTTON", WXK_MBUTTON },
        { "WXK_MENU", WXK_MENU },
        { "WXK_MULTIPLY", WXK_MULTIPLY },
        { "WXK_NEXT", WXK_NEXT },
        { "WXK_NUMLOCK", WXK_NUMLOCK },
        { "WXK_NUMPAD0", WXK_NUMPAD0 },
        { "WXK_NUMPAD1", WXK_NUMPAD1 },
        { "WXK_NUMPAD2", WXK_NUMPAD2 },
        { "WXK_NUMPAD3", WXK_NUMPAD3 },
        { "WXK_NUMPAD4", WXK_NUMPAD4 },
        { "WXK_NUMPAD5", WXK_NUMPAD5 },
        { "WXK_NUMPAD6", WXK_NUMPAD6 },
        { "WXK_NUMPAD7", WXK_NUMPAD7 },
        { "WXK_NUMPAD8", WXK_NUMPAD8 },
        { "WXK_NUMPAD9", WXK_NUMPAD9 },
        { "WXK_NUMPAD_ADD", WXK_NUMPAD_ADD },
        { "WXK_NUMPAD_BEGIN", WXK_NUMPAD_BEGIN },
        { "WXK_NUMPAD_DECIMAL", WXK_NUMPAD_DECIMAL },
        { "WXK_NUMPAD_DELETE", WXK_NUMPAD_DELETE },
        { "WXK_NUMPAD_DIVIDE", WXK_NUMPAD_DIVIDE },
        { "WXK_NUMPAD_DOWN", WXK_NUMPAD_DOWN },
        { "WXK_NUMPAD_END", WXK_NUMPAD_END },
        { "WXK_NUMPAD_ENTER", WXK_NUMPAD_ENTER },
        { "WXK_NUMPAD_EQUAL", WXK_NUMPAD_EQUAL },
        { "WXK_NUMPAD_F1", WXK_NUMPAD_F1 },
        { "WXK_NUMPAD_F2", WXK_NUMPAD_F2 },
        { "WXK_NUMPAD_F3", WXK_NUMPAD_F3 },
        { "WXK_NUMPAD_F4", WXK_NUMPAD_F4 },
        { "WXK_NUMPAD_HOME", WXK_NUMPAD_HOME },
        { "WXK_NUMPAD_INSERT", WXK_NUMPAD_INSERT },
        { "WXK_NUMPAD_LEFT", WXK_NUMPAD_LEFT },
        { "WXK_NUMPAD_MULTIPLY", WXK_NUMPAD_MULTIPLY },
        { "WXK_NUMPAD_NEXT", WXK_NUMPAD_NEXT },
        { "WXK_NUMPAD_PAGEDOWN", WXK_NUMPAD_PAGEDOWN },
        { "WXK_NUMPAD_PAGEUP", WXK_NUMPAD_PAGEUP },
        { "WXK_NUMPAD_PRIOR", WXK_NUMPAD_PRIOR },
        { "WXK_NUMPAD_RIGHT", WXK_NUMPAD_RIGHT },
        { "WXK_NUMPAD_SEPARATOR", WXK_NUMPAD_SEPARATOR },
        { "WXK_NUMPAD_SPACE", WXK_NUMPAD_SPACE },
        { "WXK_NUMPAD_SUBTRACT", WXK_NUMPAD_SUBTRACT },
        { "WXK_NUMPAD_TAB", WXK_NUMPAD_TAB },
        { "WXK_NUMPAD_UP", WXK_NUMPAD_UP },
        { "WXK_PAGEDOWN", WXK_PAGEDOWN },
        { "WXK_PAGEUP", WXK_PAGEUP },
        { "WXK_PAUSE", WXK_PAUSE },
        { "WXK_PRINT", WXK_PRINT },
        { "WXK_PRIOR", WXK_PRIOR },
        { "WXK_RBUTTON", WXK_RBUTTON },
        { "WXK_RETURN", WXK_RETURN },
        { "WXK_RIGHT", WXK_RIGHT },
        { "WXK_SCROLL", WXK_SCROLL },
        { "WXK_SELECT", WXK_SELECT },
        { "WXK_SEPARATOR", WXK_SEPARATOR },
        { "WXK_SHIFT", WXK_SHIFT },
        { "WXK_SNAPSHOT", WXK_SNAPSHOT },
        { "WXK_SPACE", WXK_SPACE },
        { "WXK_START", WXK_START },
        { "WXK_SUBTRACT", WXK_SUBTRACT },
        { "WXK_TAB", WXK_TAB },
        { "WXK_UP", WXK_UP },

#if wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL
        { "wxACCEL_ALT", wxACCEL_ALT },
#endif // wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL)
        { "wxACCEL_CMD", wxACCEL_CMD },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL)

#if wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL
        { "wxACCEL_CTRL", wxACCEL_CTRL },
        { "wxACCEL_NORMAL", wxACCEL_NORMAL },
        { "wxACCEL_SHIFT", wxACCEL_SHIFT },
#endif // wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL

        { "wxADJUST_MINSIZE", wxADJUST_MINSIZE },
        { "wxALIGN_BOTTOM", wxALIGN_BOTTOM },
        { "wxALIGN_CENTER", wxALIGN_CENTER },
        { "wxALIGN_CENTER_HORIZONTAL", wxALIGN_CENTER_HORIZONTAL },
        { "wxALIGN_CENTER_VERTICAL", wxALIGN_CENTER_VERTICAL },
        { "wxALIGN_CENTRE", wxALIGN_CENTRE },
        { "wxALIGN_CENTRE_HORIZONTAL", wxALIGN_CENTRE_HORIZONTAL },
        { "wxALIGN_CENTRE_VERTICAL", wxALIGN_CENTRE_VERTICAL },
        { "wxALIGN_LEFT", wxALIGN_LEFT },
        { "wxALIGN_MASK", wxALIGN_MASK },
        { "wxALIGN_NOT", wxALIGN_NOT },
        { "wxALIGN_RIGHT", wxALIGN_RIGHT },
        { "wxALIGN_TOP", wxALIGN_TOP },
        { "wxALL", wxALL },

#if (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))
        { "wxALPHA_OPAQUE", wxALPHA_OPAQUE },
        { "wxALPHA_TRANSPARENT", wxALPHA_TRANSPARENT },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))

#if (wxLUA_USE_wxDC) && (wxCHECK_VERSION(2,8,0))
        { "wxALWAYS_NATIVE_DOUBLE_BUFFER", wxALWAYS_NATIVE_DOUBLE_BUFFER },
#endif // (wxLUA_USE_wxDC) && (wxCHECK_VERSION(2,8,0))

        { "wxALWAYS_SHOW_SB", wxALWAYS_SHOW_SB },

#if wxLUA_USE_wxDC
        { "wxAND", wxAND },
        { "wxAND_INVERT", wxAND_INVERT },
        { "wxAND_REVERSE", wxAND_REVERSE },
#endif // wxLUA_USE_wxDC

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxAbove", wxAbove },
        { "wxAbsolute", wxAbsolute },
        { "wxAsIs", wxAsIs },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

        { "wxBACKINGSTORE", wxBACKINGSTORE },
        { "wxBACKWARD", wxBACKWARD },

#if wxCHECK_VERSION(2,8,0)
        { "wxBATTERY_CRITICAL_STATE", wxBATTERY_CRITICAL_STATE },
        { "wxBATTERY_LOW_STATE", wxBATTERY_LOW_STATE },
        { "wxBATTERY_NORMAL_STATE", wxBATTERY_NORMAL_STATE },
        { "wxBATTERY_SHUTDOWN_STATE", wxBATTERY_SHUTDOWN_STATE },
        { "wxBATTERY_UNKNOWN_STATE", wxBATTERY_UNKNOWN_STATE },
#endif // wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxColourPenBrush
        { "wxBDIAGONAL_HATCH", wxBDIAGONAL_HATCH },
#endif // wxLUA_USE_wxColourPenBrush

        { "wxBG_STYLE_COLOUR", wxBG_STYLE_COLOUR },
        { "wxBG_STYLE_CUSTOM", wxBG_STYLE_CUSTOM },
        { "wxBG_STYLE_SYSTEM", wxBG_STYLE_SYSTEM },
        { "wxBITMAP_TYPE_ANI", wxBITMAP_TYPE_ANI },
        { "wxBITMAP_TYPE_ANY", wxBITMAP_TYPE_ANY },
        { "wxBITMAP_TYPE_BMP", wxBITMAP_TYPE_BMP },
        { "wxBITMAP_TYPE_BMP_RESOURCE", wxBITMAP_TYPE_BMP_RESOURCE },
        { "wxBITMAP_TYPE_CUR", wxBITMAP_TYPE_CUR },
        { "wxBITMAP_TYPE_CUR_RESOURCE", wxBITMAP_TYPE_CUR_RESOURCE },
        { "wxBITMAP_TYPE_GIF", wxBITMAP_TYPE_GIF },
        { "wxBITMAP_TYPE_GIF_RESOURCE", wxBITMAP_TYPE_GIF_RESOURCE },
        { "wxBITMAP_TYPE_ICO", wxBITMAP_TYPE_ICO },
        { "wxBITMAP_TYPE_ICON", wxBITMAP_TYPE_ICON },
        { "wxBITMAP_TYPE_ICON_RESOURCE", wxBITMAP_TYPE_ICON_RESOURCE },
        { "wxBITMAP_TYPE_ICO_RESOURCE", wxBITMAP_TYPE_ICO_RESOURCE },
        { "wxBITMAP_TYPE_IFF", wxBITMAP_TYPE_IFF },
        { "wxBITMAP_TYPE_INVALID", wxBITMAP_TYPE_INVALID },
        { "wxBITMAP_TYPE_JPEG", wxBITMAP_TYPE_JPEG },
        { "wxBITMAP_TYPE_JPEG_RESOURCE", wxBITMAP_TYPE_JPEG_RESOURCE },
        { "wxBITMAP_TYPE_MACCURSOR", wxBITMAP_TYPE_MACCURSOR },
        { "wxBITMAP_TYPE_MACCURSOR_RESOURCE", wxBITMAP_TYPE_MACCURSOR_RESOURCE },
        { "wxBITMAP_TYPE_PCX", wxBITMAP_TYPE_PCX },
        { "wxBITMAP_TYPE_PCX_RESOURCE", wxBITMAP_TYPE_PCX_RESOURCE },
        { "wxBITMAP_TYPE_PICT", wxBITMAP_TYPE_PICT },
        { "wxBITMAP_TYPE_PICT_RESOURCE", wxBITMAP_TYPE_PICT_RESOURCE },
        { "wxBITMAP_TYPE_PNG", wxBITMAP_TYPE_PNG },
        { "wxBITMAP_TYPE_PNG_RESOURCE", wxBITMAP_TYPE_PNG_RESOURCE },
        { "wxBITMAP_TYPE_PNM", wxBITMAP_TYPE_PNM },
        { "wxBITMAP_TYPE_PNM_RESOURCE", wxBITMAP_TYPE_PNM_RESOURCE },
        { "wxBITMAP_TYPE_RESOURCE", wxBITMAP_TYPE_RESOURCE },

#if wxCHECK_VERSION(2,8,0)
        { "wxBITMAP_TYPE_TGA", wxBITMAP_TYPE_TGA },
#endif // wxCHECK_VERSION(2,8,0)

        { "wxBITMAP_TYPE_TIF", wxBITMAP_TYPE_TIF },
        { "wxBITMAP_TYPE_TIF_RESOURCE", wxBITMAP_TYPE_TIF_RESOURCE },
        { "wxBITMAP_TYPE_XBM", wxBITMAP_TYPE_XBM },
        { "wxBITMAP_TYPE_XBM_DATA", wxBITMAP_TYPE_XBM_DATA },
        { "wxBITMAP_TYPE_XPM", wxBITMAP_TYPE_XPM },
        { "wxBITMAP_TYPE_XPM_DATA", wxBITMAP_TYPE_XPM_DATA },

#if (wxLUA_USE_wxNotebook && wxUSE_BOOKCTRL) && (wxCHECK_VERSION(2,8,0))
        { "wxBK_ALIGN_MASK", wxBK_ALIGN_MASK },
        { "wxBK_BOTTOM", wxBK_BOTTOM },
        { "wxBK_DEFAULT", wxBK_DEFAULT },
        { "wxBK_HITTEST_NOWHERE", wxBK_HITTEST_NOWHERE },
        { "wxBK_HITTEST_ONICON", wxBK_HITTEST_ONICON },
        { "wxBK_HITTEST_ONITEM", wxBK_HITTEST_ONITEM },
        { "wxBK_HITTEST_ONLABEL", wxBK_HITTEST_ONLABEL },
        { "wxBK_HITTEST_ONPAGE", wxBK_HITTEST_ONPAGE },
        { "wxBK_LEFT", wxBK_LEFT },
        { "wxBK_RIGHT", wxBK_RIGHT },
        { "wxBK_TOP", wxBK_TOP },
#endif // (wxLUA_USE_wxNotebook && wxUSE_BOOKCTRL) && (wxCHECK_VERSION(2,8,0))

#if wxLUA_USE_wxDC
        { "wxBLIT_00220326", wxBLIT_00220326 },
        { "wxBLIT_007700E6", wxBLIT_007700E6 },
        { "wxBLIT_00990066", wxBLIT_00990066 },
        { "wxBLIT_00AA0029", wxBLIT_00AA0029 },
        { "wxBLIT_00DD0228", wxBLIT_00DD0228 },
        { "wxBLIT_BLACKNESS", wxBLIT_BLACKNESS },
        { "wxBLIT_DSTINVERT", wxBLIT_DSTINVERT },
        { "wxBLIT_MERGEPAINT", wxBLIT_MERGEPAINT },
        { "wxBLIT_NOTSCRCOPY", wxBLIT_NOTSCRCOPY },
        { "wxBLIT_NOTSRCERASE", wxBLIT_NOTSRCERASE },
        { "wxBLIT_SRCAND", wxBLIT_SRCAND },
        { "wxBLIT_SRCCOPY", wxBLIT_SRCCOPY },
        { "wxBLIT_SRCERASE", wxBLIT_SRCERASE },
        { "wxBLIT_SRCINVERT", wxBLIT_SRCINVERT },
        { "wxBLIT_SRCPAINT", wxBLIT_SRCPAINT },
        { "wxBLIT_WHITENESS", wxBLIT_WHITENESS },
#endif // wxLUA_USE_wxDC

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { "wxBMP_1BPP", wxBMP_1BPP },
        { "wxBMP_1BPP_BW", wxBMP_1BPP_BW },
        { "wxBMP_24BPP", wxBMP_24BPP },
        { "wxBMP_4BPP", wxBMP_4BPP },
        { "wxBMP_8BPP", wxBMP_8BPP },
        { "wxBMP_8BPP_GRAY", wxBMP_8BPP_GRAY },
        { "wxBMP_8BPP_GREY", wxBMP_8BPP_GREY },
        { "wxBMP_8BPP_PALETTE", wxBMP_8BPP_PALETTE },
        { "wxBMP_8BPP_RED", wxBMP_8BPP_RED },
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

#if wxLUA_USE_wxFont
        { "wxBOLD", wxBOLD },
#endif // wxLUA_USE_wxFont

        { "wxBORDER_DEFAULT", wxBORDER_DEFAULT },
        { "wxBORDER_DOUBLE", wxBORDER_DOUBLE },
        { "wxBORDER_MASK", wxBORDER_MASK },
        { "wxBORDER_NONE", wxBORDER_NONE },
        { "wxBORDER_RAISED", wxBORDER_RAISED },
        { "wxBORDER_SIMPLE", wxBORDER_SIMPLE },
        { "wxBORDER_STATIC", wxBORDER_STATIC },
        { "wxBORDER_SUNKEN", wxBORDER_SUNKEN },
        { "wxBOTH", wxBOTH },
        { "wxBOTTOM", wxBOTTOM },

#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxButton && wxUSE_BUTTON)
        { "wxBU_AUTODRAW", wxBU_AUTODRAW },
#endif // (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxButton && wxUSE_BUTTON)

#if wxLUA_USE_wxButton && wxUSE_BUTTON
        { "wxBU_BOTTOM", wxBU_BOTTOM },
        { "wxBU_EXACTFIT", wxBU_EXACTFIT },
        { "wxBU_LEFT", wxBU_LEFT },
        { "wxBU_RIGHT", wxBU_RIGHT },
        { "wxBU_TOP", wxBU_TOP },
#endif // wxLUA_USE_wxButton && wxUSE_BUTTON

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxBelow", wxBelow },
        { "wxBottom", wxBottom },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))
        { "wxC2S_CSS_SYNTAX", wxC2S_CSS_SYNTAX },
        { "wxC2S_HTML_SYNTAX", wxC2S_HTML_SYNTAX },
        { "wxC2S_NAME", wxC2S_NAME },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))

        { "wxCANCEL", wxCANCEL },

#if wxLUA_USE_wxFrame
        { "wxCAPTION", wxCAPTION },
#endif // wxLUA_USE_wxFrame

#if wxLUA_USE_wxColourPenBrush
        { "wxCAP_BUTT", wxCAP_BUTT },
        { "wxCAP_PROJECTING", wxCAP_PROJECTING },
        { "wxCAP_ROUND", wxCAP_ROUND },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxComboBox && wxUSE_COMBOBOX
        { "wxCB_DROPDOWN", wxCB_DROPDOWN },
        { "wxCB_READONLY", wxCB_READONLY },
        { "wxCB_SIMPLE", wxCB_SIMPLE },
        { "wxCB_SORT", wxCB_SORT },
#endif // wxLUA_USE_wxComboBox && wxUSE_COMBOBOX

        { "wxCENTER", wxCENTER },
        { "wxCENTER_FRAME", wxCENTER_FRAME },
        { "wxCENTER_ON_SCREEN", wxCENTER_ON_SCREEN },
        { "wxCENTRE", wxCENTRE },
        { "wxCENTRE_ON_SCREEN", wxCENTRE_ON_SCREEN },

#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
        { "wxCHANGE_DIR", wxCHANGE_DIR },
#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxChoice && wxUSE_CHOICEBOOK
        { "wxCHB_ALIGN_MASK", wxCHB_ALIGN_MASK },
        { "wxCHB_BOTTOM", wxCHB_BOTTOM },
        { "wxCHB_DEFAULT", wxCHB_DEFAULT },
        { "wxCHB_LEFT", wxCHB_LEFT },
        { "wxCHB_RIGHT", wxCHB_RIGHT },
        { "wxCHB_TOP", wxCHB_TOP },
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxChoice && wxUSE_CHOICEBOOK

#if wxLUA_USE_wxCheckBox && wxUSE_CHECKBOX
        { "wxCHK_2STATE", wxCHK_2STATE },
        { "wxCHK_3STATE", wxCHK_3STATE },
        { "wxCHK_ALLOW_3RD_STATE_FOR_USER", wxCHK_ALLOW_3RD_STATE_FOR_USER },
        { "wxCHK_CHECKED", wxCHK_CHECKED },
        { "wxCHK_UNCHECKED", wxCHK_UNCHECKED },
        { "wxCHK_UNDETERMINED", wxCHK_UNDETERMINED },
#endif // wxLUA_USE_wxCheckBox && wxUSE_CHECKBOX

#if wxLUA_USE_wxDialog
        { "wxCHOICEDLG_STYLE", wxCHOICEDLG_STYLE },
#endif // wxLUA_USE_wxDialog

#if wxLUA_USE_wxDC
        { "wxCLEAR", wxCLEAR },
#endif // wxLUA_USE_wxDC

        { "wxCLIP_CHILDREN", wxCLIP_CHILDREN },

#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxFrame)
        { "wxCLOSE_BOX", wxCLOSE_BOX },
#endif // (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxFrame)

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxColourPickerCtrl && wxUSE_COLOURPICKERCTRL)
        { "wxCLRP_DEFAULT_STYLE", wxCLRP_DEFAULT_STYLE },
        { "wxCLRP_SHOW_LABEL", wxCLRP_SHOW_LABEL },
        { "wxCLRP_USE_TEXTCTRL", wxCLRP_USE_TEXTCTRL },
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxColourPickerCtrl && wxUSE_COLOURPICKERCTRL)

        { "wxCOLOURED", wxCOLOURED },

#if wxLUA_USE_wxRenderer
        { "wxCONTROL_CHECKABLE", wxCONTROL_CHECKABLE },
        { "wxCONTROL_CHECKED", wxCONTROL_CHECKED },
        { "wxCONTROL_CURRENT", wxCONTROL_CURRENT },
        { "wxCONTROL_DIRTY", wxCONTROL_DIRTY },
        { "wxCONTROL_DISABLED", wxCONTROL_DISABLED },
        { "wxCONTROL_EXPANDED", wxCONTROL_EXPANDED },
        { "wxCONTROL_FLAGS_MASK", wxCONTROL_FLAGS_MASK },
        { "wxCONTROL_FOCUSED", wxCONTROL_FOCUSED },
        { "wxCONTROL_ISDEFAULT", wxCONTROL_ISDEFAULT },
        { "wxCONTROL_ISSUBMENU", wxCONTROL_ISSUBMENU },
        { "wxCONTROL_PRESSED", wxCONTROL_PRESSED },
        { "wxCONTROL_SELECTED", wxCONTROL_SELECTED },
        { "wxCONTROL_SIZEGRIP", wxCONTROL_SIZEGRIP },
        { "wxCONTROL_SPECIAL", wxCONTROL_SPECIAL },
        { "wxCONTROL_UNDETERMINED", wxCONTROL_UNDETERMINED },
#endif // wxLUA_USE_wxRenderer

#if wxLUA_USE_wxDC
        { "wxCOPY", wxCOPY },
#endif // wxLUA_USE_wxDC

#if wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxCollapsiblePane && wxUSE_COLLPANE
        { "wxCP_DEFAULT_STYLE", wxCP_DEFAULT_STYLE },
#endif // wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxCollapsiblePane && wxUSE_COLLPANE

#if wxLUA_USE_wxColourPenBrush
        { "wxCROSSDIAG_HATCH", wxCROSSDIAG_HATCH },
        { "wxCROSS_HATCH", wxCROSS_HATCH },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxCursor
        { "wxCURSOR_ARROW", wxCURSOR_ARROW },
        { "wxCURSOR_ARROWWAIT", wxCURSOR_ARROWWAIT },
#endif // wxLUA_USE_wxCursor

#if (wxLUA_USE_wxCursor) && (defined (__X__ ))
        { "wxCURSOR_BASED_ARROW_DOWN", wxCURSOR_BASED_ARROW_DOWN },
        { "wxCURSOR_BASED_ARROW_UP", wxCURSOR_BASED_ARROW_UP },
#endif // (wxLUA_USE_wxCursor) && (defined (__X__ ))

#if wxLUA_USE_wxCursor
        { "wxCURSOR_BLANK", wxCURSOR_BLANK },
        { "wxCURSOR_BULLSEYE", wxCURSOR_BULLSEYE },
        { "wxCURSOR_CHAR", wxCURSOR_CHAR },
#endif // wxLUA_USE_wxCursor

#if (defined(__WXMAC__)) && (wxLUA_USE_wxCursor)
        { "wxCURSOR_COPY_ARROW", wxCURSOR_COPY_ARROW },
#endif // (defined(__WXMAC__)) && (wxLUA_USE_wxCursor)

#if wxLUA_USE_wxCursor
        { "wxCURSOR_CROSS", wxCURSOR_CROSS },
#endif // wxLUA_USE_wxCursor

#if (wxLUA_USE_wxCursor) && (defined (__X__ ))
        { "wxCURSOR_CROSS_REVERSE", wxCURSOR_CROSS_REVERSE },
#endif // (wxLUA_USE_wxCursor) && (defined (__X__ ))

#if wxLUA_USE_wxCursor
        { "wxCURSOR_DEFAULT", wxCURSOR_DEFAULT },
#endif // wxLUA_USE_wxCursor

#if (wxLUA_USE_wxCursor) && (defined (__X__ ))
        { "wxCURSOR_DOUBLE_ARROW", wxCURSOR_DOUBLE_ARROW },
#endif // (wxLUA_USE_wxCursor) && (defined (__X__ ))

#if wxLUA_USE_wxCursor
        { "wxCURSOR_HAND", wxCURSOR_HAND },
        { "wxCURSOR_IBEAM", wxCURSOR_IBEAM },
        { "wxCURSOR_LEFT_BUTTON", wxCURSOR_LEFT_BUTTON },
        { "wxCURSOR_MAGNIFIER", wxCURSOR_MAGNIFIER },
        { "wxCURSOR_MAX", wxCURSOR_MAX },
        { "wxCURSOR_MIDDLE_BUTTON", wxCURSOR_MIDDLE_BUTTON },
        { "wxCURSOR_NONE", wxCURSOR_NONE },
        { "wxCURSOR_NO_ENTRY", wxCURSOR_NO_ENTRY },
        { "wxCURSOR_PAINT_BRUSH", wxCURSOR_PAINT_BRUSH },
        { "wxCURSOR_PENCIL", wxCURSOR_PENCIL },
        { "wxCURSOR_POINT_LEFT", wxCURSOR_POINT_LEFT },
        { "wxCURSOR_POINT_RIGHT", wxCURSOR_POINT_RIGHT },
        { "wxCURSOR_QUESTION_ARROW", wxCURSOR_QUESTION_ARROW },
        { "wxCURSOR_RIGHT_ARROW", wxCURSOR_RIGHT_ARROW },
        { "wxCURSOR_RIGHT_BUTTON", wxCURSOR_RIGHT_BUTTON },
        { "wxCURSOR_SIZENESW", wxCURSOR_SIZENESW },
        { "wxCURSOR_SIZENS", wxCURSOR_SIZENS },
        { "wxCURSOR_SIZENWSE", wxCURSOR_SIZENWSE },
        { "wxCURSOR_SIZEWE", wxCURSOR_SIZEWE },
        { "wxCURSOR_SIZING", wxCURSOR_SIZING },
        { "wxCURSOR_SPRAYCAN", wxCURSOR_SPRAYCAN },
        { "wxCURSOR_WAIT", wxCURSOR_WAIT },
        { "wxCURSOR_WATCH", wxCURSOR_WATCH },
#endif // wxLUA_USE_wxCursor

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxCenter", wxCenter },
        { "wxCentre", wxCentre },
        { "wxCentreX", wxCentreX },
        { "wxCentreY", wxCentreY },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxDirDialog && wxUSE_DIRDLG)
        { "wxDD_CHANGE_DIR", wxDD_CHANGE_DIR },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxDirDialog && wxUSE_DIRDLG)

#if wxLUA_USE_wxDirDialog && wxUSE_DIRDLG
        { "wxDD_DEFAULT_STYLE", wxDD_DEFAULT_STYLE },
#endif // wxLUA_USE_wxDirDialog && wxUSE_DIRDLG

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxDirDialog && wxUSE_DIRDLG)
        { "wxDD_DIR_MUST_EXIST", wxDD_DIR_MUST_EXIST },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxDirDialog && wxUSE_DIRDLG)

#if (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxDirDialog && wxUSE_DIRDLG)
        { "wxDD_NEW_DIR_BUTTON", wxDD_NEW_DIR_BUTTON },
#endif // (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxDirDialog && wxUSE_DIRDLG)

#if wxLUA_USE_wxFont
        { "wxDECORATIVE", wxDECORATIVE },
        { "wxDEFAULT", wxDEFAULT },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxDialog
        { "wxDEFAULT_DIALOG_STYLE", wxDEFAULT_DIALOG_STYLE },
#endif // wxLUA_USE_wxDialog

#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
        { "wxDEFAULT_DOCMAN_FLAGS", wxDEFAULT_DOCMAN_FLAGS },
#endif // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE

#if wxLUA_USE_wxFrame
        { "wxDEFAULT_FRAME_STYLE", wxDEFAULT_FRAME_STYLE },
#endif // wxLUA_USE_wxFrame

#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
        { "wxDEFAULT_TEMPLATE_FLAGS", wxDEFAULT_TEMPLATE_FLAGS },
#endif // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE

#if wxLUA_USE_wxDataObject && wxUSE_DATAOBJ
        { "wxDF_BITMAP", wxDF_BITMAP },
        { "wxDF_DIB", wxDF_DIB },
        { "wxDF_DIF", wxDF_DIF },
        { "wxDF_ENHMETAFILE", wxDF_ENHMETAFILE },
        { "wxDF_FILENAME", wxDF_FILENAME },
        { "wxDF_HTML", wxDF_HTML },
        { "wxDF_INVALID", wxDF_INVALID },
        { "wxDF_LOCALE", wxDF_LOCALE },
        { "wxDF_MAX", wxDF_MAX },
        { "wxDF_METAFILE", wxDF_METAFILE },
        { "wxDF_OEMTEXT", wxDF_OEMTEXT },
        { "wxDF_PALETTE", wxDF_PALETTE },
        { "wxDF_PENDATA", wxDF_PENDATA },
        { "wxDF_PRIVATE", wxDF_PRIVATE },
        { "wxDF_RIFF", wxDF_RIFF },
        { "wxDF_SYLK", wxDF_SYLK },
        { "wxDF_TEXT", wxDF_TEXT },
        { "wxDF_TIFF", wxDF_TIFF },
        { "wxDF_UNICODETEXT", wxDF_UNICODETEXT },
        { "wxDF_WAVE", wxDF_WAVE },
#endif // wxLUA_USE_wxDataObject && wxUSE_DATAOBJ

#if wxLUA_USE_wxDialog
        { "wxDIALOG_EX_CONTEXTHELP", wxDIALOG_EX_CONTEXTHELP },
        { "wxDIALOG_MODAL", wxDIALOG_MODAL },
        { "wxDIALOG_MODELESS", wxDIALOG_MODELESS },
        { "wxDIALOG_NO_PARENT", wxDIALOG_NO_PARENT },
#endif // wxLUA_USE_wxDialog

#if wxLUA_USE_wxGenericDirCtrl && wxUSE_DIRDLG
        { "wxDIRCTRL_3D_INTERNAL", wxDIRCTRL_3D_INTERNAL },
        { "wxDIRCTRL_DIR_ONLY", wxDIRCTRL_DIR_ONLY },
        { "wxDIRCTRL_EDIT_LABELS", wxDIRCTRL_EDIT_LABELS },
        { "wxDIRCTRL_SELECT_FIRST", wxDIRCTRL_SELECT_FIRST },
        { "wxDIRCTRL_SHOW_FILTERS", wxDIRCTRL_SHOW_FILTERS },
#endif // wxLUA_USE_wxGenericDirCtrl && wxUSE_DIRDLG

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDirPickerCtrl && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))
        { "wxDIRP_CHANGE_DIR", wxDIRP_CHANGE_DIR },
        { "wxDIRP_DEFAULT_STYLE", wxDIRP_DEFAULT_STYLE },
        { "wxDIRP_DIR_MUST_EXIST", wxDIRP_DIR_MUST_EXIST },
        { "wxDIRP_USE_TEXTCTRL", wxDIRP_USE_TEXTCTRL },
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDirPickerCtrl && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))

#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
        { "wxDOC_NEW", wxDOC_NEW },
        { "wxDOC_SILENT", wxDOC_SILENT },
#endif // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE

#if wxLUA_USE_wxColourPenBrush
        { "wxDOT", wxDOT },
        { "wxDOT_DASH", wxDOT_DASH },
#endif // wxLUA_USE_wxColourPenBrush

        { "wxDOUBLE_BORDER", wxDOUBLE_BORDER },
        { "wxDOWN", wxDOWN },

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDatePickerCtrl && wxUSE_DATEPICKCTRL)
        { "wxDP_ALLOWNONE", wxDP_ALLOWNONE },
        { "wxDP_DEFAULT", wxDP_DEFAULT },
        { "wxDP_DROPDOWN", wxDP_DROPDOWN },
        { "wxDP_SHOWCENTURY", wxDP_SHOWCENTURY },
        { "wxDP_SPIN", wxDP_SPIN },
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDatePickerCtrl && wxUSE_DATEPICKCTRL)

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { "wxDUPLEX_HORIZONTAL", wxDUPLEX_HORIZONTAL },
        { "wxDUPLEX_SIMPLEX", wxDUPLEX_SIMPLEX },
        { "wxDUPLEX_VERTICAL", wxDUPLEX_VERTICAL },
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if wxLUA_USE_wxPointSizeRect
        { "wxDefaultCoord", wxDefaultCoord },
#endif // wxLUA_USE_wxPointSizeRect

#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
        { "wxDragCancel", wxDragCancel },
        { "wxDragCopy", wxDragCopy },
        { "wxDragError", wxDragError },
        { "wxDragLink", wxDragLink },
        { "wxDragMove", wxDragMove },
        { "wxDragNone", wxDragNone },
        { "wxDrag_AllowMove", wxDrag_AllowMove },
        { "wxDrag_CopyOnly", wxDrag_CopyOnly },
        { "wxDrag_DefaultMove", wxDrag_DefaultMove },
#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP

        { "wxEAST", wxEAST },

#if wxLUA_USE_wxDC
        { "wxEQUIV", wxEQUIV },
#endif // wxLUA_USE_wxDC

        { "wxEVENT_PROPAGATE_MAX", wxEVENT_PROPAGATE_MAX },
        { "wxEVENT_PROPAGATE_NONE", wxEVENT_PROPAGATE_NONE },

#if wxLUA_USE_wxProcess
        { "wxEXEC_ASYNC", wxEXEC_ASYNC },
        { "wxEXEC_MAKE_GROUP_LEADER", wxEXEC_MAKE_GROUP_LEADER },
        { "wxEXEC_NODISABLE", wxEXEC_NODISABLE },
        { "wxEXEC_NOHIDE", wxEXEC_NOHIDE },
        { "wxEXEC_SYNC", wxEXEC_SYNC },
#endif // wxLUA_USE_wxProcess

        { "wxEXPAND", wxEXPAND },

#if wxLUA_USE_wxColourPenBrush
        { "wxFDIAGONAL_HATCH", wxFDIAGONAL_HATCH },
#endif // wxLUA_USE_wxColourPenBrush

#if wxCHECK_VERSION(2,8,0)
        { "wxFD_CHANGE_DIR", wxFD_CHANGE_DIR },
        { "wxFD_DEFAULT_STYLE", wxFD_DEFAULT_STYLE },
        { "wxFD_FILE_MUST_EXIST", wxFD_FILE_MUST_EXIST },
        { "wxFD_MULTIPLE", wxFD_MULTIPLE },
        { "wxFD_OPEN", wxFD_OPEN },
        { "wxFD_OVERWRITE_PROMPT", wxFD_OVERWRITE_PROMPT },
        { "wxFD_PREVIEW", wxFD_PREVIEW },
        { "wxFD_SAVE", wxFD_SAVE },
#endif // wxCHECK_VERSION(2,8,0)

#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
        { "wxFILE_MUST_EXIST", wxFILE_MUST_EXIST },
#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

#if (wxLUA_USE_wxValidator && wxUSE_VALIDATORS) && (wxLUA_USE_wxTextValidator)
        { "wxFILTER_ALPHA", wxFILTER_ALPHA },
        { "wxFILTER_ALPHANUMERIC", wxFILTER_ALPHANUMERIC },
        { "wxFILTER_ASCII", wxFILTER_ASCII },
        { "wxFILTER_EXCLUDE_CHAR_LIST", wxFILTER_EXCLUDE_CHAR_LIST },
        { "wxFILTER_EXCLUDE_LIST", wxFILTER_EXCLUDE_LIST },
        { "wxFILTER_INCLUDE_CHAR_LIST", wxFILTER_INCLUDE_CHAR_LIST },
        { "wxFILTER_INCLUDE_LIST", wxFILTER_INCLUDE_LIST },
        { "wxFILTER_NONE", wxFILTER_NONE },
        { "wxFILTER_NUMERIC", wxFILTER_NUMERIC },
#endif // (wxLUA_USE_wxValidator && wxUSE_VALIDATORS) && (wxLUA_USE_wxTextValidator)

#if wxLUA_USE_wxFont
        { "wxFIXED", wxFIXED },
#endif // wxLUA_USE_wxFont

        { "wxFIXED_LENGTH", wxFIXED_LENGTH },

#if wxCHECK_VERSION(2,8,8)
        { "wxFIXED_MINSIZE", wxFIXED_MINSIZE },
#endif // wxCHECK_VERSION(2,8,8)

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))
        { "wxFLEX_GROWMODE_ALL", wxFLEX_GROWMODE_ALL },
        { "wxFLEX_GROWMODE_NONE", wxFLEX_GROWMODE_NONE },
        { "wxFLEX_GROWMODE_SPECIFIED", wxFLEX_GROWMODE_SPECIFIED },
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))

#if wxLUA_USE_wxDC
        { "wxFLOOD_BORDER", wxFLOOD_BORDER },
        { "wxFLOOD_SURFACE", wxFLOOD_SURFACE },
#endif // wxLUA_USE_wxDC

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDirPickerCtrl && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))
        { "wxFLP_CHANGE_DIR", wxFLP_CHANGE_DIR },
        { "wxFLP_DEFAULT_STYLE", wxFLP_DEFAULT_STYLE },
        { "wxFLP_FILE_MUST_EXIST", wxFLP_FILE_MUST_EXIST },
        { "wxFLP_OPEN", wxFLP_OPEN },
        { "wxFLP_OVERWRITE_PROMPT", wxFLP_OVERWRITE_PROMPT },
        { "wxFLP_SAVE", wxFLP_SAVE },
        { "wxFLP_USE_TEXTCTRL", wxFLP_USE_TEXTCTRL },
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDirPickerCtrl && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxFontPickerCtrl && wxUSE_FONTPICKERCTRL)
        { "wxFNTP_DEFAULT_STYLE", wxFNTP_DEFAULT_STYLE },
        { "wxFNTP_FONTDESC_AS_LABEL", wxFNTP_FONTDESC_AS_LABEL },
        { "wxFNTP_MAXPOINT_SIZE", wxFNTP_MAXPOINT_SIZE },
        { "wxFNTP_USEFONT_FOR_LABEL", wxFNTP_USEFONT_FOR_LABEL },
        { "wxFNTP_USE_TEXTCTRL", wxFNTP_USE_TEXTCTRL },
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxFontPickerCtrl && wxUSE_FONTPICKERCTRL)

#if wxLUA_USE_wxFont
        { "wxFONTFAMILY_DECORATIVE", wxFONTFAMILY_DECORATIVE },
        { "wxFONTFAMILY_DEFAULT", wxFONTFAMILY_DEFAULT },
        { "wxFONTFAMILY_MAX", wxFONTFAMILY_MAX },
        { "wxFONTFAMILY_MODERN", wxFONTFAMILY_MODERN },
        { "wxFONTFAMILY_ROMAN", wxFONTFAMILY_ROMAN },
        { "wxFONTFAMILY_SCRIPT", wxFONTFAMILY_SCRIPT },
        { "wxFONTFAMILY_SWISS", wxFONTFAMILY_SWISS },
        { "wxFONTFAMILY_TELETYPE", wxFONTFAMILY_TELETYPE },
        { "wxFONTFAMILY_UNKNOWN", wxFONTFAMILY_UNKNOWN },
        { "wxFONTFLAG_ANTIALIASED", wxFONTFLAG_ANTIALIASED },
        { "wxFONTFLAG_BOLD", wxFONTFLAG_BOLD },
        { "wxFONTFLAG_DEFAULT", wxFONTFLAG_DEFAULT },
        { "wxFONTFLAG_ITALIC", wxFONTFLAG_ITALIC },
        { "wxFONTFLAG_LIGHT", wxFONTFLAG_LIGHT },
        { "wxFONTFLAG_MASK", wxFONTFLAG_MASK },
        { "wxFONTFLAG_NOT_ANTIALIASED", wxFONTFLAG_NOT_ANTIALIASED },
        { "wxFONTFLAG_SLANT", wxFONTFLAG_SLANT },
        { "wxFONTFLAG_STRIKETHROUGH", wxFONTFLAG_STRIKETHROUGH },
        { "wxFONTFLAG_UNDERLINED", wxFONTFLAG_UNDERLINED },
        { "wxFONTSTYLE_ITALIC", wxFONTSTYLE_ITALIC },
        { "wxFONTSTYLE_MAX", wxFONTSTYLE_MAX },
        { "wxFONTSTYLE_NORMAL", wxFONTSTYLE_NORMAL },
        { "wxFONTSTYLE_SLANT", wxFONTSTYLE_SLANT },
        { "wxFONTWEIGHT_BOLD", wxFONTWEIGHT_BOLD },
        { "wxFONTWEIGHT_LIGHT", wxFONTWEIGHT_LIGHT },
        { "wxFONTWEIGHT_MAX", wxFONTWEIGHT_MAX },
        { "wxFONTWEIGHT_NORMAL", wxFONTWEIGHT_NORMAL },
#endif // wxLUA_USE_wxFont

        { "wxFORWARD", wxFORWARD },

#if wxLUA_USE_wxFrame
        { "wxFRAME_EX_CONTEXTHELP", wxFRAME_EX_CONTEXTHELP },
#endif // wxLUA_USE_wxFrame

#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxFrame)
        { "wxFRAME_EX_METAL", wxFRAME_EX_METAL },
#endif // (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxFrame)

#if wxLUA_USE_wxFrame
        { "wxFRAME_FLOAT_ON_PARENT", wxFRAME_FLOAT_ON_PARENT },
        { "wxFRAME_NO_TASKBAR", wxFRAME_NO_TASKBAR },
#endif // wxLUA_USE_wxFrame

#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxFrame)
        { "wxFRAME_SHAPED", wxFRAME_SHAPED },
#endif // (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxFrame)

#if wxLUA_USE_wxFrame
        { "wxFRAME_TOOL_WINDOW", wxFRAME_TOOL_WINDOW },
#endif // wxLUA_USE_wxFrame

#if wxUSE_FINDREPLDLG && wxLUA_USE_wxFindReplaceDialog
        { "wxFR_DOWN", wxFR_DOWN },
        { "wxFR_MATCHCASE", wxFR_MATCHCASE },
        { "wxFR_NOMATCHCASE", wxFR_NOMATCHCASE },
        { "wxFR_NOUPDOWN", wxFR_NOUPDOWN },
        { "wxFR_NOWHOLEWORD", wxFR_NOWHOLEWORD },
        { "wxFR_REPLACEDIALOG", wxFR_REPLACEDIALOG },
        { "wxFR_WHOLEWORD", wxFR_WHOLEWORD },
#endif // wxUSE_FINDREPLDLG && wxLUA_USE_wxFindReplaceDialog

#if wxLUA_USE_wxFrame || wxLUA_USE_wxDialog
        { "wxFULLSCREEN_ALL", wxFULLSCREEN_ALL },
        { "wxFULLSCREEN_NOBORDER", wxFULLSCREEN_NOBORDER },
        { "wxFULLSCREEN_NOCAPTION", wxFULLSCREEN_NOCAPTION },
        { "wxFULLSCREEN_NOMENUBAR", wxFULLSCREEN_NOMENUBAR },
        { "wxFULLSCREEN_NOSTATUSBAR", wxFULLSCREEN_NOSTATUSBAR },
        { "wxFULLSCREEN_NOTOOLBAR", wxFULLSCREEN_NOTOOLBAR },
#endif // wxLUA_USE_wxFrame || wxLUA_USE_wxDialog

        { "wxFULL_REPAINT_ON_RESIZE", wxFULL_REPAINT_ON_RESIZE },

#if wxLUA_USE_wxGauge && wxUSE_GAUGE
        { "wxGA_HORIZONTAL", wxGA_HORIZONTAL },
#endif // wxLUA_USE_wxGauge && wxUSE_GAUGE

#if ((defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)) && (wxLUA_USE_wxGauge && wxUSE_GAUGE)
        { "wxGA_PROGRESSBAR", wxGA_PROGRESSBAR },
#endif // ((defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)) && (wxLUA_USE_wxGauge && wxUSE_GAUGE)

#if wxLUA_USE_wxGauge && wxUSE_GAUGE
        { "wxGA_SMOOTH", wxGA_SMOOTH },
        { "wxGA_VERTICAL", wxGA_VERTICAL },
#endif // wxLUA_USE_wxGauge && wxUSE_GAUGE

        { "wxGROW", wxGROW },

#if (defined(wxHAS_NATIVE_RENDERER)) && (wxLUA_USE_wxRenderer)
        { "wxHAS_NATIVE_RENDERER", 1 },
#endif // (defined(wxHAS_NATIVE_RENDERER)) && (wxLUA_USE_wxRenderer)

#if (wxLUA_USE_wxRegion) && (defined (wxHAS_REGION_COMBINE ))
        { "wxHAS_REGION_COMBINE", 1 },
#endif // (wxLUA_USE_wxRegion) && (defined (wxHAS_REGION_COMBINE ))

#if wxLUA_USE_wxRenderer
        { "wxHDR_SORT_ICON_DOWN", wxHDR_SORT_ICON_DOWN },
        { "wxHDR_SORT_ICON_NONE", wxHDR_SORT_ICON_NONE },
        { "wxHDR_SORT_ICON_UP", wxHDR_SORT_ICON_UP },
#endif // wxLUA_USE_wxRenderer

        { "wxHELP", wxHELP },

#if wxLUA_USE_wxHelpController && wxUSE_HELP
        { "wxHELP_NETSCAPE", wxHELP_NETSCAPE },
        { "wxHELP_SEARCH_ALL", wxHELP_SEARCH_ALL },
        { "wxHELP_SEARCH_INDEX", wxHELP_SEARCH_INDEX },
#endif // wxLUA_USE_wxHelpController && wxUSE_HELP

#if ((defined(WXWIN_COMPATIBILITY_2_4) && WXWIN_COMPATIBILITY_2_4)) && ((defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6))
        { "wxHIDE_READONLY", wxHIDE_READONLY },
#endif // ((defined(WXWIN_COMPATIBILITY_2_4) && WXWIN_COMPATIBILITY_2_4)) && ((defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6))

        { "wxHORIZONTAL", wxHORIZONTAL },

#if wxLUA_USE_wxColourPenBrush
        { "wxHORIZONTAL_HATCH", wxHORIZONTAL_HATCH },
#endif // wxLUA_USE_wxColourPenBrush

        { "wxHSCROLL", wxHSCROLL },

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxHeight", wxHeight },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if wxLUA_USE_wxFrame
        { "wxICONIZE", wxICONIZE },
#endif // wxLUA_USE_wxFrame

        { "wxICON_ASTERISK", wxICON_ASTERISK },
        { "wxICON_ERROR", wxICON_ERROR },
        { "wxICON_EXCLAMATION", wxICON_EXCLAMATION },
        { "wxICON_HAND", wxICON_HAND },
        { "wxICON_INFORMATION", wxICON_INFORMATION },
        { "wxICON_MASK", wxICON_MASK },
        { "wxICON_QUESTION", wxICON_QUESTION },
        { "wxICON_STOP", wxICON_STOP },
        { "wxICON_WARNING", wxICON_WARNING },
        { "wxIDLE_PROCESS_ALL", wxIDLE_PROCESS_ALL },
        { "wxIDLE_PROCESS_SPECIFIED", wxIDLE_PROCESS_SPECIFIED },

#if wxLUA_USE_wxID_XXX
        { "wxID_ABORT", wxID_ABORT },
        { "wxID_ABOUT", wxID_ABOUT },
        { "wxID_ADD", wxID_ADD },
        { "wxID_ANY", wxID_ANY },
        { "wxID_APPLY", wxID_APPLY },
        { "wxID_BACKWARD", wxID_BACKWARD },
        { "wxID_BOLD", wxID_BOLD },
        { "wxID_CANCEL", wxID_CANCEL },
        { "wxID_CLEAR", wxID_CLEAR },
        { "wxID_CLOSE", wxID_CLOSE },
        { "wxID_CLOSE_ALL", wxID_CLOSE_ALL },
        { "wxID_CLOSE_FRAME", wxID_CLOSE_FRAME },
        { "wxID_CONTEXT_HELP", wxID_CONTEXT_HELP },
        { "wxID_COPY", wxID_COPY },
        { "wxID_CUT", wxID_CUT },
        { "wxID_DEFAULT", wxID_DEFAULT },
        { "wxID_DELETE", wxID_DELETE },
        { "wxID_DOWN", wxID_DOWN },
        { "wxID_DUPLICATE", wxID_DUPLICATE },
#endif // wxLUA_USE_wxID_XXX

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxID_XXX)
        { "wxID_EDIT", wxID_EDIT },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxID_XXX)

#if wxLUA_USE_wxID_XXX
        { "wxID_EXIT", wxID_EXIT },
#endif // wxLUA_USE_wxID_XXX

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxID_XXX)
        { "wxID_FILE", wxID_FILE },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxID_XXX)

#if wxLUA_USE_wxID_XXX
        { "wxID_FILE1", wxID_FILE1 },
        { "wxID_FILE2", wxID_FILE2 },
        { "wxID_FILE3", wxID_FILE3 },
        { "wxID_FILE4", wxID_FILE4 },
        { "wxID_FILE5", wxID_FILE5 },
        { "wxID_FILE6", wxID_FILE6 },
        { "wxID_FILE7", wxID_FILE7 },
        { "wxID_FILE8", wxID_FILE8 },
        { "wxID_FILE9", wxID_FILE9 },
        { "wxID_FIND", wxID_FIND },
        { "wxID_FORWARD", wxID_FORWARD },
        { "wxID_HELP", wxID_HELP },
        { "wxID_HELP_COMMANDS", wxID_HELP_COMMANDS },
        { "wxID_HELP_CONTENTS", wxID_HELP_CONTENTS },
        { "wxID_HELP_CONTEXT", wxID_HELP_CONTEXT },
#endif // wxLUA_USE_wxID_XXX

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxID_XXX)
        { "wxID_HELP_INDEX", wxID_HELP_INDEX },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxID_XXX)

#if wxLUA_USE_wxID_XXX
        { "wxID_HELP_PROCEDURES", wxID_HELP_PROCEDURES },
#endif // wxLUA_USE_wxID_XXX

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxID_XXX)
        { "wxID_HELP_SEARCH", wxID_HELP_SEARCH },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxID_XXX)

#if wxLUA_USE_wxID_XXX
        { "wxID_HIGHEST", wxID_HIGHEST },
        { "wxID_HOME", wxID_HOME },
        { "wxID_ICONIZE_FRAME", wxID_ICONIZE_FRAME },
        { "wxID_IGNORE", wxID_IGNORE },
        { "wxID_INDENT", wxID_INDENT },
        { "wxID_INDEX", wxID_INDEX },
        { "wxID_ITALIC", wxID_ITALIC },
        { "wxID_JUSTIFY_CENTER", wxID_JUSTIFY_CENTER },
        { "wxID_JUSTIFY_FILL", wxID_JUSTIFY_FILL },
        { "wxID_JUSTIFY_LEFT", wxID_JUSTIFY_LEFT },
        { "wxID_JUSTIFY_RIGHT", wxID_JUSTIFY_RIGHT },
        { "wxID_LOWEST", wxID_LOWEST },
        { "wxID_MAXIMIZE_FRAME", wxID_MAXIMIZE_FRAME },
        { "wxID_MORE", wxID_MORE },
        { "wxID_MOVE_FRAME", wxID_MOVE_FRAME },
        { "wxID_NEW", wxID_NEW },
        { "wxID_NO", wxID_NO },
        { "wxID_NONE", wxID_NONE },
        { "wxID_NOTOALL", wxID_NOTOALL },
        { "wxID_OK", wxID_OK },
        { "wxID_OPEN", wxID_OPEN },
#endif // wxLUA_USE_wxID_XXX

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxID_XXX)
        { "wxID_PAGE_SETUP", wxID_PAGE_SETUP },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxID_XXX)

#if wxLUA_USE_wxID_XXX
        { "wxID_PASTE", wxID_PASTE },
        { "wxID_PREFERENCES", wxID_PREFERENCES },
        { "wxID_PREVIEW", wxID_PREVIEW },
#endif // wxLUA_USE_wxID_XXX

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { "wxID_PREVIEW_CLOSE", wxID_PREVIEW_CLOSE },
        { "wxID_PREVIEW_FIRST", wxID_PREVIEW_FIRST },
        { "wxID_PREVIEW_GOTO", wxID_PREVIEW_GOTO },
        { "wxID_PREVIEW_LAST", wxID_PREVIEW_LAST },
        { "wxID_PREVIEW_NEXT", wxID_PREVIEW_NEXT },
        { "wxID_PREVIEW_PREVIOUS", wxID_PREVIEW_PREVIOUS },
        { "wxID_PREVIEW_PRINT", wxID_PREVIEW_PRINT },
        { "wxID_PREVIEW_ZOOM", wxID_PREVIEW_ZOOM },
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if wxLUA_USE_wxID_XXX
        { "wxID_PRINT", wxID_PRINT },
        { "wxID_PRINT_SETUP", wxID_PRINT_SETUP },
        { "wxID_PROPERTIES", wxID_PROPERTIES },
        { "wxID_REDO", wxID_REDO },
        { "wxID_REFRESH", wxID_REFRESH },
        { "wxID_REMOVE", wxID_REMOVE },
        { "wxID_REPLACE", wxID_REPLACE },
        { "wxID_REPLACE_ALL", wxID_REPLACE_ALL },
        { "wxID_RESET", wxID_RESET },
        { "wxID_RESIZE_FRAME", wxID_RESIZE_FRAME },
        { "wxID_RESTORE_FRAME", wxID_RESTORE_FRAME },
        { "wxID_RETRY", wxID_RETRY },
        { "wxID_REVERT", wxID_REVERT },
        { "wxID_REVERT_TO_SAVED", wxID_REVERT_TO_SAVED },
        { "wxID_SAVE", wxID_SAVE },
        { "wxID_SAVEAS", wxID_SAVEAS },
        { "wxID_SELECTALL", wxID_SELECTALL },
        { "wxID_SEPARATOR", wxID_SEPARATOR },
        { "wxID_SETUP", wxID_SETUP },
        { "wxID_STATIC", wxID_STATIC },
        { "wxID_STOP", wxID_STOP },
        { "wxID_SYSTEM_MENU", wxID_SYSTEM_MENU },
        { "wxID_UNDELETE", wxID_UNDELETE },
        { "wxID_UNDERLINE", wxID_UNDERLINE },
        { "wxID_UNDO", wxID_UNDO },
        { "wxID_UNINDENT", wxID_UNINDENT },
        { "wxID_UP", wxID_UP },
        { "wxID_VIEW_DETAILS", wxID_VIEW_DETAILS },
        { "wxID_VIEW_LARGEICONS", wxID_VIEW_LARGEICONS },
        { "wxID_VIEW_LIST", wxID_VIEW_LIST },
        { "wxID_VIEW_SMALLICONS", wxID_VIEW_SMALLICONS },
        { "wxID_VIEW_SORTDATE", wxID_VIEW_SORTDATE },
        { "wxID_VIEW_SORTNAME", wxID_VIEW_SORTNAME },
        { "wxID_VIEW_SORTSIZE", wxID_VIEW_SORTSIZE },
        { "wxID_VIEW_SORTTYPE", wxID_VIEW_SORTTYPE },
        { "wxID_YES", wxID_YES },
        { "wxID_YESTOALL", wxID_YESTOALL },
        { "wxID_ZOOM_100", wxID_ZOOM_100 },
        { "wxID_ZOOM_FIT", wxID_ZOOM_FIT },
        { "wxID_ZOOM_IN", wxID_ZOOM_IN },
        { "wxID_ZOOM_OUT", wxID_ZOOM_OUT },
#endif // wxLUA_USE_wxID_XXX

#if wxLUA_USE_wxImageList
        { "wxIMAGELIST_DRAW_FOCUSED", wxIMAGELIST_DRAW_FOCUSED },
        { "wxIMAGELIST_DRAW_NORMAL", wxIMAGELIST_DRAW_NORMAL },
        { "wxIMAGELIST_DRAW_SELECTED", wxIMAGELIST_DRAW_SELECTED },
        { "wxIMAGELIST_DRAW_TRANSPARENT", wxIMAGELIST_DRAW_TRANSPARENT },
#endif // wxLUA_USE_wxImageList

        { "wxIMAGE_ALPHA_OPAQUE", wxIMAGE_ALPHA_OPAQUE },
        { "wxIMAGE_ALPHA_THRESHOLD", wxIMAGE_ALPHA_THRESHOLD },
        { "wxIMAGE_ALPHA_TRANSPARENT", wxIMAGE_ALPHA_TRANSPARENT },

#if wxLUA_USE_wxImageList
        { "wxIMAGE_LIST_NORMAL", wxIMAGE_LIST_NORMAL },
        { "wxIMAGE_LIST_SMALL", wxIMAGE_LIST_SMALL },
        { "wxIMAGE_LIST_STATE", wxIMAGE_LIST_STATE },
#endif // wxLUA_USE_wxImageList

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)
        { "wxIMAGE_QUALITY_HIGH", wxIMAGE_QUALITY_HIGH },
        { "wxIMAGE_QUALITY_NORMAL", wxIMAGE_QUALITY_NORMAL },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { "wxIMAGE_RESOLUTION_CM", wxIMAGE_RESOLUTION_CM },
        { "wxIMAGE_RESOLUTION_INCHES", wxIMAGE_RESOLUTION_INCHES },
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

#if wxLUA_USE_wxDC
        { "wxINVERT", wxINVERT },
#endif // wxLUA_USE_wxDC

#if wxLUA_USE_wxFont
        { "wxITALIC", wxITALIC },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxMenu && wxUSE_MENUS
        { "wxITEM_CHECK", wxITEM_CHECK },
        { "wxITEM_MAX", wxITEM_MAX },
        { "wxITEM_NORMAL", wxITEM_NORMAL },
        { "wxITEM_RADIO", wxITEM_RADIO },
        { "wxITEM_SEPARATOR", wxITEM_SEPARATOR },
#endif // wxLUA_USE_wxMenu && wxUSE_MENUS

#if wxLUA_USE_wxRegion
        { "wxInRegion", wxInRegion },
#endif // wxLUA_USE_wxRegion

#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
        { "wxInside", wxInside },
#endif // wxLUA_USE_Geometry && wxUSE_GEOMETRY

#if wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL
        { "wxInvalidTextCoord", wxInvalidTextCoord },
#endif // wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL

#if wxLUA_USE_wxColourPenBrush
        { "wxJOIN_BEVEL", wxJOIN_BEVEL },
        { "wxJOIN_MITER", wxJOIN_MITER },
        { "wxJOIN_ROUND", wxJOIN_ROUND },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxProcess
        { "wxKILL_ACCESS_DENIED", wxKILL_ACCESS_DENIED },
        { "wxKILL_BAD_SIGNAL", wxKILL_BAD_SIGNAL },
        { "wxKILL_CHILDREN", wxKILL_CHILDREN },
        { "wxKILL_ERROR", wxKILL_ERROR },
        { "wxKILL_NOCHILDREN", wxKILL_NOCHILDREN },
        { "wxKILL_NO_PROCESS", wxKILL_NO_PROCESS },
        { "wxKILL_OK", wxKILL_OK },
#endif // wxLUA_USE_wxProcess

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { "wxLANDSCAPE", wxLANDSCAPE },
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK
        { "wxLB_ALIGN_MASK", wxLB_ALIGN_MASK },
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK

#if wxLUA_USE_wxListBox && wxUSE_LISTBOX
        { "wxLB_ALWAYS_SB", wxLB_ALWAYS_SB },
#endif // wxLUA_USE_wxListBox && wxUSE_LISTBOX

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK
        { "wxLB_BOTTOM", wxLB_BOTTOM },
        { "wxLB_DEFAULT", wxLB_DEFAULT },
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK

#if wxLUA_USE_wxListBox && wxUSE_LISTBOX
        { "wxLB_EXTENDED", wxLB_EXTENDED },
        { "wxLB_HSCROLL", wxLB_HSCROLL },
#endif // wxLUA_USE_wxListBox && wxUSE_LISTBOX

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK
        { "wxLB_LEFT", wxLB_LEFT },
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK

#if wxLUA_USE_wxListBox && wxUSE_LISTBOX
        { "wxLB_MULTIPLE", wxLB_MULTIPLE },
        { "wxLB_NEEDED_SB", wxLB_NEEDED_SB },
        { "wxLB_OWNERDRAW", wxLB_OWNERDRAW },
#endif // wxLUA_USE_wxListBox && wxUSE_LISTBOX

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK
        { "wxLB_RIGHT", wxLB_RIGHT },
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK

#if wxLUA_USE_wxListBox && wxUSE_LISTBOX
        { "wxLB_SINGLE", wxLB_SINGLE },
        { "wxLB_SORT", wxLB_SORT },
#endif // wxLUA_USE_wxListBox && wxUSE_LISTBOX

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK
        { "wxLB_TOP", wxLB_TOP },
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK

#if wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL
        { "wxLC_ALIGN_LEFT", wxLC_ALIGN_LEFT },
        { "wxLC_ALIGN_TOP", wxLC_ALIGN_TOP },
        { "wxLC_AUTOARRANGE", wxLC_AUTOARRANGE },
        { "wxLC_EDIT_LABELS", wxLC_EDIT_LABELS },
        { "wxLC_HRULES", wxLC_HRULES },
        { "wxLC_ICON", wxLC_ICON },
        { "wxLC_LIST", wxLC_LIST },
        { "wxLC_MASK_ALIGN", wxLC_MASK_ALIGN },
        { "wxLC_MASK_SORT", wxLC_MASK_SORT },
        { "wxLC_MASK_TYPE", wxLC_MASK_TYPE },
        { "wxLC_NO_HEADER", wxLC_NO_HEADER },
        { "wxLC_NO_SORT_HEADER", wxLC_NO_SORT_HEADER },
        { "wxLC_REPORT", wxLC_REPORT },
        { "wxLC_SINGLE_SEL", wxLC_SINGLE_SEL },
        { "wxLC_SMALL_ICON", wxLC_SMALL_ICON },
        { "wxLC_SORT_ASCENDING", wxLC_SORT_ASCENDING },
        { "wxLC_SORT_DESCENDING", wxLC_SORT_DESCENDING },
        { "wxLC_VIRTUAL", wxLC_VIRTUAL },
        { "wxLC_VRULES", wxLC_VRULES },
#endif // wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL

        { "wxLEFT", wxLEFT },

#if wxLUA_USE_wxFont
        { "wxLIGHT", wxLIGHT },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL
        { "wxLIST_ALIGN_DEFAULT", wxLIST_ALIGN_DEFAULT },
        { "wxLIST_ALIGN_LEFT", wxLIST_ALIGN_LEFT },
        { "wxLIST_ALIGN_SNAP_TO_GRID", wxLIST_ALIGN_SNAP_TO_GRID },
        { "wxLIST_ALIGN_TOP", wxLIST_ALIGN_TOP },
        { "wxLIST_AUTOSIZE", wxLIST_AUTOSIZE },
        { "wxLIST_AUTOSIZE_USEHEADER", wxLIST_AUTOSIZE_USEHEADER },
        { "wxLIST_FIND_DOWN", wxLIST_FIND_DOWN },
        { "wxLIST_FIND_LEFT", wxLIST_FIND_LEFT },
        { "wxLIST_FIND_RIGHT", wxLIST_FIND_RIGHT },
        { "wxLIST_FIND_UP", wxLIST_FIND_UP },
        { "wxLIST_FORMAT_CENTER", wxLIST_FORMAT_CENTER },
        { "wxLIST_FORMAT_CENTRE", wxLIST_FORMAT_CENTRE },
        { "wxLIST_FORMAT_LEFT", wxLIST_FORMAT_LEFT },
        { "wxLIST_FORMAT_RIGHT", wxLIST_FORMAT_RIGHT },
#endif // wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL)
        { "wxLIST_GETSUBITEMRECT_WHOLEITEM", wxLIST_GETSUBITEMRECT_WHOLEITEM },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL)

#if wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL
        { "wxLIST_HITTEST_ABOVE", wxLIST_HITTEST_ABOVE },
        { "wxLIST_HITTEST_BELOW", wxLIST_HITTEST_BELOW },
        { "wxLIST_HITTEST_NOWHERE", wxLIST_HITTEST_NOWHERE },
        { "wxLIST_HITTEST_ONITEM", wxLIST_HITTEST_ONITEM },
        { "wxLIST_HITTEST_ONITEMICON", wxLIST_HITTEST_ONITEMICON },
        { "wxLIST_HITTEST_ONITEMLABEL", wxLIST_HITTEST_ONITEMLABEL },
        { "wxLIST_HITTEST_ONITEMRIGHT", wxLIST_HITTEST_ONITEMRIGHT },
        { "wxLIST_HITTEST_ONITEMSTATEICON", wxLIST_HITTEST_ONITEMSTATEICON },
        { "wxLIST_HITTEST_TOLEFT", wxLIST_HITTEST_TOLEFT },
        { "wxLIST_HITTEST_TORIGHT", wxLIST_HITTEST_TORIGHT },
        { "wxLIST_MASK_DATA", wxLIST_MASK_DATA },
        { "wxLIST_MASK_FORMAT", wxLIST_MASK_FORMAT },
        { "wxLIST_MASK_IMAGE", wxLIST_MASK_IMAGE },
        { "wxLIST_MASK_STATE", wxLIST_MASK_STATE },
        { "wxLIST_MASK_TEXT", wxLIST_MASK_TEXT },
        { "wxLIST_MASK_WIDTH", wxLIST_MASK_WIDTH },
        { "wxLIST_NEXT_ABOVE", wxLIST_NEXT_ABOVE },
        { "wxLIST_NEXT_ALL", wxLIST_NEXT_ALL },
        { "wxLIST_NEXT_BELOW", wxLIST_NEXT_BELOW },
        { "wxLIST_NEXT_LEFT", wxLIST_NEXT_LEFT },
        { "wxLIST_NEXT_RIGHT", wxLIST_NEXT_RIGHT },
        { "wxLIST_RECT_BOUNDS", wxLIST_RECT_BOUNDS },
        { "wxLIST_RECT_ICON", wxLIST_RECT_ICON },
        { "wxLIST_RECT_LABEL", wxLIST_RECT_LABEL },
        { "wxLIST_SET_ITEM", wxLIST_SET_ITEM },
        { "wxLIST_STATE_CUT", wxLIST_STATE_CUT },
        { "wxLIST_STATE_DONTCARE", wxLIST_STATE_DONTCARE },
        { "wxLIST_STATE_DROPHILITED", wxLIST_STATE_DROPHILITED },
        { "wxLIST_STATE_FOCUSED", wxLIST_STATE_FOCUSED },
        { "wxLIST_STATE_SELECTED", wxLIST_STATE_SELECTED },
#endif // wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL

#if wxLUA_USE_wxStaticLine && wxUSE_STATLINE
        { "wxLI_HORIZONTAL", wxLI_HORIZONTAL },
        { "wxLI_VERTICAL", wxLI_VERTICAL },
#endif // wxLUA_USE_wxStaticLine && wxUSE_STATLINE

#if wxLUA_USE_wxColourPenBrush
        { "wxLONG_DASH", wxLONG_DASH },
#endif // wxLUA_USE_wxColourPenBrush

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxLeft", wxLeft },
        { "wxLeftOf", wxLeftOf },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if wxLUA_USE_wxFrame
        { "wxMAXIMIZE", wxMAXIMIZE },
        { "wxMAXIMIZE_BOX", wxMAXIMIZE_BOX },
#endif // wxLUA_USE_wxFrame

#if wxLUA_USE_wxMenu && wxUSE_MENUS
        { "wxMB_DOCKABLE", wxMB_DOCKABLE },
        { "wxMENU_TEAROFF", wxMENU_TEAROFF },
#endif // wxLUA_USE_wxMenu && wxUSE_MENUS

#if wxLUA_USE_wxFrame
        { "wxMINIMIZE", wxMINIMIZE },
        { "wxMINIMIZE_BOX", wxMINIMIZE_BOX },
#endif // wxLUA_USE_wxFrame

#if wxLUA_USE_wxDC
        { "wxMM_ANISOTROPIC", wxMM_ANISOTROPIC },
        { "wxMM_HIENGLISH", wxMM_HIENGLISH },
        { "wxMM_HIMETRIC", wxMM_HIMETRIC },
        { "wxMM_ISOTROPIC", wxMM_ISOTROPIC },
        { "wxMM_LOENGLISH", wxMM_LOENGLISH },
        { "wxMM_LOMETRIC", wxMM_LOMETRIC },
        { "wxMM_METRIC", wxMM_METRIC },
        { "wxMM_POINTS", wxMM_POINTS },
        { "wxMM_TEXT", wxMM_TEXT },
        { "wxMM_TWIPS", wxMM_TWIPS },
#endif // wxLUA_USE_wxDC

#if wxLUA_USE_wxFont
        { "wxMODERN", wxMODERN },
#endif // wxLUA_USE_wxFont

#if (wxCHECK_VERSION(2,8,0)) && (wxUSE_HOTKEY)
        { "wxMOD_ALL", wxMOD_ALL },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxUSE_HOTKEY)

#if wxUSE_HOTKEY
        { "wxMOD_ALT", wxMOD_ALT },
#endif // wxUSE_HOTKEY

#if (wxCHECK_VERSION(2,8,0)) && (wxUSE_HOTKEY)
        { "wxMOD_ALTGR", wxMOD_ALTGR },
        { "wxMOD_CMD", wxMOD_CMD },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxUSE_HOTKEY)

#if wxUSE_HOTKEY
        { "wxMOD_CONTROL", wxMOD_CONTROL },
#endif // wxUSE_HOTKEY

#if (wxCHECK_VERSION(2,8,0)) && (wxUSE_HOTKEY)
        { "wxMOD_META", wxMOD_META },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxUSE_HOTKEY)

#if wxUSE_HOTKEY
        { "wxMOD_NONE", wxMOD_NONE },
        { "wxMOD_SHIFT", wxMOD_SHIFT },
        { "wxMOD_WIN", wxMOD_WIN },
#endif // wxUSE_HOTKEY

        { "wxMORE", wxMORE },
        { "wxMOUSE_BTN_ANY", wxMOUSE_BTN_ANY },
        { "wxMOUSE_BTN_LEFT", wxMOUSE_BTN_LEFT },
        { "wxMOUSE_BTN_MIDDLE", wxMOUSE_BTN_MIDDLE },
        { "wxMOUSE_BTN_NONE", wxMOUSE_BTN_NONE },
        { "wxMOUSE_BTN_RIGHT", wxMOUSE_BTN_RIGHT },

#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
        { "wxMULTIPLE", wxMULTIPLE },
#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

#if wxLUA_USE_wxDC
        { "wxNAND", wxNAND },
#endif // wxLUA_USE_wxDC

#if wxLUA_USE_wxNotebook && wxUSE_NOTEBOOK
        { "wxNB_BOTTOM", wxNB_BOTTOM },
        { "wxNB_FIXEDWIDTH", wxNB_FIXEDWIDTH },
        { "wxNB_HITTEST_NOWHERE", wxNB_HITTEST_NOWHERE },
        { "wxNB_HITTEST_ONICON", wxNB_HITTEST_ONICON },
        { "wxNB_HITTEST_ONITEM", wxNB_HITTEST_ONITEM },
        { "wxNB_HITTEST_ONLABEL", wxNB_HITTEST_ONLABEL },
        { "wxNB_LEFT", wxNB_LEFT },
        { "wxNB_MULTILINE", wxNB_MULTILINE },
        { "wxNB_NOPAGETHEME", wxNB_NOPAGETHEME },
        { "wxNB_RIGHT", wxNB_RIGHT },
        { "wxNB_TOP", wxNB_TOP },
#endif // wxLUA_USE_wxNotebook && wxUSE_NOTEBOOK

        { "wxNO", wxNO },

#if wxLUA_USE_wxDC
        { "wxNOR", wxNOR },
#endif // wxLUA_USE_wxDC

#if wxLUA_USE_wxFont
        { "wxNORMAL", wxNORMAL },
#endif // wxLUA_USE_wxFont

        { "wxNORTH", wxNORTH },
        { "wxNO_3D", wxNO_3D },
        { "wxNO_BORDER", wxNO_BORDER },
        { "wxNO_DEFAULT", wxNO_DEFAULT },
        { "wxNO_FULL_REPAINT_ON_RESIZE", wxNO_FULL_REPAINT_ON_RESIZE },

#if wxLUA_USE_wxDC
        { "wxNO_OP", wxNO_OP },
        { "wxODDEVEN_RULE", wxODDEVEN_RULE },
#endif // wxLUA_USE_wxDC

        { "wxOK", wxOK },

#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
        { "wxOPEN", wxOPEN },
#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

#if wxLUA_USE_wxDC
        { "wxOR", wxOR },
        { "wxOR_INVERT", wxOR_INVERT },
        { "wxOR_REVERSE", wxOR_REVERSE },
#endif // wxLUA_USE_wxDC

#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
        { "wxOVERWRITE_PROMPT", wxOVERWRITE_PROMPT },
#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
        { "wxOutBottom", wxOutBottom },
        { "wxOutLeft", wxOutLeft },
#endif // wxLUA_USE_Geometry && wxUSE_GEOMETRY

#if wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL
        { "wxOutOfRangeTextCoord", wxOutOfRangeTextCoord },
#endif // wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL

#if wxLUA_USE_wxRegion
        { "wxOutRegion", wxOutRegion },
#endif // wxLUA_USE_wxRegion

#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
        { "wxOutRight", wxOutRight },
        { "wxOutTop", wxOutTop },
#endif // wxLUA_USE_Geometry && wxUSE_GEOMETRY

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { "wxPAPER_10X11", wxPAPER_10X11 },
        { "wxPAPER_10X14", wxPAPER_10X14 },
        { "wxPAPER_11X17", wxPAPER_11X17 },
        { "wxPAPER_12X11", wxPAPER_12X11 },
        { "wxPAPER_15X11", wxPAPER_15X11 },
        { "wxPAPER_9X11", wxPAPER_9X11 },
        { "wxPAPER_A2", wxPAPER_A2 },
        { "wxPAPER_A3", wxPAPER_A3 },
        { "wxPAPER_A3_EXTRA", wxPAPER_A3_EXTRA },
        { "wxPAPER_A3_EXTRA_TRANSVERSE", wxPAPER_A3_EXTRA_TRANSVERSE },
        { "wxPAPER_A3_ROTATED", wxPAPER_A3_ROTATED },
        { "wxPAPER_A3_TRANSVERSE", wxPAPER_A3_TRANSVERSE },
        { "wxPAPER_A4", wxPAPER_A4 },
        { "wxPAPER_A4SMALL", wxPAPER_A4SMALL },
        { "wxPAPER_A4_EXTRA", wxPAPER_A4_EXTRA },
        { "wxPAPER_A4_PLUS", wxPAPER_A4_PLUS },
        { "wxPAPER_A4_ROTATED", wxPAPER_A4_ROTATED },
        { "wxPAPER_A4_TRANSVERSE", wxPAPER_A4_TRANSVERSE },
        { "wxPAPER_A5", wxPAPER_A5 },
        { "wxPAPER_A5_EXTRA", wxPAPER_A5_EXTRA },
        { "wxPAPER_A5_ROTATED", wxPAPER_A5_ROTATED },
        { "wxPAPER_A5_TRANSVERSE", wxPAPER_A5_TRANSVERSE },
        { "wxPAPER_A6", wxPAPER_A6 },
        { "wxPAPER_A6_ROTATED", wxPAPER_A6_ROTATED },
        { "wxPAPER_A_PLUS", wxPAPER_A_PLUS },
        { "wxPAPER_B4", wxPAPER_B4 },
        { "wxPAPER_B4_JIS_ROTATED", wxPAPER_B4_JIS_ROTATED },
        { "wxPAPER_B5", wxPAPER_B5 },
        { "wxPAPER_B5_EXTRA", wxPAPER_B5_EXTRA },
        { "wxPAPER_B5_JIS_ROTATED", wxPAPER_B5_JIS_ROTATED },
        { "wxPAPER_B5_TRANSVERSE", wxPAPER_B5_TRANSVERSE },
        { "wxPAPER_B6_JIS", wxPAPER_B6_JIS },
        { "wxPAPER_B6_JIS_ROTATED", wxPAPER_B6_JIS_ROTATED },
        { "wxPAPER_B_PLUS", wxPAPER_B_PLUS },
        { "wxPAPER_CSHEET", wxPAPER_CSHEET },
        { "wxPAPER_DBL_JAPANESE_POSTCARD", wxPAPER_DBL_JAPANESE_POSTCARD },
        { "wxPAPER_DBL_JAPANESE_POSTCARD_ROTATED", wxPAPER_DBL_JAPANESE_POSTCARD_ROTATED },
        { "wxPAPER_DSHEET", wxPAPER_DSHEET },
        { "wxPAPER_ENV_10", wxPAPER_ENV_10 },
        { "wxPAPER_ENV_11", wxPAPER_ENV_11 },
        { "wxPAPER_ENV_12", wxPAPER_ENV_12 },
        { "wxPAPER_ENV_14", wxPAPER_ENV_14 },
        { "wxPAPER_ENV_9", wxPAPER_ENV_9 },
        { "wxPAPER_ENV_B4", wxPAPER_ENV_B4 },
        { "wxPAPER_ENV_B5", wxPAPER_ENV_B5 },
        { "wxPAPER_ENV_B6", wxPAPER_ENV_B6 },
        { "wxPAPER_ENV_C3", wxPAPER_ENV_C3 },
        { "wxPAPER_ENV_C4", wxPAPER_ENV_C4 },
        { "wxPAPER_ENV_C5", wxPAPER_ENV_C5 },
        { "wxPAPER_ENV_C6", wxPAPER_ENV_C6 },
        { "wxPAPER_ENV_C65", wxPAPER_ENV_C65 },
        { "wxPAPER_ENV_DL", wxPAPER_ENV_DL },
        { "wxPAPER_ENV_INVITE", wxPAPER_ENV_INVITE },
        { "wxPAPER_ENV_ITALY", wxPAPER_ENV_ITALY },
        { "wxPAPER_ENV_MONARCH", wxPAPER_ENV_MONARCH },
        { "wxPAPER_ENV_PERSONAL", wxPAPER_ENV_PERSONAL },
        { "wxPAPER_ESHEET", wxPAPER_ESHEET },
        { "wxPAPER_EXECUTIVE", wxPAPER_EXECUTIVE },
        { "wxPAPER_FANFOLD_LGL_GERMAN", wxPAPER_FANFOLD_LGL_GERMAN },
        { "wxPAPER_FANFOLD_STD_GERMAN", wxPAPER_FANFOLD_STD_GERMAN },
        { "wxPAPER_FANFOLD_US", wxPAPER_FANFOLD_US },
        { "wxPAPER_FOLIO", wxPAPER_FOLIO },
        { "wxPAPER_ISO_B4", wxPAPER_ISO_B4 },
        { "wxPAPER_JAPANESE_POSTCARD", wxPAPER_JAPANESE_POSTCARD },
        { "wxPAPER_JAPANESE_POSTCARD_ROTATED", wxPAPER_JAPANESE_POSTCARD_ROTATED },
        { "wxPAPER_JENV_CHOU3", wxPAPER_JENV_CHOU3 },
        { "wxPAPER_JENV_CHOU3_ROTATED", wxPAPER_JENV_CHOU3_ROTATED },
        { "wxPAPER_JENV_CHOU4", wxPAPER_JENV_CHOU4 },
        { "wxPAPER_JENV_CHOU4_ROTATED", wxPAPER_JENV_CHOU4_ROTATED },
        { "wxPAPER_JENV_KAKU2", wxPAPER_JENV_KAKU2 },
        { "wxPAPER_JENV_KAKU2_ROTATED", wxPAPER_JENV_KAKU2_ROTATED },
        { "wxPAPER_JENV_KAKU3", wxPAPER_JENV_KAKU3 },
        { "wxPAPER_JENV_KAKU3_ROTATED", wxPAPER_JENV_KAKU3_ROTATED },
        { "wxPAPER_JENV_YOU4", wxPAPER_JENV_YOU4 },
        { "wxPAPER_JENV_YOU4_ROTATED", wxPAPER_JENV_YOU4_ROTATED },
        { "wxPAPER_LEDGER", wxPAPER_LEDGER },
        { "wxPAPER_LEGAL", wxPAPER_LEGAL },
        { "wxPAPER_LEGAL_EXTRA", wxPAPER_LEGAL_EXTRA },
        { "wxPAPER_LETTER", wxPAPER_LETTER },
        { "wxPAPER_LETTERSMALL", wxPAPER_LETTERSMALL },
        { "wxPAPER_LETTER_EXTRA", wxPAPER_LETTER_EXTRA },
        { "wxPAPER_LETTER_EXTRA_TRANSVERSE", wxPAPER_LETTER_EXTRA_TRANSVERSE },
        { "wxPAPER_LETTER_PLUS", wxPAPER_LETTER_PLUS },
        { "wxPAPER_LETTER_ROTATED", wxPAPER_LETTER_ROTATED },
        { "wxPAPER_LETTER_TRANSVERSE", wxPAPER_LETTER_TRANSVERSE },
        { "wxPAPER_NONE", wxPAPER_NONE },
        { "wxPAPER_NOTE", wxPAPER_NOTE },
        { "wxPAPER_P16K", wxPAPER_P16K },
        { "wxPAPER_P16K_ROTATED", wxPAPER_P16K_ROTATED },
        { "wxPAPER_P32K", wxPAPER_P32K },
        { "wxPAPER_P32KBIG", wxPAPER_P32KBIG },
        { "wxPAPER_P32KBIG_ROTATED", wxPAPER_P32KBIG_ROTATED },
        { "wxPAPER_P32K_ROTATED", wxPAPER_P32K_ROTATED },
        { "wxPAPER_PENV_1", wxPAPER_PENV_1 },
        { "wxPAPER_PENV_10", wxPAPER_PENV_10 },
        { "wxPAPER_PENV_10_ROTATED", wxPAPER_PENV_10_ROTATED },
        { "wxPAPER_PENV_1_ROTATED", wxPAPER_PENV_1_ROTATED },
        { "wxPAPER_PENV_2", wxPAPER_PENV_2 },
        { "wxPAPER_PENV_2_ROTATED", wxPAPER_PENV_2_ROTATED },
        { "wxPAPER_PENV_3", wxPAPER_PENV_3 },
        { "wxPAPER_PENV_3_ROTATED", wxPAPER_PENV_3_ROTATED },
        { "wxPAPER_PENV_4", wxPAPER_PENV_4 },
        { "wxPAPER_PENV_4_ROTATED", wxPAPER_PENV_4_ROTATED },
        { "wxPAPER_PENV_5", wxPAPER_PENV_5 },
        { "wxPAPER_PENV_5_ROTATED", wxPAPER_PENV_5_ROTATED },
        { "wxPAPER_PENV_6", wxPAPER_PENV_6 },
        { "wxPAPER_PENV_6_ROTATED", wxPAPER_PENV_6_ROTATED },
        { "wxPAPER_PENV_7", wxPAPER_PENV_7 },
        { "wxPAPER_PENV_7_ROTATED", wxPAPER_PENV_7_ROTATED },
        { "wxPAPER_PENV_8", wxPAPER_PENV_8 },
        { "wxPAPER_PENV_8_ROTATED", wxPAPER_PENV_8_ROTATED },
        { "wxPAPER_PENV_9", wxPAPER_PENV_9 },
        { "wxPAPER_PENV_9_ROTATED", wxPAPER_PENV_9_ROTATED },
        { "wxPAPER_QUARTO", wxPAPER_QUARTO },
        { "wxPAPER_STATEMENT", wxPAPER_STATEMENT },
        { "wxPAPER_TABLOID", wxPAPER_TABLOID },
        { "wxPAPER_TABLOID_EXTRA", wxPAPER_TABLOID_EXTRA },
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

        { "wxPASSWORD", wxPASSWORD },

#if wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker
        { "wxPB_USE_TEXTCTRL", wxPB_USE_TEXTCTRL },
#endif // wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker

#if wxUSE_PROGRESSDLG && wxLUA_USE_wxProgressDialog
        { "wxPD_APP_MODAL", wxPD_APP_MODAL },
        { "wxPD_AUTO_HIDE", wxPD_AUTO_HIDE },
        { "wxPD_CAN_ABORT", wxPD_CAN_ABORT },
        { "wxPD_CAN_SKIP", wxPD_CAN_SKIP },
        { "wxPD_ELAPSED_TIME", wxPD_ELAPSED_TIME },
        { "wxPD_ESTIMATED_TIME", wxPD_ESTIMATED_TIME },
        { "wxPD_REMAINING_TIME", wxPD_REMAINING_TIME },
        { "wxPD_SMOOTH", wxPD_SMOOTH },
#endif // wxUSE_PROGRESSDLG && wxLUA_USE_wxProgressDialog

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBPNG)
        { "wxPNG_TYPE_COLOUR", wxPNG_TYPE_COLOUR },
        { "wxPNG_TYPE_GREY", wxPNG_TYPE_GREY },
        { "wxPNG_TYPE_GREY_RED", wxPNG_TYPE_GREY_RED },
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBPNG)

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { "wxPORTRAIT", wxPORTRAIT },
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if wxCHECK_VERSION(2,8,0)
        { "wxPOWER_BATTERY", wxPOWER_BATTERY },
        { "wxPOWER_SOCKET", wxPOWER_SOCKET },
        { "wxPOWER_UNKNOWN", wxPOWER_UNKNOWN },
#endif // wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { "wxPREVIEW_FIRST", wxPREVIEW_FIRST },
        { "wxPREVIEW_GOTO", wxPREVIEW_GOTO },
        { "wxPREVIEW_LAST", wxPREVIEW_LAST },
        { "wxPREVIEW_NEXT", wxPREVIEW_NEXT },
        { "wxPREVIEW_PREVIOUS", wxPREVIEW_PREVIOUS },
        { "wxPREVIEW_PRINT", wxPREVIEW_PRINT },
        { "wxPREVIEW_ZOOM", wxPREVIEW_ZOOM },
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxCHECK_VERSION(2,6,0))
        { "wxPRINTBIN_AUTO", wxPRINTBIN_AUTO },
        { "wxPRINTBIN_CASSETTE", wxPRINTBIN_CASSETTE },
        { "wxPRINTBIN_DEFAULT", wxPRINTBIN_DEFAULT },
        { "wxPRINTBIN_ENVELOPE", wxPRINTBIN_ENVELOPE },
        { "wxPRINTBIN_ENVMANUAL", wxPRINTBIN_ENVMANUAL },
        { "wxPRINTBIN_FORMSOURCE", wxPRINTBIN_FORMSOURCE },
        { "wxPRINTBIN_LARGECAPACITY", wxPRINTBIN_LARGECAPACITY },
        { "wxPRINTBIN_LARGEFMT", wxPRINTBIN_LARGEFMT },
        { "wxPRINTBIN_LOWER", wxPRINTBIN_LOWER },
        { "wxPRINTBIN_MANUAL", wxPRINTBIN_MANUAL },
        { "wxPRINTBIN_MIDDLE", wxPRINTBIN_MIDDLE },
        { "wxPRINTBIN_ONLYONE", wxPRINTBIN_ONLYONE },
        { "wxPRINTBIN_SMALLFMT", wxPRINTBIN_SMALLFMT },
        { "wxPRINTBIN_TRACTOR", wxPRINTBIN_TRACTOR },
        { "wxPRINTBIN_USER", wxPRINTBIN_USER },
#endif // (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxCHECK_VERSION(2,6,0))

#if (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxLUA_USE_wxLuaPrintout)
        { "wxPRINTER_CANCELLED", wxPRINTER_CANCELLED },
        { "wxPRINTER_ERROR", wxPRINTER_ERROR },
        { "wxPRINTER_NO_ERROR", wxPRINTER_NO_ERROR },
#endif // (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxLUA_USE_wxLuaPrintout)

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { "wxPRINT_MODE_FILE", wxPRINT_MODE_FILE },
        { "wxPRINT_MODE_NONE", wxPRINT_MODE_NONE },
        { "wxPRINT_MODE_PREVIEW", wxPRINT_MODE_PREVIEW },
        { "wxPRINT_MODE_PRINTER", wxPRINT_MODE_PRINTER },
        { "wxPRINT_QUALITY_DRAFT", wxPRINT_QUALITY_DRAFT },
        { "wxPRINT_QUALITY_HIGH", wxPRINT_QUALITY_HIGH },
        { "wxPRINT_QUALITY_LOW", wxPRINT_QUALITY_LOW },
        { "wxPRINT_QUALITY_MEDIUM", wxPRINT_QUALITY_MEDIUM },
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if wxLUA_USE_wxProcess
        { "wxPROCESS_DEFAULT", wxPROCESS_DEFAULT },
#endif // wxLUA_USE_wxProcess

        { "wxPROCESS_ENTER", wxPROCESS_ENTER },

#if wxLUA_USE_wxProcess
        { "wxPROCESS_REDIRECT", wxPROCESS_REDIRECT },
#endif // wxLUA_USE_wxProcess

#if wxLUA_USE_wxRegion
        { "wxPartRegion", wxPartRegion },
#endif // wxLUA_USE_wxRegion

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxPercentOf", wxPercentOf },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { "wxQUANTIZE_FILL_DESTINATION_IMAGE", wxQUANTIZE_FILL_DESTINATION_IMAGE },
        { "wxQUANTIZE_INCLUDE_WINDOWS_COLOURS", wxQUANTIZE_INCLUDE_WINDOWS_COLOURS },
        { "wxQUANTIZE_RETURN_8BIT_DATA", wxQUANTIZE_RETURN_8BIT_DATA },
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

        { "wxRAISED_BORDER", wxRAISED_BORDER },

#if wxLUA_USE_wxRadioBox && wxUSE_RADIOBOX
        { "wxRA_HORIZONTAL", wxRA_HORIZONTAL },
        { "wxRA_SPECIFY_COLS", wxRA_SPECIFY_COLS },
        { "wxRA_SPECIFY_ROWS", wxRA_SPECIFY_ROWS },
        { "wxRA_VERTICAL", wxRA_VERTICAL },
#endif // wxLUA_USE_wxRadioBox && wxUSE_RADIOBOX

#if wxLUA_USE_wxRadioButton && wxUSE_RADIOBTN
        { "wxRB_GROUP", wxRB_GROUP },
        { "wxRB_SINGLE", wxRB_SINGLE },
#endif // wxLUA_USE_wxRadioButton && wxUSE_RADIOBTN

#if wxCHECK_VERSION(2,8,8)
        { "wxRESERVE_SPACE_EVEN_IF_HIDDEN", wxRESERVE_SPACE_EVEN_IF_HIDDEN },
#endif // wxCHECK_VERSION(2,8,8)

        { "wxRESET", wxRESET },

#if wxLUA_USE_wxFrame
        { "wxRESIZE_BORDER", wxRESIZE_BORDER },
#endif // wxLUA_USE_wxFrame

        { "wxRESIZE_BOX", wxRESIZE_BOX },
        { "wxRETAINED", wxRETAINED },

#if (wxLUA_USE_wxRegion) && (defined (wxHAS_REGION_COMBINE ))
        { "wxRGN_AND", wxRGN_AND },
        { "wxRGN_COPY", wxRGN_COPY },
        { "wxRGN_DIFF", wxRGN_DIFF },
        { "wxRGN_OR", wxRGN_OR },
        { "wxRGN_XOR", wxRGN_XOR },
#endif // (wxLUA_USE_wxRegion) && (defined (wxHAS_REGION_COMBINE ))

        { "wxRIGHT", wxRIGHT },

#if wxLUA_USE_wxFont
        { "wxROMAN", wxROMAN },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxDC
        { "wxROP_BLACK", wxROP_BLACK },
        { "wxROP_COPYPEN", wxROP_COPYPEN },
        { "wxROP_MASKNOTPEN", wxROP_MASKNOTPEN },
        { "wxROP_MASKPEN", wxROP_MASKPEN },
        { "wxROP_MASKPENNOT", wxROP_MASKPENNOT },
        { "wxROP_MERGENOTPEN", wxROP_MERGENOTPEN },
        { "wxROP_MERGEPEN", wxROP_MERGEPEN },
        { "wxROP_MERGEPENNOT", wxROP_MERGEPENNOT },
        { "wxROP_NOP", wxROP_NOP },
        { "wxROP_NOT", wxROP_NOT },
        { "wxROP_NOTCOPYPEN", wxROP_NOTCOPYPEN },
        { "wxROP_NOTMASKPEN", wxROP_NOTMASKPEN },
        { "wxROP_NOTMERGEPEN", wxROP_NOTMERGEPEN },
        { "wxROP_NOTXORPEN", wxROP_NOTXORPEN },
        { "wxROP_WHITE", wxROP_WHITE },
        { "wxROP_XORPEN", wxROP_XORPEN },
#endif // wxLUA_USE_wxDC

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxRight", wxRight },
        { "wxRightOf", wxRightOf },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
        { "wxSAVE", wxSAVE },
#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

#if wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR
        { "wxSB_FLAT", wxSB_FLAT },
#endif // wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR

#if wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR
        { "wxSB_HORIZONTAL", wxSB_HORIZONTAL },
#endif // wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR

#if wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR
        { "wxSB_NORMAL", wxSB_NORMAL },
        { "wxSB_RAISED", wxSB_RAISED },
#endif // wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR

#if wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR
        { "wxSB_VERTICAL", wxSB_VERTICAL },
#endif // wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR

#if wxLUA_USE_wxFont
        { "wxSCRIPT", wxSCRIPT },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxDC
        { "wxSET", wxSET },
#endif // wxLUA_USE_wxDC

        { "wxSETUP", wxSETUP },
        { "wxSHAPED", wxSHAPED },

#if wxLUA_USE_wxColourPenBrush
        { "wxSHORT_DASH", wxSHORT_DASH },
#endif // wxLUA_USE_wxColourPenBrush

        { "wxSHRINK", wxSHRINK },
        { "wxSHUTDOWN_POWEROFF", wxSHUTDOWN_POWEROFF },
        { "wxSHUTDOWN_REBOOT", wxSHUTDOWN_REBOOT },

#if wxLUA_USE_wxProcess
        { "wxSIGABRT", wxSIGABRT },
        { "wxSIGALRM", wxSIGALRM },
        { "wxSIGBUS", wxSIGBUS },
        { "wxSIGEMT", wxSIGEMT },
        { "wxSIGFPE", wxSIGFPE },
        { "wxSIGHUP", wxSIGHUP },
        { "wxSIGILL", wxSIGILL },
        { "wxSIGINT", wxSIGINT },
        { "wxSIGKILL", wxSIGKILL },
        { "wxSIGNONE", wxSIGNONE },
        { "wxSIGPIPE", wxSIGPIPE },
        { "wxSIGQUIT", wxSIGQUIT },
        { "wxSIGSEGV", wxSIGSEGV },
        { "wxSIGSYS", wxSIGSYS },
        { "wxSIGTERM", wxSIGTERM },
        { "wxSIGTRAP", wxSIGTRAP },
#endif // wxLUA_USE_wxProcess

        { "wxSIMPLE_BORDER", wxSIMPLE_BORDER },
        { "wxSIZE_ALLOW_MINUS_ONE", wxSIZE_ALLOW_MINUS_ONE },
        { "wxSIZE_AUTO", wxSIZE_AUTO },
        { "wxSIZE_AUTO_HEIGHT", wxSIZE_AUTO_HEIGHT },
        { "wxSIZE_AUTO_WIDTH", wxSIZE_AUTO_WIDTH },
        { "wxSIZE_NO_ADJUSTMENTS", wxSIZE_NO_ADJUSTMENTS },
        { "wxSIZE_USE_EXISTING", wxSIZE_USE_EXISTING },

#if wxLUA_USE_wxFont
        { "wxSLANT", wxSLANT },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxSlider && wxUSE_SLIDER
        { "wxSL_AUTOTICKS", wxSL_AUTOTICKS },
        { "wxSL_BOTH", wxSL_BOTH },
        { "wxSL_BOTTOM", wxSL_BOTTOM },
        { "wxSL_HORIZONTAL", wxSL_HORIZONTAL },
        { "wxSL_LABELS", wxSL_LABELS },
        { "wxSL_LEFT", wxSL_LEFT },
        { "wxSL_NOTIFY_DRAG", wxSL_NOTIFY_DRAG },
        { "wxSL_RIGHT", wxSL_RIGHT },
        { "wxSL_SELRANGE", wxSL_SELRANGE },
        { "wxSL_TOP", wxSL_TOP },
        { "wxSL_VERTICAL", wxSL_VERTICAL },
#endif // wxLUA_USE_wxSlider && wxUSE_SLIDER

#if wxLUA_USE_wxColourPenBrush
        { "wxSOLID", wxSOLID },
#endif // wxLUA_USE_wxColourPenBrush

        { "wxSOUTH", wxSOUTH },

#if wxLUA_USE_wxSplitterWindow
        { "wxSP_3D", wxSP_3D },
        { "wxSP_3DBORDER", wxSP_3DBORDER },
        { "wxSP_3DSASH", wxSP_3DSASH },
#endif // wxLUA_USE_wxSplitterWindow

#if wxLUA_USE_wxSpinButton && wxUSE_SPINBTN
        { "wxSP_ARROW_KEYS", wxSP_ARROW_KEYS },
#endif // wxLUA_USE_wxSpinButton && wxUSE_SPINBTN

#if wxLUA_USE_wxSplitterWindow
        { "wxSP_BORDER", wxSP_BORDER },
        { "wxSP_FULLSASH", wxSP_FULLSASH },
#endif // wxLUA_USE_wxSplitterWindow

#if wxLUA_USE_wxSpinButton && wxUSE_SPINBTN
        { "wxSP_HORIZONTAL", wxSP_HORIZONTAL },
#endif // wxLUA_USE_wxSpinButton && wxUSE_SPINBTN

#if wxLUA_USE_wxSplitterWindow
        { "wxSP_LIVE_UPDATE", wxSP_LIVE_UPDATE },
        { "wxSP_NOBORDER", wxSP_NOBORDER },
        { "wxSP_NOSASH", wxSP_NOSASH },
#endif // wxLUA_USE_wxSplitterWindow

#if (wxCHECK_VERSION(2,4,0)) && (wxLUA_USE_wxSplitterWindow)
        { "wxSP_NO_XP_THEME", wxSP_NO_XP_THEME },
#endif // (wxCHECK_VERSION(2,4,0)) && (wxLUA_USE_wxSplitterWindow)

#if wxLUA_USE_wxSplitterWindow
        { "wxSP_PERMIT_UNSPLIT", wxSP_PERMIT_UNSPLIT },
        { "wxSP_SASH_AQUA", wxSP_SASH_AQUA },
#endif // wxLUA_USE_wxSplitterWindow

#if wxLUA_USE_wxSpinButton && wxUSE_SPINBTN
        { "wxSP_VERTICAL", wxSP_VERTICAL },
        { "wxSP_WRAP", wxSP_WRAP },
#endif // wxLUA_USE_wxSpinButton && wxUSE_SPINBTN

#if wxLUA_USE_wxDC
        { "wxSRC_INVERT", wxSRC_INVERT },
#endif // wxLUA_USE_wxDC

        { "wxSTATIC_BORDER", wxSTATIC_BORDER },

#if wxLUA_USE_wxFrame
        { "wxSTAY_ON_TOP", wxSTAY_ON_TOP },
#endif // wxLUA_USE_wxFrame

#if wxLUA_USE_wxColourPenBrush
        { "wxSTIPPLE", wxSTIPPLE },
        { "wxSTIPPLE_MASK", wxSTIPPLE_MASK },
        { "wxSTIPPLE_MASK_OPAQUE", wxSTIPPLE_MASK_OPAQUE },
#endif // wxLUA_USE_wxColourPenBrush

        { "wxSTRETCH_NOT", wxSTRETCH_NOT },

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxStaticText && wxUSE_STATTEXT)
        { "wxST_DOTS_END", wxST_DOTS_END },
        { "wxST_DOTS_MIDDLE", wxST_DOTS_MIDDLE },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxStaticText && wxUSE_STATTEXT)

#if wxLUA_USE_wxStaticText && wxUSE_STATTEXT
        { "wxST_NO_AUTORESIZE", wxST_NO_AUTORESIZE },
#endif // wxLUA_USE_wxStaticText && wxUSE_STATTEXT

#if wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR
        { "wxST_SIZEGRIP", wxST_SIZEGRIP },
#endif // wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR

        { "wxSUNKEN_BORDER", wxSUNKEN_BORDER },

#if wxLUA_USE_wxFont
        { "wxSWISS", wxSWISS },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxFrame
        { "wxSYSTEM_MENU", wxSYSTEM_MENU },
#endif // wxLUA_USE_wxFrame

#if wxLUA_USE_wxSystemSettings
        { "wxSYS_ANSI_FIXED_FONT", wxSYS_ANSI_FIXED_FONT },
        { "wxSYS_ANSI_VAR_FONT", wxSYS_ANSI_VAR_FONT },
        { "wxSYS_BORDER_X", wxSYS_BORDER_X },
        { "wxSYS_BORDER_Y", wxSYS_BORDER_Y },
        { "wxSYS_CAN_DRAW_FRAME_DECORATIONS", wxSYS_CAN_DRAW_FRAME_DECORATIONS },
        { "wxSYS_CAN_ICONIZE_FRAME", wxSYS_CAN_ICONIZE_FRAME },
        { "wxSYS_CAPTION_Y", wxSYS_CAPTION_Y },
        { "wxSYS_COLOUR_3DDKSHADOW", wxSYS_COLOUR_3DDKSHADOW },
        { "wxSYS_COLOUR_3DFACE", wxSYS_COLOUR_3DFACE },
        { "wxSYS_COLOUR_3DHIGHLIGHT", wxSYS_COLOUR_3DHIGHLIGHT },
        { "wxSYS_COLOUR_3DHILIGHT", wxSYS_COLOUR_3DHILIGHT },
        { "wxSYS_COLOUR_3DLIGHT", wxSYS_COLOUR_3DLIGHT },
        { "wxSYS_COLOUR_3DSHADOW", wxSYS_COLOUR_3DSHADOW },
        { "wxSYS_COLOUR_ACTIVEBORDER", wxSYS_COLOUR_ACTIVEBORDER },
        { "wxSYS_COLOUR_ACTIVECAPTION", wxSYS_COLOUR_ACTIVECAPTION },
        { "wxSYS_COLOUR_APPWORKSPACE", wxSYS_COLOUR_APPWORKSPACE },
        { "wxSYS_COLOUR_BACKGROUND", wxSYS_COLOUR_BACKGROUND },
        { "wxSYS_COLOUR_BTNFACE", wxSYS_COLOUR_BTNFACE },
        { "wxSYS_COLOUR_BTNHIGHLIGHT", wxSYS_COLOUR_BTNHIGHLIGHT },
        { "wxSYS_COLOUR_BTNHILIGHT", wxSYS_COLOUR_BTNHILIGHT },
        { "wxSYS_COLOUR_BTNSHADOW", wxSYS_COLOUR_BTNSHADOW },
        { "wxSYS_COLOUR_BTNTEXT", wxSYS_COLOUR_BTNTEXT },
        { "wxSYS_COLOUR_CAPTIONTEXT", wxSYS_COLOUR_CAPTIONTEXT },
        { "wxSYS_COLOUR_DESKTOP", wxSYS_COLOUR_DESKTOP },
        { "wxSYS_COLOUR_GRADIENTACTIVECAPTION", wxSYS_COLOUR_GRADIENTACTIVECAPTION },
        { "wxSYS_COLOUR_GRADIENTINACTIVECAPTION", wxSYS_COLOUR_GRADIENTINACTIVECAPTION },
        { "wxSYS_COLOUR_GRAYTEXT", wxSYS_COLOUR_GRAYTEXT },
        { "wxSYS_COLOUR_HIGHLIGHT", wxSYS_COLOUR_HIGHLIGHT },
        { "wxSYS_COLOUR_HIGHLIGHTTEXT", wxSYS_COLOUR_HIGHLIGHTTEXT },
        { "wxSYS_COLOUR_HOTLIGHT", wxSYS_COLOUR_HOTLIGHT },
        { "wxSYS_COLOUR_INACTIVEBORDER", wxSYS_COLOUR_INACTIVEBORDER },
        { "wxSYS_COLOUR_INACTIVECAPTION", wxSYS_COLOUR_INACTIVECAPTION },
        { "wxSYS_COLOUR_INACTIVECAPTIONTEXT", wxSYS_COLOUR_INACTIVECAPTIONTEXT },
        { "wxSYS_COLOUR_INFOBK", wxSYS_COLOUR_INFOBK },
        { "wxSYS_COLOUR_INFOTEXT", wxSYS_COLOUR_INFOTEXT },
        { "wxSYS_COLOUR_LISTBOX", wxSYS_COLOUR_LISTBOX },
        { "wxSYS_COLOUR_MAX", wxSYS_COLOUR_MAX },
        { "wxSYS_COLOUR_MENU", wxSYS_COLOUR_MENU },
        { "wxSYS_COLOUR_MENUBAR", wxSYS_COLOUR_MENUBAR },
        { "wxSYS_COLOUR_MENUHILIGHT", wxSYS_COLOUR_MENUHILIGHT },
        { "wxSYS_COLOUR_MENUTEXT", wxSYS_COLOUR_MENUTEXT },
        { "wxSYS_COLOUR_SCROLLBAR", wxSYS_COLOUR_SCROLLBAR },
        { "wxSYS_COLOUR_WINDOW", wxSYS_COLOUR_WINDOW },
        { "wxSYS_COLOUR_WINDOWFRAME", wxSYS_COLOUR_WINDOWFRAME },
        { "wxSYS_COLOUR_WINDOWTEXT", wxSYS_COLOUR_WINDOWTEXT },
        { "wxSYS_CURSOR_X", wxSYS_CURSOR_X },
        { "wxSYS_CURSOR_Y", wxSYS_CURSOR_Y },
        { "wxSYS_DCLICK_X", wxSYS_DCLICK_X },
        { "wxSYS_DCLICK_Y", wxSYS_DCLICK_Y },
        { "wxSYS_DEFAULT_GUI_FONT", wxSYS_DEFAULT_GUI_FONT },
        { "wxSYS_DEFAULT_PALETTE", wxSYS_DEFAULT_PALETTE },
        { "wxSYS_DEVICE_DEFAULT_FONT", wxSYS_DEVICE_DEFAULT_FONT },
        { "wxSYS_DRAG_X", wxSYS_DRAG_X },
        { "wxSYS_DRAG_Y", wxSYS_DRAG_Y },
        { "wxSYS_EDGE_X", wxSYS_EDGE_X },
        { "wxSYS_EDGE_Y", wxSYS_EDGE_Y },
        { "wxSYS_FRAMESIZE_X", wxSYS_FRAMESIZE_X },
        { "wxSYS_FRAMESIZE_Y", wxSYS_FRAMESIZE_Y },
        { "wxSYS_HSCROLL_ARROW_X", wxSYS_HSCROLL_ARROW_X },
        { "wxSYS_HSCROLL_ARROW_Y", wxSYS_HSCROLL_ARROW_Y },
        { "wxSYS_HSCROLL_Y", wxSYS_HSCROLL_Y },
        { "wxSYS_HTHUMB_X", wxSYS_HTHUMB_X },
        { "wxSYS_ICONSPACING_X", wxSYS_ICONSPACING_X },
        { "wxSYS_ICONSPACING_Y", wxSYS_ICONSPACING_Y },
        { "wxSYS_ICON_X", wxSYS_ICON_X },
        { "wxSYS_ICON_Y", wxSYS_ICON_Y },
        { "wxSYS_MENU_Y", wxSYS_MENU_Y },
        { "wxSYS_MOUSE_BUTTONS", wxSYS_MOUSE_BUTTONS },
        { "wxSYS_NETWORK_PRESENT", wxSYS_NETWORK_PRESENT },
        { "wxSYS_OEM_FIXED_FONT", wxSYS_OEM_FIXED_FONT },
        { "wxSYS_PENWINDOWS_PRESENT", wxSYS_PENWINDOWS_PRESENT },
        { "wxSYS_SCREEN_DESKTOP", wxSYS_SCREEN_DESKTOP },
        { "wxSYS_SCREEN_NONE", wxSYS_SCREEN_NONE },
        { "wxSYS_SCREEN_PDA", wxSYS_SCREEN_PDA },
        { "wxSYS_SCREEN_SMALL", wxSYS_SCREEN_SMALL },
        { "wxSYS_SCREEN_TINY", wxSYS_SCREEN_TINY },
        { "wxSYS_SCREEN_X", wxSYS_SCREEN_X },
        { "wxSYS_SCREEN_Y", wxSYS_SCREEN_Y },
        { "wxSYS_SHOW_SOUNDS", wxSYS_SHOW_SOUNDS },
        { "wxSYS_SMALLICON_X", wxSYS_SMALLICON_X },
        { "wxSYS_SMALLICON_Y", wxSYS_SMALLICON_Y },
        { "wxSYS_SWAP_BUTTONS", wxSYS_SWAP_BUTTONS },
        { "wxSYS_SYSTEM_FIXED_FONT", wxSYS_SYSTEM_FIXED_FONT },
        { "wxSYS_SYSTEM_FONT", wxSYS_SYSTEM_FONT },
        { "wxSYS_VSCROLL_ARROW_X", wxSYS_VSCROLL_ARROW_X },
        { "wxSYS_VSCROLL_ARROW_Y", wxSYS_VSCROLL_ARROW_Y },
        { "wxSYS_VSCROLL_X", wxSYS_VSCROLL_X },
        { "wxSYS_VTHUMB_Y", wxSYS_VTHUMB_Y },
        { "wxSYS_WINDOWMIN_X", wxSYS_WINDOWMIN_X },
        { "wxSYS_WINDOWMIN_Y", wxSYS_WINDOWMIN_Y },
#endif // wxLUA_USE_wxSystemSettings

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxSameAs", wxSameAs },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

        { "wxTAB_TRAVERSAL", wxTAB_TRAVERSAL },

#if wxLUA_USE_wxToolbar
        { "wxTB_3DBUTTONS", wxTB_3DBUTTONS },
        { "wxTB_DOCKABLE", wxTB_DOCKABLE },
        { "wxTB_FLAT", wxTB_FLAT },
        { "wxTB_HORIZONTAL", wxTB_HORIZONTAL },
        { "wxTB_HORZ_LAYOUT", wxTB_HORZ_LAYOUT },
        { "wxTB_HORZ_TEXT", wxTB_HORZ_TEXT },
        { "wxTB_NOALIGN", wxTB_NOALIGN },
        { "wxTB_NODIVIDER", wxTB_NODIVIDER },
        { "wxTB_NOICONS", wxTB_NOICONS },
        { "wxTB_TEXT", wxTB_TEXT },
        { "wxTB_VERTICAL", wxTB_VERTICAL },
#endif // wxLUA_USE_wxToolbar

#if wxCHECK_VERSION(2,4,0) && defined(__WXMSW__) && wxLUA_USE_wxTabCtrl && wxUSE_TAB_DIALOG
        { "wxTC_BOTTOM", wxTC_BOTTOM },
        { "wxTC_FIXEDWIDTH", wxTC_FIXEDWIDTH },
        { "wxTC_LEFT", wxTC_LEFT },
        { "wxTC_MULTILINE", wxTC_MULTILINE },
        { "wxTC_OWNERDRAW", wxTC_OWNERDRAW },
        { "wxTC_RIGHT", wxTC_RIGHT },
        { "wxTC_RIGHTJUSTIFY", wxTC_RIGHTJUSTIFY },
        { "wxTC_TOP", wxTC_TOP },
#endif // wxCHECK_VERSION(2,4,0) && defined(__WXMSW__) && wxLUA_USE_wxTabCtrl && wxUSE_TAB_DIALOG

#if wxLUA_USE_wxFont
        { "wxTELETYPE", wxTELETYPE },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
        { "wxTEMPLATE_INVISIBLE", wxTEMPLATE_INVISIBLE },
        { "wxTEMPLATE_VISIBLE", wxTEMPLATE_VISIBLE },
#endif // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE

#if wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL
        { "wxTEXT_ALIGNMENT_CENTER", wxTEXT_ALIGNMENT_CENTER },
        { "wxTEXT_ALIGNMENT_CENTRE", wxTEXT_ALIGNMENT_CENTRE },
        { "wxTEXT_ALIGNMENT_DEFAULT", wxTEXT_ALIGNMENT_DEFAULT },
        { "wxTEXT_ALIGNMENT_JUSTIFIED", wxTEXT_ALIGNMENT_JUSTIFIED },
        { "wxTEXT_ALIGNMENT_LEFT", wxTEXT_ALIGNMENT_LEFT },
        { "wxTEXT_ALIGNMENT_RIGHT", wxTEXT_ALIGNMENT_RIGHT },
        { "wxTEXT_ATTR_ALIGNMENT", wxTEXT_ATTR_ALIGNMENT },
        { "wxTEXT_ATTR_BACKGROUND_COLOUR", wxTEXT_ATTR_BACKGROUND_COLOUR },
        { "wxTEXT_ATTR_FONT", wxTEXT_ATTR_FONT },
        { "wxTEXT_ATTR_FONT_FACE", wxTEXT_ATTR_FONT_FACE },
        { "wxTEXT_ATTR_FONT_ITALIC", wxTEXT_ATTR_FONT_ITALIC },
        { "wxTEXT_ATTR_FONT_SIZE", wxTEXT_ATTR_FONT_SIZE },
        { "wxTEXT_ATTR_FONT_UNDERLINE", wxTEXT_ATTR_FONT_UNDERLINE },
        { "wxTEXT_ATTR_FONT_WEIGHT", wxTEXT_ATTR_FONT_WEIGHT },
        { "wxTEXT_ATTR_LEFT_INDENT", wxTEXT_ATTR_LEFT_INDENT },
        { "wxTEXT_ATTR_RIGHT_INDENT", wxTEXT_ATTR_RIGHT_INDENT },
        { "wxTEXT_ATTR_TABS", wxTEXT_ATTR_TABS },
        { "wxTEXT_ATTR_TEXT_COLOUR", wxTEXT_ATTR_TEXT_COLOUR },
        { "wxTE_AUTO_SCROLL", wxTE_AUTO_SCROLL },
        { "wxTE_AUTO_URL", wxTE_AUTO_URL },
        { "wxTE_BESTWRAP", wxTE_BESTWRAP },
        { "wxTE_CAPITALIZE", wxTE_CAPITALIZE },
        { "wxTE_CENTRE", wxTE_CENTRE },
        { "wxTE_CHARWRAP", wxTE_CHARWRAP },
        { "wxTE_DONTWRAP", wxTE_DONTWRAP },
        { "wxTE_HT_BEFORE", wxTE_HT_BEFORE },
        { "wxTE_HT_BELOW", wxTE_HT_BELOW },
        { "wxTE_HT_BEYOND", wxTE_HT_BEYOND },
        { "wxTE_HT_ON_TEXT", wxTE_HT_ON_TEXT },
        { "wxTE_HT_UNKNOWN", wxTE_HT_UNKNOWN },
        { "wxTE_LEFT", wxTE_LEFT },
        { "wxTE_LINEWRAP", wxTE_LINEWRAP },
        { "wxTE_MULTILINE", wxTE_MULTILINE },
        { "wxTE_NOHIDESEL", wxTE_NOHIDESEL },
        { "wxTE_NO_VSCROLL", wxTE_NO_VSCROLL },
        { "wxTE_PASSWORD", wxTE_PASSWORD },
        { "wxTE_PROCESS_ENTER", wxTE_PROCESS_ENTER },
        { "wxTE_PROCESS_TAB", wxTE_PROCESS_TAB },
        { "wxTE_READONLY", wxTE_READONLY },
        { "wxTE_RICH", wxTE_RICH },
        { "wxTE_RICH2", wxTE_RICH2 },
        { "wxTE_RIGHT", wxTE_RIGHT },
        { "wxTE_WORDWRAP", wxTE_WORDWRAP },
#endif // wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL

#if wxLUA_USE_wxFrame
        { "wxTHICK_FRAME", wxTHICK_FRAME },
#endif // wxLUA_USE_wxFrame

        { "wxTILE", wxTILE },

#if wxLUA_USE_wxTimer && wxUSE_TIMER
        { "wxTIMER_CONTINUOUS", wxTIMER_CONTINUOUS },
        { "wxTIMER_ONE_SHOT", wxTIMER_ONE_SHOT },
#endif // wxLUA_USE_wxTimer && wxUSE_TIMER

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)
        { "wxTINY_CAPTION_HORIZ", wxTINY_CAPTION_HORIZ },
        { "wxTINY_CAPTION_VERT", wxTINY_CAPTION_VERT },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)

#if wxLUA_USE_wxToolbar
        { "wxTOOL_STYLE_BUTTON", wxTOOL_STYLE_BUTTON },
        { "wxTOOL_STYLE_CONTROL", wxTOOL_STYLE_CONTROL },
        { "wxTOOL_STYLE_SEPARATOR", wxTOOL_STYLE_SEPARATOR },
#endif // wxLUA_USE_wxToolbar

        { "wxTOP", wxTOP },

#if wxLUA_USE_wxColourPenBrush
        { "wxTRANSPARENT", wxTRANSPARENT },
#endif // wxLUA_USE_wxColourPenBrush

        { "wxTRANSPARENT_WINDOW", wxTRANSPARENT_WINDOW },

#if wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL
        { "wxTREE_HITTEST_ABOVE", wxTREE_HITTEST_ABOVE },
        { "wxTREE_HITTEST_BELOW", wxTREE_HITTEST_BELOW },
        { "wxTREE_HITTEST_NOWHERE", wxTREE_HITTEST_NOWHERE },
        { "wxTREE_HITTEST_ONITEM", wxTREE_HITTEST_ONITEM },
        { "wxTREE_HITTEST_ONITEMBUTTON", wxTREE_HITTEST_ONITEMBUTTON },
        { "wxTREE_HITTEST_ONITEMICON", wxTREE_HITTEST_ONITEMICON },
        { "wxTREE_HITTEST_ONITEMINDENT", wxTREE_HITTEST_ONITEMINDENT },
        { "wxTREE_HITTEST_ONITEMLABEL", wxTREE_HITTEST_ONITEMLABEL },
        { "wxTREE_HITTEST_ONITEMLOWERPART", wxTREE_HITTEST_ONITEMLOWERPART },
        { "wxTREE_HITTEST_ONITEMRIGHT", wxTREE_HITTEST_ONITEMRIGHT },
        { "wxTREE_HITTEST_ONITEMSTATEICON", wxTREE_HITTEST_ONITEMSTATEICON },
        { "wxTREE_HITTEST_ONITEMUPPERPART", wxTREE_HITTEST_ONITEMUPPERPART },
        { "wxTREE_HITTEST_TOLEFT", wxTREE_HITTEST_TOLEFT },
        { "wxTREE_HITTEST_TORIGHT", wxTREE_HITTEST_TORIGHT },
        { "wxTR_DEFAULT_STYLE", wxTR_DEFAULT_STYLE },
        { "wxTR_EDIT_LABELS", wxTR_EDIT_LABELS },
        { "wxTR_EXTENDED", wxTR_EXTENDED },
        { "wxTR_FULL_ROW_HIGHLIGHT", wxTR_FULL_ROW_HIGHLIGHT },
        { "wxTR_HAS_BUTTONS", wxTR_HAS_BUTTONS },
        { "wxTR_HAS_VARIABLE_ROW_HEIGHT", wxTR_HAS_VARIABLE_ROW_HEIGHT },
        { "wxTR_HIDE_ROOT", wxTR_HIDE_ROOT },
        { "wxTR_LINES_AT_ROOT", wxTR_LINES_AT_ROOT },
        { "wxTR_MULTIPLE", wxTR_MULTIPLE },
        { "wxTR_NO_BUTTONS", wxTR_NO_BUTTONS },
        { "wxTR_NO_LINES", wxTR_NO_LINES },
        { "wxTR_ROW_LINES", wxTR_ROW_LINES },
        { "wxTR_SINGLE", wxTR_SINGLE },
        { "wxTR_TWIST_BUTTONS", wxTR_TWIST_BUTTONS },
#endif // wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL

#if wxUSE_TEXTDLG && wxLUA_USE_wxTextEntryDialog
        { "wxTextEntryDialogStyle", wxTextEntryDialogStyle },
        { "wxTextEntryDialogStyle", wxTextEntryDialogStyle },
#endif // wxUSE_TEXTDLG && wxLUA_USE_wxTextEntryDialog

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxTop", wxTop },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL
        { "wxTreeItemIcon_Expanded", wxTreeItemIcon_Expanded },
        { "wxTreeItemIcon_Max", wxTreeItemIcon_Max },
        { "wxTreeItemIcon_Normal", wxTreeItemIcon_Normal },
        { "wxTreeItemIcon_Selected", wxTreeItemIcon_Selected },
        { "wxTreeItemIcon_SelectedExpanded", wxTreeItemIcon_SelectedExpanded },
#endif // wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL

        { "wxUP", wxUP },
        { "wxUPDATE_UI_FROMIDLE", wxUPDATE_UI_FROMIDLE },
        { "wxUPDATE_UI_NONE", wxUPDATE_UI_NONE },
        { "wxUPDATE_UI_PROCESS_ALL", wxUPDATE_UI_PROCESS_ALL },
        { "wxUPDATE_UI_PROCESS_SPECIFIED", wxUPDATE_UI_PROCESS_SPECIFIED },
        { "wxUPDATE_UI_RECURSE", wxUPDATE_UI_RECURSE },

#if wxLUA_USE_wxFrame || wxLUA_USE_wxDialog
        { "wxUSER_ATTENTION_ERROR", wxUSER_ATTENTION_ERROR },
        { "wxUSER_ATTENTION_INFO", wxUSER_ATTENTION_INFO },
#endif // wxLUA_USE_wxFrame || wxLUA_USE_wxDialog

#if wxLUA_USE_wxColourPenBrush
        { "wxUSER_DASH", wxUSER_DASH },
#endif // wxLUA_USE_wxColourPenBrush

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxUnconstrained", wxUnconstrained },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if wxLUA_USE_wxFont
        { "wxVARIABLE", wxVARIABLE },
#endif // wxLUA_USE_wxFont

        { "wxVERTICAL", wxVERTICAL },

#if wxLUA_USE_wxColourPenBrush
        { "wxVERTICAL_HATCH", wxVERTICAL_HATCH },
#endif // wxLUA_USE_wxColourPenBrush

        { "wxVSCROLL", wxVSCROLL },
        { "wxWANTS_CHARS", wxWANTS_CHARS },
        { "wxWEST", wxWEST },

#if wxLUA_USE_wxDC
        { "wxWINDING_RULE", wxWINDING_RULE },
#endif // wxLUA_USE_wxDC

        { "wxWINDOW_VARIANT_LARGE", wxWINDOW_VARIANT_LARGE },
        { "wxWINDOW_VARIANT_MAX", wxWINDOW_VARIANT_MAX },
        { "wxWINDOW_VARIANT_MINI", wxWINDOW_VARIANT_MINI },
        { "wxWINDOW_VARIANT_NORMAL", wxWINDOW_VARIANT_NORMAL },
        { "wxWINDOW_VARIANT_SMALL", wxWINDOW_VARIANT_SMALL },
        { "wxWS_EX_BLOCK_EVENTS", wxWS_EX_BLOCK_EVENTS },
        { "wxWS_EX_PROCESS_IDLE", wxWS_EX_PROCESS_IDLE },
        { "wxWS_EX_PROCESS_UI_UPDATES", wxWS_EX_PROCESS_UI_UPDATES },
        { "wxWS_EX_TRANSIENT", wxWS_EX_TRANSIENT },
        { "wxWS_EX_VALIDATE_RECURSIVELY", wxWS_EX_VALIDATE_RECURSIVELY },

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { "wxWidth", wxWidth },
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if wxLUA_USE_wxDC
        { "wxXOR", wxXOR },
#endif // wxLUA_USE_wxDC

        { "wxYES", wxYES },
        { "wxYES_DEFAULT", wxYES_DEFAULT },
        { "wxYES_NO", wxYES_NO },

        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_wxcore() is called to register %define %string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_wxcore(size_t &count)
{
    static wxLuaBindString stringList[] =
    {
#if wxLUA_USE_wxArtProvider
        { "wxART_ADD_BOOKMARK", wxART_ADD_BOOKMARK },
        { "wxART_BUTTON", wxART_BUTTON },
        { "wxART_CDROM", wxART_CDROM },
        { "wxART_CMN_DIALOG", wxART_CMN_DIALOG },
        { "wxART_COPY", wxART_COPY },
        { "wxART_CROSS_MARK", wxART_CROSS_MARK },
        { "wxART_CUT", wxART_CUT },
        { "wxART_DELETE", wxART_DELETE },
        { "wxART_DEL_BOOKMARK", wxART_DEL_BOOKMARK },
        { "wxART_ERROR", wxART_ERROR },
        { "wxART_EXECUTABLE_FILE", wxART_EXECUTABLE_FILE },
        { "wxART_FILE_OPEN", wxART_FILE_OPEN },
        { "wxART_FILE_SAVE", wxART_FILE_SAVE },
        { "wxART_FILE_SAVE_AS", wxART_FILE_SAVE_AS },
        { "wxART_FIND", wxART_FIND },
        { "wxART_FIND_AND_REPLACE", wxART_FIND_AND_REPLACE },
        { "wxART_FLOPPY", wxART_FLOPPY },
        { "wxART_FOLDER", wxART_FOLDER },
        { "wxART_FOLDER_OPEN", wxART_FOLDER_OPEN },
        { "wxART_FRAME_ICON", wxART_FRAME_ICON },
        { "wxART_GO_BACK", wxART_GO_BACK },
        { "wxART_GO_DIR_UP", wxART_GO_DIR_UP },
        { "wxART_GO_DOWN", wxART_GO_DOWN },
        { "wxART_GO_FORWARD", wxART_GO_FORWARD },
        { "wxART_GO_HOME", wxART_GO_HOME },
        { "wxART_GO_TO_PARENT", wxART_GO_TO_PARENT },
        { "wxART_GO_UP", wxART_GO_UP },
        { "wxART_HARDDISK", wxART_HARDDISK },
        { "wxART_HELP", wxART_HELP },
        { "wxART_HELP_BOOK", wxART_HELP_BOOK },
        { "wxART_HELP_BROWSER", wxART_HELP_BROWSER },
        { "wxART_HELP_FOLDER", wxART_HELP_FOLDER },
        { "wxART_HELP_PAGE", wxART_HELP_PAGE },
        { "wxART_HELP_SETTINGS", wxART_HELP_SETTINGS },
        { "wxART_HELP_SIDE_PANEL", wxART_HELP_SIDE_PANEL },
        { "wxART_INFORMATION", wxART_INFORMATION },
        { "wxART_LIST_VIEW", wxART_LIST_VIEW },
        { "wxART_MENU", wxART_MENU },
        { "wxART_MESSAGE_BOX", wxART_MESSAGE_BOX },
        { "wxART_MISSING_IMAGE", wxART_MISSING_IMAGE },
        { "wxART_NEW", wxART_NEW },
        { "wxART_NEW_DIR", wxART_NEW_DIR },
        { "wxART_NORMAL_FILE", wxART_NORMAL_FILE },
        { "wxART_OTHER", wxART_OTHER },
        { "wxART_PASTE", wxART_PASTE },
        { "wxART_PRINT", wxART_PRINT },
        { "wxART_QUESTION", wxART_QUESTION },
        { "wxART_QUIT", wxART_QUIT },
        { "wxART_REDO", wxART_REDO },
        { "wxART_REMOVABLE", wxART_REMOVABLE },
        { "wxART_REPORT_VIEW", wxART_REPORT_VIEW },
        { "wxART_TICK_MARK", wxART_TICK_MARK },
        { "wxART_TIP", wxART_TIP },
        { "wxART_TOOLBAR", wxART_TOOLBAR },
        { "wxART_UNDO", wxART_UNDO },
        { "wxART_WARNING", wxART_WARNING },
#endif // wxLUA_USE_wxArtProvider

#if wxLUA_USE_wxGenericDirCtrl && wxUSE_DIRDLG
        { "wxDirDialogDefaultFolderStr", wxDirDialogDefaultFolderStr },
#endif // wxLUA_USE_wxGenericDirCtrl && wxUSE_DIRDLG

        { "wxDirSelectorPromptStr", wxT("Select a directory") },

#if wxLUA_USE_wxFileDialog && wxUSE_FILEDLG
        { "wxFileSelectorDefaultWildcardStr", wxFileSelectorDefaultWildcardStr },
        { "wxFileSelectorPromptStr", wxT("Select a file") },
#endif // wxLUA_USE_wxFileDialog && wxUSE_FILEDLG

#if wxUSE_TEXTDLG && wxLUA_USE_wxTextEntryDialog
        { "wxGetPasswordFromUserPromptStr", wxGetPasswordFromUserPromptStr },
#endif // wxUSE_TEXTDLG && wxLUA_USE_wxTextEntryDialog

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)
        { "wxIMAGE_OPTION_BITSPERSAMPLE", _T("BitsPerSample") },
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { "wxIMAGE_OPTION_BMP_FORMAT", _T("wxBMP_FORMAT") },
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)
        { "wxIMAGE_OPTION_COMPRESSION", _T("Compression") },
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)

#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)
        { "wxIMAGE_OPTION_CUR_HOTSPOT_X", wxIMAGE_OPTION_CUR_HOTSPOT_X },
        { "wxIMAGE_OPTION_CUR_HOTSPOT_Y", wxIMAGE_OPTION_CUR_HOTSPOT_Y },
#endif // (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { "wxIMAGE_OPTION_FILENAME", _T("FileName") },
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)
        { "wxIMAGE_OPTION_IMAGEDESCRIPTOR", _T("ImageDescriptor") },
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBPNG)
        { "wxIMAGE_OPTION_PNG_BITDEPTH", wxIMAGE_OPTION_PNG_BITDEPTH },
        { "wxIMAGE_OPTION_PNG_FORMAT", wxIMAGE_OPTION_PNG_FORMAT },
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBPNG)

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { "wxIMAGE_OPTION_QUALITY", _T("quality") },
        { "wxIMAGE_OPTION_RESOLUTION", _T("Resolution") },
        { "wxIMAGE_OPTION_RESOLUTIONUNIT", _T("ResolutionUnit") },
        { "wxIMAGE_OPTION_RESOLUTIONX", _T("ResolutionX") },
        { "wxIMAGE_OPTION_RESOLUTIONY", _T("ResolutionY") },
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)
        { "wxIMAGE_OPTION_SAMPLESPERPIXEL", _T("SamplesPerPixel") },
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)


        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_wxcore() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_wxcore(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {
#if wxLUA_USE_wxColourPenBrush
        { "wxBLACK", &wxluatype_wxColour, NULL, (const void **) &wxLua_wxBLACK },
        { "wxBLACK_BRUSH", &wxluatype_wxBrush, NULL, (const void **) &wxLua_wxBLACK_BRUSH },
        { "wxBLACK_DASHED_PEN", &wxluatype_wxPen, NULL, (const void **) &wxLua_wxBLACK_DASHED_PEN },
        { "wxBLACK_PEN", &wxluatype_wxPen, NULL, (const void **) &wxLua_wxBLACK_PEN },
        { "wxBLUE", &wxluatype_wxColour, NULL, (const void **) &wxLua_wxBLUE },
        { "wxBLUE_BRUSH", &wxluatype_wxBrush, NULL, (const void **) &wxLua_wxBLUE_BRUSH },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxCursor
        { "wxCROSS_CURSOR", &wxluatype_wxCursor, NULL, (const void **) &wxLua_wxCROSS_CURSOR },
#endif // wxLUA_USE_wxCursor

#if wxLUA_USE_wxColourPenBrush
        { "wxCYAN", &wxluatype_wxColour, NULL, (const void **) &wxLua_wxCYAN },
        { "wxCYAN_BRUSH", &wxluatype_wxBrush, NULL, (const void **) &wxLua_wxCYAN_BRUSH },
        { "wxCYAN_PEN", &wxluatype_wxPen, NULL, (const void **) &wxLua_wxCYAN_PEN },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxPointSizeRect
        { "wxDefaultPosition", &wxluatype_wxPoint, &wxDefaultPosition, NULL },
        { "wxDefaultSize", &wxluatype_wxSize, &wxDefaultSize, NULL },
#endif // wxLUA_USE_wxPointSizeRect

#if wxLUA_USE_wxValidator && wxUSE_VALIDATORS
        { "wxDefaultValidator", &wxluatype_wxValidator, &wxDefaultValidator, NULL },
#endif // wxLUA_USE_wxValidator && wxUSE_VALIDATORS

#if wxLUA_USE_wxDisplay && wxUSE_DISPLAY
        { "wxDefaultVideoMode", &wxluatype_wxVideoMode, &wxDefaultVideoMode, NULL },
#endif // wxLUA_USE_wxDisplay && wxUSE_DISPLAY

#if wxLUA_USE_wxDataObject && wxUSE_DATAOBJ
        { "wxFormatInvalid", &wxluatype_wxDataFormat, &wxFormatInvalid, NULL },
#endif // wxLUA_USE_wxDataObject && wxUSE_DATAOBJ

#if wxLUA_USE_wxColourPenBrush
        { "wxGREEN", &wxluatype_wxColour, NULL, (const void **) &wxLua_wxGREEN },
        { "wxGREEN_BRUSH", &wxluatype_wxBrush, NULL, (const void **) &wxLua_wxGREEN_BRUSH },
        { "wxGREEN_PEN", &wxluatype_wxPen, NULL, (const void **) &wxLua_wxGREEN_PEN },
        { "wxGREY_BRUSH", &wxluatype_wxBrush, NULL, (const void **) &wxLua_wxGREY_BRUSH },
        { "wxGREY_PEN", &wxluatype_wxPen, NULL, (const void **) &wxLua_wxGREY_PEN },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxCursor
        { "wxHOURGLASS_CURSOR", &wxluatype_wxCursor, NULL, (const void **) &wxLua_wxHOURGLASS_CURSOR },
#endif // wxLUA_USE_wxCursor

#if wxLUA_USE_wxFont
        { "wxITALIC_FONT", &wxluatype_wxFont, NULL, (const void **) &wxLua_wxITALIC_FONT },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxColourPenBrush
        { "wxLIGHT_GREY", &wxluatype_wxColour, NULL, (const void **) &wxLua_wxLIGHT_GREY },
        { "wxLIGHT_GREY_BRUSH", &wxluatype_wxBrush, NULL, (const void **) &wxLua_wxLIGHT_GREY_BRUSH },
        { "wxLIGHT_GREY_PEN", &wxluatype_wxPen, NULL, (const void **) &wxLua_wxLIGHT_GREY_PEN },
        { "wxMEDIUM_GREY_BRUSH", &wxluatype_wxBrush, NULL, (const void **) &wxLua_wxMEDIUM_GREY_BRUSH },
        { "wxMEDIUM_GREY_PEN", &wxluatype_wxPen, NULL, (const void **) &wxLua_wxMEDIUM_GREY_PEN },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxFont
        { "wxNORMAL_FONT", &wxluatype_wxFont, NULL, (const void **) &wxLua_wxNORMAL_FONT },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL
        { "wxNullAcceleratorTable", &wxluatype_wxAcceleratorTable, &wxNullAcceleratorTable, NULL },
#endif // wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL

#if wxLUA_USE_wxBitmap
        { "wxNullBitmap", &wxluatype_wxBitmap, &wxNullBitmap, NULL },
#endif // wxLUA_USE_wxBitmap

#if wxLUA_USE_wxColourPenBrush
        { "wxNullBrush", &wxluatype_wxBrush, &wxNullBrush, NULL },
        { "wxNullColour", &wxluatype_wxColour, &wxNullColour, NULL },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxCursor
        { "wxNullCursor", &wxluatype_wxCursor, &wxNullCursor, NULL },
#endif // wxLUA_USE_wxCursor

#if wxLUA_USE_wxFont
        { "wxNullFont", &wxluatype_wxFont, &wxNullFont, NULL },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxIcon
        { "wxNullIcon", &wxluatype_wxIcon, &wxNullIcon, NULL },
#endif // wxLUA_USE_wxIcon

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { "wxNullImage", &wxluatype_wxImage, &wxNullImage, NULL },
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

#if wxLUA_USE_wxPalette && wxUSE_PALETTE
        { "wxNullPalette", &wxluatype_wxPalette, &wxNullPalette, NULL },
#endif // wxLUA_USE_wxPalette && wxUSE_PALETTE

#if wxLUA_USE_wxColourPenBrush
        { "wxNullPen", &wxluatype_wxPen, &wxNullPen, NULL },
        { "wxRED", &wxluatype_wxColour, NULL, (const void **) &wxLua_wxRED },
        { "wxRED_BRUSH", &wxluatype_wxBrush, NULL, (const void **) &wxLua_wxRED_BRUSH },
        { "wxRED_PEN", &wxluatype_wxPen, NULL, (const void **) &wxLua_wxRED_PEN },
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxFont
        { "wxSMALL_FONT", &wxluatype_wxFont, NULL, (const void **) &wxLua_wxSMALL_FONT },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxCursor
        { "wxSTANDARD_CURSOR", &wxluatype_wxCursor, NULL, (const void **) &wxLua_wxSTANDARD_CURSOR },
#endif // wxLUA_USE_wxCursor

#if wxLUA_USE_wxFont
        { "wxSWISS_FONT", &wxluatype_wxFont, NULL, (const void **) &wxLua_wxSWISS_FONT },
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxColourPenBrush
        { "wxTRANSPARENT_BRUSH", &wxluatype_wxBrush, NULL, (const void **) &wxLua_wxTRANSPARENT_BRUSH },
        { "wxTRANSPARENT_PEN", &wxluatype_wxPen, NULL, (const void **) &wxLua_wxTRANSPARENT_PEN },
#endif // wxLUA_USE_wxColourPenBrush

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxBrushList)
        { "wxTheBrushList", &wxluatype_wxBrushList, NULL, (const void **) &wxTheBrushList },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxBrushList)

#if (!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD)
        { "wxTheClipboard", &wxluatype_wxClipboard, NULL, (const void **) &wxTheClipboard },
#endif // (!wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD)

#if wxLUA_USE_wxFontList
        { "wxTheFontList", &wxluatype_wxFontList, NULL, (const void **) &wxTheFontList },
#endif // wxLUA_USE_wxFontList

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPenList)
        { "wxThePenList", &wxluatype_wxPenList, NULL, (const void **) &wxThePenList },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPenList)

#if wxLUA_USE_wxColourPenBrush
        { "wxWHITE", &wxluatype_wxColour, NULL, (const void **) &wxLua_wxWHITE },
        { "wxWHITE_BRUSH", &wxluatype_wxBrush, NULL, (const void **) &wxLua_wxWHITE_BRUSH },
        { "wxWHITE_PEN", &wxluatype_wxPen, NULL, (const void **) &wxLua_wxWHITE_PEN },
#endif // wxLUA_USE_wxColourPenBrush


        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxcore() is called to register global functions
// ---------------------------------------------------------------------------

#if wxLUA_USE_wxCursor
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxBeginBusyCursor[] = { &wxluatype_wxCursor, NULL };
// %function void wxBeginBusyCursor(wxCursor *cursor = wxLua_wxHOURGLASS_CURSOR)
static int LUACALL wxLua_function_wxBeginBusyCursor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxCursor cursor = wxLua_wxHOURGLASS_CURSOR
    wxCursor * cursor = (argCount >= 1 ? (wxCursor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCursor) : wxLua_wxHOURGLASS_CURSOR);
    // call wxBeginBusyCursor
    wxBeginBusyCursor(cursor);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxBeginBusyCursor[1] = {{ wxLua_function_wxBeginBusyCursor, WXLUAMETHOD_CFUNCTION, 0, 1, s_wxluatypeArray_wxLua_function_wxBeginBusyCursor }};

#endif // wxLUA_USE_wxCursor

// %function void wxBell()
static int LUACALL wxLua_function_wxBell(lua_State *L)
{
    // call wxBell
    wxBell();

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxBell[1] = {{ wxLua_function_wxBell, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %override wxLua_function_wxClientDisplayRect
// %function void wxClientDisplayRect(int *x, int *y,int *width, int *height)
static int LUACALL wxLua_function_wxClientDisplayRect(lua_State *L)
{
    int x = 0, y = 0, width = 0, height = 0;
    // call wxClientDisplayRect
    wxClientDisplayRect(&x, &y, &width, &height);
    lua_pushnumber(L, x);
    lua_pushnumber(L, y);
    lua_pushnumber(L, width);
    lua_pushnumber(L, height);
    // return the number of parameters
    return 4;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxClientDisplayRect[1] = {{ wxLua_function_wxClientDisplayRect, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %function bool wxColourDisplay()
static int LUACALL wxLua_function_wxColourDisplay(lua_State *L)
{
    // call wxColourDisplay
    bool returns = (wxColourDisplay());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxColourDisplay[1] = {{ wxLua_function_wxColourDisplay, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};


#if wxLUA_USE_wxPointSizeRect
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxDirSelector[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxWindow, NULL };
// %function wxString wxDirSelector(const wxString& message = wxDirSelectorPromptStr, const wxString& default_path = "", long style = wxDD_DEFAULT_STYLE, const wxPoint& pos = wxDefaultPosition, wxWindow *parent = NULL)
static int LUACALL wxLua_function_wxDirSelector(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 5 ? (wxWindow *)wxluaT_getuserdatatype(L, 5, wxluatype_wxWindow) : NULL);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // long style = wxDD_DEFAULT_STYLE
    long style = (argCount >= 3 ? (long)wxlua_getnumbertype(L, 3) : wxDD_DEFAULT_STYLE);
    // const wxString default_path = ""
    const wxString default_path = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxEmptyString));
    // const wxString message = wxDirSelectorPromptStr
    const wxString message = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxDirSelectorPromptStr));
    // call wxDirSelector
    wxString returns = (wxDirSelector(message, default_path, style, *pos, parent));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxDirSelector[1] = {{ wxLua_function_wxDirSelector, WXLUAMETHOD_CFUNCTION, 0, 5, s_wxluatypeArray_wxLua_function_wxDirSelector }};

#endif // wxLUA_USE_wxPointSizeRect

// %function int wxDisplayDepth()
static int LUACALL wxLua_function_wxDisplayDepth(lua_State *L)
{
    // call wxDisplayDepth
    int returns = (wxDisplayDepth());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxDisplayDepth[1] = {{ wxLua_function_wxDisplayDepth, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %override wxLua_function_wxDisplaySize
// %function void wxDisplaySize(int *width, int *height)
static int LUACALL wxLua_function_wxDisplaySize(lua_State *L)
{
    int height = 0, width = 0;
    // call wxDisplaySize
    wxDisplaySize(&width, &height);
    // return the number of parameters
    lua_pushnumber(L, width);
    lua_pushnumber(L, height);
    return 2;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxDisplaySize[1] = {{ wxLua_function_wxDisplaySize, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %override wxLua_function_wxDisplaySizeMM
// %function void wxDisplaySizeMM(int *width, int *height)
static int LUACALL wxLua_function_wxDisplaySizeMM(lua_State *L)
{
    int height = 0, width = 0;
    // call wxDisplaySizeMM
    wxDisplaySizeMM(&width, &height);
    // return the number of parameters
    lua_pushnumber(L, width);
    lua_pushnumber(L, height);
    return 2;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxDisplaySizeMM[1] = {{ wxLua_function_wxDisplaySizeMM, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxEnableTopLevelWindows[] = { &wxluatype_TBOOLEAN, NULL };
// %function void wxEnableTopLevelWindows(bool enable = true)
static int LUACALL wxLua_function_wxEnableTopLevelWindows(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enable = true
    bool enable = (argCount >= 1 ? wxlua_getbooleantype(L, 1) : true);
    // call wxEnableTopLevelWindows
    wxEnableTopLevelWindows(enable);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxEnableTopLevelWindows[1] = {{ wxLua_function_wxEnableTopLevelWindows, WXLUAMETHOD_CFUNCTION, 0, 1, s_wxluatypeArray_wxLua_function_wxEnableTopLevelWindows }};

// %function void wxEndBusyCursor()
static int LUACALL wxLua_function_wxEndBusyCursor(lua_State *L)
{
    // call wxEndBusyCursor
    wxEndBusyCursor();

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxEndBusyCursor[1] = {{ wxLua_function_wxEndBusyCursor, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};


#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxProcess)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxExecute1[] = { &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_wxProcess, NULL };
// %wxchkver_2_6 %function long wxExecute(const wxString& command, int flags = wxEXEC_ASYNC, wxProcess *process = NULL)
static int LUACALL wxLua_function_wxExecute1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxProcess process = NULL
    wxProcess * process = (argCount >= 3 ? (wxProcess *)wxluaT_getuserdatatype(L, 3, wxluatype_wxProcess) : NULL);
    // int flags = wxEXEC_ASYNC
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxEXEC_ASYNC);
    // const wxString command
    const wxString command = wxlua_getwxStringtype(L, 1);
    // call wxExecute
    long  returns = (wxExecute(command, flags, process));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxExecute1[1] = {{ wxLua_function_wxExecute1, WXLUAMETHOD_CFUNCTION, 1, 3, s_wxluatypeArray_wxLua_function_wxExecute1 }};

#endif // (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxProcess)

#if (wxLUA_USE_wxProcess) && (!wxCHECK_VERSION(2,6,0))
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxExecute[] = { &wxluatype_TSTRING, &wxluatype_TBOOLEAN, &wxluatype_wxProcess, NULL };
// !%wxchkver_2_6 %function long wxExecute(const wxString& command, bool sync = false, wxProcess *callback = NULL)
static int LUACALL wxLua_function_wxExecute(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxProcess callback = NULL
    wxProcess * callback = (argCount >= 3 ? (wxProcess *)wxluaT_getuserdatatype(L, 3, wxluatype_wxProcess) : NULL);
    // bool sync = false
    bool sync = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : false);
    // const wxString command
    const wxString command = wxlua_getwxStringtype(L, 1);
    // call wxExecute
    long  returns = (wxExecute(command, sync, callback));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxExecute[1] = {{ wxLua_function_wxExecute, WXLUAMETHOD_CFUNCTION, 1, 3, s_wxluatypeArray_wxLua_function_wxExecute }};

#endif // (wxLUA_USE_wxProcess) && (!wxCHECK_VERSION(2,6,0))

#if wxLUA_USE_wxArrayString
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxExecuteStdout[] = { &wxluatype_TSTRING, &wxluatype_wxArrayString, &wxluatype_TNUMBER, NULL };
// %override wxLua_function_wxExecuteStdout
// %function %rename wxExecuteStdout long wxExecute(const wxString& command, wxArrayString& output, int flags = 0)
static int LUACALL wxLua_function_wxExecuteStdout(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 2 ? (int)wxlua_getintegertype(L, 2) : 0);
    // const wxString command
    const wxString command = wxlua_getwxStringtype(L, 1);
    // call wxExecute
    wxArrayString output;
    long returns = wxExecute(command, output, flags);
    // push the result number
    lua_pushnumber(L, returns);
    wxlua_pushwxArrayStringtable(L, output);

    return 2;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxExecuteStdout[1] = {{ wxLua_function_wxExecuteStdout, WXLUAMETHOD_CFUNCTION, 2, 3, s_wxluatypeArray_wxLua_function_wxExecuteStdout }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxExecuteStdoutStderr[] = { &wxluatype_TSTRING, &wxluatype_wxArrayString, &wxluatype_wxArrayString, &wxluatype_TNUMBER, NULL };
// %override wxLua_function_wxExecuteStdoutStderr
// %function %rename wxExecuteStdoutStderr long wxExecute(const wxString& command, wxArrayString& output, wxArrayString& errors, int flags = 0)
static int LUACALL wxLua_function_wxExecuteStdoutStderr(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 2 ? (int)wxlua_getintegertype(L, 2) : 0);
    // const wxString command
    const wxString command = wxlua_getwxStringtype(L, 1);
    // call wxExecute
    wxArrayString output;
    wxArrayString errors;
    long returns = wxExecute(command, output, errors, flags);
    // push the result number
    lua_pushnumber(L, returns);
    wxlua_pushwxArrayStringtable(L, output);
    wxlua_pushwxArrayStringtable(L, errors);

    return 3;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxExecuteStdoutStderr[1] = {{ wxLua_function_wxExecuteStdoutStderr, WXLUAMETHOD_CFUNCTION, 3, 4, s_wxluatypeArray_wxLua_function_wxExecuteStdoutStderr }};

#endif // wxLUA_USE_wxArrayString

// %function void wxExit()
static int LUACALL wxLua_function_wxExit(lua_State *L)
{
    // call wxExit
    wxExit();

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxExit[1] = {{ wxLua_function_wxExit, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFileSelector[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// %function wxString wxFileSelector(const wxString& message, const wxString& default_path = "", const wxString& default_filename = "", const wxString& default_extension = "", const wxString& wildcard = "*.*", int flags = 0, wxWindow *parent = NULL, int x = -1, int y = -1)
static int LUACALL wxLua_function_wxFileSelector(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int y = -1
    int y = (argCount >= 9 ? (int)wxlua_getnumbertype(L, 9) : -1);
    // int x = -1
    int x = (argCount >= 8 ? (int)wxlua_getnumbertype(L, 8) : -1);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 7 ? (wxWindow *)wxluaT_getuserdatatype(L, 7, wxluatype_wxWindow) : NULL);
    // int flags = 0
    int flags = (argCount >= 6 ? (int)wxlua_getnumbertype(L, 6) : 0);
    // const wxString wildcard = "*.*"
    const wxString wildcard = (argCount >= 5 ? wxlua_getwxStringtype(L, 5) : wxString(wxT("*.*")));
    // const wxString default_extension = ""
    const wxString default_extension = (argCount >= 4 ? wxlua_getwxStringtype(L, 4) : wxString(wxEmptyString));
    // const wxString default_filename = ""
    const wxString default_filename = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxString default_path = ""
    const wxString default_path = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxEmptyString));
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxFileSelector
    wxString returns = (wxFileSelector(message, default_path, default_filename, default_extension, wildcard, flags, parent, x, y));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFileSelector[1] = {{ wxLua_function_wxFileSelector, WXLUAMETHOD_CFUNCTION, 1, 9, s_wxluatypeArray_wxLua_function_wxFileSelector }};


#if wxCHECK_VERSION(2,8,0)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFindFocusDescendant[] = { &wxluatype_wxWindow, NULL };
// %wxchkver_2_8 %function wxWindow* wxFindFocusDescendant(wxWindow* ancestor)
static int LUACALL wxLua_function_wxFindFocusDescendant(lua_State *L)
{
    // wxWindow ancestor
    wxWindow * ancestor = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call wxFindFocusDescendant
    wxWindow* returns = (wxWindow*)wxFindFocusDescendant(ancestor);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFindFocusDescendant[1] = {{ wxLua_function_wxFindFocusDescendant, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxFindFocusDescendant }};

#endif // wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxFrame
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFindMenuItemId[] = { &wxluatype_wxFrame, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
// %function int wxFindMenuItemId(wxFrame *frame, const wxString& menuString, const wxString& itemString)
static int LUACALL wxLua_function_wxFindMenuItemId(lua_State *L)
{
    // const wxString itemString
    const wxString itemString = wxlua_getwxStringtype(L, 3);
    // const wxString menuString
    const wxString menuString = wxlua_getwxStringtype(L, 2);
    // wxFrame frame
    wxFrame * frame = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call wxFindMenuItemId
    int returns = (wxFindMenuItemId(frame, menuString, itemString));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFindMenuItemId[1] = {{ wxLua_function_wxFindMenuItemId, WXLUAMETHOD_CFUNCTION, 3, 3, s_wxluatypeArray_wxLua_function_wxFindMenuItemId }};

#endif // wxLUA_USE_wxFrame

#if wxLUA_USE_wxPointSizeRect
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFindWindowAtPoint[] = { &wxluatype_wxPoint, NULL };
// %function wxWindow* wxFindWindowAtPoint(const wxPoint& pt)
static int LUACALL wxLua_function_wxFindWindowAtPoint(lua_State *L)
{
    // const wxPoint pt
    const wxPoint * pt = (const wxPoint *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint);
    // call wxFindWindowAtPoint
    wxWindow* returns = (wxWindow*)wxFindWindowAtPoint(*pt);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFindWindowAtPoint[1] = {{ wxLua_function_wxFindWindowAtPoint, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxFindWindowAtPoint }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFindWindowAtPointer[] = { &wxluatype_wxPoint, NULL };
// %function wxWindow* wxFindWindowAtPointer(wxPoint& pt)
static int LUACALL wxLua_function_wxFindWindowAtPointer(lua_State *L)
{
    // wxPoint pt
    wxPoint * pt = (wxPoint *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint);
    // call wxFindWindowAtPointer
    wxWindow* returns = (wxWindow*)wxFindWindowAtPointer(*pt);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFindWindowAtPointer[1] = {{ wxLua_function_wxFindWindowAtPointer, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxFindWindowAtPointer }};

#endif // wxLUA_USE_wxPointSizeRect

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFindWindowByLabel[] = { &wxluatype_TSTRING, &wxluatype_wxWindow, NULL };
// %function wxWindow* wxFindWindowByLabel(const wxString& label, wxWindow *parent=NULL)
static int LUACALL wxLua_function_wxFindWindowByLabel(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 2 ? (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow) : NULL);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call wxFindWindowByLabel
    wxWindow* returns = (wxWindow*)wxFindWindowByLabel(label, parent);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFindWindowByLabel[1] = {{ wxLua_function_wxFindWindowByLabel, WXLUAMETHOD_CFUNCTION, 1, 2, s_wxluatypeArray_wxLua_function_wxFindWindowByLabel }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFindWindowByName[] = { &wxluatype_TSTRING, &wxluatype_wxWindow, NULL };
// %function wxWindow* wxFindWindowByName(const wxString& name, wxWindow *parent=NULL)
static int LUACALL wxLua_function_wxFindWindowByName(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 2 ? (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow) : NULL);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 1);
    // call wxFindWindowByName
    wxWindow* returns = (wxWindow*)wxFindWindowByName(name, parent);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFindWindowByName[1] = {{ wxLua_function_wxFindWindowByName, WXLUAMETHOD_CFUNCTION, 1, 2, s_wxluatypeArray_wxLua_function_wxFindWindowByName }};


#if (((defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)) && (wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL)) && (wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetAccelFromString[] = { &wxluatype_TSTRING, NULL };
// %wxcompat_2_6 %function wxAcceleratorEntry* wxGetAccelFromString(const wxString& label) // deprecated in 2.8 use wxAcceleratorEntry::Create() or FromString()
static int LUACALL wxLua_function_wxGetAccelFromString(lua_State *L)
{
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call wxGetAccelFromString
    wxAcceleratorEntry* returns = (wxAcceleratorEntry*)wxGetAccelFromString(label);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxAcceleratorEntry);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetAccelFromString[1] = {{ wxLua_function_wxGetAccelFromString, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxGetAccelFromString }};

#endif // (((defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)) && (wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL)) && (wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL)

#if wxCHECK_VERSION(2,8,4)
// %wxchkver_2_8_4 %function wxWindow* wxGetActiveWindow()
static int LUACALL wxLua_function_wxGetActiveWindow(lua_State *L)
{
    // call wxGetActiveWindow
    wxWindow* returns = (wxWindow*)wxGetActiveWindow();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetActiveWindow[1] = {{ wxLua_function_wxGetActiveWindow, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxCHECK_VERSION(2,8,4)

#if wxLUA_USE_wxApp
// %override wxLua_function_wxGetApp
// %function wxApp* wxGetApp()
static int LUACALL wxLua_function_wxGetApp(lua_State *L)
{
    // call wxGetApp(), actually not since you have to have IMPLEMENT_APP
    wxApp *returns = wxTheApp;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxApp);
    // return the number of parameters
    return 1;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetApp[1] = {{ wxLua_function_wxGetApp, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxLUA_USE_wxApp

#if wxCHECK_VERSION(2,8,0)
// %function wxBatteryState wxGetBatteryState()
static int LUACALL wxLua_function_wxGetBatteryState(lua_State *L)
{
    // call wxGetBatteryState
    wxBatteryState returns = (wxGetBatteryState());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetBatteryState[1] = {{ wxLua_function_wxGetBatteryState, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxPointSizeRect
// %function wxRect wxGetClientDisplayRect()
static int LUACALL wxLua_function_wxGetClientDisplayRect(lua_State *L)
{
    // call wxGetClientDisplayRect
    // allocate a new object using the copy constructor
    wxRect* returns = new wxRect(wxGetClientDisplayRect());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect((wxRect*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetClientDisplayRect[1] = {{ wxLua_function_wxGetClientDisplayRect, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxLUA_USE_wxPointSizeRect

#if (wxUSE_COLOURDLG && wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetColourFromUser1[] = { &wxluatype_wxWindow, &wxluatype_wxColour, &wxluatype_TSTRING, NULL };
// wxUSE_COLOURDLG&&%wxchkver_2_8 %function wxColour wxGetColourFromUser(wxWindow *parent, const wxColour& colInit, const wxString& caption = "")
static int LUACALL wxLua_function_wxGetColourFromUser1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString caption = ""
    const wxString caption = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxColour colInit
    const wxColour * colInit = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call wxGetColourFromUser
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(wxGetColourFromUser(parent, *colInit, caption));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (wxColour*)returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetColourFromUser1[1] = {{ wxLua_function_wxGetColourFromUser1, WXLUAMETHOD_CFUNCTION, 2, 3, s_wxluatypeArray_wxLua_function_wxGetColourFromUser1 }};

#endif // (wxUSE_COLOURDLG && wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_COLOURDLG && !wxCHECK_VERSION(2,8,0))
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetColourFromUser[] = { &wxluatype_wxWindow, &wxluatype_wxColour, NULL };
// wxUSE_COLOURDLG&&!%wxchkver_2_8 %function wxColour wxGetColourFromUser(wxWindow *parent, const wxColour& colInit)
static int LUACALL wxLua_function_wxGetColourFromUser(lua_State *L)
{
    // const wxColour colInit
    const wxColour * colInit = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call wxGetColourFromUser
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(wxGetColourFromUser(parent, *colInit));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (wxColour*)returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetColourFromUser[1] = {{ wxLua_function_wxGetColourFromUser, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_wxGetColourFromUser }};

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_COLOURDLG && !wxCHECK_VERSION(2,8,0))

#if wxLUA_USE_wxPointSizeRect
// %function wxSize wxGetDisplaySize()
static int LUACALL wxLua_function_wxGetDisplaySize(lua_State *L)
{
    // call wxGetDisplaySize
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(wxGetDisplaySize());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxSize((wxSize*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetDisplaySize[1] = {{ wxLua_function_wxGetDisplaySize, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %function wxSize wxGetDisplaySizeMM()
static int LUACALL wxLua_function_wxGetDisplaySizeMM(lua_State *L)
{
    // call wxGetDisplaySizeMM
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(wxGetDisplaySizeMM());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxSize((wxSize*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetDisplaySizeMM[1] = {{ wxLua_function_wxGetDisplaySizeMM, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxLUA_USE_wxPointSizeRect

#if (wxCHECK_VERSION(2,8,0) && wxUSE_FONTDLG) && (wxLUA_USE_wxFont)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetFontFromUser1[] = { &wxluatype_wxWindow, &wxluatype_wxFont, &wxluatype_TSTRING, NULL };
// %wxchkver_2_8&&wxUSE_FONTDLG %function wxFont wxGetFontFromUser(wxWindow *parent = NULL, const wxFont& fontInit = wxNullFont, const wxString& caption = "")
static int LUACALL wxLua_function_wxGetFontFromUser1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString caption = ""
    const wxString caption = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxFont fontInit = wxNullFont
    const wxFont * fontInit = (argCount >= 2 ? (const wxFont *)wxluaT_getuserdatatype(L, 2, wxluatype_wxFont) : &wxNullFont);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 1 ? (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow) : NULL);
    // call wxGetFontFromUser
    // allocate a new object using the copy constructor
    wxFont* returns = new wxFont(wxGetFontFromUser(parent, *fontInit, caption));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (wxFont*)returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFont);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetFontFromUser1[1] = {{ wxLua_function_wxGetFontFromUser1, WXLUAMETHOD_CFUNCTION, 0, 3, s_wxluatypeArray_wxLua_function_wxGetFontFromUser1 }};

#endif // (wxCHECK_VERSION(2,8,0) && wxUSE_FONTDLG) && (wxLUA_USE_wxFont)

#if (wxLUA_USE_wxFont) && (!wxCHECK_VERSION(2,8,0) && wxUSE_FONTDLG)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetFontFromUser[] = { &wxluatype_wxWindow, &wxluatype_wxFont, NULL };
// !%wxchkver_2_8&&wxUSE_FONTDLG %function wxFont wxGetFontFromUser(wxWindow *parent, const wxFont& fontInit)
static int LUACALL wxLua_function_wxGetFontFromUser(lua_State *L)
{
    // const wxFont fontInit
    const wxFont * fontInit = (const wxFont *)wxluaT_getuserdatatype(L, 2, wxluatype_wxFont);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call wxGetFontFromUser
    // allocate a new object using the copy constructor
    wxFont* returns = new wxFont(wxGetFontFromUser(parent, *fontInit));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (wxFont*)returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFont);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetFontFromUser[1] = {{ wxLua_function_wxGetFontFromUser, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_wxGetFontFromUser }};

#endif // (wxLUA_USE_wxFont) && (!wxCHECK_VERSION(2,8,0) && wxUSE_FONTDLG)

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetKeyState[] = { &wxluatype_TINTEGER, NULL };
// %function bool wxGetKeyState(wxKeyCode key)
static int LUACALL wxLua_function_wxGetKeyState(lua_State *L)
{
    // wxKeyCode key
    wxKeyCode key = (wxKeyCode)wxlua_getenumtype(L, 1);
    // call wxGetKeyState
    bool returns = (wxGetKeyState(key));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetKeyState[1] = {{ wxLua_function_wxGetKeyState, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxGetKeyState }};


#if wxLUA_USE_wxPointSizeRect
// %function wxPoint wxGetMousePosition()
static int LUACALL wxLua_function_wxGetMousePosition(lua_State *L)
{
    // call wxGetMousePosition
    // allocate a new object using the copy constructor
    wxPoint* returns = new wxPoint(wxGetMousePosition());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint((wxPoint*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetMousePosition[1] = {{ wxLua_function_wxGetMousePosition, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxLUA_USE_wxPointSizeRect

#if wxCHECK_VERSION(2,8,0)
// %function wxMouseState wxGetMouseState()
static int LUACALL wxLua_function_wxGetMouseState(lua_State *L)
{
    // call wxGetMouseState
    // allocate a new object using the copy constructor
    wxMouseState* returns = new wxMouseState(wxGetMouseState());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxMouseState((wxMouseState*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMouseState);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetMouseState[1] = {{ wxLua_function_wxGetMouseState, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxCHECK_VERSION(2,8,0)

#if wxUSE_CHOICEDLG
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetMultipleChoices[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TTABLE, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// %override wxLua_function_wxGetMultipleChoices
// %function size_t wxGetMultipleChoices(wxArrayInt& selections,const wxString& message,const wxString& caption,int n, const wxString *choices,wxWindow *parent = (wxWindow *) NULL,int x = -1, int y = -1, bool centre = true, int width = wxCHOICE_WIDTH, int height = wxCHOICE_HEIGHT);
static int LUACALL wxLua_function_wxGetMultipleChoices(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int height = wxCHOICE_HEIGHT
    int height = (argCount >= 10 ? (int)wxlua_getnumbertype(L, 10) : wxCHOICE_HEIGHT);
    // int width = wxCHOICE_WIDTH
    int width = (argCount >= 9 ? (int)wxlua_getnumbertype(L, 9) : wxCHOICE_WIDTH);
    // bool centre = true
    bool centre = (argCount >= 8 ? wxlua_getbooleantype(L, 8) : true);
    // int y = -1
    int y = (argCount >= 7 ? (int)wxlua_getnumbertype(L, 7) : -1);
    // int x = -1
    int x = (argCount >= 6 ? (int)wxlua_getnumbertype(L, 6) : -1);
    // wxWindow *parent = (wxWindow *) NULL
    wxWindow *parent = (argCount >= 5 ? (wxWindow *)wxluaT_getuserdatatype(L, 5, wxluatype_wxWindow) : (wxWindow *) NULL);
    // const wxString& choices[]
    int count = 0; wxLuaSmartStringArray choices = wxlua_getwxStringarray(L, 4, count);
    // const wxString& caption
    wxString caption = wxlua_getwxStringtype(L, 3);
    // const wxString& message
    wxString message = wxlua_getwxStringtype(L, 2);
    // wxArrayInt& selections
    wxLuaSmartwxArrayInt selections = wxlua_getwxArrayInt(L, 1);

    // call wxGetMultipleChoices
    size_t returns = wxGetMultipleChoices(selections, message, caption, count, choices, parent, x, y, centre, width, height);

    wxlua_pushwxArrayInttable(L, selections);

    // push the result number
    lua_pushnumber(L, returns);
    // return the number of parameters
    return 2;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetMultipleChoices[1] = {{ wxLua_function_wxGetMultipleChoices, WXLUAMETHOD_CFUNCTION, 3, 9, s_wxluatypeArray_wxLua_function_wxGetMultipleChoices }};

#endif // wxUSE_CHOICEDLG

#if (wxUSE_NUMBERDLG) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetNumberFromUser[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxWindow, &wxluatype_wxPoint, NULL };
// %function long wxGetNumberFromUser(const wxString& message, const wxString& prompt, const wxString& caption, long value, long min = 0, long max = 100, wxWindow *parent = NULL, const wxPoint& pos = wxDefaultPosition)
static int LUACALL wxLua_function_wxGetNumberFromUser(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 8 ? (const wxPoint *)wxluaT_getuserdatatype(L, 8, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 7 ? (wxWindow *)wxluaT_getuserdatatype(L, 7, wxluatype_wxWindow) : NULL);
    // long max = 100
    long max = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : 100);
    // long min = 0
    long min = (argCount >= 5 ? (long)wxlua_getnumbertype(L, 5) : 0);
    // long value
    long value = (long)wxlua_getnumbertype(L, 4);
    // const wxString caption
    const wxString caption = wxlua_getwxStringtype(L, 3);
    // const wxString prompt
    const wxString prompt = wxlua_getwxStringtype(L, 2);
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxGetNumberFromUser
    long  returns = (wxGetNumberFromUser(message, prompt, caption, value, min, max, parent, *pos));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetNumberFromUser[1] = {{ wxLua_function_wxGetNumberFromUser, WXLUAMETHOD_CFUNCTION, 4, 8, s_wxluatypeArray_wxLua_function_wxGetNumberFromUser }};

#endif // (wxUSE_NUMBERDLG) && (wxLUA_USE_wxPointSizeRect)

#if wxUSE_TEXTDLG
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetPasswordFromUser[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxWindow, NULL };
// wxUSE_TEXTDLG %function wxString wxGetPasswordFromUser(const wxString& message, const wxString& caption = "Input text", const wxString& default_value = "", wxWindow *parent = NULL)
static int LUACALL wxLua_function_wxGetPasswordFromUser(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 4 ? (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow) : NULL);
    // const wxString default_value = ""
    const wxString default_value = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxString caption = "Input text"
    const wxString caption = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxT("Input text")));
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxGetPasswordFromUser
    wxString returns = (wxGetPasswordFromUser(message, caption, default_value, parent));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetPasswordFromUser[1] = {{ wxLua_function_wxGetPasswordFromUser, WXLUAMETHOD_CFUNCTION, 1, 4, s_wxluatypeArray_wxLua_function_wxGetPasswordFromUser }};

#endif // wxUSE_TEXTDLG

#if wxCHECK_VERSION(2,8,0)
// %function wxPowerType wxGetPowerType()
static int LUACALL wxLua_function_wxGetPowerType(lua_State *L)
{
    // call wxGetPowerType
    wxPowerType returns = (wxGetPowerType());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetPowerType[1] = {{ wxLua_function_wxGetPowerType, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxCHECK_VERSION(2,8,0)

// %function unsigned long wxGetProcessId()
static int LUACALL wxLua_function_wxGetProcessId(lua_State *L)
{
    // call wxGetProcessId
    unsigned long returns = (wxGetProcessId());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetProcessId[1] = {{ wxLua_function_wxGetProcessId, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};


#if (wxUSE_CHOICEDLG) && (wxLUA_USE_wxArrayString)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetSingleChoice[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxArrayString, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// wxUSE_CHOICEDLG %function wxString wxGetSingleChoice(const wxString& message, const wxString& caption, const wxArrayString& choices, wxWindow *parent = NULL, int x = wxDefaultCoord, int y = wxDefaultCoord, bool centre = true, int width = wxCHOICE_WIDTH, int height = wxCHOICE_HEIGHT)
static int LUACALL wxLua_function_wxGetSingleChoice(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int height = wxCHOICE_HEIGHT
    int height = (argCount >= 9 ? (int)wxlua_getnumbertype(L, 9) : wxCHOICE_HEIGHT);
    // int width = wxCHOICE_WIDTH
    int width = (argCount >= 8 ? (int)wxlua_getnumbertype(L, 8) : wxCHOICE_WIDTH);
    // bool centre = true
    bool centre = (argCount >= 7 ? wxlua_getbooleantype(L, 7) : true);
    // int y = wxDefaultCoord
    int y = (argCount >= 6 ? (int)wxlua_getnumbertype(L, 6) : wxDefaultCoord);
    // int x = wxDefaultCoord
    int x = (argCount >= 5 ? (int)wxlua_getnumbertype(L, 5) : wxDefaultCoord);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 4 ? (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow) : NULL);
    // const wxArrayString choices
    wxLuaSmartwxArrayString choices = wxlua_getwxArrayString(L, 3);
    // const wxString caption
    const wxString caption = wxlua_getwxStringtype(L, 2);
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxGetSingleChoice
    wxString returns = (wxGetSingleChoice(message, caption, choices, parent, x, y, centre, width, height));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetSingleChoice[1] = {{ wxLua_function_wxGetSingleChoice, WXLUAMETHOD_CFUNCTION, 3, 9, s_wxluatypeArray_wxLua_function_wxGetSingleChoice }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetSingleChoiceIndex[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxArrayString, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// wxUSE_CHOICEDLG %function int wxGetSingleChoiceIndex(const wxString& message, const wxString& caption, const wxArrayString& choices, wxWindow *parent = NULL, int x = wxDefaultCoord, int y = wxDefaultCoord, bool centre = true, int width = wxCHOICE_WIDTH, int height = wxCHOICE_HEIGHT)
static int LUACALL wxLua_function_wxGetSingleChoiceIndex(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int height = wxCHOICE_HEIGHT
    int height = (argCount >= 9 ? (int)wxlua_getnumbertype(L, 9) : wxCHOICE_HEIGHT);
    // int width = wxCHOICE_WIDTH
    int width = (argCount >= 8 ? (int)wxlua_getnumbertype(L, 8) : wxCHOICE_WIDTH);
    // bool centre = true
    bool centre = (argCount >= 7 ? wxlua_getbooleantype(L, 7) : true);
    // int y = wxDefaultCoord
    int y = (argCount >= 6 ? (int)wxlua_getnumbertype(L, 6) : wxDefaultCoord);
    // int x = wxDefaultCoord
    int x = (argCount >= 5 ? (int)wxlua_getnumbertype(L, 5) : wxDefaultCoord);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 4 ? (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow) : NULL);
    // const wxArrayString choices
    wxLuaSmartwxArrayString choices = wxlua_getwxArrayString(L, 3);
    // const wxString caption
    const wxString caption = wxlua_getwxStringtype(L, 2);
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxGetSingleChoiceIndex
    int returns = (wxGetSingleChoiceIndex(message, caption, choices, parent, x, y, centre, width, height));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetSingleChoiceIndex[1] = {{ wxLua_function_wxGetSingleChoiceIndex, WXLUAMETHOD_CFUNCTION, 3, 9, s_wxluatypeArray_wxLua_function_wxGetSingleChoiceIndex }};

#endif // (wxUSE_CHOICEDLG) && (wxLUA_USE_wxArrayString)

#if wxUSE_TEXTDLG
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetTextFromUser[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
// wxUSE_TEXTDLG %function wxString wxGetTextFromUser(const wxString& message, const wxString& caption = "Input text", const wxString& default_value = "", wxWindow *parent = NULL, int x = -1, int y = -1, bool centre = true)
static int LUACALL wxLua_function_wxGetTextFromUser(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool centre = true
    bool centre = (argCount >= 7 ? wxlua_getbooleantype(L, 7) : true);
    // int y = -1
    int y = (argCount >= 6 ? (int)wxlua_getnumbertype(L, 6) : -1);
    // int x = -1
    int x = (argCount >= 5 ? (int)wxlua_getnumbertype(L, 5) : -1);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 4 ? (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow) : NULL);
    // const wxString default_value = ""
    const wxString default_value = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxString caption = "Input text"
    const wxString caption = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxT("Input text")));
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxGetTextFromUser
    wxString returns = (wxGetTextFromUser(message, caption, default_value, parent, x, y, centre));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetTextFromUser[1] = {{ wxLua_function_wxGetTextFromUser, WXLUAMETHOD_CFUNCTION, 1, 7, s_wxluatypeArray_wxLua_function_wxGetTextFromUser }};

#endif // wxUSE_TEXTDLG

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetTopLevelParent[] = { &wxluatype_wxWindow, NULL };
// %function wxWindow* wxGetTopLevelParent(wxWindow *win)
static int LUACALL wxLua_function_wxGetTopLevelParent(lua_State *L)
{
    // wxWindow win
    wxWindow * win = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call wxGetTopLevelParent
    wxWindow* returns = (wxWindow*)wxGetTopLevelParent(win);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetTopLevelParent[1] = {{ wxLua_function_wxGetTopLevelParent, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxGetTopLevelParent }};

// %function void wxInitAllImageHandlers()
static int LUACALL wxLua_function_wxInitAllImageHandlers(lua_State *L)
{
    // call wxInitAllImageHandlers
    wxInitAllImageHandlers();

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxInitAllImageHandlers[1] = {{ wxLua_function_wxInitAllImageHandlers, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %function bool wxIsBusy()
static int LUACALL wxLua_function_wxIsBusy(lua_State *L)
{
    // call wxIsBusy
    bool returns = (wxIsBusy());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxIsBusy[1] = {{ wxLua_function_wxIsBusy, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};


#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxIsDragResultOk[] = { &wxluatype_TINTEGER, NULL };
// %function bool wxIsDragResultOk(wxDragResult res)
static int LUACALL wxLua_function_wxIsDragResultOk(lua_State *L)
{
    // wxDragResult res
    wxDragResult res = (wxDragResult)wxlua_getenumtype(L, 1);
    // call wxIsDragResultOk
    bool returns = (wxIsDragResultOk(res));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxIsDragResultOk[1] = {{ wxLua_function_wxIsDragResultOk, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxIsDragResultOk }};

#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP

#if wxLUA_USE_wxProcess
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxKill[] = { &wxluatype_TNUMBER, &wxluatype_TINTEGER, &wxluatype_TNUMBER, NULL };
// %override wxLua_function_wxKill
// %function int wxKill(long pid, wxSignal sig = wxSIGTERM, wxKillError *rc = NULL, int flags = 0)
static int LUACALL wxLua_function_wxKill(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxKillError rc = NULL
    wxKillError rc = wxKILL_OK;
    //wxKillError * rc = (argCount >= 3 ? (wxKillError *)wxlua_touserdata(L, 3) : NULL);
    // wxSignal sig = wxSIGTERM
    wxSignal sig = (argCount >= 2 ? (wxSignal)wxlua_getenumtype(L, 2) : wxSIGTERM);
    // long pid
    long pid = (long)wxlua_getnumbertype(L, 1);
    // call wxKill
    int returns = (wxKill(pid, sig, &rc, flags));
    // push the result number
    lua_pushnumber(L, returns);
    lua_pushnumber(L, rc);

    return 2;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxKill[1] = {{ wxLua_function_wxKill, WXLUAMETHOD_CFUNCTION, 1, 3, s_wxluatypeArray_wxLua_function_wxKill }};

#endif // wxLUA_USE_wxProcess

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxLaunchDefaultBrowser[] = { &wxluatype_TSTRING, NULL };
// %function bool wxLaunchDefaultBrowser(const wxString& sUrl)
static int LUACALL wxLua_function_wxLaunchDefaultBrowser(lua_State *L)
{
    // const wxString sUrl
    const wxString sUrl = wxlua_getwxStringtype(L, 1);
    // call wxLaunchDefaultBrowser
    bool returns = (wxLaunchDefaultBrowser(sUrl));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxLaunchDefaultBrowser[1] = {{ wxLua_function_wxLaunchDefaultBrowser, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxLaunchDefaultBrowser }};


#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxFrame)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxLogStatus[] = { &wxluatype_wxFrame, &wxluatype_TSTRING, NULL };
// %function void wxLogStatus(wxFrame *frame, const wxString& message)
static int LUACALL wxLua_function_wxLogStatus(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 2);
    // wxFrame frame
    wxFrame * frame = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call wxLogStatus
    wxLogStatus(frame, message);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxLogStatus[1] = {{ wxLua_function_wxLogStatus, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_wxLogStatus }};

#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxFrame)

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxMessageBox[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// %function int wxMessageBox(const wxString& message, const wxString& caption = "Message", int style = wxOK | wxCENTRE, wxWindow *parent = NULL, int x = -1, int y = -1)
static int LUACALL wxLua_function_wxMessageBox(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int y = -1
    int y = (argCount >= 6 ? (int)wxlua_getnumbertype(L, 6) : -1);
    // int x = -1
    int x = (argCount >= 5 ? (int)wxlua_getnumbertype(L, 5) : -1);
    // wxWindow parent = NULL
    wxWindow * parent = (argCount >= 4 ? (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow) : NULL);
    // int style = wxOK | wxCENTRE
    int style = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxOK | wxCENTRE);
    // const wxString caption = "Message"
    const wxString caption = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxT("Message")));
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxMessageBox
    int returns = (wxMessageBox(message, caption, style, parent, x, y));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxMessageBox[1] = {{ wxLua_function_wxMessageBox, WXLUAMETHOD_CFUNCTION, 1, 6, s_wxluatypeArray_wxLua_function_wxMessageBox }};

// %function long wxNewId()
static int LUACALL wxLua_function_wxNewId(lua_State *L)
{
    // call wxNewId
    long  returns = (wxNewId());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxNewId[1] = {{ wxLua_function_wxNewId, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxPostEvent[] = { &wxluatype_wxEvtHandler, &wxluatype_wxEvent, NULL };
// %function void wxPostEvent(wxEvtHandler *dest, wxEvent& event)
static int LUACALL wxLua_function_wxPostEvent(lua_State *L)
{
    // wxEvent event
    wxEvent * event = (wxEvent *)wxluaT_getuserdatatype(L, 2, wxluatype_wxEvent);
    // wxEvtHandler dest
    wxEvtHandler * dest = (wxEvtHandler *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEvtHandler);
    // call wxPostEvent
    wxPostEvent(dest, *event);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxPostEvent[1] = {{ wxLua_function_wxPostEvent, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_wxPostEvent }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxRegisterId[] = { &wxluatype_TNUMBER, NULL };
// %function void wxRegisterId(long id)
static int LUACALL wxLua_function_wxRegisterId(lua_State *L)
{
    // long id
    long id = (long)wxlua_getnumbertype(L, 1);
    // call wxRegisterId
    wxRegisterId(id);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxRegisterId[1] = {{ wxLua_function_wxRegisterId, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxRegisterId }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxSafeYield[] = { &wxluatype_wxWindow, &wxluatype_TBOOLEAN, NULL };
// %function bool wxSafeYield(wxWindow* win = NULL, bool onlyIfNeeded = false)
static int LUACALL wxLua_function_wxSafeYield(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool onlyIfNeeded = false
    bool onlyIfNeeded = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : false);
    // wxWindow win = NULL
    wxWindow * win = (argCount >= 1 ? (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow) : NULL);
    // call wxSafeYield
    bool returns = (wxSafeYield(win, onlyIfNeeded));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxSafeYield[1] = {{ wxLua_function_wxSafeYield, WXLUAMETHOD_CFUNCTION, 0, 2, s_wxluatypeArray_wxLua_function_wxSafeYield }};


#if wxLUA_USE_wxCursor
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxSetCursor[] = { &wxluatype_wxCursor, NULL };
// %function void wxSetCursor(const wxCursor &cursor)
static int LUACALL wxLua_function_wxSetCursor(lua_State *L)
{
    // const wxCursor cursor
    const wxCursor * cursor = (const wxCursor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCursor);
    // call wxSetCursor
    wxSetCursor(*cursor);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxSetCursor[1] = {{ wxLua_function_wxSetCursor, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxSetCursor }};

#endif // wxLUA_USE_wxCursor

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxShell[] = { &wxluatype_TSTRING, NULL };
// %function bool wxShell(const wxString& command = "")
static int LUACALL wxLua_function_wxShell(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString command = ""
    const wxString command = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxEmptyString));
    // call wxShell
    bool returns = (wxShell(command));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxShell[1] = {{ wxLua_function_wxShell, WXLUAMETHOD_CFUNCTION, 0, 1, s_wxluatypeArray_wxLua_function_wxShell }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxShutdown[] = { &wxluatype_TINTEGER, NULL };
// %function bool wxShutdown(wxShutdownFlags flags)
static int LUACALL wxLua_function_wxShutdown(lua_State *L)
{
    // wxShutdownFlags flags
    wxShutdownFlags flags = (wxShutdownFlags)wxlua_getenumtype(L, 1);
    // call wxShutdown
    bool returns = (wxShutdown(flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxShutdown[1] = {{ wxLua_function_wxShutdown, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxShutdown }};

// %function void wxWakeUpIdle()
static int LUACALL wxLua_function_wxWakeUpIdle(lua_State *L)
{
    // call wxWakeUpIdle
    wxWakeUpIdle();

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxWakeUpIdle[1] = {{ wxLua_function_wxWakeUpIdle, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %function bool wxYield()
static int LUACALL wxLua_function_wxYield(lua_State *L)
{
    // call wxYield
    bool returns = (wxYield());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxYield[1] = {{ wxLua_function_wxYield, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxcore() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_wxcore(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {
#if wxLUA_USE_wxCursor
        { "wxBeginBusyCursor", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxBeginBusyCursor, 1, NULL },
#endif // wxLUA_USE_wxCursor

        { "wxBell", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxBell, 1, NULL },
        { "wxClientDisplayRect", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxClientDisplayRect, 1, NULL },
        { "wxColourDisplay", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxColourDisplay, 1, NULL },

#if wxLUA_USE_wxPointSizeRect
        { "wxDirSelector", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxDirSelector, 1, NULL },
#endif // wxLUA_USE_wxPointSizeRect

        { "wxDisplayDepth", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxDisplayDepth, 1, NULL },
        { "wxDisplaySize", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxDisplaySize, 1, NULL },
        { "wxDisplaySizeMM", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxDisplaySizeMM, 1, NULL },
        { "wxEnableTopLevelWindows", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxEnableTopLevelWindows, 1, NULL },
        { "wxEndBusyCursor", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxEndBusyCursor, 1, NULL },

#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxProcess)
        { "wxExecute", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxExecute1, 1, NULL },
#elif (wxLUA_USE_wxProcess) && (!wxCHECK_VERSION(2,6,0))
        { "wxExecute", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxExecute, 1, NULL },
#endif // (wxLUA_USE_wxProcess) && (!wxCHECK_VERSION(2,6,0))
#if wxLUA_USE_wxArrayString
        { "wxExecuteStdout", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxExecuteStdout, 1, NULL },
        { "wxExecuteStdoutStderr", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxExecuteStdoutStderr, 1, NULL },
#endif // wxLUA_USE_wxArrayString

        { "wxExit", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxExit, 1, NULL },
        { "wxFileSelector", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFileSelector, 1, NULL },

#if wxCHECK_VERSION(2,8,0)
        { "wxFindFocusDescendant", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFindFocusDescendant, 1, NULL },
#endif // wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxFrame
        { "wxFindMenuItemId", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFindMenuItemId, 1, NULL },
#endif // wxLUA_USE_wxFrame

#if wxLUA_USE_wxPointSizeRect
        { "wxFindWindowAtPoint", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFindWindowAtPoint, 1, NULL },
        { "wxFindWindowAtPointer", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFindWindowAtPointer, 1, NULL },
#endif // wxLUA_USE_wxPointSizeRect

        { "wxFindWindowByLabel", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFindWindowByLabel, 1, NULL },
        { "wxFindWindowByName", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFindWindowByName, 1, NULL },

#if (((defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)) && (wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL)) && (wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL)
        { "wxGetAccelFromString", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetAccelFromString, 1, NULL },
#endif // (((defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)) && (wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL)) && (wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL)

#if wxCHECK_VERSION(2,8,4)
        { "wxGetActiveWindow", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetActiveWindow, 1, NULL },
#endif // wxCHECK_VERSION(2,8,4)

#if wxLUA_USE_wxApp
        { "wxGetApp", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetApp, 1, NULL },
#endif // wxLUA_USE_wxApp

#if wxCHECK_VERSION(2,8,0)
        { "wxGetBatteryState", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetBatteryState, 1, NULL },
#endif // wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxPointSizeRect
        { "wxGetClientDisplayRect", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetClientDisplayRect, 1, NULL },
#endif // wxLUA_USE_wxPointSizeRect

#if (wxUSE_COLOURDLG && wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxColourPenBrush)
        { "wxGetColourFromUser", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetColourFromUser1, 1, NULL },
#elif (wxLUA_USE_wxColourPenBrush) && (wxUSE_COLOURDLG && !wxCHECK_VERSION(2,8,0))
        { "wxGetColourFromUser", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetColourFromUser, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_COLOURDLG && !wxCHECK_VERSION(2,8,0))
#if wxLUA_USE_wxPointSizeRect
        { "wxGetDisplaySize", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetDisplaySize, 1, NULL },
        { "wxGetDisplaySizeMM", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetDisplaySizeMM, 1, NULL },
#endif // wxLUA_USE_wxPointSizeRect

#if (wxCHECK_VERSION(2,8,0) && wxUSE_FONTDLG) && (wxLUA_USE_wxFont)
        { "wxGetFontFromUser", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetFontFromUser1, 1, NULL },
#elif (wxLUA_USE_wxFont) && (!wxCHECK_VERSION(2,8,0) && wxUSE_FONTDLG)
        { "wxGetFontFromUser", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetFontFromUser, 1, NULL },
#endif // (wxLUA_USE_wxFont) && (!wxCHECK_VERSION(2,8,0) && wxUSE_FONTDLG)
        { "wxGetKeyState", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetKeyState, 1, NULL },

#if wxLUA_USE_wxPointSizeRect
        { "wxGetMousePosition", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetMousePosition, 1, NULL },
#endif // wxLUA_USE_wxPointSizeRect

#if wxCHECK_VERSION(2,8,0)
        { "wxGetMouseState", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetMouseState, 1, NULL },
#endif // wxCHECK_VERSION(2,8,0)

#if wxUSE_CHOICEDLG
        { "wxGetMultipleChoices", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetMultipleChoices, 1, NULL },
#endif // wxUSE_CHOICEDLG

#if (wxUSE_NUMBERDLG) && (wxLUA_USE_wxPointSizeRect)
        { "wxGetNumberFromUser", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetNumberFromUser, 1, NULL },
#endif // (wxUSE_NUMBERDLG) && (wxLUA_USE_wxPointSizeRect)

#if wxUSE_TEXTDLG
        { "wxGetPasswordFromUser", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetPasswordFromUser, 1, NULL },
#endif // wxUSE_TEXTDLG

#if wxCHECK_VERSION(2,8,0)
        { "wxGetPowerType", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetPowerType, 1, NULL },
#endif // wxCHECK_VERSION(2,8,0)

        { "wxGetProcessId", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetProcessId, 1, NULL },

#if (wxUSE_CHOICEDLG) && (wxLUA_USE_wxArrayString)
        { "wxGetSingleChoice", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetSingleChoice, 1, NULL },
        { "wxGetSingleChoiceIndex", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetSingleChoiceIndex, 1, NULL },
#endif // (wxUSE_CHOICEDLG) && (wxLUA_USE_wxArrayString)

#if wxUSE_TEXTDLG
        { "wxGetTextFromUser", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetTextFromUser, 1, NULL },
#endif // wxUSE_TEXTDLG

        { "wxGetTopLevelParent", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetTopLevelParent, 1, NULL },
        { "wxInitAllImageHandlers", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxInitAllImageHandlers, 1, NULL },
        { "wxIsBusy", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxIsBusy, 1, NULL },

#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
        { "wxIsDragResultOk", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxIsDragResultOk, 1, NULL },
#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP

#if wxLUA_USE_wxProcess
        { "wxKill", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxKill, 1, NULL },
#endif // wxLUA_USE_wxProcess

        { "wxLaunchDefaultBrowser", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxLaunchDefaultBrowser, 1, NULL },

#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxFrame)
        { "wxLogStatus", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxLogStatus, 1, NULL },
#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxFrame)

        { "wxMessageBox", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxMessageBox, 1, NULL },
        { "wxNewId", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxNewId, 1, NULL },
        { "wxPostEvent", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxPostEvent, 1, NULL },
        { "wxRegisterId", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxRegisterId, 1, NULL },
        { "wxSafeYield", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxSafeYield, 1, NULL },

#if wxLUA_USE_wxCursor
        { "wxSetCursor", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxSetCursor, 1, NULL },
#endif // wxLUA_USE_wxCursor

        { "wxShell", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxShell, 1, NULL },
        { "wxShutdown", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxShutdown, 1, NULL },
        { "wxWakeUpIdle", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxWakeUpIdle, 1, NULL },
        { "wxYield", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxYield, 1, NULL },

        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_wxcore() is called to register classes
// ---------------------------------------------------------------------------

static const char* wxluaclassname_wxANIHandler = "wxANIHandler";
static const char* wxluaclassname_wxAcceleratorEntry = "wxAcceleratorEntry";
static const char* wxluaclassname_wxAcceleratorTable = "wxAcceleratorTable";
static const char* wxluaclassname_wxActivateEvent = "wxActivateEvent";
static const char* wxluaclassname_wxApp = "wxApp";
static const char* wxluaclassname_wxArrayVideoModes = "wxArrayVideoModes";
static const char* wxluaclassname_wxArtProvider = "wxArtProvider";
static const char* wxluaclassname_wxAutoBufferedPaintDC = "wxAutoBufferedPaintDC";
static const char* wxluaclassname_wxBMPHandler = "wxBMPHandler";
static const char* wxluaclassname_wxBestHelpController = "wxBestHelpController";
static const char* wxluaclassname_wxBitmap = "wxBitmap";
static const char* wxluaclassname_wxBitmapButton = "wxBitmapButton";
static const char* wxluaclassname_wxBitmapDataObject = "wxBitmapDataObject";
static const char* wxluaclassname_wxBookCtrlBase = "wxBookCtrlBase";
static const char* wxluaclassname_wxBookCtrlBaseEvent = "wxBookCtrlBaseEvent";
static const char* wxluaclassname_wxBoxSizer = "wxBoxSizer";
static const char* wxluaclassname_wxBrush = "wxBrush";
static const char* wxluaclassname_wxBrushList = "wxBrushList";
static const char* wxluaclassname_wxBufferedDC = "wxBufferedDC";
static const char* wxluaclassname_wxBufferedPaintDC = "wxBufferedPaintDC";
static const char* wxluaclassname_wxBusyCursor = "wxBusyCursor";
static const char* wxluaclassname_wxBusyInfo = "wxBusyInfo";
static const char* wxluaclassname_wxButton = "wxButton";
static const char* wxluaclassname_wxCURHandler = "wxCURHandler";
static const char* wxluaclassname_wxCaret = "wxCaret";
static const char* wxluaclassname_wxCaretSuspend = "wxCaretSuspend";
static const char* wxluaclassname_wxCheckBox = "wxCheckBox";
static const char* wxluaclassname_wxCheckListBox = "wxCheckListBox";
static const char* wxluaclassname_wxChildFocusEvent = "wxChildFocusEvent";
static const char* wxluaclassname_wxChoice = "wxChoice";
static const char* wxluaclassname_wxChoicebook = "wxChoicebook";
static const char* wxluaclassname_wxChoicebookEvent = "wxChoicebookEvent";
static const char* wxluaclassname_wxClientDC = "wxClientDC";
static const char* wxluaclassname_wxClientData = "wxClientData";
static const char* wxluaclassname_wxClipboard = "wxClipboard";
static const char* wxluaclassname_wxClipboardLocker = "wxClipboardLocker";
static const char* wxluaclassname_wxClipboardTextEvent = "wxClipboardTextEvent";
static const char* wxluaclassname_wxCloseEvent = "wxCloseEvent";
static const char* wxluaclassname_wxCollapsiblePane = "wxCollapsiblePane";
static const char* wxluaclassname_wxCollapsiblePaneEvent = "wxCollapsiblePaneEvent";
static const char* wxluaclassname_wxColour = "wxColour";
static const char* wxluaclassname_wxColourData = "wxColourData";
static const char* wxluaclassname_wxColourDatabase = "wxColourDatabase";
static const char* wxluaclassname_wxColourDialog = "wxColourDialog";
static const char* wxluaclassname_wxColourPickerCtrl = "wxColourPickerCtrl";
static const char* wxluaclassname_wxColourPickerEvent = "wxColourPickerEvent";
static const char* wxluaclassname_wxComboBox = "wxComboBox";
static const char* wxluaclassname_wxCommand = "wxCommand";
static const char* wxluaclassname_wxCommandEvent = "wxCommandEvent";
static const char* wxluaclassname_wxCommandProcessor = "wxCommandProcessor";
static const char* wxluaclassname_wxContextHelp = "wxContextHelp";
static const char* wxluaclassname_wxContextHelpButton = "wxContextHelpButton";
static const char* wxluaclassname_wxContextMenuEvent = "wxContextMenuEvent";
static const char* wxluaclassname_wxControl = "wxControl";
static const char* wxluaclassname_wxControlWithItems = "wxControlWithItems";
static const char* wxluaclassname_wxCursor = "wxCursor";
static const char* wxluaclassname_wxDC = "wxDC";
static const char* wxluaclassname_wxDCClipper = "wxDCClipper";
static const char* wxluaclassname_wxDataFormat = "wxDataFormat";
static const char* wxluaclassname_wxDataObject = "wxDataObject";
static const char* wxluaclassname_wxDataObjectComposite = "wxDataObjectComposite";
static const char* wxluaclassname_wxDataObjectSimple = "wxDataObjectSimple";
static const char* wxluaclassname_wxDatePickerCtrl = "wxDatePickerCtrl";
static const char* wxluaclassname_wxDialog = "wxDialog";
static const char* wxluaclassname_wxDirDialog = "wxDirDialog";
static const char* wxluaclassname_wxDirPickerCtrl = "wxDirPickerCtrl";
static const char* wxluaclassname_wxDisplay = "wxDisplay";
static const char* wxluaclassname_wxDisplayChangedEvent = "wxDisplayChangedEvent";
static const char* wxluaclassname_wxDocChildFrame = "wxDocChildFrame";
static const char* wxluaclassname_wxDocMDIChildFrame = "wxDocMDIChildFrame";
static const char* wxluaclassname_wxDocMDIParentFrame = "wxDocMDIParentFrame";
static const char* wxluaclassname_wxDocManager = "wxDocManager";
static const char* wxluaclassname_wxDocParentFrame = "wxDocParentFrame";
static const char* wxluaclassname_wxDocTemplate = "wxDocTemplate";
static const char* wxluaclassname_wxDocument = "wxDocument";
static const char* wxluaclassname_wxDropFilesEvent = "wxDropFilesEvent";
static const char* wxluaclassname_wxDropSource = "wxDropSource";
static const char* wxluaclassname_wxDropTarget = "wxDropTarget";
static const char* wxluaclassname_wxEffects = "wxEffects";
static const char* wxluaclassname_wxEraseEvent = "wxEraseEvent";
static const char* wxluaclassname_wxEvent = "wxEvent";
static const char* wxluaclassname_wxEvtHandler = "wxEvtHandler";
static const char* wxluaclassname_wxExtHelpController = "wxExtHelpController";
static const char* wxluaclassname_wxFileDataObject = "wxFileDataObject";
static const char* wxluaclassname_wxFileDialog = "wxFileDialog";
static const char* wxluaclassname_wxFileDirPickerCtrlBase = "wxFileDirPickerCtrlBase";
static const char* wxluaclassname_wxFileDirPickerEvent = "wxFileDirPickerEvent";
static const char* wxluaclassname_wxFileHistory = "wxFileHistory";
static const char* wxluaclassname_wxFilePickerCtrl = "wxFilePickerCtrl";
static const char* wxluaclassname_wxFileSystemHandler = "wxFileSystemHandler";
static const char* wxluaclassname_wxFindDialogEvent = "wxFindDialogEvent";
static const char* wxluaclassname_wxFindReplaceData = "wxFindReplaceData";
static const char* wxluaclassname_wxFindReplaceDialog = "wxFindReplaceDialog";
static const char* wxluaclassname_wxFlexGridSizer = "wxFlexGridSizer";
static const char* wxluaclassname_wxFocusEvent = "wxFocusEvent";
static const char* wxluaclassname_wxFont = "wxFont";
static const char* wxluaclassname_wxFontData = "wxFontData";
static const char* wxluaclassname_wxFontDialog = "wxFontDialog";
static const char* wxluaclassname_wxFontEnumerator = "wxFontEnumerator";
static const char* wxluaclassname_wxFontList = "wxFontList";
static const char* wxluaclassname_wxFontMapper = "wxFontMapper";
static const char* wxluaclassname_wxFontPickerCtrl = "wxFontPickerCtrl";
static const char* wxluaclassname_wxFontPickerEvent = "wxFontPickerEvent";
static const char* wxluaclassname_wxFrame = "wxFrame";
static const char* wxluaclassname_wxGBPosition = "wxGBPosition";
static const char* wxluaclassname_wxGBSizerItem = "wxGBSizerItem";
static const char* wxluaclassname_wxGBSpan = "wxGBSpan";
static const char* wxluaclassname_wxGDIObject = "wxGDIObject";
static const char* wxluaclassname_wxGIFHandler = "wxGIFHandler";
static const char* wxluaclassname_wxGauge = "wxGauge";
static const char* wxluaclassname_wxGenericDirCtrl = "wxGenericDirCtrl";
static const char* wxluaclassname_wxGenericValidator = "wxGenericValidator";
static const char* wxluaclassname_wxGridBagSizer = "wxGridBagSizer";
static const char* wxluaclassname_wxGridSizer = "wxGridSizer";
static const char* wxluaclassname_wxHeaderButtonParams = "wxHeaderButtonParams";
static const char* wxluaclassname_wxHelpController = "wxHelpController";
static const char* wxluaclassname_wxHelpControllerBase = "wxHelpControllerBase";
static const char* wxluaclassname_wxHelpControllerHelpProvider = "wxHelpControllerHelpProvider";
static const char* wxluaclassname_wxHelpEvent = "wxHelpEvent";
static const char* wxluaclassname_wxHelpProvider = "wxHelpProvider";
static const char* wxluaclassname_wxICOHandler = "wxICOHandler";
static const char* wxluaclassname_wxIFFHandler = "wxIFFHandler";
static const char* wxluaclassname_wxIcon = "wxIcon";
static const char* wxluaclassname_wxIconBundle = "wxIconBundle";
static const char* wxluaclassname_wxIconizeEvent = "wxIconizeEvent";
static const char* wxluaclassname_wxIdleEvent = "wxIdleEvent";
static const char* wxluaclassname_wxImage = "wxImage";
static const char* wxluaclassname_wxImageHandler = "wxImageHandler";
static const char* wxluaclassname_wxImageHistogram = "wxImageHistogram";
static const char* wxluaclassname_wxImageHistogramEntry = "wxImageHistogramEntry";
static const char* wxluaclassname_wxImageHistogram_iterator = "wxImageHistogram_iterator";
static const char* wxluaclassname_wxImageList = "wxImageList";
static const char* wxluaclassname_wxIndividualLayoutConstraint = "wxIndividualLayoutConstraint";
static const char* wxluaclassname_wxInitDialogEvent = "wxInitDialogEvent";
static const char* wxluaclassname_wxJPEGHandler = "wxJPEGHandler";
static const char* wxluaclassname_wxKeyEvent = "wxKeyEvent";
static const char* wxluaclassname_wxLayoutConstraints = "wxLayoutConstraints";
static const char* wxluaclassname_wxList = "wxList";
static const char* wxluaclassname_wxListBox = "wxListBox";
static const char* wxluaclassname_wxListCtrl = "wxListCtrl";
static const char* wxluaclassname_wxListEvent = "wxListEvent";
static const char* wxluaclassname_wxListItem = "wxListItem";
static const char* wxluaclassname_wxListItemAttr = "wxListItemAttr";
static const char* wxluaclassname_wxListView = "wxListView";
static const char* wxluaclassname_wxListbook = "wxListbook";
static const char* wxluaclassname_wxListbookEvent = "wxListbookEvent";
static const char* wxluaclassname_wxLog = "wxLog";
static const char* wxluaclassname_wxLogGui = "wxLogGui";
static const char* wxluaclassname_wxLogPassThrough = "wxLogPassThrough";
static const char* wxluaclassname_wxLogTextCtrl = "wxLogTextCtrl";
static const char* wxluaclassname_wxLogWindow = "wxLogWindow";
static const char* wxluaclassname_wxLuaArtProvider = "wxLuaArtProvider";
static const char* wxluaclassname_wxLuaPrintout = "wxLuaPrintout";
static const char* wxluaclassname_wxLuaTreeItemData = "wxLuaTreeItemData";
static const char* wxluaclassname_wxMDIChildFrame = "wxMDIChildFrame";
static const char* wxluaclassname_wxMDIClientWindow = "wxMDIClientWindow";
static const char* wxluaclassname_wxMDIParentFrame = "wxMDIParentFrame";
static const char* wxluaclassname_wxMask = "wxMask";
static const char* wxluaclassname_wxMaximizeEvent = "wxMaximizeEvent";
static const char* wxluaclassname_wxMemoryDC = "wxMemoryDC";
static const char* wxluaclassname_wxMemoryFSHandler = "wxMemoryFSHandler";
static const char* wxluaclassname_wxMenu = "wxMenu";
static const char* wxluaclassname_wxMenuBar = "wxMenuBar";
static const char* wxluaclassname_wxMenuEvent = "wxMenuEvent";
static const char* wxluaclassname_wxMenuItem = "wxMenuItem";
static const char* wxluaclassname_wxMenuItemList = "wxMenuItemList";
static const char* wxluaclassname_wxMessageDialog = "wxMessageDialog";
static const char* wxluaclassname_wxMetafile = "wxMetafile";
static const char* wxluaclassname_wxMetafileDC = "wxMetafileDC";
static const char* wxluaclassname_wxMiniFrame = "wxMiniFrame";
static const char* wxluaclassname_wxMirrorDC = "wxMirrorDC";
static const char* wxluaclassname_wxMouseCaptureChangedEvent = "wxMouseCaptureChangedEvent";
static const char* wxluaclassname_wxMouseCaptureLostEvent = "wxMouseCaptureLostEvent";
static const char* wxluaclassname_wxMouseEvent = "wxMouseEvent";
static const char* wxluaclassname_wxMouseState = "wxMouseState";
static const char* wxluaclassname_wxMoveEvent = "wxMoveEvent";
static const char* wxluaclassname_wxMultiChoiceDialog = "wxMultiChoiceDialog";
static const char* wxluaclassname_wxNativeFontInfo = "wxNativeFontInfo";
static const char* wxluaclassname_wxNavigationKeyEvent = "wxNavigationKeyEvent";
static const char* wxluaclassname_wxNotebook = "wxNotebook";
static const char* wxluaclassname_wxNotebookEvent = "wxNotebookEvent";
static const char* wxluaclassname_wxNotebookSizer = "wxNotebookSizer";
static const char* wxluaclassname_wxNotifyEvent = "wxNotifyEvent";
static const char* wxluaclassname_wxObject = "wxObject";
static const char* wxluaclassname_wxPCXHandler = "wxPCXHandler";
static const char* wxluaclassname_wxPNGHandler = "wxPNGHandler";
static const char* wxluaclassname_wxPNMHandler = "wxPNMHandler";
static const char* wxluaclassname_wxPageSetupDialog = "wxPageSetupDialog";
static const char* wxluaclassname_wxPageSetupDialogData = "wxPageSetupDialogData";
static const char* wxluaclassname_wxPaintDC = "wxPaintDC";
static const char* wxluaclassname_wxPaintEvent = "wxPaintEvent";
static const char* wxluaclassname_wxPalette = "wxPalette";
static const char* wxluaclassname_wxPaletteChangedEvent = "wxPaletteChangedEvent";
static const char* wxluaclassname_wxPanel = "wxPanel";
static const char* wxluaclassname_wxPasswordEntryDialog = "wxPasswordEntryDialog";
static const char* wxluaclassname_wxPen = "wxPen";
static const char* wxluaclassname_wxPenList = "wxPenList";
static const char* wxluaclassname_wxPickerBase = "wxPickerBase";
static const char* wxluaclassname_wxPoint = "wxPoint";
static const char* wxluaclassname_wxPoint2DDouble = "wxPoint2DDouble";
static const char* wxluaclassname_wxPoint2DInt = "wxPoint2DInt";
static const char* wxluaclassname_wxPostScriptDC = "wxPostScriptDC";
static const char* wxluaclassname_wxPowerEvent = "wxPowerEvent";
static const char* wxluaclassname_wxPreviewCanvas = "wxPreviewCanvas";
static const char* wxluaclassname_wxPreviewControlBar = "wxPreviewControlBar";
static const char* wxluaclassname_wxPreviewFrame = "wxPreviewFrame";
static const char* wxluaclassname_wxPrintData = "wxPrintData";
static const char* wxluaclassname_wxPrintDialog = "wxPrintDialog";
static const char* wxluaclassname_wxPrintDialogData = "wxPrintDialogData";
static const char* wxluaclassname_wxPrintPreview = "wxPrintPreview";
static const char* wxluaclassname_wxPrinter = "wxPrinter";
static const char* wxluaclassname_wxPrinterDC = "wxPrinterDC";
static const char* wxluaclassname_wxPrintout = "wxPrintout";
static const char* wxluaclassname_wxProcess = "wxProcess";
static const char* wxluaclassname_wxProcessEvent = "wxProcessEvent";
static const char* wxluaclassname_wxProgressDialog = "wxProgressDialog";
static const char* wxluaclassname_wxPropagateOnce = "wxPropagateOnce";
static const char* wxluaclassname_wxPropagationDisabler = "wxPropagationDisabler";
static const char* wxluaclassname_wxQuantize = "wxQuantize";
static const char* wxluaclassname_wxQueryNewPaletteEvent = "wxQueryNewPaletteEvent";
static const char* wxluaclassname_wxRadioBox = "wxRadioBox";
static const char* wxluaclassname_wxRadioButton = "wxRadioButton";
static const char* wxluaclassname_wxRect = "wxRect";
static const char* wxluaclassname_wxRect2DDouble = "wxRect2DDouble";
static const char* wxluaclassname_wxRect2DInt = "wxRect2DInt";
static const char* wxluaclassname_wxRegion = "wxRegion";
static const char* wxluaclassname_wxRegionIterator = "wxRegionIterator";
static const char* wxluaclassname_wxRendererNative = "wxRendererNative";
static const char* wxluaclassname_wxRendererVersion = "wxRendererVersion";
static const char* wxluaclassname_wxScreenDC = "wxScreenDC";
static const char* wxluaclassname_wxScrollBar = "wxScrollBar";
static const char* wxluaclassname_wxScrollEvent = "wxScrollEvent";
static const char* wxluaclassname_wxScrollWinEvent = "wxScrollWinEvent";
static const char* wxluaclassname_wxScrolledWindow = "wxScrolledWindow";
static const char* wxluaclassname_wxSetCursorEvent = "wxSetCursorEvent";
static const char* wxluaclassname_wxShowEvent = "wxShowEvent";
static const char* wxluaclassname_wxSimpleHelpProvider = "wxSimpleHelpProvider";
static const char* wxluaclassname_wxSingleChoiceDialog = "wxSingleChoiceDialog";
static const char* wxluaclassname_wxSize = "wxSize";
static const char* wxluaclassname_wxSizeEvent = "wxSizeEvent";
static const char* wxluaclassname_wxSizer = "wxSizer";
static const char* wxluaclassname_wxSizerFlags = "wxSizerFlags";
static const char* wxluaclassname_wxSizerItem = "wxSizerItem";
static const char* wxluaclassname_wxSlider = "wxSlider";
static const char* wxluaclassname_wxSpinButton = "wxSpinButton";
static const char* wxluaclassname_wxSpinCtrl = "wxSpinCtrl";
static const char* wxluaclassname_wxSpinEvent = "wxSpinEvent";
static const char* wxluaclassname_wxSplitterEvent = "wxSplitterEvent";
static const char* wxluaclassname_wxSplitterRenderParams = "wxSplitterRenderParams";
static const char* wxluaclassname_wxSplitterWindow = "wxSplitterWindow";
static const char* wxluaclassname_wxStaticBitmap = "wxStaticBitmap";
static const char* wxluaclassname_wxStaticBox = "wxStaticBox";
static const char* wxluaclassname_wxStaticBoxSizer = "wxStaticBoxSizer";
static const char* wxluaclassname_wxStaticLine = "wxStaticLine";
static const char* wxluaclassname_wxStaticText = "wxStaticText";
static const char* wxluaclassname_wxStatusBar = "wxStatusBar";
static const char* wxluaclassname_wxStdDialogButtonSizer = "wxStdDialogButtonSizer";
static const char* wxluaclassname_wxStockGDI = "wxStockGDI";
static const char* wxluaclassname_wxSysColourChangedEvent = "wxSysColourChangedEvent";
static const char* wxluaclassname_wxSystemSettings = "wxSystemSettings";
static const char* wxluaclassname_wxTGAHandler = "wxTGAHandler";
static const char* wxluaclassname_wxTIFFHandler = "wxTIFFHandler";
static const char* wxluaclassname_wxTabCtrl = "wxTabCtrl";
static const char* wxluaclassname_wxTabEvent = "wxTabEvent";
static const char* wxluaclassname_wxTextAttr = "wxTextAttr";
static const char* wxluaclassname_wxTextCtrl = "wxTextCtrl";
static const char* wxluaclassname_wxTextDataObject = "wxTextDataObject";
static const char* wxluaclassname_wxTextEntryDialog = "wxTextEntryDialog";
static const char* wxluaclassname_wxTextUrlEvent = "wxTextUrlEvent";
static const char* wxluaclassname_wxTextValidator = "wxTextValidator";
static const char* wxluaclassname_wxTimer = "wxTimer";
static const char* wxluaclassname_wxTimerEvent = "wxTimerEvent";
static const char* wxluaclassname_wxToggleButton = "wxToggleButton";
static const char* wxluaclassname_wxToolBar = "wxToolBar";
static const char* wxluaclassname_wxToolBarBase = "wxToolBarBase";
static const char* wxluaclassname_wxToolBarSimple = "wxToolBarSimple";
static const char* wxluaclassname_wxToolBarTool = "wxToolBarTool";
static const char* wxluaclassname_wxToolBarToolBase = "wxToolBarToolBase";
static const char* wxluaclassname_wxToolTip = "wxToolTip";
static const char* wxluaclassname_wxToolbook = "wxToolbook";
static const char* wxluaclassname_wxToolbookEvent = "wxToolbookEvent";
static const char* wxluaclassname_wxTopLevelWindow = "wxTopLevelWindow";
static const char* wxluaclassname_wxTreeCtrl = "wxTreeCtrl";
static const char* wxluaclassname_wxTreeEvent = "wxTreeEvent";
static const char* wxluaclassname_wxTreeItemData = "wxTreeItemData";
static const char* wxluaclassname_wxTreeItemId = "wxTreeItemId";
static const char* wxluaclassname_wxTreebook = "wxTreebook";
static const char* wxluaclassname_wxTreebookEvent = "wxTreebookEvent";
static const char* wxluaclassname_wxURLDataObject = "wxURLDataObject";
static const char* wxluaclassname_wxUpdateUIEvent = "wxUpdateUIEvent";
static const char* wxluaclassname_wxValidator = "wxValidator";
static const char* wxluaclassname_wxVideoMode = "wxVideoMode";
static const char* wxluaclassname_wxView = "wxView";
static const char* wxluaclassname_wxVisualAttributes = "wxVisualAttributes";
static const char* wxluaclassname_wxWinHelpController = "wxWinHelpController";
static const char* wxluaclassname_wxWindow = "wxWindow";
static const char* wxluaclassname_wxWindowCreateEvent = "wxWindowCreateEvent";
static const char* wxluaclassname_wxWindowDC = "wxWindowDC";
static const char* wxluaclassname_wxWindowDestroyEvent = "wxWindowDestroyEvent";
static const char* wxluaclassname_wxWindowDisabler = "wxWindowDisabler";
static const char* wxluaclassname_wxWindowList = "wxWindowList";
static const char* wxluaclassname_wxWindowUpdateLocker = "wxWindowUpdateLocker";
static const char* wxluaclassname_wxXPMHandler = "wxXPMHandler";

static const char* wxluabaseclassnames_wxANIHandler[] = { wxluaclassname_wxCURHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxANIHandler[] = { NULL };
static const char* wxluabaseclassnames_wxAcceleratorTable[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxAcceleratorTable[] = { NULL };
static const char* wxluabaseclassnames_wxActivateEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxActivateEvent[] = { NULL };
static const char* wxluabaseclassnames_wxApp[] = { wxluaclassname_wxEvtHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxApp[] = { NULL };
static const char* wxluabaseclassnames_wxArtProvider[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxArtProvider[] = { NULL };
static const char* wxluabaseclassnames_wxAutoBufferedPaintDC[] = { wxluaclassname_wxDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxAutoBufferedPaintDC[] = { NULL };
static const char* wxluabaseclassnames_wxBMPHandler[] = { wxluaclassname_wxImageHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBMPHandler[] = { NULL };
static const char* wxluabaseclassnames_wxBestHelpController[] = { wxluaclassname_wxHelpControllerBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBestHelpController[] = { NULL };
static const char* wxluabaseclassnames_wxBitmap[] = { wxluaclassname_wxGDIObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBitmap[] = { NULL };
static const char* wxluabaseclassnames_wxBitmapButton[] = { wxluaclassname_wxButton, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBitmapButton[] = { NULL };
static const char* wxluabaseclassnames_wxBitmapDataObject[] = { wxluaclassname_wxDataObjectSimple, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBitmapDataObject[] = { NULL };
static const char* wxluabaseclassnames_wxBookCtrlBase[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBookCtrlBase[] = { NULL };
static const char* wxluabaseclassnames_wxBookCtrlBaseEvent[] = { wxluaclassname_wxNotifyEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBookCtrlBaseEvent[] = { NULL };
static const char* wxluabaseclassnames_wxBoxSizer[] = { wxluaclassname_wxSizer, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBoxSizer[] = { NULL };
static const char* wxluabaseclassnames_wxBrush[] = { wxluaclassname_wxGDIObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBrush[] = { NULL };
static const char* wxluabaseclassnames_wxBrushList[] = { wxluaclassname_wxList, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBrushList[] = { NULL };
static const char* wxluabaseclassnames_wxBufferedDC[] = { wxluaclassname_wxMemoryDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBufferedDC[] = { NULL };
static const char* wxluabaseclassnames_wxBufferedPaintDC[] = { wxluaclassname_wxBufferedDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBufferedPaintDC[] = { NULL };
static const char* wxluabaseclassnames_wxBusyInfo[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBusyInfo[] = { NULL };
static const char* wxluabaseclassnames_wxButton[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxButton[] = { NULL };
static const char* wxluabaseclassnames_wxCURHandler[] = { wxluaclassname_wxICOHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCURHandler[] = { NULL };
static const char* wxluabaseclassnames_wxCheckBox[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCheckBox[] = { NULL };
static const char* wxluabaseclassnames_wxCheckListBox[] = { wxluaclassname_wxListBox, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCheckListBox[] = { NULL };
static const char* wxluabaseclassnames_wxChildFocusEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxChildFocusEvent[] = { NULL };
static const char* wxluabaseclassnames_wxChoice[] = { wxluaclassname_wxControlWithItems, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxChoice[] = { NULL };
static const char* wxluabaseclassnames_wxChoicebook[] = { wxluaclassname_wxBookCtrlBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxChoicebook[] = { NULL };
static const char* wxluabaseclassnames_wxChoicebookEvent[] = { wxluaclassname_wxBookCtrlBaseEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxChoicebookEvent[] = { NULL };
static const char* wxluabaseclassnames_wxClientDC[] = { wxluaclassname_wxWindowDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxClientDC[] = { NULL };
static const char* wxluabaseclassnames_wxClipboard[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxClipboard[] = { NULL };
static const char* wxluabaseclassnames_wxClipboardTextEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxClipboardTextEvent[] = { NULL };
static const char* wxluabaseclassnames_wxCloseEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCloseEvent[] = { NULL };
static const char* wxluabaseclassnames_wxCollapsiblePane[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCollapsiblePane[] = { NULL };
static const char* wxluabaseclassnames_wxCollapsiblePaneEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCollapsiblePaneEvent[] = { NULL };
static const char* wxluabaseclassnames_wxColour[] = { wxluaclassname_wxGDIObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxColour[] = { NULL };
static const char* wxluabaseclassnames_wxColourData[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxColourData[] = { NULL };
static const char* wxluabaseclassnames_wxColourDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxColourDialog[] = { NULL };
static const char* wxluabaseclassnames_wxColourPickerCtrl[] = { wxluaclassname_wxPickerBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxColourPickerCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxColourPickerEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxColourPickerEvent[] = { NULL };
static const char* wxluabaseclassnames_wxComboBox[] = { wxluaclassname_wxControlWithItems, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxComboBox[] = { NULL };
static const char* wxluabaseclassnames_wxCommand[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCommand[] = { NULL };
static const char* wxluabaseclassnames_wxCommandEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCommandEvent[] = { NULL };
static const char* wxluabaseclassnames_wxCommandProcessor[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCommandProcessor[] = { NULL };
static const char* wxluabaseclassnames_wxContextHelp[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxContextHelp[] = { NULL };
static const char* wxluabaseclassnames_wxContextHelpButton[] = { wxluaclassname_wxBitmapButton, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxContextHelpButton[] = { NULL };
static const char* wxluabaseclassnames_wxContextMenuEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxContextMenuEvent[] = { NULL };
static const char* wxluabaseclassnames_wxControl[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxControl[] = { NULL };
static const char* wxluabaseclassnames_wxControlWithItems[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxControlWithItems[] = { NULL };
static const char* wxluabaseclassnames_wxCursor[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCursor[] = { NULL };
static const char* wxluabaseclassnames_wxDC[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDC[] = { NULL };
static const char* wxluabaseclassnames_wxDataObjectComposite[] = { wxluaclassname_wxDataObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDataObjectComposite[] = { NULL };
static const char* wxluabaseclassnames_wxDataObjectSimple[] = { wxluaclassname_wxDataObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDataObjectSimple[] = { NULL };
static const char* wxluabaseclassnames_wxDatePickerCtrl[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDatePickerCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxDialog[] = { wxluaclassname_wxTopLevelWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDialog[] = { NULL };
static const char* wxluabaseclassnames_wxDirDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDirDialog[] = { NULL };
static const char* wxluabaseclassnames_wxDirPickerCtrl[] = { wxluaclassname_wxFileDirPickerCtrlBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDirPickerCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxDisplayChangedEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDisplayChangedEvent[] = { NULL };
static const char* wxluabaseclassnames_wxDocChildFrame[] = { wxluaclassname_wxFrame, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDocChildFrame[] = { NULL };
static const char* wxluabaseclassnames_wxDocMDIChildFrame[] = { wxluaclassname_wxMDIChildFrame, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDocMDIChildFrame[] = { NULL };
static const char* wxluabaseclassnames_wxDocMDIParentFrame[] = { wxluaclassname_wxMDIParentFrame, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDocMDIParentFrame[] = { NULL };
static const char* wxluabaseclassnames_wxDocManager[] = { wxluaclassname_wxEvtHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDocManager[] = { NULL };
static const char* wxluabaseclassnames_wxDocParentFrame[] = { wxluaclassname_wxFrame, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDocParentFrame[] = { NULL };
static const char* wxluabaseclassnames_wxDocTemplate[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDocTemplate[] = { NULL };
static const char* wxluabaseclassnames_wxDocument[] = { wxluaclassname_wxEvtHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDocument[] = { NULL };
static const char* wxluabaseclassnames_wxDropFilesEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDropFilesEvent[] = { NULL };
static const char* wxluabaseclassnames_wxEffects[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxEffects[] = { NULL };
static const char* wxluabaseclassnames_wxEraseEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxEraseEvent[] = { NULL };
static const char* wxluabaseclassnames_wxEvent[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxEvent[] = { NULL };
static const char* wxluabaseclassnames_wxEvtHandler[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxEvtHandler[] = { NULL };
static const char* wxluabaseclassnames_wxExtHelpController[] = { wxluaclassname_wxHelpControllerBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxExtHelpController[] = { NULL };
static const char* wxluabaseclassnames_wxFileDataObject[] = { wxluaclassname_wxDataObjectSimple, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileDataObject[] = { NULL };
static const char* wxluabaseclassnames_wxFileDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileDialog[] = { NULL };
static const char* wxluabaseclassnames_wxFileDirPickerCtrlBase[] = { wxluaclassname_wxPickerBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileDirPickerCtrlBase[] = { NULL };
static const char* wxluabaseclassnames_wxFileDirPickerEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileDirPickerEvent[] = { NULL };
static const char* wxluabaseclassnames_wxFileHistory[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileHistory[] = { NULL };
static const char* wxluabaseclassnames_wxFilePickerCtrl[] = { wxluaclassname_wxFileDirPickerCtrlBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFilePickerCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxFindDialogEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFindDialogEvent[] = { NULL };
static const char* wxluabaseclassnames_wxFindReplaceData[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFindReplaceData[] = { NULL };
static const char* wxluabaseclassnames_wxFindReplaceDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFindReplaceDialog[] = { NULL };
static const char* wxluabaseclassnames_wxFlexGridSizer[] = { wxluaclassname_wxGridSizer, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFlexGridSizer[] = { NULL };
static const char* wxluabaseclassnames_wxFocusEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFocusEvent[] = { NULL };
static const char* wxluabaseclassnames_wxFont[] = { wxluaclassname_wxGDIObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFont[] = { NULL };
static const char* wxluabaseclassnames_wxFontData[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFontData[] = { NULL };
static const char* wxluabaseclassnames_wxFontDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFontDialog[] = { NULL };
static const char* wxluabaseclassnames_wxFontPickerCtrl[] = { wxluaclassname_wxPickerBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFontPickerCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxFontPickerEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFontPickerEvent[] = { NULL };
static const char* wxluabaseclassnames_wxFrame[] = { wxluaclassname_wxTopLevelWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFrame[] = { NULL };
static const char* wxluabaseclassnames_wxGBSizerItem[] = { wxluaclassname_wxSizerItem, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGBSizerItem[] = { NULL };
static const char* wxluabaseclassnames_wxGDIObject[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGDIObject[] = { NULL };
static const char* wxluabaseclassnames_wxGIFHandler[] = { wxluaclassname_wxImageHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGIFHandler[] = { NULL };
static const char* wxluabaseclassnames_wxGauge[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGauge[] = { NULL };
static const char* wxluabaseclassnames_wxGenericDirCtrl[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGenericDirCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxGenericValidator[] = { wxluaclassname_wxValidator, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGenericValidator[] = { NULL };
static const char* wxluabaseclassnames_wxGridBagSizer[] = { wxluaclassname_wxFlexGridSizer, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGridBagSizer[] = { NULL };
static const char* wxluabaseclassnames_wxGridSizer[] = { wxluaclassname_wxSizer, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGridSizer[] = { NULL };
static const char* wxluabaseclassnames_wxHelpController[] = { wxluaclassname_wxHelpControllerBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxHelpController[] = { NULL };
static const char* wxluabaseclassnames_wxHelpControllerBase[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxHelpControllerBase[] = { NULL };
static const char* wxluabaseclassnames_wxHelpControllerHelpProvider[] = { wxluaclassname_wxSimpleHelpProvider, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxHelpControllerHelpProvider[] = { NULL };
static const char* wxluabaseclassnames_wxHelpEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxHelpEvent[] = { NULL };
static const char* wxluabaseclassnames_wxICOHandler[] = { wxluaclassname_wxBMPHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxICOHandler[] = { NULL };
static const char* wxluabaseclassnames_wxIFFHandler[] = { wxluaclassname_wxImageHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxIFFHandler[] = { NULL };
static const char* wxluabaseclassnames_wxIcon[] = { wxluaclassname_wxGDIObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxIcon[] = { NULL };
static const char* wxluabaseclassnames_wxIconizeEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxIconizeEvent[] = { NULL };
static const char* wxluabaseclassnames_wxIdleEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxIdleEvent[] = { NULL };
static const char* wxluabaseclassnames_wxImage[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxImage[] = { NULL };
static const char* wxluabaseclassnames_wxImageHandler[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxImageHandler[] = { NULL };
static const char* wxluabaseclassnames_wxImageList[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxImageList[] = { NULL };
static const char* wxluabaseclassnames_wxIndividualLayoutConstraint[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxIndividualLayoutConstraint[] = { NULL };
static const char* wxluabaseclassnames_wxInitDialogEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxInitDialogEvent[] = { NULL };
static const char* wxluabaseclassnames_wxJPEGHandler[] = { wxluaclassname_wxImageHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxJPEGHandler[] = { NULL };
static const char* wxluabaseclassnames_wxKeyEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxKeyEvent[] = { NULL };
static const char* wxluabaseclassnames_wxLayoutConstraints[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLayoutConstraints[] = { NULL };
static const char* wxluabaseclassnames_wxListBox[] = { wxluaclassname_wxControlWithItems, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxListBox[] = { NULL };
static const char* wxluabaseclassnames_wxListCtrl[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxListCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxListEvent[] = { wxluaclassname_wxNotifyEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxListEvent[] = { NULL };
static const char* wxluabaseclassnames_wxListItem[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxListItem[] = { NULL };
static const char* wxluabaseclassnames_wxListView[] = { wxluaclassname_wxListCtrl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxListView[] = { NULL };
static const char* wxluabaseclassnames_wxListbook[] = { wxluaclassname_wxBookCtrlBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxListbook[] = { NULL };
static const char* wxluabaseclassnames_wxListbookEvent[] = { wxluaclassname_wxBookCtrlBaseEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxListbookEvent[] = { NULL };
static const char* wxluabaseclassnames_wxLogGui[] = { wxluaclassname_wxLog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLogGui[] = { NULL };
static const char* wxluabaseclassnames_wxLogTextCtrl[] = { wxluaclassname_wxLog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLogTextCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxLogWindow[] = { wxluaclassname_wxLogPassThrough, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLogWindow[] = { NULL };
static const char* wxluabaseclassnames_wxLuaArtProvider[] = { wxluaclassname_wxArtProvider, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLuaArtProvider[] = { NULL };
static const char* wxluabaseclassnames_wxLuaPrintout[] = { wxluaclassname_wxPrintout, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLuaPrintout[] = { NULL };
static const char* wxluabaseclassnames_wxLuaTreeItemData[] = { wxluaclassname_wxTreeItemData, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLuaTreeItemData[] = { NULL };
static const char* wxluabaseclassnames_wxMDIChildFrame[] = { wxluaclassname_wxFrame, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMDIChildFrame[] = { NULL };
static const char* wxluabaseclassnames_wxMDIClientWindow[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMDIClientWindow[] = { NULL };
static const char* wxluabaseclassnames_wxMDIParentFrame[] = { wxluaclassname_wxFrame, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMDIParentFrame[] = { NULL };
static const char* wxluabaseclassnames_wxMask[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMask[] = { NULL };
static const char* wxluabaseclassnames_wxMaximizeEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMaximizeEvent[] = { NULL };
static const char* wxluabaseclassnames_wxMemoryDC[] = { wxluaclassname_wxDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMemoryDC[] = { NULL };
static const char* wxluabaseclassnames_wxMemoryFSHandler[] = { wxluaclassname_wxFileSystemHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMemoryFSHandler[] = { NULL };
static const char* wxluabaseclassnames_wxMenu[] = { wxluaclassname_wxEvtHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMenu[] = { NULL };
static const char* wxluabaseclassnames_wxMenuBar[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMenuBar[] = { NULL };
static const char* wxluabaseclassnames_wxMenuEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMenuEvent[] = { NULL };
static const char* wxluabaseclassnames_wxMenuItem[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMenuItem[] = { NULL };
static const char* wxluabaseclassnames_wxMenuItemList[] = { wxluaclassname_wxList, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMenuItemList[] = { NULL };
static const char* wxluabaseclassnames_wxMessageDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMessageDialog[] = { NULL };
static const char* wxluabaseclassnames_wxMetafile[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMetafile[] = { NULL };
static const char* wxluabaseclassnames_wxMetafileDC[] = { wxluaclassname_wxDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMetafileDC[] = { NULL };
static const char* wxluabaseclassnames_wxMiniFrame[] = { wxluaclassname_wxFrame, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMiniFrame[] = { NULL };
static const char* wxluabaseclassnames_wxMirrorDC[] = { wxluaclassname_wxDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMirrorDC[] = { NULL };
static const char* wxluabaseclassnames_wxMouseCaptureChangedEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMouseCaptureChangedEvent[] = { NULL };
static const char* wxluabaseclassnames_wxMouseCaptureLostEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMouseCaptureLostEvent[] = { NULL };
static const char* wxluabaseclassnames_wxMouseEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMouseEvent[] = { NULL };
static const char* wxluabaseclassnames_wxMoveEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMoveEvent[] = { NULL };
static const char* wxluabaseclassnames_wxMultiChoiceDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMultiChoiceDialog[] = { NULL };
static const char* wxluabaseclassnames_wxNavigationKeyEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxNavigationKeyEvent[] = { NULL };
static const char* wxluabaseclassnames_wxNotebook[] = { wxluaclassname_wxBookCtrlBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxNotebook[] = { NULL };
static const char* wxluabaseclassnames_wxNotebookEvent[] = { wxluaclassname_wxBookCtrlBaseEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxNotebookEvent[] = { NULL };
static const char* wxluabaseclassnames_wxNotebookSizer[] = { wxluaclassname_wxSizer, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxNotebookSizer[] = { NULL };
static const char* wxluabaseclassnames_wxNotifyEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxNotifyEvent[] = { NULL };
static const char* wxluabaseclassnames_wxPCXHandler[] = { wxluaclassname_wxImageHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPCXHandler[] = { NULL };
static const char* wxluabaseclassnames_wxPNGHandler[] = { wxluaclassname_wxImageHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPNGHandler[] = { NULL };
static const char* wxluabaseclassnames_wxPNMHandler[] = { wxluaclassname_wxImageHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPNMHandler[] = { NULL };
static const char* wxluabaseclassnames_wxPageSetupDialog[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPageSetupDialog[] = { NULL };
static const char* wxluabaseclassnames_wxPageSetupDialogData[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPageSetupDialogData[] = { NULL };
static const char* wxluabaseclassnames_wxPaintDC[] = { wxluaclassname_wxWindowDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPaintDC[] = { NULL };
static const char* wxluabaseclassnames_wxPaintEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPaintEvent[] = { NULL };
static const char* wxluabaseclassnames_wxPalette[] = { wxluaclassname_wxGDIObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPalette[] = { NULL };
static const char* wxluabaseclassnames_wxPaletteChangedEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPaletteChangedEvent[] = { NULL };
static const char* wxluabaseclassnames_wxPanel[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPanel[] = { NULL };
static const char* wxluabaseclassnames_wxPasswordEntryDialog[] = { wxluaclassname_wxTextEntryDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPasswordEntryDialog[] = { NULL };
static const char* wxluabaseclassnames_wxPen[] = { wxluaclassname_wxGDIObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPen[] = { NULL };
static const char* wxluabaseclassnames_wxPenList[] = { wxluaclassname_wxList, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPenList[] = { NULL };
static const char* wxluabaseclassnames_wxPickerBase[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPickerBase[] = { NULL };
static const char* wxluabaseclassnames_wxPostScriptDC[] = { wxluaclassname_wxDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPostScriptDC[] = { NULL };
static const char* wxluabaseclassnames_wxPowerEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPowerEvent[] = { NULL };
static const char* wxluabaseclassnames_wxPreviewCanvas[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPreviewCanvas[] = { NULL };
static const char* wxluabaseclassnames_wxPreviewControlBar[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPreviewControlBar[] = { NULL };
static const char* wxluabaseclassnames_wxPreviewFrame[] = { wxluaclassname_wxFrame, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPreviewFrame[] = { NULL };
static const char* wxluabaseclassnames_wxPrintData[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPrintData[] = { NULL };
static const char* wxluabaseclassnames_wxPrintDialog[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPrintDialog[] = { NULL };
static const char* wxluabaseclassnames_wxPrintDialogData[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPrintDialogData[] = { NULL };
static const char* wxluabaseclassnames_wxPrintPreview[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPrintPreview[] = { NULL };
static const char* wxluabaseclassnames_wxPrinter[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPrinter[] = { NULL };
static const char* wxluabaseclassnames_wxPrinterDC[] = { wxluaclassname_wxDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPrinterDC[] = { NULL };
static const char* wxluabaseclassnames_wxPrintout[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPrintout[] = { NULL };
static const char* wxluabaseclassnames_wxProcess[] = { wxluaclassname_wxEvtHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxProcess[] = { NULL };
static const char* wxluabaseclassnames_wxProcessEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxProcessEvent[] = { NULL };
static const char* wxluabaseclassnames_wxProgressDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxProgressDialog[] = { NULL };
static const char* wxluabaseclassnames_wxQuantize[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxQuantize[] = { NULL };
static const char* wxluabaseclassnames_wxQueryNewPaletteEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxQueryNewPaletteEvent[] = { NULL };
static const char* wxluabaseclassnames_wxRadioBox[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxRadioBox[] = { NULL };
static const char* wxluabaseclassnames_wxRadioButton[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxRadioButton[] = { NULL };
static const char* wxluabaseclassnames_wxRegion[] = { wxluaclassname_wxGDIObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxRegion[] = { NULL };
static const char* wxluabaseclassnames_wxRegionIterator[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxRegionIterator[] = { NULL };
static const char* wxluabaseclassnames_wxScreenDC[] = { wxluaclassname_wxDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxScreenDC[] = { NULL };
static const char* wxluabaseclassnames_wxScrollBar[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxScrollBar[] = { NULL };
static const char* wxluabaseclassnames_wxScrollEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxScrollEvent[] = { NULL };
static const char* wxluabaseclassnames_wxScrollWinEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxScrollWinEvent[] = { NULL };
static const char* wxluabaseclassnames_wxScrolledWindow[] = { wxluaclassname_wxPanel, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxScrolledWindow[] = { NULL };
static const char* wxluabaseclassnames_wxSetCursorEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSetCursorEvent[] = { NULL };
static const char* wxluabaseclassnames_wxShowEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxShowEvent[] = { NULL };
static const char* wxluabaseclassnames_wxSimpleHelpProvider[] = { wxluaclassname_wxHelpProvider, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSimpleHelpProvider[] = { NULL };
static const char* wxluabaseclassnames_wxSingleChoiceDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSingleChoiceDialog[] = { NULL };
static const char* wxluabaseclassnames_wxSizeEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSizeEvent[] = { NULL };
static const char* wxluabaseclassnames_wxSizer[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSizer[] = { NULL };
static const char* wxluabaseclassnames_wxSizerItem[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSizerItem[] = { NULL };
static const char* wxluabaseclassnames_wxSlider[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSlider[] = { NULL };
static const char* wxluabaseclassnames_wxSpinButton[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSpinButton[] = { NULL };
static const char* wxluabaseclassnames_wxSpinCtrl[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSpinCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxSpinEvent[] = { wxluaclassname_wxNotifyEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSpinEvent[] = { NULL };
static const char* wxluabaseclassnames_wxSplitterEvent[] = { wxluaclassname_wxNotifyEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSplitterEvent[] = { NULL };
static const char* wxluabaseclassnames_wxSplitterWindow[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSplitterWindow[] = { NULL };
static const char* wxluabaseclassnames_wxStaticBitmap[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStaticBitmap[] = { NULL };
static const char* wxluabaseclassnames_wxStaticBox[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStaticBox[] = { NULL };
static const char* wxluabaseclassnames_wxStaticBoxSizer[] = { wxluaclassname_wxBoxSizer, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStaticBoxSizer[] = { NULL };
static const char* wxluabaseclassnames_wxStaticLine[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStaticLine[] = { NULL };
static const char* wxluabaseclassnames_wxStaticText[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStaticText[] = { NULL };
static const char* wxluabaseclassnames_wxStatusBar[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStatusBar[] = { NULL };
static const char* wxluabaseclassnames_wxStdDialogButtonSizer[] = { wxluaclassname_wxBoxSizer, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStdDialogButtonSizer[] = { NULL };
static const char* wxluabaseclassnames_wxSysColourChangedEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSysColourChangedEvent[] = { NULL };
static const char* wxluabaseclassnames_wxTGAHandler[] = { wxluaclassname_wxImageHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTGAHandler[] = { NULL };
static const char* wxluabaseclassnames_wxTIFFHandler[] = { wxluaclassname_wxImageHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTIFFHandler[] = { NULL };
static const char* wxluabaseclassnames_wxTabCtrl[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTabCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxTabEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTabEvent[] = { NULL };
static const char* wxluabaseclassnames_wxTextCtrl[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTextCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxTextDataObject[] = { wxluaclassname_wxDataObjectSimple, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTextDataObject[] = { NULL };
static const char* wxluabaseclassnames_wxTextEntryDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTextEntryDialog[] = { NULL };
static const char* wxluabaseclassnames_wxTextUrlEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTextUrlEvent[] = { NULL };
static const char* wxluabaseclassnames_wxTextValidator[] = { wxluaclassname_wxValidator, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTextValidator[] = { NULL };
static const char* wxluabaseclassnames_wxTimer[] = { wxluaclassname_wxEvtHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTimer[] = { NULL };
static const char* wxluabaseclassnames_wxTimerEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTimerEvent[] = { NULL };
static const char* wxluabaseclassnames_wxToggleButton[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxToggleButton[] = { NULL };
static const char* wxluabaseclassnames_wxToolBar[] = { wxluaclassname_wxToolBarBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxToolBar[] = { NULL };
static const char* wxluabaseclassnames_wxToolBarBase[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxToolBarBase[] = { NULL };
static const char* wxluabaseclassnames_wxToolBarSimple[] = { wxluaclassname_wxToolBarBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxToolBarSimple[] = { NULL };
static const char* wxluabaseclassnames_wxToolBarTool[] = { wxluaclassname_wxToolBarToolBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxToolBarTool[] = { NULL };
static const char* wxluabaseclassnames_wxToolBarToolBase[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxToolBarToolBase[] = { NULL };
static const char* wxluabaseclassnames_wxToolTip[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxToolTip[] = { NULL };
static const char* wxluabaseclassnames_wxToolbook[] = { wxluaclassname_wxBookCtrlBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxToolbook[] = { NULL };
static const char* wxluabaseclassnames_wxToolbookEvent[] = { wxluaclassname_wxBookCtrlBaseEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxToolbookEvent[] = { NULL };
static const char* wxluabaseclassnames_wxTopLevelWindow[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTopLevelWindow[] = { NULL };
static const char* wxluabaseclassnames_wxTreeCtrl[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTreeCtrl[] = { NULL };
static const char* wxluabaseclassnames_wxTreeEvent[] = { wxluaclassname_wxNotifyEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTreeEvent[] = { NULL };
static const char* wxluabaseclassnames_wxTreeItemData[] = { wxluaclassname_wxClientData, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTreeItemData[] = { NULL };
static const char* wxluabaseclassnames_wxTreebook[] = { wxluaclassname_wxBookCtrlBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTreebook[] = { NULL };
static const char* wxluabaseclassnames_wxTreebookEvent[] = { wxluaclassname_wxBookCtrlBaseEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxTreebookEvent[] = { NULL };
static const char* wxluabaseclassnames_wxURLDataObject[] = { wxluaclassname_wxTextDataObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxURLDataObject[] = { NULL };
static const char* wxluabaseclassnames_wxUpdateUIEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxUpdateUIEvent[] = { NULL };
static const char* wxluabaseclassnames_wxValidator[] = { wxluaclassname_wxEvtHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxValidator[] = { NULL };
static const char* wxluabaseclassnames_wxView[] = { wxluaclassname_wxEvtHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxView[] = { NULL };
static const char* wxluabaseclassnames_wxWinHelpController[] = { wxluaclassname_wxHelpControllerBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWinHelpController[] = { NULL };
static const char* wxluabaseclassnames_wxWindow[] = { wxluaclassname_wxEvtHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWindow[] = { NULL };
static const char* wxluabaseclassnames_wxWindowCreateEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWindowCreateEvent[] = { NULL };
static const char* wxluabaseclassnames_wxWindowDC[] = { wxluaclassname_wxDC, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWindowDC[] = { NULL };
static const char* wxluabaseclassnames_wxWindowDestroyEvent[] = { wxluaclassname_wxEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWindowDestroyEvent[] = { NULL };
static const char* wxluabaseclassnames_wxWindowList[] = { wxluaclassname_wxList, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWindowList[] = { NULL };
static const char* wxluabaseclassnames_wxXPMHandler[] = { wxluaclassname_wxImageHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxXPMHandler[] = { NULL };
// ---------------------------------------------------------------------------
// Lua Tag Method Values and Tables for each Class
// ---------------------------------------------------------------------------

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && ((wxLUA_USE_wxDirPickerCtrl || wxLUA_USE_wxFilePickerCtrl ) && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))
    extern wxLuaBindMethod wxFileDirPickerCtrlBase_methods[];
    extern int wxFileDirPickerCtrlBase_methodCount;
    extern wxLuaBindMethod wxFileDirPickerEvent_methods[];
    extern int wxFileDirPickerEvent_methodCount;
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && ((wxLUA_USE_wxDirPickerCtrl || wxLUA_USE_wxFilePickerCtrl ) && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxColourPickerCtrl && wxUSE_COLOURPICKERCTRL)
    extern wxLuaBindMethod wxColourPickerCtrl_methods[];
    extern int wxColourPickerCtrl_methodCount;
    extern wxLuaBindMethod wxColourPickerEvent_methods[];
    extern int wxColourPickerEvent_methodCount;
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxColourPickerCtrl && wxUSE_COLOURPICKERCTRL)

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDatePickerCtrl && wxUSE_DATEPICKCTRL)
    extern wxLuaBindMethod wxDatePickerCtrl_methods[];
    extern int wxDatePickerCtrl_methodCount;
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDatePickerCtrl && wxUSE_DATEPICKCTRL)

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDirPickerCtrl && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))
    extern wxLuaBindMethod wxDirPickerCtrl_methods[];
    extern int wxDirPickerCtrl_methodCount;
    extern wxLuaBindMethod wxFilePickerCtrl_methods[];
    extern int wxFilePickerCtrl_methodCount;
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDirPickerCtrl && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxFontPickerCtrl && wxUSE_FONTPICKERCTRL)
    extern wxLuaBindMethod wxFontPickerCtrl_methods[];
    extern int wxFontPickerCtrl_methodCount;
    extern wxLuaBindMethod wxFontPickerEvent_methods[];
    extern int wxFontPickerEvent_methodCount;
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxFontPickerCtrl && wxUSE_FONTPICKERCTRL)

#if (wxCHECK_VERSION(2,8,0)) && (defined(wxHAS_POWER_EVENTS))
    extern wxLuaBindMethod wxPowerEvent_methods[];
    extern int wxPowerEvent_methodCount;
#endif // (wxCHECK_VERSION(2,8,0)) && (defined(wxHAS_POWER_EVENTS))

#if (wxLUA_USE_wxButton && wxUSE_BUTTON) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)
    extern wxLuaBindMethod wxBitmapButton_methods[];
    extern int wxBitmapButton_methodCount;
#endif // (wxLUA_USE_wxButton && wxUSE_BUTTON) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)

#if (wxLUA_USE_wxChoice || wxLUA_USE_wxComboBox || wxLUA_USE_wxListBox ) && wxUSE_CONTROLS
    extern wxLuaBindMethod wxControlWithItems_methods[];
    extern int wxControlWithItems_methodCount;
#endif // (wxLUA_USE_wxChoice || wxLUA_USE_wxComboBox || wxLUA_USE_wxListBox ) && wxUSE_CONTROLS

#if (wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD) && (wxCHECK_VERSION(2,8,0))
    extern wxLuaBindMethod wxClipboardTextEvent_methods[];
    extern int wxClipboardTextEvent_methodCount;
#endif // (wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD) && (wxCHECK_VERSION(2,8,0))

#if (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))
    extern wxLuaBindMethod wxStockGDI_methods[];
    extern int wxStockGDI_methodCount;
    extern wxLuaBindNumber wxStockGDI_enums[];
    extern int wxStockGDI_enumCount;
#endif // (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxBrushList)
    extern wxLuaBindMethod wxBrushList_methods[];
    extern int wxBrushList_methodCount;
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxBrushList)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPenList)
    extern wxLuaBindMethod wxPenList_methods[];
    extern int wxPenList_methodCount;
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPenList)

#if (wxLUA_USE_wxDC) && (wxCHECK_VERSION(2,8,0))
    extern wxLuaBindMethod wxAutoBufferedPaintDC_methods[];
    extern int wxAutoBufferedPaintDC_methodCount;
#endif // (wxLUA_USE_wxDC) && (wxCHECK_VERSION(2,8,0))

#if (wxLUA_USE_wxDataObject && wxUSE_DATAOBJ) && (wxCHECK_VERSION(2,8,0))
    extern wxLuaBindMethod wxURLDataObject_methods[];
    extern int wxURLDataObject_methodCount;
#endif // (wxLUA_USE_wxDataObject && wxUSE_DATAOBJ) && (wxCHECK_VERSION(2,8,0))

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)
    extern wxLuaBindMethod wxMiniFrame_methods[];
    extern int wxMiniFrame_methodCount;
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (!defined(__WXMSW__))
    extern wxLuaBindMethod wxExtHelpController_methods[];
    extern int wxExtHelpController_methodCount;
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (!defined(__WXMSW__))

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (defined(__WXMSW__))
    extern wxLuaBindMethod wxBestHelpController_methods[];
    extern int wxBestHelpController_methodCount;
    extern wxLuaBindMethod wxWinHelpController_methods[];
    extern int wxWinHelpController_methodCount;
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (defined(__WXMSW__))

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)
    extern wxLuaBindMethod wxContextHelpButton_methods[];
    extern int wxContextHelpButton_methodCount;
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxCHECK_VERSION(2,8,0) && wxUSE_TGA)
    extern wxLuaBindMethod wxTGAHandler_methods[];
    extern int wxTGAHandler_methodCount;
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxCHECK_VERSION(2,8,0) && wxUSE_TGA)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_GIF)
    extern wxLuaBindMethod wxGIFHandler_methods[];
    extern int wxGIFHandler_methodCount;
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_GIF)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_ICO_CUR)
    extern wxLuaBindMethod wxANIHandler_methods[];
    extern int wxANIHandler_methodCount;
    extern wxLuaBindMethod wxCURHandler_methods[];
    extern int wxCURHandler_methodCount;
    extern wxLuaBindMethod wxICOHandler_methods[];
    extern int wxICOHandler_methodCount;
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_ICO_CUR)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_IFF)
    extern wxLuaBindMethod wxIFFHandler_methods[];
    extern int wxIFFHandler_methodCount;
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_IFF)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBJPEG)
    extern wxLuaBindMethod wxJPEGHandler_methods[];
    extern int wxJPEGHandler_methodCount;
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBJPEG)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBPNG)
    extern wxLuaBindMethod wxPNGHandler_methods[];
    extern int wxPNGHandler_methodCount;
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBPNG)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)
    extern wxLuaBindMethod wxTIFFHandler_methods[];
    extern int wxTIFFHandler_methodCount;
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_PCX)
    extern wxLuaBindMethod wxPCXHandler_methods[];
    extern int wxPCXHandler_methodCount;
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_PCX)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_PNM)
    extern wxLuaBindMethod wxPNMHandler_methods[];
    extern int wxPNMHandler_methodCount;
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_PNM)

#if (wxLUA_USE_wxListBox && wxUSE_LISTBOX) && (wxLUA_USE_wxCheckListBox && wxUSE_CHECKLISTBOX)
    extern wxLuaBindMethod wxCheckListBox_methods[];
    extern int wxCheckListBox_methodCount;
#endif // (wxLUA_USE_wxListBox && wxUSE_LISTBOX) && (wxLUA_USE_wxCheckListBox && wxUSE_CHECKLISTBOX)

#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxLogWindow && wxUSE_LOGWINDOW)
    extern wxLuaBindMethod wxLogWindow_methods[];
    extern int wxLogWindow_methodCount;
#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxLogWindow && wxUSE_LOGWINDOW)

#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)
    extern wxLuaBindMethod wxLogTextCtrl_methods[];
    extern int wxLogTextCtrl_methodCount;
#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)

#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxUSE_LOGGUI)
    extern wxLuaBindMethod wxLogGui_methods[];
    extern int wxLogGui_methodCount;
#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxUSE_LOGGUI)

#if (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (defined(__WXMSW__) || defined(__WXMAC__))
    extern wxLuaBindMethod wxPrinterDC_methods[];
    extern int wxPrinterDC_methodCount;
#endif // (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (defined(__WXMSW__) || defined(__WXMAC__))

#if (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxLUA_USE_wxLuaPrintout)
    extern wxLuaBindMethod wxLuaPrintout_methods[];
    extern int wxLuaPrintout_methodCount;
    extern wxLuaBindMethod wxPreviewFrame_methods[];
    extern int wxPreviewFrame_methodCount;
    extern wxLuaBindMethod wxPrintPreview_methods[];
    extern int wxPrintPreview_methodCount;
    extern wxLuaBindMethod wxPrinter_methods[];
    extern int wxPrinter_methodCount;
#endif // (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxLUA_USE_wxLuaPrintout)

#if (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxUSE_POSTSCRIPT)
    extern wxLuaBindMethod wxPostScriptDC_methods[];
    extern int wxPostScriptDC_methodCount;
#endif // (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxUSE_POSTSCRIPT)

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))
    extern wxLuaBindMethod wxBoxSizer_methods[];
    extern int wxBoxSizer_methodCount;
    extern wxLuaBindMethod wxFlexGridSizer_methods[];
    extern int wxFlexGridSizer_methodCount;
    extern wxLuaBindMethod wxGBPosition_methods[];
    extern int wxGBPosition_methodCount;
    extern wxLuaBindMethod wxGBSizerItem_methods[];
    extern int wxGBSizerItem_methodCount;
    extern wxLuaBindMethod wxGBSpan_methods[];
    extern int wxGBSpan_methodCount;
    extern wxLuaBindMethod wxGridBagSizer_methods[];
    extern int wxGridBagSizer_methodCount;
    extern wxLuaBindMethod wxGridSizer_methods[];
    extern int wxGridSizer_methodCount;
    extern wxLuaBindMethod wxSizer_methods[];
    extern int wxSizer_methodCount;
    extern wxLuaBindMethod wxSizerFlags_methods[];
    extern int wxSizerFlags_methodCount;
    extern wxLuaBindMethod wxSizerItem_methods[];
    extern int wxSizerItem_methodCount;
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_BUTTON)
    extern wxLuaBindMethod wxStdDialogButtonSizer_methods[];
    extern int wxStdDialogButtonSizer_methodCount;
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_BUTTON)

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_NOTEBOOK && (!wxCHECK_VERSION(2,6,0)))
    extern wxLuaBindMethod wxNotebookSizer_methods[];
    extern int wxNotebookSizer_methodCount;
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_NOTEBOOK && (!wxCHECK_VERSION(2,6,0)))

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_STATBOX)
    extern wxLuaBindMethod wxStaticBoxSizer_methods[];
    extern int wxStaticBoxSizer_methodCount;
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_STATBOX)

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
    extern wxLuaBindMethod wxIndividualLayoutConstraint_methods[];
    extern int wxIndividualLayoutConstraint_methodCount;
    extern wxLuaBindMethod wxLayoutConstraints_methods[];
    extern int wxLayoutConstraints_methodCount;
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if (wxLUA_USE_wxToolbar) && (!wxCHECK_VERSION(2,6,0))
    extern wxLuaBindMethod wxToolBarSimple_methods[];
    extern int wxToolBarSimple_methodCount;
#endif // (wxLUA_USE_wxToolbar) && (!wxCHECK_VERSION(2,6,0))

#if (wxLUA_USE_wxValidator && wxUSE_VALIDATORS) && (wxLUA_USE_wxGenericValidator)
    extern wxLuaBindMethod wxGenericValidator_methods[];
    extern int wxGenericValidator_methodCount;
#endif // (wxLUA_USE_wxValidator && wxUSE_VALIDATORS) && (wxLUA_USE_wxGenericValidator)

#if (wxLUA_USE_wxValidator && wxUSE_VALIDATORS) && (wxLUA_USE_wxTextValidator)
    extern wxLuaBindMethod wxTextValidator_methods[];
    extern int wxTextValidator_methodCount;
#endif // (wxLUA_USE_wxValidator && wxUSE_VALIDATORS) && (wxLUA_USE_wxTextValidator)

extern wxLuaBindMethod wxActivateEvent_methods[];
extern int wxActivateEvent_methodCount;
extern wxLuaBindMethod wxChildFocusEvent_methods[];
extern int wxChildFocusEvent_methodCount;
extern wxLuaBindMethod wxCloseEvent_methods[];
extern int wxCloseEvent_methodCount;
extern wxLuaBindMethod wxCommandEvent_methods[];
extern int wxCommandEvent_methodCount;
extern wxLuaBindMethod wxContextMenuEvent_methods[];
extern int wxContextMenuEvent_methodCount;
extern wxLuaBindMethod wxControl_methods[];
extern int wxControl_methodCount;
extern wxLuaBindMethod wxDisplayChangedEvent_methods[];
extern int wxDisplayChangedEvent_methodCount;
extern wxLuaBindMethod wxEffects_methods[];
extern int wxEffects_methodCount;
extern wxLuaBindMethod wxEraseEvent_methods[];
extern int wxEraseEvent_methodCount;
extern wxLuaBindMethod wxEvent_methods[];
extern int wxEvent_methodCount;
extern wxLuaBindMethod wxEvtHandler_methods[];
extern int wxEvtHandler_methodCount;
extern wxLuaBindMethod wxFocusEvent_methods[];
extern int wxFocusEvent_methodCount;
extern wxLuaBindMethod wxGDIObject_methods[];
extern int wxGDIObject_methodCount;
extern wxLuaBindMethod wxHelpEvent_methods[];
extern int wxHelpEvent_methodCount;
extern wxLuaBindNumber wxHelpEvent_enums[];
extern int wxHelpEvent_enumCount;
extern wxLuaBindMethod wxIconizeEvent_methods[];
extern int wxIconizeEvent_methodCount;
extern wxLuaBindMethod wxIdleEvent_methods[];
extern int wxIdleEvent_methodCount;
extern wxLuaBindMethod wxInitDialogEvent_methods[];
extern int wxInitDialogEvent_methodCount;
extern wxLuaBindMethod wxKeyEvent_methods[];
extern int wxKeyEvent_methodCount;
extern wxLuaBindMethod wxMaximizeEvent_methods[];
extern int wxMaximizeEvent_methodCount;
extern wxLuaBindMethod wxMouseCaptureChangedEvent_methods[];
extern int wxMouseCaptureChangedEvent_methodCount;
extern wxLuaBindMethod wxMouseEvent_methods[];
extern int wxMouseEvent_methodCount;
extern wxLuaBindMethod wxMoveEvent_methods[];
extern int wxMoveEvent_methodCount;
extern wxLuaBindMethod wxNavigationKeyEvent_methods[];
extern int wxNavigationKeyEvent_methodCount;
extern wxLuaBindNumber wxNavigationKeyEvent_enums[];
extern int wxNavigationKeyEvent_enumCount;
extern wxLuaBindMethod wxNotifyEvent_methods[];
extern int wxNotifyEvent_methodCount;
extern wxLuaBindMethod wxPaintEvent_methods[];
extern int wxPaintEvent_methodCount;
extern wxLuaBindMethod wxPaletteChangedEvent_methods[];
extern int wxPaletteChangedEvent_methodCount;
extern wxLuaBindMethod wxPanel_methods[];
extern int wxPanel_methodCount;
extern wxLuaBindMethod wxProcessEvent_methods[];
extern int wxProcessEvent_methodCount;
extern wxLuaBindMethod wxPropagateOnce_methods[];
extern int wxPropagateOnce_methodCount;
extern wxLuaBindMethod wxPropagationDisabler_methods[];
extern int wxPropagationDisabler_methodCount;
extern wxLuaBindMethod wxQueryNewPaletteEvent_methods[];
extern int wxQueryNewPaletteEvent_methodCount;
extern wxLuaBindMethod wxScrollEvent_methods[];
extern int wxScrollEvent_methodCount;
extern wxLuaBindMethod wxScrollWinEvent_methods[];
extern int wxScrollWinEvent_methodCount;
extern wxLuaBindMethod wxSetCursorEvent_methods[];
extern int wxSetCursorEvent_methodCount;
extern wxLuaBindMethod wxShowEvent_methods[];
extern int wxShowEvent_methodCount;
extern wxLuaBindMethod wxSizeEvent_methods[];
extern int wxSizeEvent_methodCount;
extern wxLuaBindMethod wxSysColourChangedEvent_methods[];
extern int wxSysColourChangedEvent_methodCount;
extern wxLuaBindMethod wxUpdateUIEvent_methods[];
extern int wxUpdateUIEvent_methodCount;
extern wxLuaBindMethod wxVisualAttributes_methods[];
extern int wxVisualAttributes_methodCount;
extern wxLuaBindMethod wxWindow_methods[];
extern int wxWindow_methodCount;
extern wxLuaBindMethod wxWindowCreateEvent_methods[];
extern int wxWindowCreateEvent_methodCount;
extern wxLuaBindMethod wxWindowDestroyEvent_methods[];
extern int wxWindowDestroyEvent_methodCount;
extern wxLuaBindMethod wxWindowDisabler_methods[];
extern int wxWindowDisabler_methodCount;
extern wxLuaBindMethod wxWindowUpdateLocker_methods[];
extern int wxWindowUpdateLocker_methodCount;

#if wxCHECK_VERSION(2,4,0) && defined(__WXMSW__) && wxLUA_USE_wxTabCtrl && wxUSE_TAB_DIALOG
    extern wxLuaBindMethod wxTabCtrl_methods[];
    extern int wxTabCtrl_methodCount;
    extern wxLuaBindMethod wxTabEvent_methods[];
    extern int wxTabEvent_methodCount;
#endif // wxCHECK_VERSION(2,4,0) && defined(__WXMSW__) && wxLUA_USE_wxTabCtrl && wxUSE_TAB_DIALOG

#if wxCHECK_VERSION(2,8,0)
    extern wxLuaBindMethod wxMouseCaptureLostEvent_methods[];
    extern int wxMouseCaptureLostEvent_methodCount;
    extern wxLuaBindMethod wxMouseState_methods[];
    extern int wxMouseState_methodCount;
#endif // wxCHECK_VERSION(2,8,0)

#if wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxCollapsiblePane && wxUSE_COLLPANE
    extern wxLuaBindMethod wxCollapsiblePane_methods[];
    extern int wxCollapsiblePane_methodCount;
    extern wxLuaBindMethod wxCollapsiblePaneEvent_methods[];
    extern int wxCollapsiblePaneEvent_methodCount;
#endif // wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxCollapsiblePane && wxUSE_COLLPANE

#if wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker
    extern wxLuaBindMethod wxPickerBase_methods[];
    extern int wxPickerBase_methodCount;
#endif // wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker

#if wxCHECK_VERSION(2,8,0) && wxUSE_TOOLBOOK && wxLUA_USE_wxToolbook
    extern wxLuaBindMethod wxToolbook_methods[];
    extern int wxToolbook_methodCount;
    extern wxLuaBindMethod wxToolbookEvent_methods[];
    extern int wxToolbookEvent_methodCount;
#endif // wxCHECK_VERSION(2,8,0) && wxUSE_TOOLBOOK && wxLUA_USE_wxToolbook

#if wxCHECK_VERSION(2,8,0) && wxUSE_TREEBOOK && wxLUA_USE_wxTreebook
    extern wxLuaBindMethod wxTreebook_methods[];
    extern int wxTreebook_methodCount;
    extern wxLuaBindMethod wxTreebookEvent_methods[];
    extern int wxTreebookEvent_methodCount;
#endif // wxCHECK_VERSION(2,8,0) && wxUSE_TREEBOOK && wxLUA_USE_wxTreebook

#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
    extern wxLuaBindMethod wxPoint2DDouble_methods[];
    extern int wxPoint2DDouble_methodCount;
    extern wxLuaBindMethod wxPoint2DInt_methods[];
    extern int wxPoint2DInt_methodCount;
    extern wxLuaBindMethod wxRect2DDouble_methods[];
    extern int wxRect2DDouble_methodCount;
    extern wxLuaBindMethod wxRect2DInt_methods[];
    extern int wxRect2DInt_methodCount;
#endif // wxLUA_USE_Geometry && wxUSE_GEOMETRY

#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
    extern wxLuaBindMethod wxDocChildFrame_methods[];
    extern int wxDocChildFrame_methodCount;
    extern wxLuaBindMethod wxDocMDIChildFrame_methods[];
    extern int wxDocMDIChildFrame_methodCount;
    extern wxLuaBindMethod wxDocMDIParentFrame_methods[];
    extern int wxDocMDIParentFrame_methodCount;
    extern wxLuaBindMethod wxDocManager_methods[];
    extern int wxDocManager_methodCount;
    extern wxLuaBindMethod wxDocParentFrame_methods[];
    extern int wxDocParentFrame_methodCount;
    extern wxLuaBindMethod wxDocTemplate_methods[];
    extern int wxDocTemplate_methodCount;
    extern wxLuaBindMethod wxDocument_methods[];
    extern int wxDocument_methodCount;
    extern wxLuaBindMethod wxMDIChildFrame_methods[];
    extern int wxMDIChildFrame_methodCount;
    extern wxLuaBindMethod wxMDIClientWindow_methods[];
    extern int wxMDIClientWindow_methodCount;
    extern wxLuaBindMethod wxMDIParentFrame_methods[];
    extern int wxMDIParentFrame_methodCount;
    extern wxLuaBindMethod wxView_methods[];
    extern int wxView_methodCount;
#endif // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE

#if wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL
    extern wxLuaBindMethod wxAcceleratorEntry_methods[];
    extern int wxAcceleratorEntry_methodCount;
    extern wxLuaBindMethod wxAcceleratorTable_methods[];
    extern int wxAcceleratorTable_methodCount;
#endif // wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL

#if wxLUA_USE_wxApp
    extern wxLuaBindMethod wxApp_methods[];
    extern int wxApp_methodCount;
#endif // wxLUA_USE_wxApp

#if wxLUA_USE_wxArtProvider
    extern wxLuaBindMethod wxArtProvider_methods[];
    extern int wxArtProvider_methodCount;
    extern wxLuaBindMethod wxLuaArtProvider_methods[];
    extern int wxLuaArtProvider_methodCount;
#endif // wxLUA_USE_wxArtProvider

#if wxLUA_USE_wxBitmap
    extern wxLuaBindMethod wxBitmap_methods[];
    extern int wxBitmap_methodCount;
#endif // wxLUA_USE_wxBitmap

#if wxLUA_USE_wxBusyCursor
    extern wxLuaBindMethod wxBusyCursor_methods[];
    extern int wxBusyCursor_methodCount;
#endif // wxLUA_USE_wxBusyCursor

#if wxLUA_USE_wxBusyInfo && wxUSE_BUSYINFO
    extern wxLuaBindMethod wxBusyInfo_methods[];
    extern int wxBusyInfo_methodCount;
#endif // wxLUA_USE_wxBusyInfo && wxUSE_BUSYINFO

#if wxLUA_USE_wxButton && wxUSE_BUTTON
    extern wxLuaBindMethod wxButton_methods[];
    extern int wxButton_methodCount;
#endif // wxLUA_USE_wxButton && wxUSE_BUTTON

#if wxLUA_USE_wxCaret && wxUSE_CARET
    extern wxLuaBindMethod wxCaret_methods[];
    extern int wxCaret_methodCount;
    extern wxLuaBindMethod wxCaretSuspend_methods[];
    extern int wxCaretSuspend_methodCount;
#endif // wxLUA_USE_wxCaret && wxUSE_CARET

#if wxLUA_USE_wxCheckBox && wxUSE_CHECKBOX
    extern wxLuaBindMethod wxCheckBox_methods[];
    extern int wxCheckBox_methodCount;
#endif // wxLUA_USE_wxCheckBox && wxUSE_CHECKBOX

#if wxLUA_USE_wxChoice && wxUSE_CHOICE
    extern wxLuaBindMethod wxChoice_methods[];
    extern int wxChoice_methodCount;
#endif // wxLUA_USE_wxChoice && wxUSE_CHOICE

#if wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD
    extern wxLuaBindMethod wxClipboard_methods[];
    extern int wxClipboard_methodCount;
    extern wxLuaBindMethod wxClipboardLocker_methods[];
    extern int wxClipboardLocker_methodCount;
#endif // wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD

#if wxLUA_USE_wxColourDialog && wxUSE_COLOURDLG
    extern wxLuaBindMethod wxColourData_methods[];
    extern int wxColourData_methodCount;
    extern wxLuaBindMethod wxColourDialog_methods[];
    extern int wxColourDialog_methodCount;
#endif // wxLUA_USE_wxColourDialog && wxUSE_COLOURDLG

#if wxLUA_USE_wxColourPenBrush
    extern wxLuaBindMethod wxBrush_methods[];
    extern int wxBrush_methodCount;
    extern wxLuaBindMethod wxColour_methods[];
    extern int wxColour_methodCount;
    extern wxLuaBindMethod wxColourDatabase_methods[];
    extern int wxColourDatabase_methodCount;
    extern wxLuaBindMethod wxPen_methods[];
    extern int wxPen_methodCount;
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxComboBox && wxUSE_COMBOBOX
    extern wxLuaBindMethod wxComboBox_methods[];
    extern int wxComboBox_methodCount;
#endif // wxLUA_USE_wxComboBox && wxUSE_COMBOBOX

#if wxLUA_USE_wxCommandProcessor
    extern wxLuaBindMethod wxCommand_methods[];
    extern int wxCommand_methodCount;
    extern wxLuaBindMethod wxCommandProcessor_methods[];
    extern int wxCommandProcessor_methodCount;
#endif // wxLUA_USE_wxCommandProcessor

#if wxLUA_USE_wxCursor
    extern wxLuaBindMethod wxCursor_methods[];
    extern int wxCursor_methodCount;
#endif // wxLUA_USE_wxCursor

#if wxLUA_USE_wxDC
    extern wxLuaBindMethod wxBufferedDC_methods[];
    extern int wxBufferedDC_methodCount;
    extern wxLuaBindMethod wxBufferedPaintDC_methods[];
    extern int wxBufferedPaintDC_methodCount;
    extern wxLuaBindMethod wxClientDC_methods[];
    extern int wxClientDC_methodCount;
    extern wxLuaBindMethod wxDC_methods[];
    extern int wxDC_methodCount;
    extern wxLuaBindMethod wxDCClipper_methods[];
    extern int wxDCClipper_methodCount;
    extern wxLuaBindMethod wxMemoryDC_methods[];
    extern int wxMemoryDC_methodCount;
    extern wxLuaBindMethod wxMirrorDC_methods[];
    extern int wxMirrorDC_methodCount;
    extern wxLuaBindMethod wxPaintDC_methods[];
    extern int wxPaintDC_methodCount;
    extern wxLuaBindMethod wxScreenDC_methods[];
    extern int wxScreenDC_methodCount;
    extern wxLuaBindMethod wxWindowDC_methods[];
    extern int wxWindowDC_methodCount;
#endif // wxLUA_USE_wxDC

#if wxLUA_USE_wxDataObject && wxUSE_DATAOBJ
    extern wxLuaBindMethod wxBitmapDataObject_methods[];
    extern int wxBitmapDataObject_methodCount;
    extern wxLuaBindMethod wxDataFormat_methods[];
    extern int wxDataFormat_methodCount;
    extern wxLuaBindMethod wxDataObject_methods[];
    extern int wxDataObject_methodCount;
    extern wxLuaBindNumber wxDataObject_enums[];
    extern int wxDataObject_enumCount;
    extern wxLuaBindMethod wxDataObjectComposite_methods[];
    extern int wxDataObjectComposite_methodCount;
    extern wxLuaBindMethod wxDataObjectSimple_methods[];
    extern int wxDataObjectSimple_methodCount;
    extern wxLuaBindMethod wxFileDataObject_methods[];
    extern int wxFileDataObject_methodCount;
    extern wxLuaBindMethod wxTextDataObject_methods[];
    extern int wxTextDataObject_methodCount;
#endif // wxLUA_USE_wxDataObject && wxUSE_DATAOBJ

#if wxLUA_USE_wxDialog
    extern wxLuaBindMethod wxDialog_methods[];
    extern int wxDialog_methodCount;
#endif // wxLUA_USE_wxDialog

#if wxLUA_USE_wxDirDialog && wxUSE_DIRDLG
    extern wxLuaBindMethod wxDirDialog_methods[];
    extern int wxDirDialog_methodCount;
#endif // wxLUA_USE_wxDirDialog && wxUSE_DIRDLG

#if wxLUA_USE_wxDisplay && wxUSE_DISPLAY
    extern wxLuaBindMethod wxArrayVideoModes_methods[];
    extern int wxArrayVideoModes_methodCount;
    extern wxLuaBindMethod wxDisplay_methods[];
    extern int wxDisplay_methodCount;
    extern wxLuaBindMethod wxVideoMode_methods[];
    extern int wxVideoMode_methodCount;
#endif // wxLUA_USE_wxDisplay && wxUSE_DISPLAY

#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
    extern wxLuaBindMethod wxDropFilesEvent_methods[];
    extern int wxDropFilesEvent_methodCount;
    extern wxLuaBindMethod wxDropSource_methods[];
    extern int wxDropSource_methodCount;
    extern wxLuaBindMethod wxDropTarget_methods[];
    extern int wxDropTarget_methodCount;
#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP

#if wxLUA_USE_wxFileDialog && wxUSE_FILEDLG
    extern wxLuaBindMethod wxFileDialog_methods[];
    extern int wxFileDialog_methodCount;
#endif // wxLUA_USE_wxFileDialog && wxUSE_FILEDLG

#if wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE
    extern wxLuaBindMethod wxFileHistory_methods[];
    extern int wxFileHistory_methodCount;
#endif // wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE

#if wxLUA_USE_wxFont
    extern wxLuaBindMethod wxFont_methods[];
    extern int wxFont_methodCount;
    extern wxLuaBindMethod wxNativeFontInfo_methods[];
    extern int wxNativeFontInfo_methodCount;
#endif // wxLUA_USE_wxFont

#if wxLUA_USE_wxFontEnumerator
    extern wxLuaBindMethod wxFontEnumerator_methods[];
    extern int wxFontEnumerator_methodCount;
#endif // wxLUA_USE_wxFontEnumerator

#if wxLUA_USE_wxFontList
    extern wxLuaBindMethod wxFontList_methods[];
    extern int wxFontList_methodCount;
#endif // wxLUA_USE_wxFontList

#if wxLUA_USE_wxFontMapper
    extern wxLuaBindMethod wxFontMapper_methods[];
    extern int wxFontMapper_methodCount;
#endif // wxLUA_USE_wxFontMapper

#if wxLUA_USE_wxFrame
    extern wxLuaBindMethod wxFrame_methods[];
    extern int wxFrame_methodCount;
#endif // wxLUA_USE_wxFrame

#if wxLUA_USE_wxFrame || wxLUA_USE_wxDialog
    extern wxLuaBindMethod wxTopLevelWindow_methods[];
    extern int wxTopLevelWindow_methodCount;
#endif // wxLUA_USE_wxFrame || wxLUA_USE_wxDialog

#if wxLUA_USE_wxGauge && wxUSE_GAUGE
    extern wxLuaBindMethod wxGauge_methods[];
    extern int wxGauge_methodCount;
#endif // wxLUA_USE_wxGauge && wxUSE_GAUGE

#if wxLUA_USE_wxGenericDirCtrl && wxUSE_DIRDLG
    extern wxLuaBindMethod wxGenericDirCtrl_methods[];
    extern int wxGenericDirCtrl_methodCount;
#endif // wxLUA_USE_wxGenericDirCtrl && wxUSE_DIRDLG

#if wxLUA_USE_wxHelpController && wxUSE_HELP
    extern wxLuaBindMethod wxContextHelp_methods[];
    extern int wxContextHelp_methodCount;
    extern wxLuaBindMethod wxHelpController_methods[];
    extern int wxHelpController_methodCount;
    extern wxLuaBindMethod wxHelpControllerBase_methods[];
    extern int wxHelpControllerBase_methodCount;
    extern wxLuaBindMethod wxHelpControllerHelpProvider_methods[];
    extern int wxHelpControllerHelpProvider_methodCount;
    extern wxLuaBindMethod wxHelpProvider_methods[];
    extern int wxHelpProvider_methodCount;
    extern wxLuaBindMethod wxSimpleHelpProvider_methods[];
    extern int wxSimpleHelpProvider_methodCount;
#endif // wxLUA_USE_wxHelpController && wxUSE_HELP

#if wxLUA_USE_wxIcon
    extern wxLuaBindMethod wxIcon_methods[];
    extern int wxIcon_methodCount;
    extern wxLuaBindMethod wxIconBundle_methods[];
    extern int wxIconBundle_methodCount;
#endif // wxLUA_USE_wxIcon

#if wxLUA_USE_wxImage && wxUSE_IMAGE
    extern wxLuaBindMethod wxBMPHandler_methods[];
    extern int wxBMPHandler_methodCount;
    extern wxLuaBindMethod wxImage_methods[];
    extern int wxImage_methodCount;
    extern wxLuaBindMethod wxImageHandler_methods[];
    extern int wxImageHandler_methodCount;
    extern wxLuaBindMethod wxImageHistogram_methods[];
    extern int wxImageHistogram_methodCount;
    extern wxLuaBindMethod wxImageHistogram_iterator_methods[];
    extern int wxImageHistogram_iterator_methodCount;
    extern wxLuaBindMethod wxImageHistogramEntry_methods[];
    extern int wxImageHistogramEntry_methodCount;
    extern wxLuaBindMethod wxQuantize_methods[];
    extern int wxQuantize_methodCount;
    extern wxLuaBindMethod wxXPMHandler_methods[];
    extern int wxXPMHandler_methodCount;
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

#if wxLUA_USE_wxImageList
    extern wxLuaBindMethod wxImageList_methods[];
    extern int wxImageList_methodCount;
#endif // wxLUA_USE_wxImageList

#if wxLUA_USE_wxListBox && wxUSE_LISTBOX
    extern wxLuaBindMethod wxListBox_methods[];
    extern int wxListBox_methodCount;
#endif // wxLUA_USE_wxListBox && wxUSE_LISTBOX

#if wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL
    extern wxLuaBindMethod wxListCtrl_methods[];
    extern int wxListCtrl_methodCount;
    extern wxLuaBindMethod wxListEvent_methods[];
    extern int wxListEvent_methodCount;
    extern wxLuaBindMethod wxListItem_methods[];
    extern int wxListItem_methodCount;
    extern wxLuaBindMethod wxListItemAttr_methods[];
    extern int wxListItemAttr_methodCount;
    extern wxLuaBindMethod wxListView_methods[];
    extern int wxListView_methodCount;
#endif // wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL

#if wxLUA_USE_wxMask
    extern wxLuaBindMethod wxMask_methods[];
    extern int wxMask_methodCount;
#endif // wxLUA_USE_wxMask

#if wxLUA_USE_wxMenu && wxUSE_MENUS
    extern wxLuaBindMethod wxMenu_methods[];
    extern int wxMenu_methodCount;
    extern wxLuaBindMethod wxMenuBar_methods[];
    extern int wxMenuBar_methodCount;
    extern wxLuaBindMethod wxMenuEvent_methods[];
    extern int wxMenuEvent_methodCount;
    extern wxLuaBindMethod wxMenuItem_methods[];
    extern int wxMenuItem_methodCount;
    extern wxLuaBindMethod wxMenuItemList_methods[];
    extern int wxMenuItemList_methodCount;
#endif // wxLUA_USE_wxMenu && wxUSE_MENUS

#if wxLUA_USE_wxMessageDialog && wxUSE_MSGDLG
    extern wxLuaBindMethod wxMessageDialog_methods[];
    extern int wxMessageDialog_methodCount;
#endif // wxLUA_USE_wxMessageDialog && wxUSE_MSGDLG

#if wxLUA_USE_wxMetafile && wxUSE_METAFILE && (defined(__WXMSW__) || defined(__WXMAC__) || defined(__WXPM__))
    extern wxLuaBindMethod wxMetafile_methods[];
    extern int wxMetafile_methodCount;
    extern wxLuaBindMethod wxMetafileDC_methods[];
    extern int wxMetafileDC_methodCount;
#endif // wxLUA_USE_wxMetafile && wxUSE_METAFILE && (defined(__WXMSW__) || defined(__WXMAC__) || defined(__WXPM__))

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxChoice && wxUSE_CHOICEBOOK
    extern wxLuaBindMethod wxChoicebook_methods[];
    extern int wxChoicebook_methodCount;
    extern wxLuaBindMethod wxChoicebookEvent_methods[];
    extern int wxChoicebookEvent_methodCount;
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxChoice && wxUSE_CHOICEBOOK

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK
    extern wxLuaBindMethod wxListbook_methods[];
    extern int wxListbook_methodCount;
    extern wxLuaBindMethod wxListbookEvent_methods[];
    extern int wxListbookEvent_methodCount;
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK

#if wxLUA_USE_wxNotebook && wxUSE_BOOKCTRL
    extern wxLuaBindMethod wxBookCtrlBase_methods[];
    extern int wxBookCtrlBase_methodCount;
    extern wxLuaBindMethod wxBookCtrlBaseEvent_methods[];
    extern int wxBookCtrlBaseEvent_methodCount;
#endif // wxLUA_USE_wxNotebook && wxUSE_BOOKCTRL

#if wxLUA_USE_wxNotebook && wxUSE_NOTEBOOK
    extern wxLuaBindMethod wxNotebook_methods[];
    extern int wxNotebook_methodCount;
    extern wxLuaBindMethod wxNotebookEvent_methods[];
    extern int wxNotebookEvent_methodCount;
#endif // wxLUA_USE_wxNotebook && wxUSE_NOTEBOOK

#if wxLUA_USE_wxPalette && wxUSE_PALETTE
    extern wxLuaBindMethod wxPalette_methods[];
    extern int wxPalette_methodCount;
#endif // wxLUA_USE_wxPalette && wxUSE_PALETTE

#if wxLUA_USE_wxPointSizeRect
    extern wxLuaBindMethod wxPoint_methods[];
    extern int wxPoint_methodCount;
    extern wxLuaBindMethod wxRect_methods[];
    extern int wxRect_methodCount;
    extern wxLuaBindMethod wxSize_methods[];
    extern int wxSize_methodCount;
#endif // wxLUA_USE_wxPointSizeRect

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
    extern wxLuaBindMethod wxPageSetupDialog_methods[];
    extern int wxPageSetupDialog_methodCount;
    extern wxLuaBindMethod wxPageSetupDialogData_methods[];
    extern int wxPageSetupDialogData_methodCount;
    extern wxLuaBindMethod wxPreviewCanvas_methods[];
    extern int wxPreviewCanvas_methodCount;
    extern wxLuaBindMethod wxPreviewControlBar_methods[];
    extern int wxPreviewControlBar_methodCount;
    extern wxLuaBindMethod wxPrintData_methods[];
    extern int wxPrintData_methodCount;
    extern wxLuaBindMethod wxPrintDialog_methods[];
    extern int wxPrintDialog_methodCount;
    extern wxLuaBindMethod wxPrintDialogData_methods[];
    extern int wxPrintDialogData_methodCount;
    extern wxLuaBindMethod wxPrintout_methods[];
    extern int wxPrintout_methodCount;
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if wxLUA_USE_wxProcess
    extern wxLuaBindMethod wxProcess_methods[];
    extern int wxProcess_methodCount;
#endif // wxLUA_USE_wxProcess

#if wxLUA_USE_wxRadioBox && wxUSE_RADIOBOX
    extern wxLuaBindMethod wxRadioBox_methods[];
    extern int wxRadioBox_methodCount;
#endif // wxLUA_USE_wxRadioBox && wxUSE_RADIOBOX

#if wxLUA_USE_wxRadioButton && wxUSE_RADIOBTN
    extern wxLuaBindMethod wxRadioButton_methods[];
    extern int wxRadioButton_methodCount;
#endif // wxLUA_USE_wxRadioButton && wxUSE_RADIOBTN

#if wxLUA_USE_wxRegion
    extern wxLuaBindMethod wxRegion_methods[];
    extern int wxRegion_methodCount;
    extern wxLuaBindMethod wxRegionIterator_methods[];
    extern int wxRegionIterator_methodCount;
#endif // wxLUA_USE_wxRegion

#if wxLUA_USE_wxRenderer
    extern wxLuaBindMethod wxHeaderButtonParams_methods[];
    extern int wxHeaderButtonParams_methodCount;
    extern wxLuaBindMethod wxRendererNative_methods[];
    extern int wxRendererNative_methodCount;
    extern wxLuaBindMethod wxRendererVersion_methods[];
    extern int wxRendererVersion_methodCount;
    extern wxLuaBindNumber wxRendererVersion_enums[];
    extern int wxRendererVersion_enumCount;
    extern wxLuaBindMethod wxSplitterRenderParams_methods[];
    extern int wxSplitterRenderParams_methodCount;
#endif // wxLUA_USE_wxRenderer

#if wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR
    extern wxLuaBindMethod wxScrollBar_methods[];
    extern int wxScrollBar_methodCount;
#endif // wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR

#if wxLUA_USE_wxScrolledWindow
    extern wxLuaBindMethod wxScrolledWindow_methods[];
    extern int wxScrolledWindow_methodCount;
#endif // wxLUA_USE_wxScrolledWindow

#if wxLUA_USE_wxSlider && wxUSE_SLIDER
    extern wxLuaBindMethod wxSlider_methods[];
    extern int wxSlider_methodCount;
#endif // wxLUA_USE_wxSlider && wxUSE_SLIDER

#if wxLUA_USE_wxSpinButton && wxUSE_SPINBTN
    extern wxLuaBindMethod wxSpinButton_methods[];
    extern int wxSpinButton_methodCount;
    extern wxLuaBindMethod wxSpinEvent_methods[];
    extern int wxSpinEvent_methodCount;
#endif // wxLUA_USE_wxSpinButton && wxUSE_SPINBTN

#if wxLUA_USE_wxSpinCtrl && wxUSE_SPINCTRL
    extern wxLuaBindMethod wxSpinCtrl_methods[];
    extern int wxSpinCtrl_methodCount;
#endif // wxLUA_USE_wxSpinCtrl && wxUSE_SPINCTRL

#if wxLUA_USE_wxSplitterWindow
    extern wxLuaBindMethod wxSplitterEvent_methods[];
    extern int wxSplitterEvent_methodCount;
    extern wxLuaBindMethod wxSplitterWindow_methods[];
    extern int wxSplitterWindow_methodCount;
#endif // wxLUA_USE_wxSplitterWindow

#if wxLUA_USE_wxStaticBitmap && wxUSE_STATBMP
    extern wxLuaBindMethod wxStaticBitmap_methods[];
    extern int wxStaticBitmap_methodCount;
#endif // wxLUA_USE_wxStaticBitmap && wxUSE_STATBMP

#if wxLUA_USE_wxStaticBox && wxUSE_STATBOX
    extern wxLuaBindMethod wxStaticBox_methods[];
    extern int wxStaticBox_methodCount;
#endif // wxLUA_USE_wxStaticBox && wxUSE_STATBOX

#if wxLUA_USE_wxStaticLine && wxUSE_STATLINE
    extern wxLuaBindMethod wxStaticLine_methods[];
    extern int wxStaticLine_methodCount;
#endif // wxLUA_USE_wxStaticLine && wxUSE_STATLINE

#if wxLUA_USE_wxStaticText && wxUSE_STATTEXT
    extern wxLuaBindMethod wxStaticText_methods[];
    extern int wxStaticText_methodCount;
#endif // wxLUA_USE_wxStaticText && wxUSE_STATTEXT

#if wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR
    extern wxLuaBindMethod wxStatusBar_methods[];
    extern int wxStatusBar_methodCount;
#endif // wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR

#if wxLUA_USE_wxSystemSettings
    extern wxLuaBindMethod wxSystemSettings_methods[];
    extern int wxSystemSettings_methodCount;
#endif // wxLUA_USE_wxSystemSettings

#if wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL
    extern wxLuaBindMethod wxTextAttr_methods[];
    extern int wxTextAttr_methodCount;
    extern wxLuaBindMethod wxTextCtrl_methods[];
    extern int wxTextCtrl_methodCount;
    extern wxLuaBindMethod wxTextUrlEvent_methods[];
    extern int wxTextUrlEvent_methodCount;
#endif // wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL

#if wxLUA_USE_wxTimer && wxUSE_TIMER
    extern wxLuaBindMethod wxTimer_methods[];
    extern int wxTimer_methodCount;
    extern wxLuaBindMethod wxTimerEvent_methods[];
    extern int wxTimerEvent_methodCount;
#endif // wxLUA_USE_wxTimer && wxUSE_TIMER

#if wxLUA_USE_wxToggleButton && wxUSE_TOGGLEBTN
    extern wxLuaBindMethod wxToggleButton_methods[];
    extern int wxToggleButton_methodCount;
#endif // wxLUA_USE_wxToggleButton && wxUSE_TOGGLEBTN

#if wxLUA_USE_wxToolbar
    extern wxLuaBindMethod wxToolBar_methods[];
    extern int wxToolBar_methodCount;
    extern wxLuaBindMethod wxToolBarBase_methods[];
    extern int wxToolBarBase_methodCount;
    extern wxLuaBindMethod wxToolBarTool_methods[];
    extern int wxToolBarTool_methodCount;
    extern wxLuaBindMethod wxToolBarToolBase_methods[];
    extern int wxToolBarToolBase_methodCount;
#endif // wxLUA_USE_wxToolbar

#if wxLUA_USE_wxTooltip && wxUSE_TOOLTIPS
    extern wxLuaBindMethod wxToolTip_methods[];
    extern int wxToolTip_methodCount;
#endif // wxLUA_USE_wxTooltip && wxUSE_TOOLTIPS

#if wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL
    extern wxLuaBindMethod wxLuaTreeItemData_methods[];
    extern int wxLuaTreeItemData_methodCount;
    extern wxLuaBindMethod wxTreeCtrl_methods[];
    extern int wxTreeCtrl_methodCount;
    extern wxLuaBindMethod wxTreeEvent_methods[];
    extern int wxTreeEvent_methodCount;
    extern wxLuaBindMethod wxTreeItemData_methods[];
    extern int wxTreeItemData_methodCount;
    extern wxLuaBindMethod wxTreeItemId_methods[];
    extern int wxTreeItemId_methodCount;
#endif // wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL

#if wxLUA_USE_wxValidator && wxUSE_VALIDATORS
    extern wxLuaBindMethod wxValidator_methods[];
    extern int wxValidator_methodCount;
#endif // wxLUA_USE_wxValidator && wxUSE_VALIDATORS

#if wxLUA_USE_wxWindowList && !wxUSE_STL
    extern wxLuaBindMethod wxWindowList_methods[];
    extern int wxWindowList_methodCount;
#endif // wxLUA_USE_wxWindowList && !wxUSE_STL

#if wxUSE_CHOICEDLG && wxLUA_USE_wxMultiChoiceDialog
    extern wxLuaBindMethod wxMultiChoiceDialog_methods[];
    extern int wxMultiChoiceDialog_methodCount;
#endif // wxUSE_CHOICEDLG && wxLUA_USE_wxMultiChoiceDialog

#if wxUSE_CHOICEDLG && wxLUA_USE_wxSingleChoiceDialog
    extern wxLuaBindMethod wxSingleChoiceDialog_methods[];
    extern int wxSingleChoiceDialog_methodCount;
#endif // wxUSE_CHOICEDLG && wxLUA_USE_wxSingleChoiceDialog

#if wxUSE_FINDREPLDLG && wxLUA_USE_wxFindReplaceDialog
    extern wxLuaBindMethod wxFindDialogEvent_methods[];
    extern int wxFindDialogEvent_methodCount;
    extern wxLuaBindMethod wxFindReplaceData_methods[];
    extern int wxFindReplaceData_methodCount;
    extern wxLuaBindMethod wxFindReplaceDialog_methods[];
    extern int wxFindReplaceDialog_methodCount;
#endif // wxUSE_FINDREPLDLG && wxLUA_USE_wxFindReplaceDialog

#if wxUSE_FONTDLG && wxLUA_USE_wxFontDialog
    extern wxLuaBindMethod wxFontData_methods[];
    extern int wxFontData_methodCount;
    extern wxLuaBindMethod wxFontDialog_methods[];
    extern int wxFontDialog_methodCount;
#endif // wxUSE_FONTDLG && wxLUA_USE_wxFontDialog

#if wxUSE_PROGRESSDLG && wxLUA_USE_wxProgressDialog
    extern wxLuaBindMethod wxProgressDialog_methods[];
    extern int wxProgressDialog_methodCount;
#endif // wxUSE_PROGRESSDLG && wxLUA_USE_wxProgressDialog

#if wxUSE_STREAMS && wxUSE_FILESYSTEM
    extern wxLuaBindMethod wxMemoryFSHandler_methods[];
    extern int wxMemoryFSHandler_methodCount;
#endif // wxUSE_STREAMS && wxUSE_FILESYSTEM

#if wxUSE_TEXTDLG && wxLUA_USE_wxTextEntryDialog
    extern wxLuaBindMethod wxPasswordEntryDialog_methods[];
    extern int wxPasswordEntryDialog_methodCount;
    extern wxLuaBindMethod wxTextEntryDialog_methods[];
    extern int wxTextEntryDialog_methodCount;
#endif // wxUSE_TEXTDLG && wxLUA_USE_wxTextEntryDialog




wxLuaBindClass* wxLuaGetClassList_wxcore(size_t &count)
{
    static wxLuaBindClass classList[] =
    {
#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_ICO_CUR)
        { wxluaclassname_wxANIHandler, wxANIHandler_methods, wxANIHandler_methodCount, CLASSINFO(wxANIHandler), &wxluatype_wxANIHandler, wxluabaseclassnames_wxANIHandler, wxluabaseclassbinds_wxANIHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_ICO_CUR)

#if wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL
        { wxluaclassname_wxAcceleratorEntry, wxAcceleratorEntry_methods, wxAcceleratorEntry_methodCount, NULL, &wxluatype_wxAcceleratorEntry, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxAcceleratorTable, wxAcceleratorTable_methods, wxAcceleratorTable_methodCount, CLASSINFO(wxAcceleratorTable), &wxluatype_wxAcceleratorTable, wxluabaseclassnames_wxAcceleratorTable, wxluabaseclassbinds_wxAcceleratorTable, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL

        { wxluaclassname_wxActivateEvent, wxActivateEvent_methods, wxActivateEvent_methodCount, CLASSINFO(wxActivateEvent), &wxluatype_wxActivateEvent, wxluabaseclassnames_wxActivateEvent, wxluabaseclassbinds_wxActivateEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxApp
        { wxluaclassname_wxApp, wxApp_methods, wxApp_methodCount, CLASSINFO(wxApp), &wxluatype_wxApp, wxluabaseclassnames_wxApp, wxluabaseclassbinds_wxApp, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxApp

#if wxLUA_USE_wxDisplay && wxUSE_DISPLAY
        { wxluaclassname_wxArrayVideoModes, wxArrayVideoModes_methods, wxArrayVideoModes_methodCount, NULL, &wxluatype_wxArrayVideoModes, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDisplay && wxUSE_DISPLAY

#if wxLUA_USE_wxArtProvider
        { wxluaclassname_wxArtProvider, wxArtProvider_methods, wxArtProvider_methodCount, CLASSINFO(wxArtProvider), &wxluatype_wxArtProvider, wxluabaseclassnames_wxArtProvider, wxluabaseclassbinds_wxArtProvider, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxArtProvider

#if (wxLUA_USE_wxDC) && (wxCHECK_VERSION(2,8,0))
        { wxluaclassname_wxAutoBufferedPaintDC, wxAutoBufferedPaintDC_methods, wxAutoBufferedPaintDC_methodCount, CLASSINFO(wxAutoBufferedPaintDC), &wxluatype_wxAutoBufferedPaintDC, wxluabaseclassnames_wxAutoBufferedPaintDC, wxluabaseclassbinds_wxAutoBufferedPaintDC, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxDC) && (wxCHECK_VERSION(2,8,0))

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { wxluaclassname_wxBMPHandler, wxBMPHandler_methods, wxBMPHandler_methodCount, CLASSINFO(wxBMPHandler), &wxluatype_wxBMPHandler, wxluabaseclassnames_wxBMPHandler, wxluabaseclassbinds_wxBMPHandler, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (defined(__WXMSW__))
        { wxluaclassname_wxBestHelpController, wxBestHelpController_methods, wxBestHelpController_methodCount, CLASSINFO(wxBestHelpController), &wxluatype_wxBestHelpController, wxluabaseclassnames_wxBestHelpController, wxluabaseclassbinds_wxBestHelpController, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (defined(__WXMSW__))

#if wxLUA_USE_wxBitmap
        { wxluaclassname_wxBitmap, wxBitmap_methods, wxBitmap_methodCount, CLASSINFO(wxBitmap), &wxluatype_wxBitmap, wxluabaseclassnames_wxBitmap, wxluabaseclassbinds_wxBitmap, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxBitmap

#if (wxLUA_USE_wxButton && wxUSE_BUTTON) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)
        { wxluaclassname_wxBitmapButton, wxBitmapButton_methods, wxBitmapButton_methodCount, CLASSINFO(wxBitmapButton), &wxluatype_wxBitmapButton, wxluabaseclassnames_wxBitmapButton, wxluabaseclassbinds_wxBitmapButton, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxButton && wxUSE_BUTTON) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)

#if wxLUA_USE_wxDataObject && wxUSE_DATAOBJ
        { wxluaclassname_wxBitmapDataObject, wxBitmapDataObject_methods, wxBitmapDataObject_methodCount, NULL, &wxluatype_wxBitmapDataObject, wxluabaseclassnames_wxBitmapDataObject, wxluabaseclassbinds_wxBitmapDataObject, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDataObject && wxUSE_DATAOBJ

#if wxLUA_USE_wxNotebook && wxUSE_BOOKCTRL
        { wxluaclassname_wxBookCtrlBase, wxBookCtrlBase_methods, wxBookCtrlBase_methodCount, CLASSINFO(wxBookCtrlBase), &wxluatype_wxBookCtrlBase, wxluabaseclassnames_wxBookCtrlBase, wxluabaseclassbinds_wxBookCtrlBase, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxBookCtrlBaseEvent, wxBookCtrlBaseEvent_methods, wxBookCtrlBaseEvent_methodCount, CLASSINFO(wxBookCtrlBaseEvent), &wxluatype_wxBookCtrlBaseEvent, wxluabaseclassnames_wxBookCtrlBaseEvent, wxluabaseclassbinds_wxBookCtrlBaseEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxNotebook && wxUSE_BOOKCTRL

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))
        { wxluaclassname_wxBoxSizer, wxBoxSizer_methods, wxBoxSizer_methodCount, CLASSINFO(wxBoxSizer), &wxluatype_wxBoxSizer, wxluabaseclassnames_wxBoxSizer, wxluabaseclassbinds_wxBoxSizer, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))

#if wxLUA_USE_wxColourPenBrush
        { wxluaclassname_wxBrush, wxBrush_methods, wxBrush_methodCount, CLASSINFO(wxBrush), &wxluatype_wxBrush, wxluabaseclassnames_wxBrush, wxluabaseclassbinds_wxBrush, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxColourPenBrush

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxBrushList)
        { wxluaclassname_wxBrushList, wxBrushList_methods, wxBrushList_methodCount, NULL, &wxluatype_wxBrushList, wxluabaseclassnames_wxBrushList, wxluabaseclassbinds_wxBrushList, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxBrushList)

#if wxLUA_USE_wxDC
        { wxluaclassname_wxBufferedDC, wxBufferedDC_methods, wxBufferedDC_methodCount, CLASSINFO(wxBufferedDC), &wxluatype_wxBufferedDC, wxluabaseclassnames_wxBufferedDC, wxluabaseclassbinds_wxBufferedDC, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxBufferedPaintDC, wxBufferedPaintDC_methods, wxBufferedPaintDC_methodCount, CLASSINFO(wxBufferedPaintDC), &wxluatype_wxBufferedPaintDC, wxluabaseclassnames_wxBufferedPaintDC, wxluabaseclassbinds_wxBufferedPaintDC, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDC

#if wxLUA_USE_wxBusyCursor
        { wxluaclassname_wxBusyCursor, wxBusyCursor_methods, wxBusyCursor_methodCount, NULL, &wxluatype_wxBusyCursor, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxBusyCursor

#if wxLUA_USE_wxBusyInfo && wxUSE_BUSYINFO
        { wxluaclassname_wxBusyInfo, wxBusyInfo_methods, wxBusyInfo_methodCount, NULL, &wxluatype_wxBusyInfo, wxluabaseclassnames_wxBusyInfo, wxluabaseclassbinds_wxBusyInfo, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxBusyInfo && wxUSE_BUSYINFO

#if wxLUA_USE_wxButton && wxUSE_BUTTON
        { wxluaclassname_wxButton, wxButton_methods, wxButton_methodCount, CLASSINFO(wxButton), &wxluatype_wxButton, wxluabaseclassnames_wxButton, wxluabaseclassbinds_wxButton, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxButton && wxUSE_BUTTON

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_ICO_CUR)
        { wxluaclassname_wxCURHandler, wxCURHandler_methods, wxCURHandler_methodCount, CLASSINFO(wxCURHandler), &wxluatype_wxCURHandler, wxluabaseclassnames_wxCURHandler, wxluabaseclassbinds_wxCURHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_ICO_CUR)

#if wxLUA_USE_wxCaret && wxUSE_CARET
        { wxluaclassname_wxCaret, wxCaret_methods, wxCaret_methodCount, NULL, &wxluatype_wxCaret, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxCaretSuspend, wxCaretSuspend_methods, wxCaretSuspend_methodCount, NULL, &wxluatype_wxCaretSuspend, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxCaret && wxUSE_CARET

#if wxLUA_USE_wxCheckBox && wxUSE_CHECKBOX
        { wxluaclassname_wxCheckBox, wxCheckBox_methods, wxCheckBox_methodCount, CLASSINFO(wxCheckBox), &wxluatype_wxCheckBox, wxluabaseclassnames_wxCheckBox, wxluabaseclassbinds_wxCheckBox, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxCheckBox && wxUSE_CHECKBOX

#if (wxLUA_USE_wxListBox && wxUSE_LISTBOX) && (wxLUA_USE_wxCheckListBox && wxUSE_CHECKLISTBOX)
        { wxluaclassname_wxCheckListBox, wxCheckListBox_methods, wxCheckListBox_methodCount, CLASSINFO(wxCheckListBox), &wxluatype_wxCheckListBox, wxluabaseclassnames_wxCheckListBox, wxluabaseclassbinds_wxCheckListBox, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxListBox && wxUSE_LISTBOX) && (wxLUA_USE_wxCheckListBox && wxUSE_CHECKLISTBOX)

        { wxluaclassname_wxChildFocusEvent, wxChildFocusEvent_methods, wxChildFocusEvent_methodCount, CLASSINFO(wxChildFocusEvent), &wxluatype_wxChildFocusEvent, wxluabaseclassnames_wxChildFocusEvent, wxluabaseclassbinds_wxChildFocusEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxChoice && wxUSE_CHOICE
        { wxluaclassname_wxChoice, wxChoice_methods, wxChoice_methodCount, CLASSINFO(wxChoice), &wxluatype_wxChoice, wxluabaseclassnames_wxChoice, wxluabaseclassbinds_wxChoice, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxChoice && wxUSE_CHOICE

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxChoice && wxUSE_CHOICEBOOK
        { wxluaclassname_wxChoicebook, wxChoicebook_methods, wxChoicebook_methodCount, CLASSINFO(wxChoicebook), &wxluatype_wxChoicebook, wxluabaseclassnames_wxChoicebook, wxluabaseclassbinds_wxChoicebook, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxChoicebookEvent, wxChoicebookEvent_methods, wxChoicebookEvent_methodCount, CLASSINFO(wxChoicebookEvent), &wxluatype_wxChoicebookEvent, wxluabaseclassnames_wxChoicebookEvent, wxluabaseclassbinds_wxChoicebookEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxChoice && wxUSE_CHOICEBOOK

#if wxLUA_USE_wxDC
        { wxluaclassname_wxClientDC, wxClientDC_methods, wxClientDC_methodCount, CLASSINFO(wxClientDC), &wxluatype_wxClientDC, wxluabaseclassnames_wxClientDC, wxluabaseclassbinds_wxClientDC, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDC

#if wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD
        { wxluaclassname_wxClipboard, wxClipboard_methods, wxClipboard_methodCount, CLASSINFO(wxClipboard), &wxluatype_wxClipboard, wxluabaseclassnames_wxClipboard, wxluabaseclassbinds_wxClipboard, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxClipboardLocker, wxClipboardLocker_methods, wxClipboardLocker_methodCount, NULL, &wxluatype_wxClipboardLocker, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD

#if (wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD) && (wxCHECK_VERSION(2,8,0))
        { wxluaclassname_wxClipboardTextEvent, wxClipboardTextEvent_methods, wxClipboardTextEvent_methodCount, CLASSINFO(wxClipboardTextEvent), &wxluatype_wxClipboardTextEvent, wxluabaseclassnames_wxClipboardTextEvent, wxluabaseclassbinds_wxClipboardTextEvent, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD) && (wxCHECK_VERSION(2,8,0))

        { wxluaclassname_wxCloseEvent, wxCloseEvent_methods, wxCloseEvent_methodCount, CLASSINFO(wxCloseEvent), &wxluatype_wxCloseEvent, wxluabaseclassnames_wxCloseEvent, wxluabaseclassbinds_wxCloseEvent, g_wxluanumberArray_None, 0, }, 

#if wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxCollapsiblePane && wxUSE_COLLPANE
        { wxluaclassname_wxCollapsiblePane, wxCollapsiblePane_methods, wxCollapsiblePane_methodCount, CLASSINFO(wxCollapsiblePane), &wxluatype_wxCollapsiblePane, wxluabaseclassnames_wxCollapsiblePane, wxluabaseclassbinds_wxCollapsiblePane, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxCollapsiblePaneEvent, wxCollapsiblePaneEvent_methods, wxCollapsiblePaneEvent_methodCount, CLASSINFO(wxCollapsiblePaneEvent), &wxluatype_wxCollapsiblePaneEvent, wxluabaseclassnames_wxCollapsiblePaneEvent, wxluabaseclassbinds_wxCollapsiblePaneEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxCollapsiblePane && wxUSE_COLLPANE

#if wxLUA_USE_wxColourPenBrush
        { wxluaclassname_wxColour, wxColour_methods, wxColour_methodCount, CLASSINFO(wxColour), &wxluatype_wxColour, wxluabaseclassnames_wxColour, wxluabaseclassbinds_wxColour, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxColourDialog && wxUSE_COLOURDLG
        { wxluaclassname_wxColourData, wxColourData_methods, wxColourData_methodCount, CLASSINFO(wxColourData), &wxluatype_wxColourData, wxluabaseclassnames_wxColourData, wxluabaseclassbinds_wxColourData, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxColourDialog && wxUSE_COLOURDLG

#if wxLUA_USE_wxColourPenBrush
        { wxluaclassname_wxColourDatabase, wxColourDatabase_methods, wxColourDatabase_methodCount, NULL, &wxluatype_wxColourDatabase, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxColourPenBrush

#if wxLUA_USE_wxColourDialog && wxUSE_COLOURDLG
        { wxluaclassname_wxColourDialog, wxColourDialog_methods, wxColourDialog_methodCount, CLASSINFO(wxColourDialog), &wxluatype_wxColourDialog, wxluabaseclassnames_wxColourDialog, wxluabaseclassbinds_wxColourDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxColourDialog && wxUSE_COLOURDLG

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxColourPickerCtrl && wxUSE_COLOURPICKERCTRL)
        { wxluaclassname_wxColourPickerCtrl, wxColourPickerCtrl_methods, wxColourPickerCtrl_methodCount, CLASSINFO(wxColourPickerCtrl), &wxluatype_wxColourPickerCtrl, wxluabaseclassnames_wxColourPickerCtrl, wxluabaseclassbinds_wxColourPickerCtrl, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxColourPickerEvent, wxColourPickerEvent_methods, wxColourPickerEvent_methodCount, CLASSINFO(wxColourPickerEvent), &wxluatype_wxColourPickerEvent, wxluabaseclassnames_wxColourPickerEvent, wxluabaseclassbinds_wxColourPickerEvent, g_wxluanumberArray_None, 0, }, 
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxColourPickerCtrl && wxUSE_COLOURPICKERCTRL)

#if wxLUA_USE_wxComboBox && wxUSE_COMBOBOX
        { wxluaclassname_wxComboBox, wxComboBox_methods, wxComboBox_methodCount, CLASSINFO(wxComboBox), &wxluatype_wxComboBox, wxluabaseclassnames_wxComboBox, wxluabaseclassbinds_wxComboBox, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxComboBox && wxUSE_COMBOBOX

#if wxLUA_USE_wxCommandProcessor
        { wxluaclassname_wxCommand, wxCommand_methods, wxCommand_methodCount, CLASSINFO(wxCommand), &wxluatype_wxCommand, wxluabaseclassnames_wxCommand, wxluabaseclassbinds_wxCommand, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxCommandProcessor

        { wxluaclassname_wxCommandEvent, wxCommandEvent_methods, wxCommandEvent_methodCount, CLASSINFO(wxCommandEvent), &wxluatype_wxCommandEvent, wxluabaseclassnames_wxCommandEvent, wxluabaseclassbinds_wxCommandEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxCommandProcessor
        { wxluaclassname_wxCommandProcessor, wxCommandProcessor_methods, wxCommandProcessor_methodCount, CLASSINFO(wxCommandProcessor), &wxluatype_wxCommandProcessor, wxluabaseclassnames_wxCommandProcessor, wxluabaseclassbinds_wxCommandProcessor, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxCommandProcessor

#if wxLUA_USE_wxHelpController && wxUSE_HELP
        { wxluaclassname_wxContextHelp, wxContextHelp_methods, wxContextHelp_methodCount, CLASSINFO(wxContextHelp), &wxluatype_wxContextHelp, wxluabaseclassnames_wxContextHelp, wxluabaseclassbinds_wxContextHelp, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxHelpController && wxUSE_HELP

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)
        { wxluaclassname_wxContextHelpButton, wxContextHelpButton_methods, wxContextHelpButton_methodCount, CLASSINFO(wxContextHelpButton), &wxluatype_wxContextHelpButton, wxluabaseclassnames_wxContextHelpButton, wxluabaseclassbinds_wxContextHelpButton, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)

        { wxluaclassname_wxContextMenuEvent, wxContextMenuEvent_methods, wxContextMenuEvent_methodCount, CLASSINFO(wxContextMenuEvent), &wxluatype_wxContextMenuEvent, wxluabaseclassnames_wxContextMenuEvent, wxluabaseclassbinds_wxContextMenuEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxControl, wxControl_methods, wxControl_methodCount, CLASSINFO(wxControl), &wxluatype_wxControl, wxluabaseclassnames_wxControl, wxluabaseclassbinds_wxControl, g_wxluanumberArray_None, 0, }, 

#if (wxLUA_USE_wxChoice || wxLUA_USE_wxComboBox || wxLUA_USE_wxListBox ) && wxUSE_CONTROLS
        { wxluaclassname_wxControlWithItems, wxControlWithItems_methods, wxControlWithItems_methodCount, CLASSINFO(wxControlWithItems), &wxluatype_wxControlWithItems, wxluabaseclassnames_wxControlWithItems, wxluabaseclassbinds_wxControlWithItems, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxChoice || wxLUA_USE_wxComboBox || wxLUA_USE_wxListBox ) && wxUSE_CONTROLS

#if wxLUA_USE_wxCursor
        { wxluaclassname_wxCursor, wxCursor_methods, wxCursor_methodCount, CLASSINFO(wxCursor), &wxluatype_wxCursor, wxluabaseclassnames_wxCursor, wxluabaseclassbinds_wxCursor, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxCursor

#if wxLUA_USE_wxDC
        { wxluaclassname_wxDC, wxDC_methods, wxDC_methodCount, CLASSINFO(wxDC), &wxluatype_wxDC, wxluabaseclassnames_wxDC, wxluabaseclassbinds_wxDC, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDCClipper, wxDCClipper_methods, wxDCClipper_methodCount, NULL, &wxluatype_wxDCClipper, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDC

#if wxLUA_USE_wxDataObject && wxUSE_DATAOBJ
        { wxluaclassname_wxDataFormat, wxDataFormat_methods, wxDataFormat_methodCount, NULL, &wxluatype_wxDataFormat, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDataObject, wxDataObject_methods, wxDataObject_methodCount, NULL, &wxluatype_wxDataObject, NULL, NULL, wxDataObject_enums, wxDataObject_enumCount, }, 
        { wxluaclassname_wxDataObjectComposite, wxDataObjectComposite_methods, wxDataObjectComposite_methodCount, NULL, &wxluatype_wxDataObjectComposite, wxluabaseclassnames_wxDataObjectComposite, wxluabaseclassbinds_wxDataObjectComposite, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDataObjectSimple, wxDataObjectSimple_methods, wxDataObjectSimple_methodCount, NULL, &wxluatype_wxDataObjectSimple, wxluabaseclassnames_wxDataObjectSimple, wxluabaseclassbinds_wxDataObjectSimple, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDataObject && wxUSE_DATAOBJ

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDatePickerCtrl && wxUSE_DATEPICKCTRL)
        { wxluaclassname_wxDatePickerCtrl, wxDatePickerCtrl_methods, wxDatePickerCtrl_methodCount, CLASSINFO(wxDatePickerCtrl), &wxluatype_wxDatePickerCtrl, wxluabaseclassnames_wxDatePickerCtrl, wxluabaseclassbinds_wxDatePickerCtrl, g_wxluanumberArray_None, 0, }, 
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDatePickerCtrl && wxUSE_DATEPICKCTRL)

#if wxLUA_USE_wxDialog
        { wxluaclassname_wxDialog, wxDialog_methods, wxDialog_methodCount, CLASSINFO(wxDialog), &wxluatype_wxDialog, wxluabaseclassnames_wxDialog, wxluabaseclassbinds_wxDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDialog

#if wxLUA_USE_wxDirDialog && wxUSE_DIRDLG
        { wxluaclassname_wxDirDialog, wxDirDialog_methods, wxDirDialog_methodCount, CLASSINFO(wxDirDialog), &wxluatype_wxDirDialog, wxluabaseclassnames_wxDirDialog, wxluabaseclassbinds_wxDirDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDirDialog && wxUSE_DIRDLG

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDirPickerCtrl && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))
        { wxluaclassname_wxDirPickerCtrl, wxDirPickerCtrl_methods, wxDirPickerCtrl_methodCount, CLASSINFO(wxDirPickerCtrl), &wxluatype_wxDirPickerCtrl, wxluabaseclassnames_wxDirPickerCtrl, wxluabaseclassbinds_wxDirPickerCtrl, g_wxluanumberArray_None, 0, }, 
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDirPickerCtrl && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))

#if wxLUA_USE_wxDisplay && wxUSE_DISPLAY
        { wxluaclassname_wxDisplay, wxDisplay_methods, wxDisplay_methodCount, NULL, &wxluatype_wxDisplay, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDisplay && wxUSE_DISPLAY

        { wxluaclassname_wxDisplayChangedEvent, wxDisplayChangedEvent_methods, wxDisplayChangedEvent_methodCount, CLASSINFO(wxDisplayChangedEvent), &wxluatype_wxDisplayChangedEvent, wxluabaseclassnames_wxDisplayChangedEvent, wxluabaseclassbinds_wxDisplayChangedEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
        { wxluaclassname_wxDocChildFrame, wxDocChildFrame_methods, wxDocChildFrame_methodCount, CLASSINFO(wxDocChildFrame), &wxluatype_wxDocChildFrame, wxluabaseclassnames_wxDocChildFrame, wxluabaseclassbinds_wxDocChildFrame, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDocMDIChildFrame, wxDocMDIChildFrame_methods, wxDocMDIChildFrame_methodCount, CLASSINFO(wxDocMDIChildFrame), &wxluatype_wxDocMDIChildFrame, wxluabaseclassnames_wxDocMDIChildFrame, wxluabaseclassbinds_wxDocMDIChildFrame, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDocMDIParentFrame, wxDocMDIParentFrame_methods, wxDocMDIParentFrame_methodCount, CLASSINFO(wxDocMDIParentFrame), &wxluatype_wxDocMDIParentFrame, wxluabaseclassnames_wxDocMDIParentFrame, wxluabaseclassbinds_wxDocMDIParentFrame, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDocManager, wxDocManager_methods, wxDocManager_methodCount, CLASSINFO(wxDocManager), &wxluatype_wxDocManager, wxluabaseclassnames_wxDocManager, wxluabaseclassbinds_wxDocManager, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDocParentFrame, wxDocParentFrame_methods, wxDocParentFrame_methodCount, CLASSINFO(wxDocParentFrame), &wxluatype_wxDocParentFrame, wxluabaseclassnames_wxDocParentFrame, wxluabaseclassbinds_wxDocParentFrame, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDocTemplate, wxDocTemplate_methods, wxDocTemplate_methodCount, CLASSINFO(wxDocTemplate), &wxluatype_wxDocTemplate, wxluabaseclassnames_wxDocTemplate, wxluabaseclassbinds_wxDocTemplate, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDocument, wxDocument_methods, wxDocument_methodCount, CLASSINFO(wxDocument), &wxluatype_wxDocument, wxluabaseclassnames_wxDocument, wxluabaseclassbinds_wxDocument, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE

#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
        { wxluaclassname_wxDropFilesEvent, wxDropFilesEvent_methods, wxDropFilesEvent_methodCount, CLASSINFO(wxDropFilesEvent), &wxluatype_wxDropFilesEvent, wxluabaseclassnames_wxDropFilesEvent, wxluabaseclassbinds_wxDropFilesEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDropSource, wxDropSource_methods, wxDropSource_methodCount, NULL, &wxluatype_wxDropSource, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDropTarget, wxDropTarget_methods, wxDropTarget_methodCount, NULL, &wxluatype_wxDropTarget, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP

        { wxluaclassname_wxEffects, wxEffects_methods, wxEffects_methodCount, CLASSINFO(wxEffects), &wxluatype_wxEffects, wxluabaseclassnames_wxEffects, wxluabaseclassbinds_wxEffects, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxEraseEvent, wxEraseEvent_methods, wxEraseEvent_methodCount, CLASSINFO(wxEraseEvent), &wxluatype_wxEraseEvent, wxluabaseclassnames_wxEraseEvent, wxluabaseclassbinds_wxEraseEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxEvent, wxEvent_methods, wxEvent_methodCount, CLASSINFO(wxEvent), &wxluatype_wxEvent, wxluabaseclassnames_wxEvent, wxluabaseclassbinds_wxEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxEvtHandler, wxEvtHandler_methods, wxEvtHandler_methodCount, CLASSINFO(wxEvtHandler), &wxluatype_wxEvtHandler, wxluabaseclassnames_wxEvtHandler, wxluabaseclassbinds_wxEvtHandler, g_wxluanumberArray_None, 0, }, 

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (!defined(__WXMSW__))
        { wxluaclassname_wxExtHelpController, wxExtHelpController_methods, wxExtHelpController_methodCount, CLASSINFO(wxExtHelpController), &wxluatype_wxExtHelpController, wxluabaseclassnames_wxExtHelpController, wxluabaseclassbinds_wxExtHelpController, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (!defined(__WXMSW__))

#if wxLUA_USE_wxDataObject && wxUSE_DATAOBJ
        { wxluaclassname_wxFileDataObject, wxFileDataObject_methods, wxFileDataObject_methodCount, NULL, &wxluatype_wxFileDataObject, wxluabaseclassnames_wxFileDataObject, wxluabaseclassbinds_wxFileDataObject, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDataObject && wxUSE_DATAOBJ

#if wxLUA_USE_wxFileDialog && wxUSE_FILEDLG
        { wxluaclassname_wxFileDialog, wxFileDialog_methods, wxFileDialog_methodCount, CLASSINFO(wxFileDialog), &wxluatype_wxFileDialog, wxluabaseclassnames_wxFileDialog, wxluabaseclassbinds_wxFileDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFileDialog && wxUSE_FILEDLG

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && ((wxLUA_USE_wxDirPickerCtrl || wxLUA_USE_wxFilePickerCtrl ) && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))
        { wxluaclassname_wxFileDirPickerCtrlBase, wxFileDirPickerCtrlBase_methods, wxFileDirPickerCtrlBase_methodCount, CLASSINFO(wxFileDirPickerCtrlBase), &wxluatype_wxFileDirPickerCtrlBase, wxluabaseclassnames_wxFileDirPickerCtrlBase, wxluabaseclassbinds_wxFileDirPickerCtrlBase, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxFileDirPickerEvent, wxFileDirPickerEvent_methods, wxFileDirPickerEvent_methodCount, CLASSINFO(wxFileDirPickerEvent), &wxluatype_wxFileDirPickerEvent, wxluabaseclassnames_wxFileDirPickerEvent, wxluabaseclassbinds_wxFileDirPickerEvent, g_wxluanumberArray_None, 0, }, 
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && ((wxLUA_USE_wxDirPickerCtrl || wxLUA_USE_wxFilePickerCtrl ) && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))

#if wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE
        { wxluaclassname_wxFileHistory, wxFileHistory_methods, wxFileHistory_methodCount, CLASSINFO(wxFileHistory), &wxluatype_wxFileHistory, wxluabaseclassnames_wxFileHistory, wxluabaseclassbinds_wxFileHistory, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFileHistory && wxUSE_DOC_VIEW_ARCHITECTURE

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDirPickerCtrl && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))
        { wxluaclassname_wxFilePickerCtrl, wxFilePickerCtrl_methods, wxFilePickerCtrl_methodCount, CLASSINFO(wxFilePickerCtrl), &wxluatype_wxFilePickerCtrl, wxluabaseclassnames_wxFilePickerCtrl, wxluabaseclassbinds_wxFilePickerCtrl, g_wxluanumberArray_None, 0, }, 
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxDirPickerCtrl && (wxUSE_FILEPICKERCTRL || wxUSE_DIRPICKERCTRL ))

#if wxUSE_FINDREPLDLG && wxLUA_USE_wxFindReplaceDialog
        { wxluaclassname_wxFindDialogEvent, wxFindDialogEvent_methods, wxFindDialogEvent_methodCount, CLASSINFO(wxFindDialogEvent), &wxluatype_wxFindDialogEvent, wxluabaseclassnames_wxFindDialogEvent, wxluabaseclassbinds_wxFindDialogEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxFindReplaceData, wxFindReplaceData_methods, wxFindReplaceData_methodCount, NULL, &wxluatype_wxFindReplaceData, wxluabaseclassnames_wxFindReplaceData, wxluabaseclassbinds_wxFindReplaceData, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxFindReplaceDialog, wxFindReplaceDialog_methods, wxFindReplaceDialog_methodCount, CLASSINFO(wxFindReplaceDialog), &wxluatype_wxFindReplaceDialog, wxluabaseclassnames_wxFindReplaceDialog, wxluabaseclassbinds_wxFindReplaceDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_FINDREPLDLG && wxLUA_USE_wxFindReplaceDialog

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))
        { wxluaclassname_wxFlexGridSizer, wxFlexGridSizer_methods, wxFlexGridSizer_methodCount, CLASSINFO(wxFlexGridSizer), &wxluatype_wxFlexGridSizer, wxluabaseclassnames_wxFlexGridSizer, wxluabaseclassbinds_wxFlexGridSizer, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))

        { wxluaclassname_wxFocusEvent, wxFocusEvent_methods, wxFocusEvent_methodCount, CLASSINFO(wxFocusEvent), &wxluatype_wxFocusEvent, wxluabaseclassnames_wxFocusEvent, wxluabaseclassbinds_wxFocusEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxFont
        { wxluaclassname_wxFont, wxFont_methods, wxFont_methodCount, CLASSINFO(wxFont), &wxluatype_wxFont, wxluabaseclassnames_wxFont, wxluabaseclassbinds_wxFont, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFont

#if wxUSE_FONTDLG && wxLUA_USE_wxFontDialog
        { wxluaclassname_wxFontData, wxFontData_methods, wxFontData_methodCount, CLASSINFO(wxFontData), &wxluatype_wxFontData, wxluabaseclassnames_wxFontData, wxluabaseclassbinds_wxFontData, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxFontDialog, wxFontDialog_methods, wxFontDialog_methodCount, CLASSINFO(wxFontDialog), &wxluatype_wxFontDialog, wxluabaseclassnames_wxFontDialog, wxluabaseclassbinds_wxFontDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_FONTDLG && wxLUA_USE_wxFontDialog

#if wxLUA_USE_wxFontEnumerator
        { wxluaclassname_wxFontEnumerator, wxFontEnumerator_methods, wxFontEnumerator_methodCount, NULL, &wxluatype_wxFontEnumerator, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFontEnumerator

#if wxLUA_USE_wxFontList
        { wxluaclassname_wxFontList, wxFontList_methods, wxFontList_methodCount, NULL, &wxluatype_wxFontList, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFontList

#if wxLUA_USE_wxFontMapper
        { wxluaclassname_wxFontMapper, wxFontMapper_methods, wxFontMapper_methodCount, NULL, &wxluatype_wxFontMapper, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFontMapper

#if (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxFontPickerCtrl && wxUSE_FONTPICKERCTRL)
        { wxluaclassname_wxFontPickerCtrl, wxFontPickerCtrl_methods, wxFontPickerCtrl_methodCount, CLASSINFO(wxFontPickerCtrl), &wxluatype_wxFontPickerCtrl, wxluabaseclassnames_wxFontPickerCtrl, wxluabaseclassbinds_wxFontPickerCtrl, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxFontPickerEvent, wxFontPickerEvent_methods, wxFontPickerEvent_methodCount, CLASSINFO(wxFontPickerEvent), &wxluatype_wxFontPickerEvent, wxluabaseclassnames_wxFontPickerEvent, wxluabaseclassbinds_wxFontPickerEvent, g_wxluanumberArray_None, 0, }, 
#endif // (wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker) && (wxLUA_USE_wxFontPickerCtrl && wxUSE_FONTPICKERCTRL)

#if wxLUA_USE_wxFrame
        { wxluaclassname_wxFrame, wxFrame_methods, wxFrame_methodCount, CLASSINFO(wxFrame), &wxluatype_wxFrame, wxluabaseclassnames_wxFrame, wxluabaseclassbinds_wxFrame, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFrame

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))
        { wxluaclassname_wxGBPosition, wxGBPosition_methods, wxGBPosition_methodCount, NULL, &wxluatype_wxGBPosition, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxGBSizerItem, wxGBSizerItem_methods, wxGBSizerItem_methodCount, CLASSINFO(wxGBSizerItem), &wxluatype_wxGBSizerItem, wxluabaseclassnames_wxGBSizerItem, wxluabaseclassbinds_wxGBSizerItem, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxGBSpan, wxGBSpan_methods, wxGBSpan_methodCount, NULL, &wxluatype_wxGBSpan, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))

        { wxluaclassname_wxGDIObject, wxGDIObject_methods, wxGDIObject_methodCount, CLASSINFO(wxGDIObject), &wxluatype_wxGDIObject, wxluabaseclassnames_wxGDIObject, wxluabaseclassbinds_wxGDIObject, g_wxluanumberArray_None, 0, }, 

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_GIF)
        { wxluaclassname_wxGIFHandler, wxGIFHandler_methods, wxGIFHandler_methodCount, CLASSINFO(wxGIFHandler), &wxluatype_wxGIFHandler, wxluabaseclassnames_wxGIFHandler, wxluabaseclassbinds_wxGIFHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_GIF)

#if wxLUA_USE_wxGauge && wxUSE_GAUGE
        { wxluaclassname_wxGauge, wxGauge_methods, wxGauge_methodCount, CLASSINFO(wxGauge), &wxluatype_wxGauge, wxluabaseclassnames_wxGauge, wxluabaseclassbinds_wxGauge, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxGauge && wxUSE_GAUGE

#if wxLUA_USE_wxGenericDirCtrl && wxUSE_DIRDLG
        { wxluaclassname_wxGenericDirCtrl, wxGenericDirCtrl_methods, wxGenericDirCtrl_methodCount, CLASSINFO(wxGenericDirCtrl), &wxluatype_wxGenericDirCtrl, wxluabaseclassnames_wxGenericDirCtrl, wxluabaseclassbinds_wxGenericDirCtrl, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxGenericDirCtrl && wxUSE_DIRDLG

#if (wxLUA_USE_wxValidator && wxUSE_VALIDATORS) && (wxLUA_USE_wxGenericValidator)
        { wxluaclassname_wxGenericValidator, wxGenericValidator_methods, wxGenericValidator_methodCount, CLASSINFO(wxGenericValidator), &wxluatype_wxGenericValidator, wxluabaseclassnames_wxGenericValidator, wxluabaseclassbinds_wxGenericValidator, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxValidator && wxUSE_VALIDATORS) && (wxLUA_USE_wxGenericValidator)

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))
        { wxluaclassname_wxGridBagSizer, wxGridBagSizer_methods, wxGridBagSizer_methodCount, CLASSINFO(wxGridBagSizer), &wxluatype_wxGridBagSizer, wxluabaseclassnames_wxGridBagSizer, wxluabaseclassbinds_wxGridBagSizer, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxGridSizer, wxGridSizer_methods, wxGridSizer_methodCount, CLASSINFO(wxGridSizer), &wxluatype_wxGridSizer, wxluabaseclassnames_wxGridSizer, wxluabaseclassbinds_wxGridSizer, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))

#if wxLUA_USE_wxRenderer
        { wxluaclassname_wxHeaderButtonParams, wxHeaderButtonParams_methods, wxHeaderButtonParams_methodCount, NULL, &wxluatype_wxHeaderButtonParams, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxRenderer

#if wxLUA_USE_wxHelpController && wxUSE_HELP
        { wxluaclassname_wxHelpController, wxHelpController_methods, wxHelpController_methodCount, CLASSINFO(wxHelpController), &wxluatype_wxHelpController, wxluabaseclassnames_wxHelpController, wxluabaseclassbinds_wxHelpController, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxHelpControllerBase, wxHelpControllerBase_methods, wxHelpControllerBase_methodCount, CLASSINFO(wxHelpControllerBase), &wxluatype_wxHelpControllerBase, wxluabaseclassnames_wxHelpControllerBase, wxluabaseclassbinds_wxHelpControllerBase, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxHelpControllerHelpProvider, wxHelpControllerHelpProvider_methods, wxHelpControllerHelpProvider_methodCount, NULL, &wxluatype_wxHelpControllerHelpProvider, wxluabaseclassnames_wxHelpControllerHelpProvider, wxluabaseclassbinds_wxHelpControllerHelpProvider, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxHelpController && wxUSE_HELP

        { wxluaclassname_wxHelpEvent, wxHelpEvent_methods, wxHelpEvent_methodCount, CLASSINFO(wxHelpEvent), &wxluatype_wxHelpEvent, wxluabaseclassnames_wxHelpEvent, wxluabaseclassbinds_wxHelpEvent, wxHelpEvent_enums, wxHelpEvent_enumCount, }, 

#if wxLUA_USE_wxHelpController && wxUSE_HELP
        { wxluaclassname_wxHelpProvider, wxHelpProvider_methods, wxHelpProvider_methodCount, NULL, &wxluatype_wxHelpProvider, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxHelpController && wxUSE_HELP

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_ICO_CUR)
        { wxluaclassname_wxICOHandler, wxICOHandler_methods, wxICOHandler_methodCount, CLASSINFO(wxICOHandler), &wxluatype_wxICOHandler, wxluabaseclassnames_wxICOHandler, wxluabaseclassbinds_wxICOHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_ICO_CUR)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_IFF)
        { wxluaclassname_wxIFFHandler, wxIFFHandler_methods, wxIFFHandler_methodCount, CLASSINFO(wxIFFHandler), &wxluatype_wxIFFHandler, wxluabaseclassnames_wxIFFHandler, wxluabaseclassbinds_wxIFFHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_IFF)

#if wxLUA_USE_wxIcon
        { wxluaclassname_wxIcon, wxIcon_methods, wxIcon_methodCount, CLASSINFO(wxIcon), &wxluatype_wxIcon, wxluabaseclassnames_wxIcon, wxluabaseclassbinds_wxIcon, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxIconBundle, wxIconBundle_methods, wxIconBundle_methodCount, NULL, &wxluatype_wxIconBundle, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxIcon

        { wxluaclassname_wxIconizeEvent, wxIconizeEvent_methods, wxIconizeEvent_methodCount, CLASSINFO(wxIconizeEvent), &wxluatype_wxIconizeEvent, wxluabaseclassnames_wxIconizeEvent, wxluabaseclassbinds_wxIconizeEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxIdleEvent, wxIdleEvent_methods, wxIdleEvent_methodCount, CLASSINFO(wxIdleEvent), &wxluatype_wxIdleEvent, wxluabaseclassnames_wxIdleEvent, wxluabaseclassbinds_wxIdleEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { wxluaclassname_wxImage, wxImage_methods, wxImage_methodCount, CLASSINFO(wxImage), &wxluatype_wxImage, wxluabaseclassnames_wxImage, wxluabaseclassbinds_wxImage, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxImageHandler, wxImageHandler_methods, wxImageHandler_methodCount, CLASSINFO(wxImageHandler), &wxluatype_wxImageHandler, wxluabaseclassnames_wxImageHandler, wxluabaseclassbinds_wxImageHandler, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxImageHistogram, wxImageHistogram_methods, wxImageHistogram_methodCount, NULL, &wxluatype_wxImageHistogram, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxImageHistogramEntry, wxImageHistogramEntry_methods, wxImageHistogramEntry_methodCount, NULL, &wxluatype_wxImageHistogramEntry, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxImageHistogram_iterator, wxImageHistogram_iterator_methods, wxImageHistogram_iterator_methodCount, NULL, &wxluatype_wxImageHistogram_iterator, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

#if wxLUA_USE_wxImageList
        { wxluaclassname_wxImageList, wxImageList_methods, wxImageList_methodCount, CLASSINFO(wxImageList), &wxluatype_wxImageList, wxluabaseclassnames_wxImageList, wxluabaseclassbinds_wxImageList, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxImageList

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { wxluaclassname_wxIndividualLayoutConstraint, wxIndividualLayoutConstraint_methods, wxIndividualLayoutConstraint_methodCount, CLASSINFO(wxIndividualLayoutConstraint), &wxluatype_wxIndividualLayoutConstraint, wxluabaseclassnames_wxIndividualLayoutConstraint, wxluabaseclassbinds_wxIndividualLayoutConstraint, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

        { wxluaclassname_wxInitDialogEvent, wxInitDialogEvent_methods, wxInitDialogEvent_methodCount, CLASSINFO(wxInitDialogEvent), &wxluatype_wxInitDialogEvent, wxluabaseclassnames_wxInitDialogEvent, wxluabaseclassbinds_wxInitDialogEvent, g_wxluanumberArray_None, 0, }, 

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBJPEG)
        { wxluaclassname_wxJPEGHandler, wxJPEGHandler_methods, wxJPEGHandler_methodCount, CLASSINFO(wxJPEGHandler), &wxluatype_wxJPEGHandler, wxluabaseclassnames_wxJPEGHandler, wxluabaseclassbinds_wxJPEGHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBJPEG)

        { wxluaclassname_wxKeyEvent, wxKeyEvent_methods, wxKeyEvent_methodCount, CLASSINFO(wxKeyEvent), &wxluatype_wxKeyEvent, wxluabaseclassnames_wxKeyEvent, wxluabaseclassbinds_wxKeyEvent, g_wxluanumberArray_None, 0, }, 

#if (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))
        { wxluaclassname_wxLayoutConstraints, wxLayoutConstraints_methods, wxLayoutConstraints_methodCount, CLASSINFO(wxLayoutConstraints), &wxluatype_wxLayoutConstraints, wxluabaseclassnames_wxLayoutConstraints, wxluabaseclassbinds_wxLayoutConstraints, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxSizer) && (wxLUA_USE_wxLayoutConstraints && (!wxCHECK_VERSION(2,6,0)))

#if wxLUA_USE_wxListBox && wxUSE_LISTBOX
        { wxluaclassname_wxListBox, wxListBox_methods, wxListBox_methodCount, CLASSINFO(wxListBox), &wxluatype_wxListBox, wxluabaseclassnames_wxListBox, wxluabaseclassbinds_wxListBox, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxListBox && wxUSE_LISTBOX

#if wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL
        { wxluaclassname_wxListCtrl, wxListCtrl_methods, wxListCtrl_methodCount, CLASSINFO(wxListCtrl), &wxluatype_wxListCtrl, wxluabaseclassnames_wxListCtrl, wxluabaseclassbinds_wxListCtrl, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxListEvent, wxListEvent_methods, wxListEvent_methodCount, CLASSINFO(wxListEvent), &wxluatype_wxListEvent, wxluabaseclassnames_wxListEvent, wxluabaseclassbinds_wxListEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxListItem, wxListItem_methods, wxListItem_methodCount, CLASSINFO(wxListItem), &wxluatype_wxListItem, wxluabaseclassnames_wxListItem, wxluabaseclassbinds_wxListItem, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxListItemAttr, wxListItemAttr_methods, wxListItemAttr_methodCount, NULL, &wxluatype_wxListItemAttr, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxListView, wxListView_methods, wxListView_methodCount, CLASSINFO(wxListView), &wxluatype_wxListView, wxluabaseclassnames_wxListView, wxluabaseclassbinds_wxListView, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL

#if wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK
        { wxluaclassname_wxListbook, wxListbook_methods, wxListbook_methodCount, CLASSINFO(wxListbook), &wxluatype_wxListbook, wxluabaseclassnames_wxListbook, wxluabaseclassbinds_wxListbook, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxListbookEvent, wxListbookEvent_methods, wxListbookEvent_methodCount, CLASSINFO(wxListbookEvent), &wxluatype_wxListbookEvent, wxluabaseclassnames_wxListbookEvent, wxluabaseclassbinds_wxListbookEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxNotebook && wxLUA_USE_wxListCtrl && wxUSE_LISTBOOK

#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxUSE_LOGGUI)
        { wxluaclassname_wxLogGui, wxLogGui_methods, wxLogGui_methodCount, NULL, &wxluatype_wxLogGui, wxluabaseclassnames_wxLogGui, wxluabaseclassbinds_wxLogGui, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxUSE_LOGGUI)

#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)
        { wxluaclassname_wxLogTextCtrl, wxLogTextCtrl_methods, wxLogTextCtrl_methodCount, NULL, &wxluatype_wxLogTextCtrl, wxluabaseclassnames_wxLogTextCtrl, wxluabaseclassbinds_wxLogTextCtrl, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)

#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxLogWindow && wxUSE_LOGWINDOW)
        { wxluaclassname_wxLogWindow, wxLogWindow_methods, wxLogWindow_methodCount, NULL, &wxluatype_wxLogWindow, wxluabaseclassnames_wxLogWindow, wxluabaseclassbinds_wxLogWindow, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxLogWindow && wxUSE_LOGWINDOW)

#if wxLUA_USE_wxArtProvider
        { wxluaclassname_wxLuaArtProvider, wxLuaArtProvider_methods, wxLuaArtProvider_methodCount, CLASSINFO(wxLuaArtProvider), &wxluatype_wxLuaArtProvider, wxluabaseclassnames_wxLuaArtProvider, wxluabaseclassbinds_wxLuaArtProvider, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxArtProvider

#if (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxLUA_USE_wxLuaPrintout)
        { wxluaclassname_wxLuaPrintout, wxLuaPrintout_methods, wxLuaPrintout_methodCount, CLASSINFO(wxLuaPrintout), &wxluatype_wxLuaPrintout, wxluabaseclassnames_wxLuaPrintout, wxluabaseclassbinds_wxLuaPrintout, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxLUA_USE_wxLuaPrintout)

#if wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL
        { wxluaclassname_wxLuaTreeItemData, wxLuaTreeItemData_methods, wxLuaTreeItemData_methodCount, NULL, &wxluatype_wxLuaTreeItemData, wxluabaseclassnames_wxLuaTreeItemData, wxluabaseclassbinds_wxLuaTreeItemData, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL

#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
        { wxluaclassname_wxMDIChildFrame, wxMDIChildFrame_methods, wxMDIChildFrame_methodCount, CLASSINFO(wxMDIChildFrame), &wxluatype_wxMDIChildFrame, wxluabaseclassnames_wxMDIChildFrame, wxluabaseclassbinds_wxMDIChildFrame, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxMDIClientWindow, wxMDIClientWindow_methods, wxMDIClientWindow_methodCount, CLASSINFO(wxMDIClientWindow), &wxluatype_wxMDIClientWindow, wxluabaseclassnames_wxMDIClientWindow, wxluabaseclassbinds_wxMDIClientWindow, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxMDIParentFrame, wxMDIParentFrame_methods, wxMDIParentFrame_methodCount, CLASSINFO(wxMDIParentFrame), &wxluatype_wxMDIParentFrame, wxluabaseclassnames_wxMDIParentFrame, wxluabaseclassbinds_wxMDIParentFrame, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE

#if wxLUA_USE_wxMask
        { wxluaclassname_wxMask, wxMask_methods, wxMask_methodCount, CLASSINFO(wxMask), &wxluatype_wxMask, wxluabaseclassnames_wxMask, wxluabaseclassbinds_wxMask, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxMask

        { wxluaclassname_wxMaximizeEvent, wxMaximizeEvent_methods, wxMaximizeEvent_methodCount, CLASSINFO(wxMaximizeEvent), &wxluatype_wxMaximizeEvent, wxluabaseclassnames_wxMaximizeEvent, wxluabaseclassbinds_wxMaximizeEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxDC
        { wxluaclassname_wxMemoryDC, wxMemoryDC_methods, wxMemoryDC_methodCount, CLASSINFO(wxMemoryDC), &wxluatype_wxMemoryDC, wxluabaseclassnames_wxMemoryDC, wxluabaseclassbinds_wxMemoryDC, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDC

#if wxUSE_STREAMS && wxUSE_FILESYSTEM
        { wxluaclassname_wxMemoryFSHandler, wxMemoryFSHandler_methods, wxMemoryFSHandler_methodCount, NULL, &wxluatype_wxMemoryFSHandler, wxluabaseclassnames_wxMemoryFSHandler, wxluabaseclassbinds_wxMemoryFSHandler, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_STREAMS && wxUSE_FILESYSTEM

#if wxLUA_USE_wxMenu && wxUSE_MENUS
        { wxluaclassname_wxMenu, wxMenu_methods, wxMenu_methodCount, CLASSINFO(wxMenu), &wxluatype_wxMenu, wxluabaseclassnames_wxMenu, wxluabaseclassbinds_wxMenu, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxMenuBar, wxMenuBar_methods, wxMenuBar_methodCount, CLASSINFO(wxMenuBar), &wxluatype_wxMenuBar, wxluabaseclassnames_wxMenuBar, wxluabaseclassbinds_wxMenuBar, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxMenuEvent, wxMenuEvent_methods, wxMenuEvent_methodCount, CLASSINFO(wxMenuEvent), &wxluatype_wxMenuEvent, wxluabaseclassnames_wxMenuEvent, wxluabaseclassbinds_wxMenuEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxMenuItem, wxMenuItem_methods, wxMenuItem_methodCount, CLASSINFO(wxMenuItem), &wxluatype_wxMenuItem, wxluabaseclassnames_wxMenuItem, wxluabaseclassbinds_wxMenuItem, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxMenuItemList, wxMenuItemList_methods, wxMenuItemList_methodCount, NULL, &wxluatype_wxMenuItemList, wxluabaseclassnames_wxMenuItemList, wxluabaseclassbinds_wxMenuItemList, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxMenu && wxUSE_MENUS

#if wxLUA_USE_wxMessageDialog && wxUSE_MSGDLG
        { wxluaclassname_wxMessageDialog, wxMessageDialog_methods, wxMessageDialog_methodCount, CLASSINFO(wxMessageDialog), &wxluatype_wxMessageDialog, wxluabaseclassnames_wxMessageDialog, wxluabaseclassbinds_wxMessageDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxMessageDialog && wxUSE_MSGDLG

#if wxLUA_USE_wxMetafile && wxUSE_METAFILE && (defined(__WXMSW__) || defined(__WXMAC__) || defined(__WXPM__))
        { wxluaclassname_wxMetafile, wxMetafile_methods, wxMetafile_methodCount, NULL, &wxluatype_wxMetafile, wxluabaseclassnames_wxMetafile, wxluabaseclassbinds_wxMetafile, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxMetafileDC, wxMetafileDC_methods, wxMetafileDC_methodCount, NULL, &wxluatype_wxMetafileDC, wxluabaseclassnames_wxMetafileDC, wxluabaseclassbinds_wxMetafileDC, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxMetafile && wxUSE_METAFILE && (defined(__WXMSW__) || defined(__WXMAC__) || defined(__WXPM__))

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)
        { wxluaclassname_wxMiniFrame, wxMiniFrame_methods, wxMiniFrame_methodCount, CLASSINFO(wxMiniFrame), &wxluatype_wxMiniFrame, wxluabaseclassnames_wxMiniFrame, wxluabaseclassbinds_wxMiniFrame, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)

#if wxLUA_USE_wxDC
        { wxluaclassname_wxMirrorDC, wxMirrorDC_methods, wxMirrorDC_methodCount, CLASSINFO(wxMirrorDC), &wxluatype_wxMirrorDC, wxluabaseclassnames_wxMirrorDC, wxluabaseclassbinds_wxMirrorDC, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDC

        { wxluaclassname_wxMouseCaptureChangedEvent, wxMouseCaptureChangedEvent_methods, wxMouseCaptureChangedEvent_methodCount, CLASSINFO(wxMouseCaptureChangedEvent), &wxluatype_wxMouseCaptureChangedEvent, wxluabaseclassnames_wxMouseCaptureChangedEvent, wxluabaseclassbinds_wxMouseCaptureChangedEvent, g_wxluanumberArray_None, 0, }, 

#if wxCHECK_VERSION(2,8,0)
        { wxluaclassname_wxMouseCaptureLostEvent, wxMouseCaptureLostEvent_methods, wxMouseCaptureLostEvent_methodCount, CLASSINFO(wxMouseCaptureLostEvent), &wxluatype_wxMouseCaptureLostEvent, wxluabaseclassnames_wxMouseCaptureLostEvent, wxluabaseclassbinds_wxMouseCaptureLostEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxCHECK_VERSION(2,8,0)

        { wxluaclassname_wxMouseEvent, wxMouseEvent_methods, wxMouseEvent_methodCount, CLASSINFO(wxMouseEvent), &wxluatype_wxMouseEvent, wxluabaseclassnames_wxMouseEvent, wxluabaseclassbinds_wxMouseEvent, g_wxluanumberArray_None, 0, }, 

#if wxCHECK_VERSION(2,8,0)
        { wxluaclassname_wxMouseState, wxMouseState_methods, wxMouseState_methodCount, NULL, &wxluatype_wxMouseState, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxCHECK_VERSION(2,8,0)

        { wxluaclassname_wxMoveEvent, wxMoveEvent_methods, wxMoveEvent_methodCount, CLASSINFO(wxMoveEvent), &wxluatype_wxMoveEvent, wxluabaseclassnames_wxMoveEvent, wxluabaseclassbinds_wxMoveEvent, g_wxluanumberArray_None, 0, }, 

#if wxUSE_CHOICEDLG && wxLUA_USE_wxMultiChoiceDialog
        { wxluaclassname_wxMultiChoiceDialog, wxMultiChoiceDialog_methods, wxMultiChoiceDialog_methodCount, CLASSINFO(wxMultiChoiceDialog), &wxluatype_wxMultiChoiceDialog, wxluabaseclassnames_wxMultiChoiceDialog, wxluabaseclassbinds_wxMultiChoiceDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_CHOICEDLG && wxLUA_USE_wxMultiChoiceDialog

#if wxLUA_USE_wxFont
        { wxluaclassname_wxNativeFontInfo, wxNativeFontInfo_methods, wxNativeFontInfo_methodCount, NULL, &wxluatype_wxNativeFontInfo, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFont

        { wxluaclassname_wxNavigationKeyEvent, wxNavigationKeyEvent_methods, wxNavigationKeyEvent_methodCount, CLASSINFO(wxNavigationKeyEvent), &wxluatype_wxNavigationKeyEvent, wxluabaseclassnames_wxNavigationKeyEvent, wxluabaseclassbinds_wxNavigationKeyEvent, wxNavigationKeyEvent_enums, wxNavigationKeyEvent_enumCount, }, 

#if wxLUA_USE_wxNotebook && wxUSE_NOTEBOOK
        { wxluaclassname_wxNotebook, wxNotebook_methods, wxNotebook_methodCount, CLASSINFO(wxNotebook), &wxluatype_wxNotebook, wxluabaseclassnames_wxNotebook, wxluabaseclassbinds_wxNotebook, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxNotebookEvent, wxNotebookEvent_methods, wxNotebookEvent_methodCount, CLASSINFO(wxNotebookEvent), &wxluatype_wxNotebookEvent, wxluabaseclassnames_wxNotebookEvent, wxluabaseclassbinds_wxNotebookEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxNotebook && wxUSE_NOTEBOOK

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_NOTEBOOK && (!wxCHECK_VERSION(2,6,0)))
        { wxluaclassname_wxNotebookSizer, wxNotebookSizer_methods, wxNotebookSizer_methodCount, CLASSINFO(wxNotebookSizer), &wxluatype_wxNotebookSizer, wxluabaseclassnames_wxNotebookSizer, wxluabaseclassbinds_wxNotebookSizer, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_NOTEBOOK && (!wxCHECK_VERSION(2,6,0)))

        { wxluaclassname_wxNotifyEvent, wxNotifyEvent_methods, wxNotifyEvent_methodCount, CLASSINFO(wxNotifyEvent), &wxluatype_wxNotifyEvent, wxluabaseclassnames_wxNotifyEvent, wxluabaseclassbinds_wxNotifyEvent, g_wxluanumberArray_None, 0, }, 

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_PCX)
        { wxluaclassname_wxPCXHandler, wxPCXHandler_methods, wxPCXHandler_methodCount, CLASSINFO(wxPCXHandler), &wxluatype_wxPCXHandler, wxluabaseclassnames_wxPCXHandler, wxluabaseclassbinds_wxPCXHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_PCX)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBPNG)
        { wxluaclassname_wxPNGHandler, wxPNGHandler_methods, wxPNGHandler_methodCount, CLASSINFO(wxPNGHandler), &wxluatype_wxPNGHandler, wxluabaseclassnames_wxPNGHandler, wxluabaseclassbinds_wxPNGHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBPNG)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_PNM)
        { wxluaclassname_wxPNMHandler, wxPNMHandler_methods, wxPNMHandler_methodCount, CLASSINFO(wxPNMHandler), &wxluatype_wxPNMHandler, wxluabaseclassnames_wxPNMHandler, wxluabaseclassbinds_wxPNMHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_PNM)

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { wxluaclassname_wxPageSetupDialog, wxPageSetupDialog_methods, wxPageSetupDialog_methodCount, CLASSINFO(wxPageSetupDialog), &wxluatype_wxPageSetupDialog, wxluabaseclassnames_wxPageSetupDialog, wxluabaseclassbinds_wxPageSetupDialog, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxPageSetupDialogData, wxPageSetupDialogData_methods, wxPageSetupDialogData_methodCount, CLASSINFO(wxPageSetupDialogData), &wxluatype_wxPageSetupDialogData, wxluabaseclassnames_wxPageSetupDialogData, wxluabaseclassbinds_wxPageSetupDialogData, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if wxLUA_USE_wxDC
        { wxluaclassname_wxPaintDC, wxPaintDC_methods, wxPaintDC_methodCount, CLASSINFO(wxPaintDC), &wxluatype_wxPaintDC, wxluabaseclassnames_wxPaintDC, wxluabaseclassbinds_wxPaintDC, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDC

        { wxluaclassname_wxPaintEvent, wxPaintEvent_methods, wxPaintEvent_methodCount, CLASSINFO(wxPaintEvent), &wxluatype_wxPaintEvent, wxluabaseclassnames_wxPaintEvent, wxluabaseclassbinds_wxPaintEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxPalette && wxUSE_PALETTE
        { wxluaclassname_wxPalette, wxPalette_methods, wxPalette_methodCount, CLASSINFO(wxPalette), &wxluatype_wxPalette, wxluabaseclassnames_wxPalette, wxluabaseclassbinds_wxPalette, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxPalette && wxUSE_PALETTE

        { wxluaclassname_wxPaletteChangedEvent, wxPaletteChangedEvent_methods, wxPaletteChangedEvent_methodCount, CLASSINFO(wxPaletteChangedEvent), &wxluatype_wxPaletteChangedEvent, wxluabaseclassnames_wxPaletteChangedEvent, wxluabaseclassbinds_wxPaletteChangedEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxPanel, wxPanel_methods, wxPanel_methodCount, CLASSINFO(wxPanel), &wxluatype_wxPanel, wxluabaseclassnames_wxPanel, wxluabaseclassbinds_wxPanel, g_wxluanumberArray_None, 0, }, 

#if wxUSE_TEXTDLG && wxLUA_USE_wxTextEntryDialog
        { wxluaclassname_wxPasswordEntryDialog, wxPasswordEntryDialog_methods, wxPasswordEntryDialog_methodCount, CLASSINFO(wxPasswordEntryDialog), &wxluatype_wxPasswordEntryDialog, wxluabaseclassnames_wxPasswordEntryDialog, wxluabaseclassbinds_wxPasswordEntryDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_TEXTDLG && wxLUA_USE_wxTextEntryDialog

#if wxLUA_USE_wxColourPenBrush
        { wxluaclassname_wxPen, wxPen_methods, wxPen_methodCount, CLASSINFO(wxPen), &wxluatype_wxPen, wxluabaseclassnames_wxPen, wxluabaseclassbinds_wxPen, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxColourPenBrush

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPenList)
        { wxluaclassname_wxPenList, wxPenList_methods, wxPenList_methodCount, NULL, &wxluatype_wxPenList, wxluabaseclassnames_wxPenList, wxluabaseclassbinds_wxPenList, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPenList)

#if wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker
        { wxluaclassname_wxPickerBase, wxPickerBase_methods, wxPickerBase_methodCount, CLASSINFO(wxPickerBase), &wxluatype_wxPickerBase, wxluabaseclassnames_wxPickerBase, wxluabaseclassbinds_wxPickerBase, g_wxluanumberArray_None, 0, }, 
#endif // wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxPicker

#if wxLUA_USE_wxPointSizeRect
        { wxluaclassname_wxPoint, wxPoint_methods, wxPoint_methodCount, NULL, &wxluatype_wxPoint, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxPointSizeRect

#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
        { wxluaclassname_wxPoint2DDouble, wxPoint2DDouble_methods, wxPoint2DDouble_methodCount, NULL, &wxluatype_wxPoint2DDouble, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxPoint2DInt, wxPoint2DInt_methods, wxPoint2DInt_methodCount, NULL, &wxluatype_wxPoint2DInt, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_Geometry && wxUSE_GEOMETRY

#if (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxUSE_POSTSCRIPT)
        { wxluaclassname_wxPostScriptDC, wxPostScriptDC_methods, wxPostScriptDC_methodCount, CLASSINFO(wxPostScriptDC), &wxluatype_wxPostScriptDC, wxluabaseclassnames_wxPostScriptDC, wxluabaseclassbinds_wxPostScriptDC, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxUSE_POSTSCRIPT)

#if (wxCHECK_VERSION(2,8,0)) && (defined(wxHAS_POWER_EVENTS))
        { wxluaclassname_wxPowerEvent, wxPowerEvent_methods, wxPowerEvent_methodCount, CLASSINFO(wxPowerEvent), &wxluatype_wxPowerEvent, wxluabaseclassnames_wxPowerEvent, wxluabaseclassbinds_wxPowerEvent, g_wxluanumberArray_None, 0, }, 
#endif // (wxCHECK_VERSION(2,8,0)) && (defined(wxHAS_POWER_EVENTS))

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { wxluaclassname_wxPreviewCanvas, wxPreviewCanvas_methods, wxPreviewCanvas_methodCount, CLASSINFO(wxPreviewCanvas), &wxluatype_wxPreviewCanvas, wxluabaseclassnames_wxPreviewCanvas, wxluabaseclassbinds_wxPreviewCanvas, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxPreviewControlBar, wxPreviewControlBar_methods, wxPreviewControlBar_methodCount, CLASSINFO(wxPreviewControlBar), &wxluatype_wxPreviewControlBar, wxluabaseclassnames_wxPreviewControlBar, wxluabaseclassbinds_wxPreviewControlBar, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxLUA_USE_wxLuaPrintout)
        { wxluaclassname_wxPreviewFrame, wxPreviewFrame_methods, wxPreviewFrame_methodCount, CLASSINFO(wxPreviewFrame), &wxluatype_wxPreviewFrame, wxluabaseclassnames_wxPreviewFrame, wxluabaseclassbinds_wxPreviewFrame, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxLUA_USE_wxLuaPrintout)

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { wxluaclassname_wxPrintData, wxPrintData_methods, wxPrintData_methodCount, CLASSINFO(wxPrintData), &wxluatype_wxPrintData, wxluabaseclassnames_wxPrintData, wxluabaseclassbinds_wxPrintData, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxPrintDialog, wxPrintDialog_methods, wxPrintDialog_methodCount, CLASSINFO(wxPrintDialog), &wxluatype_wxPrintDialog, wxluabaseclassnames_wxPrintDialog, wxluabaseclassbinds_wxPrintDialog, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxPrintDialogData, wxPrintDialogData_methods, wxPrintDialogData_methodCount, CLASSINFO(wxPrintDialogData), &wxluatype_wxPrintDialogData, wxluabaseclassnames_wxPrintDialogData, wxluabaseclassbinds_wxPrintDialogData, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxLUA_USE_wxLuaPrintout)
        { wxluaclassname_wxPrintPreview, wxPrintPreview_methods, wxPrintPreview_methodCount, CLASSINFO(wxPrintPreview), &wxluatype_wxPrintPreview, wxluabaseclassnames_wxPrintPreview, wxluabaseclassbinds_wxPrintPreview, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxPrinter, wxPrinter_methods, wxPrinter_methodCount, CLASSINFO(wxPrinter), &wxluatype_wxPrinter, wxluabaseclassnames_wxPrinter, wxluabaseclassbinds_wxPrinter, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (wxLUA_USE_wxLuaPrintout)

#if (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (defined(__WXMSW__) || defined(__WXMAC__))
        { wxluaclassname_wxPrinterDC, wxPrinterDC_methods, wxPrinterDC_methodCount, CLASSINFO(wxPrinterDC), &wxluatype_wxPrinterDC, wxluabaseclassnames_wxPrinterDC, wxluabaseclassbinds_wxPrinterDC, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE) && (defined(__WXMSW__) || defined(__WXMAC__))

#if wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE
        { wxluaclassname_wxPrintout, wxPrintout_methods, wxPrintout_methodCount, CLASSINFO(wxPrintout), &wxluatype_wxPrintout, wxluabaseclassnames_wxPrintout, wxluabaseclassbinds_wxPrintout, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE

#if wxLUA_USE_wxProcess
        { wxluaclassname_wxProcess, wxProcess_methods, wxProcess_methodCount, CLASSINFO(wxProcess), &wxluatype_wxProcess, wxluabaseclassnames_wxProcess, wxluabaseclassbinds_wxProcess, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxProcess

        { wxluaclassname_wxProcessEvent, wxProcessEvent_methods, wxProcessEvent_methodCount, CLASSINFO(wxProcessEvent), &wxluatype_wxProcessEvent, wxluabaseclassnames_wxProcessEvent, wxluabaseclassbinds_wxProcessEvent, g_wxluanumberArray_None, 0, }, 

#if wxUSE_PROGRESSDLG && wxLUA_USE_wxProgressDialog
        { wxluaclassname_wxProgressDialog, wxProgressDialog_methods, wxProgressDialog_methodCount, CLASSINFO(wxProgressDialog), &wxluatype_wxProgressDialog, wxluabaseclassnames_wxProgressDialog, wxluabaseclassbinds_wxProgressDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_PROGRESSDLG && wxLUA_USE_wxProgressDialog

        { wxluaclassname_wxPropagateOnce, wxPropagateOnce_methods, wxPropagateOnce_methodCount, NULL, &wxluatype_wxPropagateOnce, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxPropagationDisabler, wxPropagationDisabler_methods, wxPropagationDisabler_methodCount, NULL, &wxluatype_wxPropagationDisabler, NULL, NULL, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { wxluaclassname_wxQuantize, wxQuantize_methods, wxQuantize_methodCount, CLASSINFO(wxQuantize), &wxluatype_wxQuantize, wxluabaseclassnames_wxQuantize, wxluabaseclassbinds_wxQuantize, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE

        { wxluaclassname_wxQueryNewPaletteEvent, wxQueryNewPaletteEvent_methods, wxQueryNewPaletteEvent_methodCount, CLASSINFO(wxQueryNewPaletteEvent), &wxluatype_wxQueryNewPaletteEvent, wxluabaseclassnames_wxQueryNewPaletteEvent, wxluabaseclassbinds_wxQueryNewPaletteEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxRadioBox && wxUSE_RADIOBOX
        { wxluaclassname_wxRadioBox, wxRadioBox_methods, wxRadioBox_methodCount, CLASSINFO(wxRadioBox), &wxluatype_wxRadioBox, wxluabaseclassnames_wxRadioBox, wxluabaseclassbinds_wxRadioBox, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxRadioBox && wxUSE_RADIOBOX

#if wxLUA_USE_wxRadioButton && wxUSE_RADIOBTN
        { wxluaclassname_wxRadioButton, wxRadioButton_methods, wxRadioButton_methodCount, CLASSINFO(wxRadioButton), &wxluatype_wxRadioButton, wxluabaseclassnames_wxRadioButton, wxluabaseclassbinds_wxRadioButton, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxRadioButton && wxUSE_RADIOBTN

#if wxLUA_USE_wxPointSizeRect
        { wxluaclassname_wxRect, wxRect_methods, wxRect_methodCount, NULL, &wxluatype_wxRect, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxPointSizeRect

#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
        { wxluaclassname_wxRect2DDouble, wxRect2DDouble_methods, wxRect2DDouble_methodCount, NULL, &wxluatype_wxRect2DDouble, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxRect2DInt, wxRect2DInt_methods, wxRect2DInt_methodCount, NULL, &wxluatype_wxRect2DInt, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_Geometry && wxUSE_GEOMETRY

#if wxLUA_USE_wxRegion
        { wxluaclassname_wxRegion, wxRegion_methods, wxRegion_methodCount, CLASSINFO(wxRegion), &wxluatype_wxRegion, wxluabaseclassnames_wxRegion, wxluabaseclassbinds_wxRegion, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxRegionIterator, wxRegionIterator_methods, wxRegionIterator_methodCount, CLASSINFO(wxRegionIterator), &wxluatype_wxRegionIterator, wxluabaseclassnames_wxRegionIterator, wxluabaseclassbinds_wxRegionIterator, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxRegion

#if wxLUA_USE_wxRenderer
        { wxluaclassname_wxRendererNative, wxRendererNative_methods, wxRendererNative_methodCount, NULL, &wxluatype_wxRendererNative, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxRendererVersion, wxRendererVersion_methods, wxRendererVersion_methodCount, NULL, &wxluatype_wxRendererVersion, NULL, NULL, wxRendererVersion_enums, wxRendererVersion_enumCount, }, 
#endif // wxLUA_USE_wxRenderer

#if wxLUA_USE_wxDC
        { wxluaclassname_wxScreenDC, wxScreenDC_methods, wxScreenDC_methodCount, CLASSINFO(wxScreenDC), &wxluatype_wxScreenDC, wxluabaseclassnames_wxScreenDC, wxluabaseclassbinds_wxScreenDC, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDC

#if wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR
        { wxluaclassname_wxScrollBar, wxScrollBar_methods, wxScrollBar_methodCount, CLASSINFO(wxScrollBar), &wxluatype_wxScrollBar, wxluabaseclassnames_wxScrollBar, wxluabaseclassbinds_wxScrollBar, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxScrollBar && wxUSE_SCROLLBAR

        { wxluaclassname_wxScrollEvent, wxScrollEvent_methods, wxScrollEvent_methodCount, CLASSINFO(wxScrollEvent), &wxluatype_wxScrollEvent, wxluabaseclassnames_wxScrollEvent, wxluabaseclassbinds_wxScrollEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxScrollWinEvent, wxScrollWinEvent_methods, wxScrollWinEvent_methodCount, CLASSINFO(wxScrollWinEvent), &wxluatype_wxScrollWinEvent, wxluabaseclassnames_wxScrollWinEvent, wxluabaseclassbinds_wxScrollWinEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxScrolledWindow
        { wxluaclassname_wxScrolledWindow, wxScrolledWindow_methods, wxScrolledWindow_methodCount, CLASSINFO(wxScrolledWindow), &wxluatype_wxScrolledWindow, wxluabaseclassnames_wxScrolledWindow, wxluabaseclassbinds_wxScrolledWindow, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxScrolledWindow

        { wxluaclassname_wxSetCursorEvent, wxSetCursorEvent_methods, wxSetCursorEvent_methodCount, CLASSINFO(wxSetCursorEvent), &wxluatype_wxSetCursorEvent, wxluabaseclassnames_wxSetCursorEvent, wxluabaseclassbinds_wxSetCursorEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxShowEvent, wxShowEvent_methods, wxShowEvent_methodCount, CLASSINFO(wxShowEvent), &wxluatype_wxShowEvent, wxluabaseclassnames_wxShowEvent, wxluabaseclassbinds_wxShowEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxHelpController && wxUSE_HELP
        { wxluaclassname_wxSimpleHelpProvider, wxSimpleHelpProvider_methods, wxSimpleHelpProvider_methodCount, NULL, &wxluatype_wxSimpleHelpProvider, wxluabaseclassnames_wxSimpleHelpProvider, wxluabaseclassbinds_wxSimpleHelpProvider, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxHelpController && wxUSE_HELP

#if wxUSE_CHOICEDLG && wxLUA_USE_wxSingleChoiceDialog
        { wxluaclassname_wxSingleChoiceDialog, wxSingleChoiceDialog_methods, wxSingleChoiceDialog_methodCount, CLASSINFO(wxSingleChoiceDialog), &wxluatype_wxSingleChoiceDialog, wxluabaseclassnames_wxSingleChoiceDialog, wxluabaseclassbinds_wxSingleChoiceDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_CHOICEDLG && wxLUA_USE_wxSingleChoiceDialog

#if wxLUA_USE_wxPointSizeRect
        { wxluaclassname_wxSize, wxSize_methods, wxSize_methodCount, NULL, &wxluatype_wxSize, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxPointSizeRect

        { wxluaclassname_wxSizeEvent, wxSizeEvent_methods, wxSizeEvent_methodCount, CLASSINFO(wxSizeEvent), &wxluatype_wxSizeEvent, wxluabaseclassnames_wxSizeEvent, wxluabaseclassbinds_wxSizeEvent, g_wxluanumberArray_None, 0, }, 

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))
        { wxluaclassname_wxSizer, wxSizer_methods, wxSizer_methodCount, CLASSINFO(wxSizer), &wxluatype_wxSizer, wxluabaseclassnames_wxSizer, wxluabaseclassbinds_wxSizer, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxSizerFlags, wxSizerFlags_methods, wxSizerFlags_methodCount, NULL, &wxluatype_wxSizerFlags, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxSizerItem, wxSizerItem_methods, wxSizerItem_methodCount, CLASSINFO(wxSizerItem), &wxluatype_wxSizerItem, wxluabaseclassnames_wxSizerItem, wxluabaseclassbinds_wxSizerItem, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))

#if wxLUA_USE_wxSlider && wxUSE_SLIDER
        { wxluaclassname_wxSlider, wxSlider_methods, wxSlider_methodCount, CLASSINFO(wxSlider), &wxluatype_wxSlider, wxluabaseclassnames_wxSlider, wxluabaseclassbinds_wxSlider, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxSlider && wxUSE_SLIDER

#if wxLUA_USE_wxSpinButton && wxUSE_SPINBTN
        { wxluaclassname_wxSpinButton, wxSpinButton_methods, wxSpinButton_methodCount, CLASSINFO(wxSpinButton), &wxluatype_wxSpinButton, wxluabaseclassnames_wxSpinButton, wxluabaseclassbinds_wxSpinButton, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxSpinButton && wxUSE_SPINBTN

#if wxLUA_USE_wxSpinCtrl && wxUSE_SPINCTRL
        { wxluaclassname_wxSpinCtrl, wxSpinCtrl_methods, wxSpinCtrl_methodCount, CLASSINFO(wxSpinCtrl), &wxluatype_wxSpinCtrl, wxluabaseclassnames_wxSpinCtrl, wxluabaseclassbinds_wxSpinCtrl, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxSpinCtrl && wxUSE_SPINCTRL

#if wxLUA_USE_wxSpinButton && wxUSE_SPINBTN
        { wxluaclassname_wxSpinEvent, wxSpinEvent_methods, wxSpinEvent_methodCount, CLASSINFO(wxSpinEvent), &wxluatype_wxSpinEvent, wxluabaseclassnames_wxSpinEvent, wxluabaseclassbinds_wxSpinEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxSpinButton && wxUSE_SPINBTN

#if wxLUA_USE_wxSplitterWindow
        { wxluaclassname_wxSplitterEvent, wxSplitterEvent_methods, wxSplitterEvent_methodCount, CLASSINFO(wxSplitterEvent), &wxluatype_wxSplitterEvent, wxluabaseclassnames_wxSplitterEvent, wxluabaseclassbinds_wxSplitterEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxSplitterWindow

#if wxLUA_USE_wxRenderer
        { wxluaclassname_wxSplitterRenderParams, wxSplitterRenderParams_methods, wxSplitterRenderParams_methodCount, NULL, &wxluatype_wxSplitterRenderParams, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxRenderer

#if wxLUA_USE_wxSplitterWindow
        { wxluaclassname_wxSplitterWindow, wxSplitterWindow_methods, wxSplitterWindow_methodCount, CLASSINFO(wxSplitterWindow), &wxluatype_wxSplitterWindow, wxluabaseclassnames_wxSplitterWindow, wxluabaseclassbinds_wxSplitterWindow, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxSplitterWindow

#if wxLUA_USE_wxStaticBitmap && wxUSE_STATBMP
        { wxluaclassname_wxStaticBitmap, wxStaticBitmap_methods, wxStaticBitmap_methodCount, CLASSINFO(wxStaticBitmap), &wxluatype_wxStaticBitmap, wxluabaseclassnames_wxStaticBitmap, wxluabaseclassbinds_wxStaticBitmap, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxStaticBitmap && wxUSE_STATBMP

#if wxLUA_USE_wxStaticBox && wxUSE_STATBOX
        { wxluaclassname_wxStaticBox, wxStaticBox_methods, wxStaticBox_methodCount, CLASSINFO(wxStaticBox), &wxluatype_wxStaticBox, wxluabaseclassnames_wxStaticBox, wxluabaseclassbinds_wxStaticBox, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxStaticBox && wxUSE_STATBOX

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_STATBOX)
        { wxluaclassname_wxStaticBoxSizer, wxStaticBoxSizer_methods, wxStaticBoxSizer_methodCount, CLASSINFO(wxStaticBoxSizer), &wxluatype_wxStaticBoxSizer, wxluabaseclassnames_wxStaticBoxSizer, wxluabaseclassbinds_wxStaticBoxSizer, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_STATBOX)

#if wxLUA_USE_wxStaticLine && wxUSE_STATLINE
        { wxluaclassname_wxStaticLine, wxStaticLine_methods, wxStaticLine_methodCount, CLASSINFO(wxStaticLine), &wxluatype_wxStaticLine, wxluabaseclassnames_wxStaticLine, wxluabaseclassbinds_wxStaticLine, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxStaticLine && wxUSE_STATLINE

#if wxLUA_USE_wxStaticText && wxUSE_STATTEXT
        { wxluaclassname_wxStaticText, wxStaticText_methods, wxStaticText_methodCount, CLASSINFO(wxStaticText), &wxluatype_wxStaticText, wxluabaseclassnames_wxStaticText, wxluabaseclassbinds_wxStaticText, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxStaticText && wxUSE_STATTEXT

#if wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR
        { wxluaclassname_wxStatusBar, wxStatusBar_methods, wxStatusBar_methodCount, CLASSINFO(wxStatusBar), &wxluatype_wxStatusBar, wxluabaseclassnames_wxStatusBar, wxluabaseclassbinds_wxStatusBar, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR

#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_BUTTON)
        { wxluaclassname_wxStdDialogButtonSizer, wxStdDialogButtonSizer_methods, wxStdDialogButtonSizer_methodCount, CLASSINFO(wxStdDialogButtonSizer), &wxluatype_wxStdDialogButtonSizer, wxluabaseclassnames_wxStdDialogButtonSizer, wxluabaseclassbinds_wxStdDialogButtonSizer, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0)) && (wxUSE_BUTTON)

#if (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))
        { wxluaclassname_wxStockGDI, wxStockGDI_methods, wxStockGDI_methodCount, NULL, &wxluatype_wxStockGDI, NULL, NULL, wxStockGDI_enums, wxStockGDI_enumCount, }, 
#endif // (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))

        { wxluaclassname_wxSysColourChangedEvent, wxSysColourChangedEvent_methods, wxSysColourChangedEvent_methodCount, CLASSINFO(wxSysColourChangedEvent), &wxluatype_wxSysColourChangedEvent, wxluabaseclassnames_wxSysColourChangedEvent, wxluabaseclassbinds_wxSysColourChangedEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxSystemSettings
        { wxluaclassname_wxSystemSettings, wxSystemSettings_methods, wxSystemSettings_methodCount, NULL, &wxluatype_wxSystemSettings, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxSystemSettings

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxCHECK_VERSION(2,8,0) && wxUSE_TGA)
        { wxluaclassname_wxTGAHandler, wxTGAHandler_methods, wxTGAHandler_methodCount, CLASSINFO(wxTGAHandler), &wxluatype_wxTGAHandler, wxluabaseclassnames_wxTGAHandler, wxluabaseclassbinds_wxTGAHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxCHECK_VERSION(2,8,0) && wxUSE_TGA)

#if (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)
        { wxluaclassname_wxTIFFHandler, wxTIFFHandler_methods, wxTIFFHandler_methodCount, CLASSINFO(wxTIFFHandler), &wxluatype_wxTIFFHandler, wxluabaseclassnames_wxTIFFHandler, wxluabaseclassbinds_wxTIFFHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxImage && wxUSE_IMAGE) && (wxUSE_LIBTIFF)

#if wxCHECK_VERSION(2,4,0) && defined(__WXMSW__) && wxLUA_USE_wxTabCtrl && wxUSE_TAB_DIALOG
        { wxluaclassname_wxTabCtrl, wxTabCtrl_methods, wxTabCtrl_methodCount, CLASSINFO(wxTabCtrl), &wxluatype_wxTabCtrl, wxluabaseclassnames_wxTabCtrl, wxluabaseclassbinds_wxTabCtrl, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxTabEvent, wxTabEvent_methods, wxTabEvent_methodCount, CLASSINFO(wxTabEvent), &wxluatype_wxTabEvent, wxluabaseclassnames_wxTabEvent, wxluabaseclassbinds_wxTabEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxCHECK_VERSION(2,4,0) && defined(__WXMSW__) && wxLUA_USE_wxTabCtrl && wxUSE_TAB_DIALOG

#if wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL
        { wxluaclassname_wxTextAttr, wxTextAttr_methods, wxTextAttr_methodCount, NULL, &wxluatype_wxTextAttr, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxTextCtrl, wxTextCtrl_methods, wxTextCtrl_methodCount, CLASSINFO(wxTextCtrl), &wxluatype_wxTextCtrl, wxluabaseclassnames_wxTextCtrl, wxluabaseclassbinds_wxTextCtrl, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL

#if wxLUA_USE_wxDataObject && wxUSE_DATAOBJ
        { wxluaclassname_wxTextDataObject, wxTextDataObject_methods, wxTextDataObject_methodCount, NULL, &wxluatype_wxTextDataObject, wxluabaseclassnames_wxTextDataObject, wxluabaseclassbinds_wxTextDataObject, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDataObject && wxUSE_DATAOBJ

#if wxUSE_TEXTDLG && wxLUA_USE_wxTextEntryDialog
        { wxluaclassname_wxTextEntryDialog, wxTextEntryDialog_methods, wxTextEntryDialog_methodCount, CLASSINFO(wxTextEntryDialog), &wxluatype_wxTextEntryDialog, wxluabaseclassnames_wxTextEntryDialog, wxluabaseclassbinds_wxTextEntryDialog, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_TEXTDLG && wxLUA_USE_wxTextEntryDialog

#if wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL
        { wxluaclassname_wxTextUrlEvent, wxTextUrlEvent_methods, wxTextUrlEvent_methodCount, CLASSINFO(wxTextUrlEvent), &wxluatype_wxTextUrlEvent, wxluabaseclassnames_wxTextUrlEvent, wxluabaseclassbinds_wxTextUrlEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL

#if (wxLUA_USE_wxValidator && wxUSE_VALIDATORS) && (wxLUA_USE_wxTextValidator)
        { wxluaclassname_wxTextValidator, wxTextValidator_methods, wxTextValidator_methodCount, CLASSINFO(wxTextValidator), &wxluatype_wxTextValidator, wxluabaseclassnames_wxTextValidator, wxluabaseclassbinds_wxTextValidator, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxValidator && wxUSE_VALIDATORS) && (wxLUA_USE_wxTextValidator)

#if wxLUA_USE_wxTimer && wxUSE_TIMER
        { wxluaclassname_wxTimer, wxTimer_methods, wxTimer_methodCount, CLASSINFO(wxTimer), &wxluatype_wxTimer, wxluabaseclassnames_wxTimer, wxluabaseclassbinds_wxTimer, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxTimerEvent, wxTimerEvent_methods, wxTimerEvent_methodCount, CLASSINFO(wxTimerEvent), &wxluatype_wxTimerEvent, wxluabaseclassnames_wxTimerEvent, wxluabaseclassbinds_wxTimerEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxTimer && wxUSE_TIMER

#if wxLUA_USE_wxToggleButton && wxUSE_TOGGLEBTN
        { wxluaclassname_wxToggleButton, wxToggleButton_methods, wxToggleButton_methodCount, CLASSINFO(wxToggleButton), &wxluatype_wxToggleButton, wxluabaseclassnames_wxToggleButton, wxluabaseclassbinds_wxToggleButton, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxToggleButton && wxUSE_TOGGLEBTN

#if wxLUA_USE_wxToolbar
        { wxluaclassname_wxToolBar, wxToolBar_methods, wxToolBar_methodCount, CLASSINFO(wxToolBar), &wxluatype_wxToolBar, wxluabaseclassnames_wxToolBar, wxluabaseclassbinds_wxToolBar, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxToolBarBase, wxToolBarBase_methods, wxToolBarBase_methodCount, NULL, &wxluatype_wxToolBarBase, wxluabaseclassnames_wxToolBarBase, wxluabaseclassbinds_wxToolBarBase, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxToolbar

#if (wxLUA_USE_wxToolbar) && (!wxCHECK_VERSION(2,6,0))
        { wxluaclassname_wxToolBarSimple, wxToolBarSimple_methods, wxToolBarSimple_methodCount, CLASSINFO(wxToolBarSimple), &wxluatype_wxToolBarSimple, wxluabaseclassnames_wxToolBarSimple, wxluabaseclassbinds_wxToolBarSimple, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxToolbar) && (!wxCHECK_VERSION(2,6,0))

#if wxLUA_USE_wxToolbar
        { wxluaclassname_wxToolBarTool, wxToolBarTool_methods, wxToolBarTool_methodCount, NULL, &wxluatype_wxToolBarTool, wxluabaseclassnames_wxToolBarTool, wxluabaseclassbinds_wxToolBarTool, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxToolBarToolBase, wxToolBarToolBase_methods, wxToolBarToolBase_methodCount, CLASSINFO(wxToolBarToolBase), &wxluatype_wxToolBarToolBase, wxluabaseclassnames_wxToolBarToolBase, wxluabaseclassbinds_wxToolBarToolBase, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxToolbar

#if wxLUA_USE_wxTooltip && wxUSE_TOOLTIPS
        { wxluaclassname_wxToolTip, wxToolTip_methods, wxToolTip_methodCount, CLASSINFO(wxToolTip), &wxluatype_wxToolTip, wxluabaseclassnames_wxToolTip, wxluabaseclassbinds_wxToolTip, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxTooltip && wxUSE_TOOLTIPS

#if wxCHECK_VERSION(2,8,0) && wxUSE_TOOLBOOK && wxLUA_USE_wxToolbook
        { wxluaclassname_wxToolbook, wxToolbook_methods, wxToolbook_methodCount, CLASSINFO(wxToolbook), &wxluatype_wxToolbook, wxluabaseclassnames_wxToolbook, wxluabaseclassbinds_wxToolbook, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxToolbookEvent, wxToolbookEvent_methods, wxToolbookEvent_methodCount, CLASSINFO(wxToolbookEvent), &wxluatype_wxToolbookEvent, wxluabaseclassnames_wxToolbookEvent, wxluabaseclassbinds_wxToolbookEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxCHECK_VERSION(2,8,0) && wxUSE_TOOLBOOK && wxLUA_USE_wxToolbook

#if wxLUA_USE_wxFrame || wxLUA_USE_wxDialog
        { wxluaclassname_wxTopLevelWindow, wxTopLevelWindow_methods, wxTopLevelWindow_methodCount, CLASSINFO(wxTopLevelWindow), &wxluatype_wxTopLevelWindow, wxluabaseclassnames_wxTopLevelWindow, wxluabaseclassbinds_wxTopLevelWindow, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFrame || wxLUA_USE_wxDialog

#if wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL
        { wxluaclassname_wxTreeCtrl, wxTreeCtrl_methods, wxTreeCtrl_methodCount, CLASSINFO(wxTreeCtrl), &wxluatype_wxTreeCtrl, wxluabaseclassnames_wxTreeCtrl, wxluabaseclassbinds_wxTreeCtrl, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxTreeEvent, wxTreeEvent_methods, wxTreeEvent_methodCount, CLASSINFO(wxTreeEvent), &wxluatype_wxTreeEvent, wxluabaseclassnames_wxTreeEvent, wxluabaseclassbinds_wxTreeEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxTreeItemData, wxTreeItemData_methods, wxTreeItemData_methodCount, NULL, &wxluatype_wxTreeItemData, wxluabaseclassnames_wxTreeItemData, wxluabaseclassbinds_wxTreeItemData, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxTreeItemId, wxTreeItemId_methods, wxTreeItemId_methodCount, NULL, &wxluatype_wxTreeItemId, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL

#if wxCHECK_VERSION(2,8,0) && wxUSE_TREEBOOK && wxLUA_USE_wxTreebook
        { wxluaclassname_wxTreebook, wxTreebook_methods, wxTreebook_methodCount, CLASSINFO(wxTreebook), &wxluatype_wxTreebook, wxluabaseclassnames_wxTreebook, wxluabaseclassbinds_wxTreebook, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxTreebookEvent, wxTreebookEvent_methods, wxTreebookEvent_methodCount, CLASSINFO(wxTreebookEvent), &wxluatype_wxTreebookEvent, wxluabaseclassnames_wxTreebookEvent, wxluabaseclassbinds_wxTreebookEvent, g_wxluanumberArray_None, 0, }, 
#endif // wxCHECK_VERSION(2,8,0) && wxUSE_TREEBOOK && wxLUA_USE_wxTreebook

#if (wxLUA_USE_wxDataObject && wxUSE_DATAOBJ) && (wxCHECK_VERSION(2,8,0))
        { wxluaclassname_wxURLDataObject, wxURLDataObject_methods, wxURLDataObject_methodCount, NULL, &wxluatype_wxURLDataObject, wxluabaseclassnames_wxURLDataObject, wxluabaseclassbinds_wxURLDataObject, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxDataObject && wxUSE_DATAOBJ) && (wxCHECK_VERSION(2,8,0))

        { wxluaclassname_wxUpdateUIEvent, wxUpdateUIEvent_methods, wxUpdateUIEvent_methodCount, CLASSINFO(wxUpdateUIEvent), &wxluatype_wxUpdateUIEvent, wxluabaseclassnames_wxUpdateUIEvent, wxluabaseclassbinds_wxUpdateUIEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxValidator && wxUSE_VALIDATORS
        { wxluaclassname_wxValidator, wxValidator_methods, wxValidator_methodCount, CLASSINFO(wxValidator), &wxluatype_wxValidator, wxluabaseclassnames_wxValidator, wxluabaseclassbinds_wxValidator, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxValidator && wxUSE_VALIDATORS

#if wxLUA_USE_wxDisplay && wxUSE_DISPLAY
        { wxluaclassname_wxVideoMode, wxVideoMode_methods, wxVideoMode_methodCount, NULL, &wxluatype_wxVideoMode, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDisplay && wxUSE_DISPLAY

#if wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE
        { wxluaclassname_wxView, wxView_methods, wxView_methodCount, CLASSINFO(wxView), &wxluatype_wxView, wxluabaseclassnames_wxView, wxluabaseclassbinds_wxView, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_MDI && wxUSE_MDI && wxUSE_DOC_VIEW_ARCHITECTURE

        { wxluaclassname_wxVisualAttributes, wxVisualAttributes_methods, wxVisualAttributes_methodCount, NULL, &wxluatype_wxVisualAttributes, NULL, NULL, g_wxluanumberArray_None, 0, }, 

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (defined(__WXMSW__))
        { wxluaclassname_wxWinHelpController, wxWinHelpController_methods, wxWinHelpController_methodCount, CLASSINFO(wxWinHelpController), &wxluatype_wxWinHelpController, wxluabaseclassnames_wxWinHelpController, wxluabaseclassbinds_wxWinHelpController, g_wxluanumberArray_None, 0, }, 
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (defined(__WXMSW__))

        { wxluaclassname_wxWindow, wxWindow_methods, wxWindow_methodCount, CLASSINFO(wxWindow), &wxluatype_wxWindow, wxluabaseclassnames_wxWindow, wxluabaseclassbinds_wxWindow, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxWindowCreateEvent, wxWindowCreateEvent_methods, wxWindowCreateEvent_methodCount, CLASSINFO(wxWindowCreateEvent), &wxluatype_wxWindowCreateEvent, wxluabaseclassnames_wxWindowCreateEvent, wxluabaseclassbinds_wxWindowCreateEvent, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxDC
        { wxluaclassname_wxWindowDC, wxWindowDC_methods, wxWindowDC_methodCount, CLASSINFO(wxWindowDC), &wxluatype_wxWindowDC, wxluabaseclassnames_wxWindowDC, wxluabaseclassbinds_wxWindowDC, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDC

        { wxluaclassname_wxWindowDestroyEvent, wxWindowDestroyEvent_methods, wxWindowDestroyEvent_methodCount, CLASSINFO(wxWindowDestroyEvent), &wxluatype_wxWindowDestroyEvent, wxluabaseclassnames_wxWindowDestroyEvent, wxluabaseclassbinds_wxWindowDestroyEvent, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxWindowDisabler, wxWindowDisabler_methods, wxWindowDisabler_methodCount, NULL, &wxluatype_wxWindowDisabler, NULL, NULL, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxWindowList && !wxUSE_STL
        { wxluaclassname_wxWindowList, wxWindowList_methods, wxWindowList_methodCount, NULL, &wxluatype_wxWindowList, wxluabaseclassnames_wxWindowList, wxluabaseclassbinds_wxWindowList, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxWindowList && !wxUSE_STL

        { wxluaclassname_wxWindowUpdateLocker, wxWindowUpdateLocker_methods, wxWindowUpdateLocker_methodCount, NULL, &wxluatype_wxWindowUpdateLocker, NULL, NULL, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxImage && wxUSE_IMAGE
        { wxluaclassname_wxXPMHandler, wxXPMHandler_methods, wxXPMHandler_methodCount, CLASSINFO(wxXPMHandler), &wxluatype_wxXPMHandler, wxluabaseclassnames_wxXPMHandler, wxluabaseclassbinds_wxXPMHandler, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE


        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_wxcore() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_wxcore, wxLuaBinding)

wxLuaBinding_wxcore::wxLuaBinding_wxcore() : wxLuaBinding()
{
    m_bindingName   = wxT("wxcore");
    m_nameSpace     = wxT("wx");
    m_classArray    = wxLuaGetClassList_wxcore(m_classCount);
    m_numberArray   = wxLuaGetDefineList_wxcore(m_numberCount);
    m_stringArray   = wxLuaGetStringList_wxcore(m_stringCount);
    m_eventArray    = wxLuaGetEventList_wxcore(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_wxcore(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_wxcore(m_functionCount);
}

bool wxLuaBinding_wxcore::RegisterBinding(const wxLuaState& wxlState)
{
#if defined(__MINGW32__) || defined(__GNUWIN32__)
    #undef wxDefaultPosition
    #undef wxDefaultSize
    #undef wxEVT_COMMAND_DIRPICKER_CHANGED
    #undef wxEVT_COMMAND_FILEPICKER_CHANGED
    wxLua_wxDefaultPosition = wxDefaultPosition;
    wxLua_wxDefaultSize     = wxDefaultSize;
    wxLua_wxEVT_COMMAND_DIRPICKER_CHANGED  = wxEVT_COMMAND_DIRPICKER_CHANGED;
    wxLua_wxEVT_COMMAND_FILEPICKER_CHANGED = wxEVT_COMMAND_FILEPICKER_CHANGED;
#endif //__MINGW32__

    // ugly hack for wxWidgets >2.7 change to use wxStockGDI::GetXXX
    if (wxLua_wxBLACK == NULL)
    {
        wxLua_wxBLACK      = (wxColour*)wxBLACK;
        wxLua_wxWHITE      = (wxColour*)wxWHITE;
        wxLua_wxRED        = (wxColour*)wxRED;
        wxLua_wxBLUE       = (wxColour*)wxBLUE;
        wxLua_wxGREEN      = (wxColour*)wxGREEN;
        wxLua_wxCYAN       = (wxColour*)wxCYAN;
        wxLua_wxLIGHT_GREY = (wxColour*)wxLIGHT_GREY;

        wxLua_wxRED_PEN          = (wxPen*)wxRED_PEN;
        wxLua_wxCYAN_PEN         = (wxPen*)wxCYAN_PEN;
        wxLua_wxGREEN_PEN        = (wxPen*)wxGREEN_PEN;
        wxLua_wxBLACK_PEN        = (wxPen*)wxBLACK_PEN;
        wxLua_wxWHITE_PEN        = (wxPen*)wxWHITE_PEN;
        wxLua_wxTRANSPARENT_PEN  = (wxPen*)wxTRANSPARENT_PEN;
        wxLua_wxBLACK_DASHED_PEN = (wxPen*)wxBLACK_DASHED_PEN;
        wxLua_wxGREY_PEN         = (wxPen*)wxGREY_PEN;
        wxLua_wxMEDIUM_GREY_PEN  = (wxPen*)wxMEDIUM_GREY_PEN;
        wxLua_wxLIGHT_GREY_PEN   = (wxPen*)wxLIGHT_GREY_PEN;

        wxLua_wxBLUE_BRUSH        = (wxBrush*)wxBLUE_BRUSH;
        wxLua_wxGREEN_BRUSH       = (wxBrush*)wxGREEN_BRUSH;
        wxLua_wxWHITE_BRUSH       = (wxBrush*)wxWHITE_BRUSH;
        wxLua_wxBLACK_BRUSH       = (wxBrush*)wxBLACK_BRUSH;
        wxLua_wxGREY_BRUSH        = (wxBrush*)wxGREY_BRUSH;
        wxLua_wxMEDIUM_GREY_BRUSH = (wxBrush*)wxMEDIUM_GREY_BRUSH;
        wxLua_wxLIGHT_GREY_BRUSH  = (wxBrush*)wxLIGHT_GREY_BRUSH;
        wxLua_wxTRANSPARENT_BRUSH = (wxBrush*)wxTRANSPARENT_BRUSH;
        wxLua_wxCYAN_BRUSH        = (wxBrush*)wxCYAN_BRUSH;
        wxLua_wxRED_BRUSH         = (wxBrush*)wxRED_BRUSH;

        wxLua_wxNORMAL_FONT = (wxFont*)wxNORMAL_FONT;
        wxLua_wxSMALL_FONT  = (wxFont*)wxSMALL_FONT;
        wxLua_wxITALIC_FONT = (wxFont*)wxITALIC_FONT;
        wxLua_wxSWISS_FONT  = (wxFont*)wxSWISS_FONT;

        wxLua_wxSTANDARD_CURSOR  = (wxCursor*)wxSTANDARD_CURSOR;
        wxLua_wxHOURGLASS_CURSOR = (wxCursor*)wxHOURGLASS_CURSOR;
        wxLua_wxCROSS_CURSOR     = (wxCursor*)wxCROSS_CURSOR;
    }

    int ret = wxLuaBinding::RegisterBinding(wxlState);

    p_wxluatype_wxEvent  = &wxluatype_wxEvent;
    p_wxluatype_wxWindow = &wxluatype_wxWindow;

    return ret;
}


// ---------------------------------------------------------------------------

bool wxLuaBinding_wxcore_init()
{
    static wxLuaBinding_wxcore m_binding;
    if (wxLuaBinding::GetBindingList()->Find(&m_binding)) return false;

    wxLuaBinding::GetBindingList()->Append(&m_binding);
    return true;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))
wxLUA_IMPLEMENT_ENCAPSULATION(wxStockGDI, wxStockGDI)
#endif // (wxLUA_USE_wxColourPenBrush) && (wxCHECK_VERSION(2,8,0))


#if (wxLUA_USE_wxDataObject && wxUSE_DATAOBJ) && (wxCHECK_VERSION(2,8,0))
wxLUA_IMPLEMENT_ENCAPSULATION(wxURLDataObject, wxURLDataObject)
#endif // (wxLUA_USE_wxDataObject && wxUSE_DATAOBJ) && (wxCHECK_VERSION(2,8,0))


#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxLogWindow && wxUSE_LOGWINDOW)
wxLUA_IMPLEMENT_ENCAPSULATION(wxLogWindow, wxLogWindow)
#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxLogWindow && wxUSE_LOGWINDOW)


#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)
wxLUA_IMPLEMENT_ENCAPSULATION(wxLogTextCtrl, wxLogTextCtrl)
#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)


#if (wxLUA_USE_wxLog && wxUSE_LOG) && (wxUSE_LOGGUI)
wxLUA_IMPLEMENT_ENCAPSULATION(wxLogGui, wxLogGui)
#endif // (wxLUA_USE_wxLog && wxUSE_LOG) && (wxUSE_LOGGUI)


#if (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))
wxLUA_IMPLEMENT_ENCAPSULATION(wxGBPosition, wxGBPosition)
wxLUA_IMPLEMENT_ENCAPSULATION(wxGBSpan, wxGBSpan)
wxLUA_IMPLEMENT_ENCAPSULATION(wxSizerFlags, wxSizerFlags)
#endif // (wxLUA_USE_wxSizer) && (wxCHECK_VERSION(2,8,0))

wxLUA_IMPLEMENT_ENCAPSULATION(wxPropagateOnce, wxPropagateOnce)
wxLUA_IMPLEMENT_ENCAPSULATION(wxPropagationDisabler, wxPropagationDisabler)
wxLUA_IMPLEMENT_ENCAPSULATION(wxVisualAttributes, wxVisualAttributes)
wxLUA_IMPLEMENT_ENCAPSULATION(wxWindowDisabler, wxWindowDisabler)
wxLUA_IMPLEMENT_ENCAPSULATION(wxWindowUpdateLocker, wxWindowUpdateLocker)

#if wxCHECK_VERSION(2,8,0)
wxLUA_IMPLEMENT_ENCAPSULATION(wxMouseState, wxMouseState)
#endif // wxCHECK_VERSION(2,8,0)


#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
wxLUA_IMPLEMENT_ENCAPSULATION(wxPoint2DDouble, wxPoint2DDouble)
wxLUA_IMPLEMENT_ENCAPSULATION(wxPoint2DInt, wxPoint2DInt)
wxLUA_IMPLEMENT_ENCAPSULATION(wxRect2DDouble, wxRect2DDouble)
wxLUA_IMPLEMENT_ENCAPSULATION(wxRect2DInt, wxRect2DInt)
#endif // wxLUA_USE_Geometry && wxUSE_GEOMETRY


#if wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL
wxLUA_IMPLEMENT_ENCAPSULATION(wxAcceleratorEntry, wxAcceleratorEntry)
#endif // wxLUA_USE_wxAcceleratorTable && wxUSE_ACCEL


#if wxLUA_USE_wxBusyCursor
wxLUA_IMPLEMENT_ENCAPSULATION(wxBusyCursor, wxBusyCursor)
#endif // wxLUA_USE_wxBusyCursor


#if wxLUA_USE_wxCaret && wxUSE_CARET
wxLUA_IMPLEMENT_ENCAPSULATION(wxCaret, wxCaret)
wxLUA_IMPLEMENT_ENCAPSULATION(wxCaretSuspend, wxCaretSuspend)
#endif // wxLUA_USE_wxCaret && wxUSE_CARET


#if wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD
wxLUA_IMPLEMENT_ENCAPSULATION(wxClipboardLocker, wxClipboardLocker)
#endif // wxLUA_USE_wxClipboard && wxUSE_CLIPBOARD


#if wxLUA_USE_wxColourPenBrush
wxLUA_IMPLEMENT_ENCAPSULATION(wxColourDatabase, wxColourDatabase)
#endif // wxLUA_USE_wxColourPenBrush


#if wxLUA_USE_wxDC
wxLUA_IMPLEMENT_ENCAPSULATION(wxDCClipper, wxDCClipper)
#endif // wxLUA_USE_wxDC


#if wxLUA_USE_wxDataObject && wxUSE_DATAOBJ
wxLUA_IMPLEMENT_ENCAPSULATION(wxBitmapDataObject, wxBitmapDataObject)
wxLUA_IMPLEMENT_ENCAPSULATION(wxDataFormat, wxDataFormat)
wxLUA_IMPLEMENT_ENCAPSULATION(wxDataObjectComposite, wxDataObjectComposite)
wxLUA_IMPLEMENT_ENCAPSULATION(wxDataObjectSimple, wxDataObjectSimple)
wxLUA_IMPLEMENT_ENCAPSULATION(wxFileDataObject, wxFileDataObject)
wxLUA_IMPLEMENT_ENCAPSULATION(wxTextDataObject, wxTextDataObject)
#endif // wxLUA_USE_wxDataObject && wxUSE_DATAOBJ


#if wxLUA_USE_wxDisplay && wxUSE_DISPLAY
wxLUA_IMPLEMENT_ENCAPSULATION(wxArrayVideoModes, wxArrayVideoModes)
wxLUA_IMPLEMENT_ENCAPSULATION(wxDisplay, wxDisplay)
wxLUA_IMPLEMENT_ENCAPSULATION(wxVideoMode, wxVideoMode)
#endif // wxLUA_USE_wxDisplay && wxUSE_DISPLAY


#if wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP
wxLUA_IMPLEMENT_ENCAPSULATION(wxDropSource, wxDropSource)
#endif // wxLUA_USE_wxDragDrop && wxUSE_DRAG_AND_DROP


#if wxLUA_USE_wxFont
wxLUA_IMPLEMENT_ENCAPSULATION(wxNativeFontInfo, wxNativeFontInfo)
#endif // wxLUA_USE_wxFont


#if wxLUA_USE_wxFontEnumerator
wxLUA_IMPLEMENT_ENCAPSULATION(wxFontEnumerator, wxFontEnumerator)
#endif // wxLUA_USE_wxFontEnumerator


#if wxLUA_USE_wxHelpController && wxUSE_HELP
wxLUA_IMPLEMENT_ENCAPSULATION(wxHelpControllerHelpProvider, wxHelpControllerHelpProvider)
wxLUA_IMPLEMENT_ENCAPSULATION(wxHelpProvider, wxHelpProvider)
wxLUA_IMPLEMENT_ENCAPSULATION(wxSimpleHelpProvider, wxSimpleHelpProvider)
#endif // wxLUA_USE_wxHelpController && wxUSE_HELP


#if wxLUA_USE_wxIcon
wxLUA_IMPLEMENT_ENCAPSULATION(wxIconBundle, wxIconBundle)
#endif // wxLUA_USE_wxIcon


#if wxLUA_USE_wxImage && wxUSE_IMAGE
wxLUA_IMPLEMENT_ENCAPSULATION(wxImageHistogram, wxImageHistogram)
wxLUA_IMPLEMENT_ENCAPSULATION(wxImageHistogram::iterator, wxImageHistogram_iterator)
wxLUA_IMPLEMENT_ENCAPSULATION(wxImageHistogramEntry, wxImageHistogramEntry)
#endif // wxLUA_USE_wxImage && wxUSE_IMAGE


#if wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL
wxLUA_IMPLEMENT_ENCAPSULATION(wxListItemAttr, wxListItemAttr)
#endif // wxLUA_USE_wxListCtrl && wxUSE_LISTCTRL


#if wxLUA_USE_wxPointSizeRect
wxLUA_IMPLEMENT_ENCAPSULATION(wxPoint, wxPoint)
wxLUA_IMPLEMENT_ENCAPSULATION(wxRect, wxRect)
wxLUA_IMPLEMENT_ENCAPSULATION(wxSize, wxSize)
#endif // wxLUA_USE_wxPointSizeRect


#if wxLUA_USE_wxProcess
wxLUA_IMPLEMENT_ENCAPSULATION(wxProcess, wxProcess)
#endif // wxLUA_USE_wxProcess


#if wxLUA_USE_wxRenderer
wxLUA_IMPLEMENT_ENCAPSULATION(wxHeaderButtonParams, wxHeaderButtonParams)
wxLUA_IMPLEMENT_ENCAPSULATION(wxRendererNative, wxRendererNative)
wxLUA_IMPLEMENT_ENCAPSULATION(wxRendererVersion, wxRendererVersion)
wxLUA_IMPLEMENT_ENCAPSULATION(wxSplitterRenderParams, wxSplitterRenderParams)
#endif // wxLUA_USE_wxRenderer


#if wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL
wxLUA_IMPLEMENT_ENCAPSULATION(wxTextAttr, wxTextAttr)
#endif // wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL


#if wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL
wxLUA_IMPLEMENT_ENCAPSULATION(wxTreeItemId, wxTreeItemId)
#endif // wxLUA_USE_wxTreeCtrl && wxUSE_TREECTRL


