// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxcore_geometry.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#include "wx/wxprec.h"

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif


#include "wxlua/include/wxlstate.h"
#include "wxbind/include/wxcore_bind.h"
#ifdef Above
    #undef Above
#endif
#ifdef Below
    #undef Below
#endif



#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
// ---------------------------------------------------------------------------
// Bind class wxPoint2DInt
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPoint2DInt'
int wxluatype_wxPoint2DInt = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_GetCrossProduct[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_GetCrossProduct(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_GetCrossProduct[1] = {{ wxLua_wxPoint2DInt_GetCrossProduct, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_GetCrossProduct }};
//     wxInt32 GetCrossProduct( const wxPoint2DInt &vec ) const
static int LUACALL wxLua_wxPoint2DInt_GetCrossProduct(lua_State *L)
{
    // const wxPoint2DInt vec
    const wxPoint2DInt * vec = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call GetCrossProduct
    wxInt32 returns = (self->GetCrossProduct(*vec));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_GetDistance[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_GetDistance(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_GetDistance[1] = {{ wxLua_wxPoint2DInt_GetDistance, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_GetDistance }};
//     wxDouble GetDistance( const wxPoint2DInt &pt ) const
static int LUACALL wxLua_wxPoint2DInt_GetDistance(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call GetDistance
    wxDouble returns = (self->GetDistance(*pt));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_GetDistanceSquare[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_GetDistanceSquare(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_GetDistanceSquare[1] = {{ wxLua_wxPoint2DInt_GetDistanceSquare, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_GetDistanceSquare }};
//     wxDouble GetDistanceSquare( const wxPoint2DInt &pt ) const
static int LUACALL wxLua_wxPoint2DInt_GetDistanceSquare(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call GetDistanceSquare
    wxDouble returns = (self->GetDistanceSquare(*pt));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_GetDotProduct[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_GetDotProduct(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_GetDotProduct[1] = {{ wxLua_wxPoint2DInt_GetDotProduct, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_GetDotProduct }};
//     wxInt32 GetDotProduct( const wxPoint2DInt &vec ) const
static int LUACALL wxLua_wxPoint2DInt_GetDotProduct(lua_State *L)
{
    // const wxPoint2DInt vec
    const wxPoint2DInt * vec = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call GetDotProduct
    wxInt32 returns = (self->GetDotProduct(*vec));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_GetVectorAngle[] = { &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_GetVectorAngle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_GetVectorAngle[1] = {{ wxLua_wxPoint2DInt_GetVectorAngle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_GetVectorAngle }};
//     wxDouble GetVectorAngle() const
static int LUACALL wxLua_wxPoint2DInt_GetVectorAngle(lua_State *L)
{
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call GetVectorAngle
    wxDouble returns = (self->GetVectorAngle());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_GetVectorLength[] = { &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_GetVectorLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_GetVectorLength[1] = {{ wxLua_wxPoint2DInt_GetVectorLength, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_GetVectorLength }};
//     wxDouble GetVectorLength() const
static int LUACALL wxLua_wxPoint2DInt_GetVectorLength(lua_State *L)
{
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call GetVectorLength
    wxDouble returns = (self->GetVectorLength());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_GetX[] = { &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_GetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_GetX[1] = {{ wxLua_wxPoint2DInt_GetX, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_GetX }};
//     %rename X %member_func wxInt32 m_x
static int LUACALL wxLua_wxPoint2DInt_GetX(lua_State *L)
{
    // get this
    wxPoint2DInt *self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // push the result number
    lua_pushnumber(L, self->m_x);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_GetY[] = { &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_GetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_GetY[1] = {{ wxLua_wxPoint2DInt_GetY, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_GetY }};
//     %rename Y %member_func wxInt32 m_y
static int LUACALL wxLua_wxPoint2DInt_GetY(lua_State *L)
{
    // get this
    wxPoint2DInt *self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // push the result number
    lua_pushnumber(L, self->m_y);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_Normalize[] = { &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_Normalize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_Normalize[1] = {{ wxLua_wxPoint2DInt_Normalize, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_Normalize }};
//     void Normalize()
static int LUACALL wxLua_wxPoint2DInt_Normalize(lua_State *L)
{
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call Normalize
    self->Normalize();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_SetVectorAngle[] = { &wxluatype_wxPoint2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DInt_SetVectorAngle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_SetVectorAngle[1] = {{ wxLua_wxPoint2DInt_SetVectorAngle, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_SetVectorAngle }};
//     void SetVectorAngle( wxDouble degrees )
static int LUACALL wxLua_wxPoint2DInt_SetVectorAngle(lua_State *L)
{
    // wxDouble degrees
    wxDouble degrees = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call SetVectorAngle
    self->SetVectorAngle(degrees);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_SetVectorLength[] = { &wxluatype_wxPoint2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DInt_SetVectorLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_SetVectorLength[1] = {{ wxLua_wxPoint2DInt_SetVectorLength, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_SetVectorLength }};
//     void SetVectorLength( wxDouble length )
static int LUACALL wxLua_wxPoint2DInt_SetVectorLength(lua_State *L)
{
    // wxDouble length
    wxDouble length = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call SetVectorLength
    self->SetVectorLength(length);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_SetX[] = { &wxluatype_wxPoint2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DInt_SetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_SetX[1] = {{ wxLua_wxPoint2DInt_SetX, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_SetX }};
//     %rename X %member_func wxInt32 m_x
static int LUACALL wxLua_wxPoint2DInt_SetX(lua_State *L)
{
    // get the number value
    wxInt32 val = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxPoint2DInt *self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    self->m_x = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_SetY[] = { &wxluatype_wxPoint2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DInt_SetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_SetY[1] = {{ wxLua_wxPoint2DInt_SetY, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_SetY }};
//     %rename Y %member_func wxInt32 m_y
static int LUACALL wxLua_wxPoint2DInt_SetY(lua_State *L)
{
    // get the number value
    wxInt32 val = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxPoint2DInt *self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    self->m_y = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_delete[] = { &wxluatype_wxPoint2DInt, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_op_eq[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_op_eq(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_op_eq[1] = {{ wxLua_wxPoint2DInt_op_eq, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_op_eq }};
//     %operator bool operator==(const wxPoint2DInt& pt) const
static int LUACALL wxLua_wxPoint2DInt_op_eq(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call op_eq
    bool returns = ((*self)==(*pt));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_op_iadd[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_op_iadd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_op_iadd[1] = {{ wxLua_wxPoint2DInt_op_iadd, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_op_iadd }};
//     %operator wxPoint2DInt& operator+=(const wxPoint2DInt& pt)
static int LUACALL wxLua_wxPoint2DInt_op_iadd(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call op_iadd
    (*self)+=(*pt);
    wxPoint2DInt* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_op_idiv[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_op_idiv(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_op_idiv[1] = {{ wxLua_wxPoint2DInt_op_idiv, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_op_idiv }};
//     %operator wxPoint2DInt& operator/=(const wxPoint2DInt& pt)
static int LUACALL wxLua_wxPoint2DInt_op_idiv(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call op_idiv
    (*self)/=(*pt);
    wxPoint2DInt* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_op_imul[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_op_imul(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_op_imul[1] = {{ wxLua_wxPoint2DInt_op_imul, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_op_imul }};
//     %operator wxPoint2DInt& operator*=(const wxPoint2DInt& pt)
static int LUACALL wxLua_wxPoint2DInt_op_imul(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call op_imul
    (*self)*=(*pt);
    wxPoint2DInt* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_op_isub[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_op_isub(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_op_isub[1] = {{ wxLua_wxPoint2DInt_op_isub, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_op_isub }};
//     %operator wxPoint2DInt& operator-=(const wxPoint2DInt& pt)
static int LUACALL wxLua_wxPoint2DInt_op_isub(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call op_isub
    (*self)-=(*pt);
    wxPoint2DInt* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_op_mul[] = { &wxluatype_wxPoint2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DInt_op_mul(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_op_mul[1] = {{ wxLua_wxPoint2DInt_op_mul, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_op_mul }};
//     %operator wxPoint2DInt operator*(wxInt32 n)
static int LUACALL wxLua_wxPoint2DInt_op_mul(lua_State *L)
{
    // wxInt32 n
    wxInt32 n = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call op_mul
    // allocate a new object using the copy constructor
    wxPoint2DInt* returns = new wxPoint2DInt((*self)*(n));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_op_neg[] = { &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_op_neg(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_op_neg[1] = {{ wxLua_wxPoint2DInt_op_neg, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_op_neg }};
//     %operator wxPoint2DInt operator-()
static int LUACALL wxLua_wxPoint2DInt_op_neg(lua_State *L)
{
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call op_neg
    // allocate a new object using the copy constructor
    wxPoint2DInt* returns = new wxPoint2DInt(-(*self));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_op_set[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_op_set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_op_set[1] = {{ wxLua_wxPoint2DInt_op_set, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_op_set }};
//     %operator wxPoint2DInt& operator=(const wxPoint2DInt& pt)
static int LUACALL wxLua_wxPoint2DInt_op_set(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxPoint2DInt * self = (wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call op_set
    (*self)=(*pt);
    wxPoint2DInt* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}


#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_constructor2[] = { &wxluatype_wxPoint, NULL };
static int LUACALL wxLua_wxPoint2DInt_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_constructor2[1] = {{ wxLua_wxPoint2DInt_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_constructor2 }};
//     wxPoint2DInt( const wxPoint &pt )
static int LUACALL wxLua_wxPoint2DInt_constructor2(lua_State *L)
{
    // const wxPoint pt
    const wxPoint * pt = (const wxPoint *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint);
    // call constructor
    wxPoint2DInt* returns = new wxPoint2DInt(*pt);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_constructor1[] = { &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DInt_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_constructor1[1] = {{ wxLua_wxPoint2DInt_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_constructor1 }};
//     wxPoint2DInt( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxPoint2DInt_constructor1(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call constructor
    wxPoint2DInt* returns = new wxPoint2DInt(*pt);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DInt_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DInt_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_constructor[1] = {{ wxLua_wxPoint2DInt_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_constructor }};
//     wxPoint2DInt( wxInt32 x=0, wxInt32 y=0 )
static int LUACALL wxLua_wxPoint2DInt_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxInt32 y = 0
    wxInt32 y = (argCount >= 2 ? (wxInt32)wxlua_getnumbertype(L, 2) : 0);
    // wxInt32 x = 0
    wxInt32 x = (argCount >= 1 ? (wxInt32)wxlua_getnumbertype(L, 1) : 0);
    // call constructor
    wxPoint2DInt* returns = new wxPoint2DInt(x, y);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}




#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DInt_constructor_overload[] =
{

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxPoint2DInt_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_constructor2 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxPoint2DInt_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DInt_constructor1 },
    { wxLua_wxPoint2DInt_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxPoint2DInt_constructor },
};
static int s_wxluafunc_wxLua_wxPoint2DInt_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPoint2DInt_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPoint2DInt_methods[] = {
    { "GetCrossProduct", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_GetCrossProduct, 1, NULL },
    { "GetDistance", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_GetDistance, 1, NULL },
    { "GetDistanceSquare", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_GetDistanceSquare, 1, NULL },
    { "GetDotProduct", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_GetDotProduct, 1, NULL },
    { "GetVectorAngle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_GetVectorAngle, 1, NULL },
    { "GetVectorLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_GetVectorLength, 1, NULL },
    { "GetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_GetX, 1, NULL },
    { "GetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_GetY, 1, NULL },
    { "Normalize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_Normalize, 1, NULL },
    { "SetVectorAngle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_SetVectorAngle, 1, NULL },
    { "SetVectorLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_SetVectorLength, 1, NULL },
    { "SetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_SetX, 1, NULL },
    { "SetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_SetY, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPoint2DInt_delete, 1, NULL },
    { "m_x", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxPoint2DInt_SetX, 1, NULL },
    { "m_x", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxPoint2DInt_GetX, 1, NULL },
    { "m_y", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxPoint2DInt_SetY, 1, NULL },
    { "m_y", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxPoint2DInt_GetY, 1, NULL },
    { "op_eq", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_op_eq, 1, NULL },
    { "op_iadd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_op_iadd, 1, NULL },
    { "op_idiv", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_op_idiv, 1, NULL },
    { "op_imul", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_op_imul, 1, NULL },
    { "op_isub", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_op_isub, 1, NULL },
    { "op_mul", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_op_mul, 1, NULL },
    { "op_neg", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_op_neg, 1, NULL },
    { "op_set", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DInt_op_set, 1, NULL },

#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)
    { "wxPoint2DInt", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPoint2DInt_constructor_overload, s_wxluafunc_wxLua_wxPoint2DInt_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)

    { 0, 0, 0, 0 },
};

int wxPoint2DInt_methodCount = sizeof(wxPoint2DInt_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_Geometry && wxUSE_GEOMETRY


#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
// ---------------------------------------------------------------------------
// Bind class wxPoint2DDouble
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPoint2DDouble'
int wxluatype_wxPoint2DDouble = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_GetCrossProduct[] = { &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_GetCrossProduct(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_GetCrossProduct[1] = {{ wxLua_wxPoint2DDouble_GetCrossProduct, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_GetCrossProduct }};
//     wxDouble GetCrossProduct( const wxPoint2DDouble &vec ) const
static int LUACALL wxLua_wxPoint2DDouble_GetCrossProduct(lua_State *L)
{
    // const wxPoint2DDouble vec
    const wxPoint2DDouble * vec = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call GetCrossProduct
    wxDouble returns = (self->GetCrossProduct(*vec));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_GetDistance[] = { &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_GetDistance(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_GetDistance[1] = {{ wxLua_wxPoint2DDouble_GetDistance, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_GetDistance }};
//     wxDouble GetDistance( const wxPoint2DDouble &pt ) const
static int LUACALL wxLua_wxPoint2DDouble_GetDistance(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call GetDistance
    wxDouble returns = (self->GetDistance(*pt));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_GetDistanceSquare[] = { &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_GetDistanceSquare(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_GetDistanceSquare[1] = {{ wxLua_wxPoint2DDouble_GetDistanceSquare, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_GetDistanceSquare }};
//     wxDouble GetDistanceSquare( const wxPoint2DDouble &pt ) const
static int LUACALL wxLua_wxPoint2DDouble_GetDistanceSquare(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call GetDistanceSquare
    wxDouble returns = (self->GetDistanceSquare(*pt));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_GetDotProduct[] = { &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_GetDotProduct(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_GetDotProduct[1] = {{ wxLua_wxPoint2DDouble_GetDotProduct, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_GetDotProduct }};
//     wxDouble GetDotProduct( const wxPoint2DDouble &vec ) const
static int LUACALL wxLua_wxPoint2DDouble_GetDotProduct(lua_State *L)
{
    // const wxPoint2DDouble vec
    const wxPoint2DDouble * vec = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call GetDotProduct
    wxDouble returns = (self->GetDotProduct(*vec));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_GetVectorAngle[] = { &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_GetVectorAngle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_GetVectorAngle[1] = {{ wxLua_wxPoint2DDouble_GetVectorAngle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_GetVectorAngle }};
//     wxDouble GetVectorAngle() const
static int LUACALL wxLua_wxPoint2DDouble_GetVectorAngle(lua_State *L)
{
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call GetVectorAngle
    wxDouble returns = (self->GetVectorAngle());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_GetVectorLength[] = { &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_GetVectorLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_GetVectorLength[1] = {{ wxLua_wxPoint2DDouble_GetVectorLength, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_GetVectorLength }};
//     wxDouble GetVectorLength() const
static int LUACALL wxLua_wxPoint2DDouble_GetVectorLength(lua_State *L)
{
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call GetVectorLength
    wxDouble returns = (self->GetVectorLength());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_GetX[] = { &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_GetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_GetX[1] = {{ wxLua_wxPoint2DDouble_GetX, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_GetX }};
//     %rename X %member_func wxDouble m_x
static int LUACALL wxLua_wxPoint2DDouble_GetX(lua_State *L)
{
    // get this
    wxPoint2DDouble *self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // push the result number
    lua_pushnumber(L, self->m_x);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_GetY[] = { &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_GetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_GetY[1] = {{ wxLua_wxPoint2DDouble_GetY, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_GetY }};
//     %rename Y %member_func wxDouble m_y
static int LUACALL wxLua_wxPoint2DDouble_GetY(lua_State *L)
{
    // get this
    wxPoint2DDouble *self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // push the result number
    lua_pushnumber(L, self->m_y);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_SetVectorAngle[] = { &wxluatype_wxPoint2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DDouble_SetVectorAngle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_SetVectorAngle[1] = {{ wxLua_wxPoint2DDouble_SetVectorAngle, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_SetVectorAngle }};
//     void SetVectorAngle( wxDouble degrees )
static int LUACALL wxLua_wxPoint2DDouble_SetVectorAngle(lua_State *L)
{
    // wxDouble degrees
    wxDouble degrees = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call SetVectorAngle
    self->SetVectorAngle(degrees);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_SetVectorLength[] = { &wxluatype_wxPoint2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DDouble_SetVectorLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_SetVectorLength[1] = {{ wxLua_wxPoint2DDouble_SetVectorLength, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_SetVectorLength }};
//     void SetVectorLength( wxDouble length )
static int LUACALL wxLua_wxPoint2DDouble_SetVectorLength(lua_State *L)
{
    // wxDouble length
    wxDouble length = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call SetVectorLength
    self->SetVectorLength(length);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_SetX[] = { &wxluatype_wxPoint2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DDouble_SetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_SetX[1] = {{ wxLua_wxPoint2DDouble_SetX, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_SetX }};
//     %rename X %member_func wxDouble m_x
static int LUACALL wxLua_wxPoint2DDouble_SetX(lua_State *L)
{
    // get the number value
    wxDouble val = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxPoint2DDouble *self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    self->m_x = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_SetY[] = { &wxluatype_wxPoint2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DDouble_SetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_SetY[1] = {{ wxLua_wxPoint2DDouble_SetY, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_SetY }};
//     %rename Y %member_func wxDouble m_y
static int LUACALL wxLua_wxPoint2DDouble_SetY(lua_State *L)
{
    // get the number value
    wxDouble val = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxPoint2DDouble *self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    self->m_y = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_delete[] = { &wxluatype_wxPoint2DDouble, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_op_eq[] = { &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_op_eq(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_op_eq[1] = {{ wxLua_wxPoint2DDouble_op_eq, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_op_eq }};
//     %operator bool operator==(const wxPoint2DDouble& pt) const
static int LUACALL wxLua_wxPoint2DDouble_op_eq(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call op_eq
    bool returns = ((*self)==(*pt));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_op_iadd[] = { &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_op_iadd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_op_iadd[1] = {{ wxLua_wxPoint2DDouble_op_iadd, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_op_iadd }};
//     %operator wxPoint2DDouble& operator+=(const wxPoint2DDouble& pt)
static int LUACALL wxLua_wxPoint2DDouble_op_iadd(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call op_iadd
    (*self)+=(*pt);
    wxPoint2DDouble* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_op_idiv[] = { &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_op_idiv(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_op_idiv[1] = {{ wxLua_wxPoint2DDouble_op_idiv, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_op_idiv }};
//     %operator wxPoint2DDouble& operator/=(const wxPoint2DDouble& pt)
static int LUACALL wxLua_wxPoint2DDouble_op_idiv(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call op_idiv
    (*self)/=(*pt);
    wxPoint2DDouble* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_op_imul[] = { &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_op_imul(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_op_imul[1] = {{ wxLua_wxPoint2DDouble_op_imul, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_op_imul }};
//     %operator wxPoint2DDouble& operator*=(const wxPoint2DDouble& pt)
static int LUACALL wxLua_wxPoint2DDouble_op_imul(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call op_imul
    (*self)*=(*pt);
    wxPoint2DDouble* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_op_isub[] = { &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_op_isub(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_op_isub[1] = {{ wxLua_wxPoint2DDouble_op_isub, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_op_isub }};
//     %operator wxPoint2DDouble& operator-=(const wxPoint2DDouble& pt)
static int LUACALL wxLua_wxPoint2DDouble_op_isub(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call op_isub
    (*self)-=(*pt);
    wxPoint2DDouble* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_op_neg[] = { &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_op_neg(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_op_neg[1] = {{ wxLua_wxPoint2DDouble_op_neg, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_op_neg }};
//     %operator wxPoint2DDouble operator-()
static int LUACALL wxLua_wxPoint2DDouble_op_neg(lua_State *L)
{
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call op_neg
    // allocate a new object using the copy constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(-(*self));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_op_set[] = { &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_op_set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_op_set[1] = {{ wxLua_wxPoint2DDouble_op_set, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_op_set }};
//     %operator wxPoint2DDouble& operator=(const wxPoint2DDouble& pt)
static int LUACALL wxLua_wxPoint2DDouble_op_set(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxPoint2DDouble * self = (wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call op_set
    (*self)=(*pt);
    wxPoint2DDouble* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}


#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor3[] = { &wxluatype_wxPoint, NULL };
static int LUACALL wxLua_wxPoint2DDouble_constructor3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_constructor3[1] = {{ wxLua_wxPoint2DDouble_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor3 }};
//     wxPoint2DDouble( const wxPoint &pt )
static int LUACALL wxLua_wxPoint2DDouble_constructor3(lua_State *L)
{
    // const wxPoint pt
    const wxPoint * pt = (const wxPoint *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint);
    // call constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(*pt);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor2[] = { &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxPoint2DDouble_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_constructor2[1] = {{ wxLua_wxPoint2DDouble_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor2 }};
//     wxPoint2DDouble( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxPoint2DDouble_constructor2(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(*pt);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor1[] = { &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxPoint2DDouble_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_constructor1[1] = {{ wxLua_wxPoint2DDouble_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor1 }};
//     wxPoint2DDouble( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxPoint2DDouble_constructor1(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DDouble);
    // call constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(*pt);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPoint2DDouble_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_constructor[1] = {{ wxLua_wxPoint2DDouble_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor }};
//     wxPoint2DDouble( wxDouble x=0, wxDouble y=0 )
static int LUACALL wxLua_wxPoint2DDouble_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxDouble y = 0
    wxDouble y = (argCount >= 2 ? (wxDouble)wxlua_getnumbertype(L, 2) : 0);
    // wxDouble x = 0
    wxDouble x = (argCount >= 1 ? (wxDouble)wxlua_getnumbertype(L, 1) : 0);
    // call constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(x, y);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}




#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPoint2DDouble_constructor_overload[] =
{

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxPoint2DDouble_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor3 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxPoint2DDouble_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor2 },
    { wxLua_wxPoint2DDouble_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor1 },
    { wxLua_wxPoint2DDouble_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxPoint2DDouble_constructor },
};
static int s_wxluafunc_wxLua_wxPoint2DDouble_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPoint2DDouble_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPoint2DDouble_methods[] = {
    { "GetCrossProduct", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_GetCrossProduct, 1, NULL },
    { "GetDistance", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_GetDistance, 1, NULL },
    { "GetDistanceSquare", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_GetDistanceSquare, 1, NULL },
    { "GetDotProduct", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_GetDotProduct, 1, NULL },
    { "GetVectorAngle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_GetVectorAngle, 1, NULL },
    { "GetVectorLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_GetVectorLength, 1, NULL },
    { "GetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_GetX, 1, NULL },
    { "GetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_GetY, 1, NULL },
    { "SetVectorAngle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_SetVectorAngle, 1, NULL },
    { "SetVectorLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_SetVectorLength, 1, NULL },
    { "SetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_SetX, 1, NULL },
    { "SetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_SetY, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPoint2DDouble_delete, 1, NULL },
    { "m_x", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxPoint2DDouble_SetX, 1, NULL },
    { "m_x", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxPoint2DDouble_GetX, 1, NULL },
    { "m_y", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxPoint2DDouble_SetY, 1, NULL },
    { "m_y", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxPoint2DDouble_GetY, 1, NULL },
    { "op_eq", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_op_eq, 1, NULL },
    { "op_iadd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_op_iadd, 1, NULL },
    { "op_idiv", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_op_idiv, 1, NULL },
    { "op_imul", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_op_imul, 1, NULL },
    { "op_isub", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_op_isub, 1, NULL },
    { "op_neg", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_op_neg, 1, NULL },
    { "op_set", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPoint2DDouble_op_set, 1, NULL },

#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)
    { "wxPoint2DDouble", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPoint2DDouble_constructor_overload, s_wxluafunc_wxLua_wxPoint2DDouble_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)

    { 0, 0, 0, 0 },
};

int wxPoint2DDouble_methodCount = sizeof(wxPoint2DDouble_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_Geometry && wxUSE_GEOMETRY


#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
// ---------------------------------------------------------------------------
// Bind class wxRect2DDouble
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxRect2DDouble'
int wxluatype_wxRect2DDouble = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_ConstrainTo[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_ConstrainTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_ConstrainTo[1] = {{ wxLua_wxRect2DDouble_ConstrainTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_ConstrainTo }};
//     void ConstrainTo( const wxRect2DDouble &rect )
static int LUACALL wxLua_wxRect2DDouble_ConstrainTo(lua_State *L)
{
    // const wxRect2DDouble rect
    const wxRect2DDouble * rect = (const wxRect2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call ConstrainTo
    self->ConstrainTo(*rect);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_Contains1[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_Contains1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Contains1[1] = {{ wxLua_wxRect2DDouble_Contains1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Contains1 }};
//     bool Contains( const wxRect2DDouble &rect ) const
static int LUACALL wxLua_wxRect2DDouble_Contains1(lua_State *L)
{
    // const wxRect2DDouble rect
    const wxRect2DDouble * rect = (const wxRect2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call Contains
    bool returns = (self->Contains(*rect));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_Contains[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_Contains(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Contains[1] = {{ wxLua_wxRect2DDouble_Contains, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Contains }};
//     bool Contains( const wxPoint2DDouble &pt ) const
static int LUACALL wxLua_wxRect2DDouble_Contains(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call Contains
    bool returns = (self->Contains(*pt));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_CreateIntersection[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_CreateIntersection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_CreateIntersection[1] = {{ wxLua_wxRect2DDouble_CreateIntersection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_CreateIntersection }};
//     wxRect2DDouble CreateIntersection( const wxRect2DDouble &otherRect ) const
static int LUACALL wxLua_wxRect2DDouble_CreateIntersection(lua_State *L)
{
    // const wxRect2DDouble otherRect
    const wxRect2DDouble * otherRect = (const wxRect2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call CreateIntersection
    // allocate a new object using the copy constructor
    wxRect2DDouble* returns = new wxRect2DDouble(self->CreateIntersection(*otherRect));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DDouble((wxRect2DDouble*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_CreateUnion[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_CreateUnion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_CreateUnion[1] = {{ wxLua_wxRect2DDouble_CreateUnion, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_CreateUnion }};
//     wxRect2DDouble CreateUnion( const wxRect2DDouble &otherRect ) const
static int LUACALL wxLua_wxRect2DDouble_CreateUnion(lua_State *L)
{
    // const wxRect2DDouble otherRect
    const wxRect2DDouble * otherRect = (const wxRect2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call CreateUnion
    // allocate a new object using the copy constructor
    wxRect2DDouble* returns = new wxRect2DDouble(self->CreateUnion(*otherRect));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DDouble((wxRect2DDouble*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetBottom[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetBottom[1] = {{ wxLua_wxRect2DDouble_GetBottom, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetBottom }};
//     wxDouble GetBottom() const
static int LUACALL wxLua_wxRect2DDouble_GetBottom(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetBottom
    wxDouble returns = (self->GetBottom());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetCentre[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetCentre(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetCentre[1] = {{ wxLua_wxRect2DDouble_GetCentre, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetCentre }};
//     wxPoint2DDouble GetCentre() const
static int LUACALL wxLua_wxRect2DDouble_GetCentre(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetCentre
    // allocate a new object using the copy constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(self->GetCentre());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetHeight[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetHeight[1] = {{ wxLua_wxRect2DDouble_GetHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetHeight }};
//     %rename Height %member_func wxDouble m_height
static int LUACALL wxLua_wxRect2DDouble_GetHeight(lua_State *L)
{
    // get this
    wxRect2DDouble *self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // push the result number
    lua_pushnumber(L, self->m_height);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetLeft[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetLeft[1] = {{ wxLua_wxRect2DDouble_GetLeft, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetLeft }};
//     wxDouble GetLeft() const
static int LUACALL wxLua_wxRect2DDouble_GetLeft(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetLeft
    wxDouble returns = (self->GetLeft());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetLeftBottom[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetLeftBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetLeftBottom[1] = {{ wxLua_wxRect2DDouble_GetLeftBottom, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetLeftBottom }};
//     wxPoint2DDouble GetLeftBottom() const
static int LUACALL wxLua_wxRect2DDouble_GetLeftBottom(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetLeftBottom
    // allocate a new object using the copy constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(self->GetLeftBottom());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetLeftTop[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetLeftTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetLeftTop[1] = {{ wxLua_wxRect2DDouble_GetLeftTop, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetLeftTop }};
//     wxPoint2DDouble GetLeftTop() const
static int LUACALL wxLua_wxRect2DDouble_GetLeftTop(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetLeftTop
    // allocate a new object using the copy constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(self->GetLeftTop());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetOutCode[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetOutCode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetOutCode[1] = {{ wxLua_wxRect2DDouble_GetOutCode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_GetOutCode }};
//     wxOutCode GetOutCode( const wxPoint2DDouble &pt ) const
static int LUACALL wxLua_wxRect2DDouble_GetOutCode(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetOutCode
    wxOutCode returns = (self->GetOutCode(*pt));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetPosition[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetPosition[1] = {{ wxLua_wxRect2DDouble_GetPosition, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetPosition }};
//     wxPoint2DDouble GetPosition()
static int LUACALL wxLua_wxRect2DDouble_GetPosition(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetPosition
    // allocate a new object using the copy constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(self->GetPosition());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetRight[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetRight[1] = {{ wxLua_wxRect2DDouble_GetRight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetRight }};
//     wxDouble GetRight() const
static int LUACALL wxLua_wxRect2DDouble_GetRight(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetRight
    wxDouble returns = (self->GetRight());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetRightBottom[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetRightBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetRightBottom[1] = {{ wxLua_wxRect2DDouble_GetRightBottom, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetRightBottom }};
//     wxPoint2DDouble GetRightBottom() const
static int LUACALL wxLua_wxRect2DDouble_GetRightBottom(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetRightBottom
    // allocate a new object using the copy constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(self->GetRightBottom());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetRightTop[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetRightTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetRightTop[1] = {{ wxLua_wxRect2DDouble_GetRightTop, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetRightTop }};
//     wxPoint2DDouble GetRightTop() const
static int LUACALL wxLua_wxRect2DDouble_GetRightTop(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetRightTop
    // allocate a new object using the copy constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(self->GetRightTop());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}


#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetSize[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetSize[1] = {{ wxLua_wxRect2DDouble_GetSize, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetSize }};
//     wxSize GetSize()
static int LUACALL wxLua_wxRect2DDouble_GetSize(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetSize
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->GetSize());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxSize((wxSize*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetTop[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetTop[1] = {{ wxLua_wxRect2DDouble_GetTop, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetTop }};
//     wxDouble GetTop() const
static int LUACALL wxLua_wxRect2DDouble_GetTop(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call GetTop
    wxDouble returns = (self->GetTop());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetWidth[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetWidth[1] = {{ wxLua_wxRect2DDouble_GetWidth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetWidth }};
//     %rename Width %member_func wxDouble m_width
static int LUACALL wxLua_wxRect2DDouble_GetWidth(lua_State *L)
{
    // get this
    wxRect2DDouble *self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // push the result number
    lua_pushnumber(L, self->m_width);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetX[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetX[1] = {{ wxLua_wxRect2DDouble_GetX, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetX }};
//     %rename X %member_func wxDouble m_x
static int LUACALL wxLua_wxRect2DDouble_GetX(lua_State *L)
{
    // get this
    wxRect2DDouble *self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // push the result number
    lua_pushnumber(L, self->m_x);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_GetY[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_GetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_GetY[1] = {{ wxLua_wxRect2DDouble_GetY, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_GetY }};
//     %rename Y %member_func wxDouble m_y
static int LUACALL wxLua_wxRect2DDouble_GetY(lua_State *L)
{
    // get this
    wxRect2DDouble *self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // push the result number
    lua_pushnumber(L, self->m_y);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_HaveEqualSize[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_HaveEqualSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_HaveEqualSize[1] = {{ wxLua_wxRect2DDouble_HaveEqualSize, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_HaveEqualSize }};
//     bool HaveEqualSize( const wxRect2DDouble &rect ) const
static int LUACALL wxLua_wxRect2DDouble_HaveEqualSize(lua_State *L)
{
    // const wxRect2DDouble rect
    const wxRect2DDouble * rect = (const wxRect2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call HaveEqualSize
    bool returns = (self->HaveEqualSize(*rect));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_Inset[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_Inset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Inset[1] = {{ wxLua_wxRect2DDouble_Inset, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxRect2DDouble_Inset }};
//     void Inset( wxDouble left, wxDouble top, wxDouble right, wxDouble bottom  )
static int LUACALL wxLua_wxRect2DDouble_Inset(lua_State *L)
{
    // wxDouble bottom
    wxDouble bottom = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble right
    wxDouble right = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble top
    wxDouble top = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble left
    wxDouble left = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call Inset
    self->Inset(left, top, right, bottom);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_Interpolate[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_Interpolate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Interpolate[1] = {{ wxLua_wxRect2DDouble_Interpolate, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxRect2DDouble_Interpolate }};
//     wxPoint2DDouble Interpolate( wxInt32 widthfactor , wxInt32 heightfactor )
static int LUACALL wxLua_wxRect2DDouble_Interpolate(lua_State *L)
{
    // wxInt32 heightfactor
    wxInt32 heightfactor = (wxInt32)wxlua_getnumbertype(L, 3);
    // wxInt32 widthfactor
    wxInt32 widthfactor = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call Interpolate
    // allocate a new object using the copy constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(self->Interpolate(widthfactor, heightfactor));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DDouble((wxPoint2DDouble*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_Intersect[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_Intersect(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Intersect[1] = {{ wxLua_wxRect2DDouble_Intersect, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Intersect }};
//     void Intersect( const wxRect2DDouble &otherRect )
static int LUACALL wxLua_wxRect2DDouble_Intersect(lua_State *L)
{
    // const wxRect2DDouble otherRect
    const wxRect2DDouble * otherRect = (const wxRect2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call Intersect
    self->Intersect(*otherRect);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_Intersects[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_Intersects(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Intersects[1] = {{ wxLua_wxRect2DDouble_Intersects, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Intersects }};
//     bool Intersects( const wxRect2DDouble &rect ) const
static int LUACALL wxLua_wxRect2DDouble_Intersects(lua_State *L)
{
    // const wxRect2DDouble rect
    const wxRect2DDouble * rect = (const wxRect2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call Intersects
    bool returns = (self->Intersects(*rect));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_IsEmpty[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_IsEmpty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_IsEmpty[1] = {{ wxLua_wxRect2DDouble_IsEmpty, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_IsEmpty }};
//     bool IsEmpty() const
static int LUACALL wxLua_wxRect2DDouble_IsEmpty(lua_State *L)
{
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call IsEmpty
    bool returns = (self->IsEmpty());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_MoveBottomTo[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_MoveBottomTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_MoveBottomTo[1] = {{ wxLua_wxRect2DDouble_MoveBottomTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_MoveBottomTo }};
//     void MoveBottomTo( wxDouble n )
static int LUACALL wxLua_wxRect2DDouble_MoveBottomTo(lua_State *L)
{
    // wxDouble n
    wxDouble n = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call MoveBottomTo
    self->MoveBottomTo(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_MoveCentreTo[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_MoveCentreTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_MoveCentreTo[1] = {{ wxLua_wxRect2DDouble_MoveCentreTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_MoveCentreTo }};
//     void MoveCentreTo( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_MoveCentreTo(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call MoveCentreTo
    self->MoveCentreTo(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_MoveLeftBottomTo[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_MoveLeftBottomTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_MoveLeftBottomTo[1] = {{ wxLua_wxRect2DDouble_MoveLeftBottomTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_MoveLeftBottomTo }};
//     void MoveLeftBottomTo( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_MoveLeftBottomTo(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call MoveLeftBottomTo
    self->MoveLeftBottomTo(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_MoveLeftTo[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_MoveLeftTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_MoveLeftTo[1] = {{ wxLua_wxRect2DDouble_MoveLeftTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_MoveLeftTo }};
//     void MoveLeftTo( wxDouble n )
static int LUACALL wxLua_wxRect2DDouble_MoveLeftTo(lua_State *L)
{
    // wxDouble n
    wxDouble n = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call MoveLeftTo
    self->MoveLeftTo(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_MoveLeftTopTo[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_MoveLeftTopTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_MoveLeftTopTo[1] = {{ wxLua_wxRect2DDouble_MoveLeftTopTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_MoveLeftTopTo }};
//     void MoveLeftTopTo( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_MoveLeftTopTo(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call MoveLeftTopTo
    self->MoveLeftTopTo(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_MoveRightBottomTo[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_MoveRightBottomTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_MoveRightBottomTo[1] = {{ wxLua_wxRect2DDouble_MoveRightBottomTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_MoveRightBottomTo }};
//     void MoveRightBottomTo( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_MoveRightBottomTo(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call MoveRightBottomTo
    self->MoveRightBottomTo(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_MoveRightTo[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_MoveRightTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_MoveRightTo[1] = {{ wxLua_wxRect2DDouble_MoveRightTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_MoveRightTo }};
//     void MoveRightTo( wxDouble n )
static int LUACALL wxLua_wxRect2DDouble_MoveRightTo(lua_State *L)
{
    // wxDouble n
    wxDouble n = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call MoveRightTo
    self->MoveRightTo(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_MoveRightTopTo[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_MoveRightTopTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_MoveRightTopTo[1] = {{ wxLua_wxRect2DDouble_MoveRightTopTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_MoveRightTopTo }};
//     void MoveRightTopTo( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_MoveRightTopTo(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call MoveRightTopTo
    self->MoveRightTopTo(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_MoveTopTo[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_MoveTopTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_MoveTopTo[1] = {{ wxLua_wxRect2DDouble_MoveTopTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_MoveTopTo }};
//     void MoveTopTo( wxDouble n )
static int LUACALL wxLua_wxRect2DDouble_MoveTopTo(lua_State *L)
{
    // wxDouble n
    wxDouble n = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call MoveTopTo
    self->MoveTopTo(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_Offset[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_Offset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Offset[1] = {{ wxLua_wxRect2DDouble_Offset, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Offset }};
//     void Offset( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_Offset(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call Offset
    self->Offset(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_Scale[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_Scale(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Scale[1] = {{ wxLua_wxRect2DDouble_Scale, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Scale }};
//     void Scale( wxDouble f )
static int LUACALL wxLua_wxRect2DDouble_Scale(lua_State *L)
{
    // wxDouble f
    wxDouble f = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call Scale
    self->Scale(f);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetBottom[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetBottom[1] = {{ wxLua_wxRect2DDouble_SetBottom, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetBottom }};
//     void SetBottom( wxDouble n )
static int LUACALL wxLua_wxRect2DDouble_SetBottom(lua_State *L)
{
    // wxDouble n
    wxDouble n = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call SetBottom
    self->SetBottom(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetCentre[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetCentre(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetCentre[1] = {{ wxLua_wxRect2DDouble_SetCentre, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetCentre }};
//     void SetCentre( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_SetCentre(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call SetCentre
    self->SetCentre(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetHeight[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetHeight[1] = {{ wxLua_wxRect2DDouble_SetHeight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetHeight }};
//     %rename Height %member_func wxDouble m_height
static int LUACALL wxLua_wxRect2DDouble_SetHeight(lua_State *L)
{
    // get the number value
    wxDouble val = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble *self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    self->m_height = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetLeft[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetLeft[1] = {{ wxLua_wxRect2DDouble_SetLeft, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetLeft }};
//     void SetLeft( wxDouble n )
static int LUACALL wxLua_wxRect2DDouble_SetLeft(lua_State *L)
{
    // wxDouble n
    wxDouble n = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call SetLeft
    self->SetLeft(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetLeftBottom[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetLeftBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetLeftBottom[1] = {{ wxLua_wxRect2DDouble_SetLeftBottom, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetLeftBottom }};
//     void SetLeftBottom( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_SetLeftBottom(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call SetLeftBottom
    self->SetLeftBottom(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetLeftTop[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetLeftTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetLeftTop[1] = {{ wxLua_wxRect2DDouble_SetLeftTop, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetLeftTop }};
//     void SetLeftTop( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_SetLeftTop(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call SetLeftTop
    self->SetLeftTop(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetRight[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetRight[1] = {{ wxLua_wxRect2DDouble_SetRight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetRight }};
//     void SetRight( wxDouble n )
static int LUACALL wxLua_wxRect2DDouble_SetRight(lua_State *L)
{
    // wxDouble n
    wxDouble n = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call SetRight
    self->SetRight(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetRightBottom[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetRightBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetRightBottom[1] = {{ wxLua_wxRect2DDouble_SetRightBottom, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetRightBottom }};
//     void SetRightBottom( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_SetRightBottom(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call SetRightBottom
    self->SetRightBottom(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetRightTop[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetRightTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetRightTop[1] = {{ wxLua_wxRect2DDouble_SetRightTop, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetRightTop }};
//     void SetRightTop( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_SetRightTop(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call SetRightTop
    self->SetRightTop(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetTop[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetTop[1] = {{ wxLua_wxRect2DDouble_SetTop, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetTop }};
//     void SetTop( wxDouble n )
static int LUACALL wxLua_wxRect2DDouble_SetTop(lua_State *L)
{
    // wxDouble n
    wxDouble n = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call SetTop
    self->SetTop(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetWidth[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetWidth[1] = {{ wxLua_wxRect2DDouble_SetWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetWidth }};
//     %rename Width %member_func wxDouble m_width
static int LUACALL wxLua_wxRect2DDouble_SetWidth(lua_State *L)
{
    // get the number value
    wxDouble val = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble *self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    self->m_width = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetX[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetX[1] = {{ wxLua_wxRect2DDouble_SetX, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetX }};
//     %rename X %member_func wxDouble m_x
static int LUACALL wxLua_wxRect2DDouble_SetX(lua_State *L)
{
    // get the number value
    wxDouble val = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble *self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    self->m_x = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_SetY[] = { &wxluatype_wxRect2DDouble, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_SetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_SetY[1] = {{ wxLua_wxRect2DDouble_SetY, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_SetY }};
//     %rename Y %member_func wxDouble m_y
static int LUACALL wxLua_wxRect2DDouble_SetY(lua_State *L)
{
    // get the number value
    wxDouble val = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DDouble *self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    self->m_y = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_Union1[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_Union1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Union1[1] = {{ wxLua_wxRect2DDouble_Union1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Union1 }};
//     void Union( const wxPoint2DDouble &pt )
static int LUACALL wxLua_wxRect2DDouble_Union1(lua_State *L)
{
    // const wxPoint2DDouble pt
    const wxPoint2DDouble * pt = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call Union
    self->Union(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_Union[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_Union(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Union[1] = {{ wxLua_wxRect2DDouble_Union, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Union }};
//     void Union( const wxRect2DDouble &otherRect )
static int LUACALL wxLua_wxRect2DDouble_Union(lua_State *L)
{
    // const wxRect2DDouble otherRect
    const wxRect2DDouble * otherRect = (const wxRect2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call Union
    self->Union(*otherRect);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_delete[] = { &wxluatype_wxRect2DDouble, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_op_eq[] = { &wxluatype_wxRect2DDouble, &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_op_eq(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_op_eq[1] = {{ wxLua_wxRect2DDouble_op_eq, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_op_eq }};
//     %operator bool operator==(const wxRect2DDouble& rect)
static int LUACALL wxLua_wxRect2DDouble_op_eq(lua_State *L)
{
    // const wxRect2DDouble rect
    const wxRect2DDouble * rect = (const wxRect2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DDouble);
    // get this
    wxRect2DDouble * self = (wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call op_eq
    bool returns = ((*self)==(*rect));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_constructor1[] = { &wxluatype_wxRect2DDouble, NULL };
static int LUACALL wxLua_wxRect2DDouble_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_constructor1[1] = {{ wxLua_wxRect2DDouble_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_constructor1 }};
//     wxRect2DDouble(const wxRect2DDouble& rect)
static int LUACALL wxLua_wxRect2DDouble_constructor1(lua_State *L)
{
    // const wxRect2DDouble rect
    const wxRect2DDouble * rect = (const wxRect2DDouble *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DDouble);
    // call constructor
    wxRect2DDouble* returns = new wxRect2DDouble(*rect);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DDouble((wxRect2DDouble*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DDouble);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DDouble_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DDouble_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_constructor[1] = {{ wxLua_wxRect2DDouble_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 4, s_wxluatypeArray_wxLua_wxRect2DDouble_constructor }};
//     wxRect2DDouble(wxDouble x=0, wxDouble y=0, wxDouble w=0, wxDouble h=0)
static int LUACALL wxLua_wxRect2DDouble_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxDouble h = 0
    wxDouble h = (argCount >= 4 ? (wxDouble)wxlua_getnumbertype(L, 4) : 0);
    // wxDouble w = 0
    wxDouble w = (argCount >= 3 ? (wxDouble)wxlua_getnumbertype(L, 3) : 0);
    // wxDouble y = 0
    wxDouble y = (argCount >= 2 ? (wxDouble)wxlua_getnumbertype(L, 2) : 0);
    // wxDouble x = 0
    wxDouble x = (argCount >= 1 ? (wxDouble)wxlua_getnumbertype(L, 1) : 0);
    // call constructor
    wxRect2DDouble* returns = new wxRect2DDouble(x, y, w, h);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DDouble((wxRect2DDouble*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DDouble);

    return 1;
}




#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Contains_overload[] =
{
    { wxLua_wxRect2DDouble_Contains1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Contains1 },
    { wxLua_wxRect2DDouble_Contains, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Contains },
};
static int s_wxluafunc_wxLua_wxRect2DDouble_Contains_overload_count = sizeof(s_wxluafunc_wxLua_wxRect2DDouble_Contains_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_Union_overload[] =
{
    { wxLua_wxRect2DDouble_Union1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Union1 },
    { wxLua_wxRect2DDouble_Union, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DDouble_Union },
};
static int s_wxluafunc_wxLua_wxRect2DDouble_Union_overload_count = sizeof(s_wxluafunc_wxLua_wxRect2DDouble_Union_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DDouble_constructor_overload[] =
{
    { wxLua_wxRect2DDouble_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxRect2DDouble_constructor1 },
    { wxLua_wxRect2DDouble_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 4, s_wxluatypeArray_wxLua_wxRect2DDouble_constructor },
};
static int s_wxluafunc_wxLua_wxRect2DDouble_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxRect2DDouble_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxRect2DDouble_methods[] = {
    { "ConstrainTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_ConstrainTo, 1, NULL },

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY)
    { "Contains", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_Contains_overload, s_wxluafunc_wxLua_wxRect2DDouble_Contains_overload_count, 0 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY)

    { "CreateIntersection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_CreateIntersection, 1, NULL },
    { "CreateUnion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_CreateUnion, 1, NULL },
    { "GetBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetBottom, 1, NULL },
    { "GetCentre", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetCentre, 1, NULL },
    { "GetHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetHeight, 1, NULL },
    { "GetLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetLeft, 1, NULL },
    { "GetLeftBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetLeftBottom, 1, NULL },
    { "GetLeftTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetLeftTop, 1, NULL },
    { "GetOutCode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetOutCode, 1, NULL },
    { "GetPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetPosition, 1, NULL },
    { "GetRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetRight, 1, NULL },
    { "GetRightBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetRightBottom, 1, NULL },
    { "GetRightTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetRightTop, 1, NULL },

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
    { "GetSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetSize, 1, NULL },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)

    { "GetTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetTop, 1, NULL },
    { "GetWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetWidth, 1, NULL },
    { "GetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetX, 1, NULL },
    { "GetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_GetY, 1, NULL },
    { "HaveEqualSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_HaveEqualSize, 1, NULL },
    { "Inset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_Inset, 1, NULL },
    { "Interpolate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_Interpolate, 1, NULL },
    { "Intersect", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_Intersect, 1, NULL },
    { "Intersects", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_Intersects, 1, NULL },
    { "IsEmpty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_IsEmpty, 1, NULL },
    { "MoveBottomTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_MoveBottomTo, 1, NULL },
    { "MoveCentreTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_MoveCentreTo, 1, NULL },
    { "MoveLeftBottomTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_MoveLeftBottomTo, 1, NULL },
    { "MoveLeftTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_MoveLeftTo, 1, NULL },
    { "MoveLeftTopTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_MoveLeftTopTo, 1, NULL },
    { "MoveRightBottomTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_MoveRightBottomTo, 1, NULL },
    { "MoveRightTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_MoveRightTo, 1, NULL },
    { "MoveRightTopTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_MoveRightTopTo, 1, NULL },
    { "MoveTopTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_MoveTopTo, 1, NULL },
    { "Offset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_Offset, 1, NULL },
    { "Scale", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_Scale, 1, NULL },
    { "SetBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetBottom, 1, NULL },
    { "SetCentre", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetCentre, 1, NULL },
    { "SetHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetHeight, 1, NULL },
    { "SetLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetLeft, 1, NULL },
    { "SetLeftBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetLeftBottom, 1, NULL },
    { "SetLeftTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetLeftTop, 1, NULL },
    { "SetRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetRight, 1, NULL },
    { "SetRightBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetRightBottom, 1, NULL },
    { "SetRightTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetRightTop, 1, NULL },
    { "SetTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetTop, 1, NULL },
    { "SetWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetWidth, 1, NULL },
    { "SetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetX, 1, NULL },
    { "SetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_SetY, 1, NULL },

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY)
    { "Union", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_Union_overload, s_wxluafunc_wxLua_wxRect2DDouble_Union_overload_count, 0 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxRect2DDouble_delete, 1, NULL },
    { "m_height", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxRect2DDouble_SetHeight, 1, NULL },
    { "m_height", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxRect2DDouble_GetHeight, 1, NULL },
    { "m_width", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxRect2DDouble_SetWidth, 1, NULL },
    { "m_width", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxRect2DDouble_GetWidth, 1, NULL },
    { "m_x", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxRect2DDouble_SetX, 1, NULL },
    { "m_x", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxRect2DDouble_GetX, 1, NULL },
    { "m_y", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxRect2DDouble_SetY, 1, NULL },
    { "m_y", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxRect2DDouble_GetY, 1, NULL },
    { "op_eq", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DDouble_op_eq, 1, NULL },

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY)
    { "wxRect2DDouble", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxRect2DDouble_constructor_overload, s_wxluafunc_wxLua_wxRect2DDouble_constructor_overload_count, 0 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY)

    { 0, 0, 0, 0 },
};

int wxRect2DDouble_methodCount = sizeof(wxRect2DDouble_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_Geometry && wxUSE_GEOMETRY


#if wxLUA_USE_Geometry && wxUSE_GEOMETRY
// ---------------------------------------------------------------------------
// Bind class wxRect2DInt
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxRect2DInt'
int wxluatype_wxRect2DInt = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_ConstrainTo[] = { &wxluatype_wxRect2DInt, &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_ConstrainTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_ConstrainTo[1] = {{ wxLua_wxRect2DInt_ConstrainTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_ConstrainTo }};
//     void ConstrainTo( const wxRect2DInt &rect )
static int LUACALL wxLua_wxRect2DInt_ConstrainTo(lua_State *L)
{
    // const wxRect2DInt rect
    const wxRect2DInt * rect = (const wxRect2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call ConstrainTo
    self->ConstrainTo(*rect);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_Contains1[] = { &wxluatype_wxRect2DInt, &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_Contains1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Contains1[1] = {{ wxLua_wxRect2DInt_Contains1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Contains1 }};
//     bool Contains( const wxRect2DInt &rect ) const
static int LUACALL wxLua_wxRect2DInt_Contains1(lua_State *L)
{
    // const wxRect2DInt rect
    const wxRect2DInt * rect = (const wxRect2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call Contains
    bool returns = (self->Contains(*rect));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_Contains[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_Contains(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Contains[1] = {{ wxLua_wxRect2DInt_Contains, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Contains }};
//     bool Contains( const wxPoint2DInt &pt ) const
static int LUACALL wxLua_wxRect2DInt_Contains(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call Contains
    bool returns = (self->Contains(*pt));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_CreateIntersection[] = { &wxluatype_wxRect2DInt, &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_CreateIntersection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_CreateIntersection[1] = {{ wxLua_wxRect2DInt_CreateIntersection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_CreateIntersection }};
//     wxRect2DInt CreateIntersection( const wxRect2DInt &otherRect ) const
static int LUACALL wxLua_wxRect2DInt_CreateIntersection(lua_State *L)
{
    // const wxRect2DInt otherRect
    const wxRect2DInt * otherRect = (const wxRect2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call CreateIntersection
    // allocate a new object using the copy constructor
    wxRect2DInt* returns = new wxRect2DInt(self->CreateIntersection(*otherRect));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DInt((wxRect2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_CreateUnion[] = { &wxluatype_wxRect2DInt, &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_CreateUnion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_CreateUnion[1] = {{ wxLua_wxRect2DInt_CreateUnion, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_CreateUnion }};
//     wxRect2DInt CreateUnion( const wxRect2DInt &otherRect ) const
static int LUACALL wxLua_wxRect2DInt_CreateUnion(lua_State *L)
{
    // const wxRect2DInt otherRect
    const wxRect2DInt * otherRect = (const wxRect2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call CreateUnion
    // allocate a new object using the copy constructor
    wxRect2DInt* returns = new wxRect2DInt(self->CreateUnion(*otherRect));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DInt((wxRect2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetBottom[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetBottom[1] = {{ wxLua_wxRect2DInt_GetBottom, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetBottom }};
//     wxInt32 GetBottom() const
static int LUACALL wxLua_wxRect2DInt_GetBottom(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetBottom
    wxInt32 returns = (self->GetBottom());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetCentre[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetCentre(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetCentre[1] = {{ wxLua_wxRect2DInt_GetCentre, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetCentre }};
//     wxPoint2DInt GetCentre() const
static int LUACALL wxLua_wxRect2DInt_GetCentre(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetCentre
    // allocate a new object using the copy constructor
    wxPoint2DInt* returns = new wxPoint2DInt(self->GetCentre());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetHeight[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetHeight[1] = {{ wxLua_wxRect2DInt_GetHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetHeight }};
//     %rename Height %member_func wxInt32 m_height
static int LUACALL wxLua_wxRect2DInt_GetHeight(lua_State *L)
{
    // get this
    wxRect2DInt *self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // push the result number
    lua_pushnumber(L, self->m_height);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetLeft[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetLeft[1] = {{ wxLua_wxRect2DInt_GetLeft, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetLeft }};
//     wxInt32 GetLeft() const
static int LUACALL wxLua_wxRect2DInt_GetLeft(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetLeft
    wxInt32 returns = (self->GetLeft());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetLeftBottom[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetLeftBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetLeftBottom[1] = {{ wxLua_wxRect2DInt_GetLeftBottom, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetLeftBottom }};
//     wxPoint2DInt GetLeftBottom() const
static int LUACALL wxLua_wxRect2DInt_GetLeftBottom(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetLeftBottom
    // allocate a new object using the copy constructor
    wxPoint2DInt* returns = new wxPoint2DInt(self->GetLeftBottom());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetLeftTop[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetLeftTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetLeftTop[1] = {{ wxLua_wxRect2DInt_GetLeftTop, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetLeftTop }};
//     wxPoint2DInt GetLeftTop() const
static int LUACALL wxLua_wxRect2DInt_GetLeftTop(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetLeftTop
    // allocate a new object using the copy constructor
    wxPoint2DInt* returns = new wxPoint2DInt(self->GetLeftTop());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetOutCode[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetOutCode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetOutCode[1] = {{ wxLua_wxRect2DInt_GetOutCode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_GetOutCode }};
//     wxOutCode GetOutCode( const wxPoint2DInt &pt ) const
static int LUACALL wxLua_wxRect2DInt_GetOutCode(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetOutCode
    wxOutCode returns = (self->GetOutCode(*pt));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetPosition[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetPosition[1] = {{ wxLua_wxRect2DInt_GetPosition, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetPosition }};
//     wxPoint2DInt GetPosition()
static int LUACALL wxLua_wxRect2DInt_GetPosition(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetPosition
    // allocate a new object using the copy constructor
    wxPoint2DInt* returns = new wxPoint2DInt(self->GetPosition());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetRight[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetRight[1] = {{ wxLua_wxRect2DInt_GetRight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetRight }};
//     wxInt32 GetRight() const
static int LUACALL wxLua_wxRect2DInt_GetRight(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetRight
    wxInt32 returns = (self->GetRight());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetRightBottom[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetRightBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetRightBottom[1] = {{ wxLua_wxRect2DInt_GetRightBottom, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetRightBottom }};
//     wxPoint2DInt GetRightBottom() const
static int LUACALL wxLua_wxRect2DInt_GetRightBottom(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetRightBottom
    // allocate a new object using the copy constructor
    wxPoint2DInt* returns = new wxPoint2DInt(self->GetRightBottom());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetRightTop[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetRightTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetRightTop[1] = {{ wxLua_wxRect2DInt_GetRightTop, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetRightTop }};
//     wxPoint2DInt GetRightTop() const
static int LUACALL wxLua_wxRect2DInt_GetRightTop(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetRightTop
    // allocate a new object using the copy constructor
    wxPoint2DInt* returns = new wxPoint2DInt(self->GetRightTop());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}


#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetSize[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetSize[1] = {{ wxLua_wxRect2DInt_GetSize, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetSize }};
//     wxSize GetSize()
static int LUACALL wxLua_wxRect2DInt_GetSize(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetSize
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->GetSize());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxSize((wxSize*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetTop[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetTop[1] = {{ wxLua_wxRect2DInt_GetTop, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetTop }};
//     wxInt32 GetTop() const
static int LUACALL wxLua_wxRect2DInt_GetTop(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call GetTop
    wxInt32 returns = (self->GetTop());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetWidth[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetWidth[1] = {{ wxLua_wxRect2DInt_GetWidth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetWidth }};
//     %rename Width %member_func wxInt32 m_width
static int LUACALL wxLua_wxRect2DInt_GetWidth(lua_State *L)
{
    // get this
    wxRect2DInt *self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // push the result number
    lua_pushnumber(L, self->m_width);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetX[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetX[1] = {{ wxLua_wxRect2DInt_GetX, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetX }};
//     %rename X %member_func wxInt32 m_x
static int LUACALL wxLua_wxRect2DInt_GetX(lua_State *L)
{
    // get this
    wxRect2DInt *self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // push the result number
    lua_pushnumber(L, self->m_x);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_GetY[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_GetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_GetY[1] = {{ wxLua_wxRect2DInt_GetY, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_GetY }};
//     %rename Y %member_func wxInt32 m_y
static int LUACALL wxLua_wxRect2DInt_GetY(lua_State *L)
{
    // get this
    wxRect2DInt *self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // push the result number
    lua_pushnumber(L, self->m_y);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_HaveEqualSize[] = { &wxluatype_wxRect2DInt, &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_HaveEqualSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_HaveEqualSize[1] = {{ wxLua_wxRect2DInt_HaveEqualSize, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_HaveEqualSize }};
//     bool HaveEqualSize( const wxRect2DInt &rect ) const
static int LUACALL wxLua_wxRect2DInt_HaveEqualSize(lua_State *L)
{
    // const wxRect2DInt rect
    const wxRect2DInt * rect = (const wxRect2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call HaveEqualSize
    bool returns = (self->HaveEqualSize(*rect));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_Inset[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_Inset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Inset[1] = {{ wxLua_wxRect2DInt_Inset, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxRect2DInt_Inset }};
//     void Inset( wxInt32 left, wxInt32 top, wxInt32 right, wxInt32 bottom  )
static int LUACALL wxLua_wxRect2DInt_Inset(lua_State *L)
{
    // wxInt32 bottom
    wxInt32 bottom = (wxInt32)wxlua_getnumbertype(L, 5);
    // wxInt32 right
    wxInt32 right = (wxInt32)wxlua_getnumbertype(L, 4);
    // wxInt32 top
    wxInt32 top = (wxInt32)wxlua_getnumbertype(L, 3);
    // wxInt32 left
    wxInt32 left = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call Inset
    self->Inset(left, top, right, bottom);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_Interpolate[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_Interpolate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Interpolate[1] = {{ wxLua_wxRect2DInt_Interpolate, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxRect2DInt_Interpolate }};
//     wxPoint2DInt Interpolate( wxInt32 widthfactor , wxInt32 heightfactor )
static int LUACALL wxLua_wxRect2DInt_Interpolate(lua_State *L)
{
    // wxInt32 heightfactor
    wxInt32 heightfactor = (wxInt32)wxlua_getnumbertype(L, 3);
    // wxInt32 widthfactor
    wxInt32 widthfactor = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call Interpolate
    // allocate a new object using the copy constructor
    wxPoint2DInt* returns = new wxPoint2DInt(self->Interpolate(widthfactor, heightfactor));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint2DInt((wxPoint2DInt*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_Intersect[] = { &wxluatype_wxRect2DInt, &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_Intersect(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Intersect[1] = {{ wxLua_wxRect2DInt_Intersect, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Intersect }};
//     void Intersect( const wxRect2DInt &otherRect )
static int LUACALL wxLua_wxRect2DInt_Intersect(lua_State *L)
{
    // const wxRect2DInt otherRect
    const wxRect2DInt * otherRect = (const wxRect2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call Intersect
    self->Intersect(*otherRect);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_Intersects[] = { &wxluatype_wxRect2DInt, &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_Intersects(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Intersects[1] = {{ wxLua_wxRect2DInt_Intersects, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Intersects }};
//     bool Intersects( const wxRect2DInt &rect ) const
static int LUACALL wxLua_wxRect2DInt_Intersects(lua_State *L)
{
    // const wxRect2DInt rect
    const wxRect2DInt * rect = (const wxRect2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call Intersects
    bool returns = (self->Intersects(*rect));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_IsEmpty[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_IsEmpty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_IsEmpty[1] = {{ wxLua_wxRect2DInt_IsEmpty, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_IsEmpty }};
//     bool IsEmpty() const
static int LUACALL wxLua_wxRect2DInt_IsEmpty(lua_State *L)
{
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call IsEmpty
    bool returns = (self->IsEmpty());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_MoveBottomTo[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_MoveBottomTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_MoveBottomTo[1] = {{ wxLua_wxRect2DInt_MoveBottomTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_MoveBottomTo }};
//     void MoveBottomTo( wxInt32 n )
static int LUACALL wxLua_wxRect2DInt_MoveBottomTo(lua_State *L)
{
    // wxInt32 n
    wxInt32 n = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call MoveBottomTo
    self->MoveBottomTo(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_MoveCentreTo[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_MoveCentreTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_MoveCentreTo[1] = {{ wxLua_wxRect2DInt_MoveCentreTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_MoveCentreTo }};
//     void MoveCentreTo( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_MoveCentreTo(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call MoveCentreTo
    self->MoveCentreTo(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_MoveLeftBottomTo[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_MoveLeftBottomTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_MoveLeftBottomTo[1] = {{ wxLua_wxRect2DInt_MoveLeftBottomTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_MoveLeftBottomTo }};
//     void MoveLeftBottomTo( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_MoveLeftBottomTo(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call MoveLeftBottomTo
    self->MoveLeftBottomTo(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_MoveLeftTo[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_MoveLeftTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_MoveLeftTo[1] = {{ wxLua_wxRect2DInt_MoveLeftTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_MoveLeftTo }};
//     void MoveLeftTo( wxInt32 n )
static int LUACALL wxLua_wxRect2DInt_MoveLeftTo(lua_State *L)
{
    // wxInt32 n
    wxInt32 n = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call MoveLeftTo
    self->MoveLeftTo(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_MoveLeftTopTo[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_MoveLeftTopTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_MoveLeftTopTo[1] = {{ wxLua_wxRect2DInt_MoveLeftTopTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_MoveLeftTopTo }};
//     void MoveLeftTopTo( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_MoveLeftTopTo(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call MoveLeftTopTo
    self->MoveLeftTopTo(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_MoveRightBottomTo[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_MoveRightBottomTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_MoveRightBottomTo[1] = {{ wxLua_wxRect2DInt_MoveRightBottomTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_MoveRightBottomTo }};
//     void MoveRightBottomTo( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_MoveRightBottomTo(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call MoveRightBottomTo
    self->MoveRightBottomTo(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_MoveRightTo[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_MoveRightTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_MoveRightTo[1] = {{ wxLua_wxRect2DInt_MoveRightTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_MoveRightTo }};
//     void MoveRightTo( wxInt32 n )
static int LUACALL wxLua_wxRect2DInt_MoveRightTo(lua_State *L)
{
    // wxInt32 n
    wxInt32 n = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call MoveRightTo
    self->MoveRightTo(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_MoveRightTopTo[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_MoveRightTopTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_MoveRightTopTo[1] = {{ wxLua_wxRect2DInt_MoveRightTopTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_MoveRightTopTo }};
//     void MoveRightTopTo( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_MoveRightTopTo(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call MoveRightTopTo
    self->MoveRightTopTo(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_MoveTopTo[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_MoveTopTo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_MoveTopTo[1] = {{ wxLua_wxRect2DInt_MoveTopTo, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_MoveTopTo }};
//     void MoveTopTo( wxInt32 n )
static int LUACALL wxLua_wxRect2DInt_MoveTopTo(lua_State *L)
{
    // wxInt32 n
    wxInt32 n = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call MoveTopTo
    self->MoveTopTo(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_Offset[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_Offset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Offset[1] = {{ wxLua_wxRect2DInt_Offset, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Offset }};
//     void Offset( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_Offset(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call Offset
    self->Offset(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_Scale[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_Scale(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Scale[1] = {{ wxLua_wxRect2DInt_Scale, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Scale }};
//     void Scale( wxInt32 f )
static int LUACALL wxLua_wxRect2DInt_Scale(lua_State *L)
{
    // wxInt32 f
    wxInt32 f = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call Scale
    self->Scale(f);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetBottom[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_SetBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetBottom[1] = {{ wxLua_wxRect2DInt_SetBottom, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetBottom }};
//     void SetBottom( wxInt32 n )
static int LUACALL wxLua_wxRect2DInt_SetBottom(lua_State *L)
{
    // wxInt32 n
    wxInt32 n = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call SetBottom
    self->SetBottom(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetCentre[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_SetCentre(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetCentre[1] = {{ wxLua_wxRect2DInt_SetCentre, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetCentre }};
//     void SetCentre( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_SetCentre(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call SetCentre
    self->SetCentre(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetHeight[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_SetHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetHeight[1] = {{ wxLua_wxRect2DInt_SetHeight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetHeight }};
//     %rename Height %member_func wxInt32 m_height
static int LUACALL wxLua_wxRect2DInt_SetHeight(lua_State *L)
{
    // get the number value
    wxInt32 val = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt *self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    self->m_height = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetLeft[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_SetLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetLeft[1] = {{ wxLua_wxRect2DInt_SetLeft, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetLeft }};
//     void SetLeft( wxInt32 n )
static int LUACALL wxLua_wxRect2DInt_SetLeft(lua_State *L)
{
    // wxInt32 n
    wxInt32 n = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call SetLeft
    self->SetLeft(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetLeftBottom[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_SetLeftBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetLeftBottom[1] = {{ wxLua_wxRect2DInt_SetLeftBottom, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetLeftBottom }};
//     void SetLeftBottom( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_SetLeftBottom(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call SetLeftBottom
    self->SetLeftBottom(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetLeftTop[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_SetLeftTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetLeftTop[1] = {{ wxLua_wxRect2DInt_SetLeftTop, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetLeftTop }};
//     void SetLeftTop( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_SetLeftTop(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call SetLeftTop
    self->SetLeftTop(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetRight[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_SetRight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetRight[1] = {{ wxLua_wxRect2DInt_SetRight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetRight }};
//     void SetRight( wxInt32 n )
static int LUACALL wxLua_wxRect2DInt_SetRight(lua_State *L)
{
    // wxInt32 n
    wxInt32 n = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call SetRight
    self->SetRight(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetRightBottom[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_SetRightBottom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetRightBottom[1] = {{ wxLua_wxRect2DInt_SetRightBottom, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetRightBottom }};
//     void SetRightBottom( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_SetRightBottom(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call SetRightBottom
    self->SetRightBottom(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetRightTop[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_SetRightTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetRightTop[1] = {{ wxLua_wxRect2DInt_SetRightTop, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetRightTop }};
//     void SetRightTop( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_SetRightTop(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call SetRightTop
    self->SetRightTop(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetTop[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_SetTop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetTop[1] = {{ wxLua_wxRect2DInt_SetTop, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetTop }};
//     void SetTop( wxInt32 n )
static int LUACALL wxLua_wxRect2DInt_SetTop(lua_State *L)
{
    // wxInt32 n
    wxInt32 n = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call SetTop
    self->SetTop(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetWidth[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_SetWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetWidth[1] = {{ wxLua_wxRect2DInt_SetWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetWidth }};
//     %rename Width %member_func wxInt32 m_width
static int LUACALL wxLua_wxRect2DInt_SetWidth(lua_State *L)
{
    // get the number value
    wxInt32 val = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt *self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    self->m_width = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetX[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_SetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetX[1] = {{ wxLua_wxRect2DInt_SetX, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetX }};
//     %rename X %member_func wxInt32 m_x
static int LUACALL wxLua_wxRect2DInt_SetX(lua_State *L)
{
    // get the number value
    wxInt32 val = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt *self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    self->m_x = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_SetY[] = { &wxluatype_wxRect2DInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_SetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_SetY[1] = {{ wxLua_wxRect2DInt_SetY, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_SetY }};
//     %rename Y %member_func wxInt32 m_y
static int LUACALL wxLua_wxRect2DInt_SetY(lua_State *L)
{
    // get the number value
    wxInt32 val = (wxInt32)wxlua_getnumbertype(L, 2);
    // get this
    wxRect2DInt *self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    self->m_y = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_Union1[] = { &wxluatype_wxRect2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_Union1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Union1[1] = {{ wxLua_wxRect2DInt_Union1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Union1 }};
//     void Union( const wxPoint2DInt &pt )
static int LUACALL wxLua_wxRect2DInt_Union1(lua_State *L)
{
    // const wxPoint2DInt pt
    const wxPoint2DInt * pt = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call Union
    self->Union(*pt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_Union[] = { &wxluatype_wxRect2DInt, &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_Union(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Union[1] = {{ wxLua_wxRect2DInt_Union, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Union }};
//     void Union( const wxRect2DInt &otherRect )
static int LUACALL wxLua_wxRect2DInt_Union(lua_State *L)
{
    // const wxRect2DInt otherRect
    const wxRect2DInt * otherRect = (const wxRect2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call Union
    self->Union(*otherRect);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_delete[] = { &wxluatype_wxRect2DInt, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_op_eq[] = { &wxluatype_wxRect2DInt, &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_op_eq(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_op_eq[1] = {{ wxLua_wxRect2DInt_op_eq, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_op_eq }};
//     %operator bool operator == (const wxRect2DInt& rect) const
static int LUACALL wxLua_wxRect2DInt_op_eq(lua_State *L)
{
    // const wxRect2DInt rect
    const wxRect2DInt * rect = (const wxRect2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRect2DInt);
    // get this
    wxRect2DInt * self = (wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call op_eq
    bool returns = ((*self)==(*rect));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_constructor4[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxRect2DInt_constructor4(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_constructor4[1] = {{ wxLua_wxRect2DInt_constructor4, WXLUAMETHOD_CONSTRUCTOR, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_constructor4 }};
//     wxRect2DInt(const wxPoint2DInt& pos, const wxSize& size)
static int LUACALL wxLua_wxRect2DInt_constructor4(lua_State *L)
{
    // const wxSize size
    const wxSize * size = (const wxSize *)wxluaT_getuserdatatype(L, 2, wxluatype_wxSize);
    // const wxPoint2DInt pos
    const wxPoint2DInt * pos = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call constructor
    wxRect2DInt* returns = new wxRect2DInt(*pos, *size);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DInt((wxRect2DInt*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DInt);

    return 1;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_constructor3[] = { &wxluatype_wxPoint2DInt, &wxluatype_wxPoint2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_constructor3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_constructor3[1] = {{ wxLua_wxRect2DInt_constructor3, WXLUAMETHOD_CONSTRUCTOR, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_constructor3 }};
//     wxRect2DInt(const wxPoint2DInt& topLeft, const wxPoint2DInt& bottomRight)
static int LUACALL wxLua_wxRect2DInt_constructor3(lua_State *L)
{
    // const wxPoint2DInt bottomRight
    const wxPoint2DInt * bottomRight = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DInt);
    // const wxPoint2DInt topLeft
    const wxPoint2DInt * topLeft = (const wxPoint2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPoint2DInt);
    // call constructor
    wxRect2DInt* returns = new wxRect2DInt(*topLeft, *bottomRight);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DInt((wxRect2DInt*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DInt);

    return 1;
}


#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_constructor2[] = { &wxluatype_wxRect, NULL };
static int LUACALL wxLua_wxRect2DInt_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_constructor2[1] = {{ wxLua_wxRect2DInt_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_constructor2 }};
//     wxRect2DInt( const wxRect& r )
static int LUACALL wxLua_wxRect2DInt_constructor2(lua_State *L)
{
    // const wxRect r
    const wxRect * r = (const wxRect *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect);
    // call constructor
    wxRect2DInt* returns = new wxRect2DInt(*r);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DInt((wxRect2DInt*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DInt);

    return 1;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_constructor1[] = { &wxluatype_wxRect2DInt, NULL };
static int LUACALL wxLua_wxRect2DInt_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_constructor1[1] = {{ wxLua_wxRect2DInt_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_constructor1 }};
//     wxRect2DInt(const wxRect2DInt& rect)
static int LUACALL wxLua_wxRect2DInt_constructor1(lua_State *L)
{
    // const wxRect2DInt rect
    const wxRect2DInt * rect = (const wxRect2DInt *)wxluaT_getuserdatatype(L, 1, wxluatype_wxRect2DInt);
    // call constructor
    wxRect2DInt* returns = new wxRect2DInt(*rect);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DInt((wxRect2DInt*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxRect2DInt_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxRect2DInt_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_constructor[1] = {{ wxLua_wxRect2DInt_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 4, s_wxluatypeArray_wxLua_wxRect2DInt_constructor }};
//     wxRect2DInt(wxInt32 x=0, wxInt32 y=0, wxInt32 w=0, wxInt32 h=0)
static int LUACALL wxLua_wxRect2DInt_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxInt32 h = 0
    wxInt32 h = (argCount >= 4 ? (wxInt32)wxlua_getnumbertype(L, 4) : 0);
    // wxInt32 w = 0
    wxInt32 w = (argCount >= 3 ? (wxInt32)wxlua_getnumbertype(L, 3) : 0);
    // wxInt32 y = 0
    wxInt32 y = (argCount >= 2 ? (wxInt32)wxlua_getnumbertype(L, 2) : 0);
    // wxInt32 x = 0
    wxInt32 x = (argCount >= 1 ? (wxInt32)wxlua_getnumbertype(L, 1) : 0);
    // call constructor
    wxRect2DInt* returns = new wxRect2DInt(x, y, w, h);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxRect2DInt((wxRect2DInt*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DInt);

    return 1;
}




#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Contains_overload[] =
{
    { wxLua_wxRect2DInt_Contains1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Contains1 },
    { wxLua_wxRect2DInt_Contains, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Contains },
};
static int s_wxluafunc_wxLua_wxRect2DInt_Contains_overload_count = sizeof(s_wxluafunc_wxLua_wxRect2DInt_Contains_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_Union_overload[] =
{
    { wxLua_wxRect2DInt_Union1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Union1 },
    { wxLua_wxRect2DInt_Union, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_Union },
};
static int s_wxluafunc_wxLua_wxRect2DInt_Union_overload_count = sizeof(s_wxluafunc_wxLua_wxRect2DInt_Union_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY)

#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxRect2DInt_constructor_overload[] =
{

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxRect2DInt_constructor4, WXLUAMETHOD_CONSTRUCTOR, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_constructor4 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxRect2DInt_constructor3, WXLUAMETHOD_CONSTRUCTOR, 2, 2, s_wxluatypeArray_wxLua_wxRect2DInt_constructor3 },

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxRect2DInt_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_constructor2 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxRect2DInt_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxRect2DInt_constructor1 },
    { wxLua_wxRect2DInt_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 4, s_wxluatypeArray_wxLua_wxRect2DInt_constructor },
};
static int s_wxluafunc_wxLua_wxRect2DInt_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxRect2DInt_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxRect2DInt_methods[] = {
    { "ConstrainTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_ConstrainTo, 1, NULL },

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY)
    { "Contains", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_Contains_overload, s_wxluafunc_wxLua_wxRect2DInt_Contains_overload_count, 0 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY)

    { "CreateIntersection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_CreateIntersection, 1, NULL },
    { "CreateUnion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_CreateUnion, 1, NULL },
    { "GetBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetBottom, 1, NULL },
    { "GetCentre", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetCentre, 1, NULL },
    { "GetHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetHeight, 1, NULL },
    { "GetLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetLeft, 1, NULL },
    { "GetLeftBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetLeftBottom, 1, NULL },
    { "GetLeftTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetLeftTop, 1, NULL },
    { "GetOutCode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetOutCode, 1, NULL },
    { "GetPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetPosition, 1, NULL },
    { "GetRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetRight, 1, NULL },
    { "GetRightBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetRightBottom, 1, NULL },
    { "GetRightTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetRightTop, 1, NULL },

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)
    { "GetSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetSize, 1, NULL },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect)

    { "GetTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetTop, 1, NULL },
    { "GetWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetWidth, 1, NULL },
    { "GetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetX, 1, NULL },
    { "GetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_GetY, 1, NULL },
    { "HaveEqualSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_HaveEqualSize, 1, NULL },
    { "Inset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_Inset, 1, NULL },
    { "Interpolate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_Interpolate, 1, NULL },
    { "Intersect", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_Intersect, 1, NULL },
    { "Intersects", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_Intersects, 1, NULL },
    { "IsEmpty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_IsEmpty, 1, NULL },
    { "MoveBottomTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_MoveBottomTo, 1, NULL },
    { "MoveCentreTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_MoveCentreTo, 1, NULL },
    { "MoveLeftBottomTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_MoveLeftBottomTo, 1, NULL },
    { "MoveLeftTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_MoveLeftTo, 1, NULL },
    { "MoveLeftTopTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_MoveLeftTopTo, 1, NULL },
    { "MoveRightBottomTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_MoveRightBottomTo, 1, NULL },
    { "MoveRightTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_MoveRightTo, 1, NULL },
    { "MoveRightTopTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_MoveRightTopTo, 1, NULL },
    { "MoveTopTo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_MoveTopTo, 1, NULL },
    { "Offset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_Offset, 1, NULL },
    { "Scale", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_Scale, 1, NULL },
    { "SetBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetBottom, 1, NULL },
    { "SetCentre", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetCentre, 1, NULL },
    { "SetHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetHeight, 1, NULL },
    { "SetLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetLeft, 1, NULL },
    { "SetLeftBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetLeftBottom, 1, NULL },
    { "SetLeftTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetLeftTop, 1, NULL },
    { "SetRight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetRight, 1, NULL },
    { "SetRightBottom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetRightBottom, 1, NULL },
    { "SetRightTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetRightTop, 1, NULL },
    { "SetTop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetTop, 1, NULL },
    { "SetWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetWidth, 1, NULL },
    { "SetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetX, 1, NULL },
    { "SetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_SetY, 1, NULL },

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY)
    { "Union", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_Union_overload, s_wxluafunc_wxLua_wxRect2DInt_Union_overload_count, 0 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxRect2DInt_delete, 1, NULL },
    { "m_height", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxRect2DInt_SetHeight, 1, NULL },
    { "m_height", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxRect2DInt_GetHeight, 1, NULL },
    { "m_width", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxRect2DInt_SetWidth, 1, NULL },
    { "m_width", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxRect2DInt_GetWidth, 1, NULL },
    { "m_x", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxRect2DInt_SetX, 1, NULL },
    { "m_x", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxRect2DInt_GetX, 1, NULL },
    { "m_y", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxRect2DInt_SetY, 1, NULL },
    { "m_y", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxRect2DInt_GetY, 1, NULL },
    { "op_eq", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxRect2DInt_op_eq, 1, NULL },

#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)
    { "wxRect2DInt", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxRect2DInt_constructor_overload, s_wxluafunc_wxLua_wxRect2DInt_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_Geometry && wxUSE_GEOMETRY)

    { 0, 0, 0, 0 },
};

int wxRect2DInt_methodCount = sizeof(wxRect2DInt_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_Geometry && wxUSE_GEOMETRY

