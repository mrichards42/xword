// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxcore_help.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#include "wx/wxprec.h"

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif


#include "wxlua/include/wxlstate.h"
#include "wxbind/include/wxcore_bind.h"
#ifdef Above
    #undef Above
#endif
#ifdef Below
    #undef Below
#endif



#if wxLUA_USE_wxHelpController && wxUSE_HELP
// ---------------------------------------------------------------------------
// Bind class wxContextHelp
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxContextHelp'
int wxluatype_wxContextHelp = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxContextHelp_BeginContextHelp[] = { &wxluatype_wxContextHelp, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxContextHelp_BeginContextHelp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxContextHelp_BeginContextHelp[1] = {{ wxLua_wxContextHelp_BeginContextHelp, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxContextHelp_BeginContextHelp }};
//     bool BeginContextHelp(wxWindow* win)
static int LUACALL wxLua_wxContextHelp_BeginContextHelp(lua_State *L)
{
    // wxWindow win
    wxWindow * win = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxContextHelp * self = (wxContextHelp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxContextHelp);
    // call BeginContextHelp
    bool returns = (self->BeginContextHelp(win));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxContextHelp_EndContextHelp[] = { &wxluatype_wxContextHelp, NULL };
static int LUACALL wxLua_wxContextHelp_EndContextHelp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxContextHelp_EndContextHelp[1] = {{ wxLua_wxContextHelp_EndContextHelp, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxContextHelp_EndContextHelp }};
//     bool EndContextHelp()
static int LUACALL wxLua_wxContextHelp_EndContextHelp(lua_State *L)
{
    // get this
    wxContextHelp * self = (wxContextHelp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxContextHelp);
    // call EndContextHelp
    bool returns = (self->EndContextHelp());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxContextHelp_delete[] = { &wxluatype_wxContextHelp, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxContextHelp_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxContextHelp_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxContextHelp_constructor[] = { &wxluatype_wxWindow, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxContextHelp_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxContextHelp_constructor[1] = {{ wxLua_wxContextHelp_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxContextHelp_constructor }};
//     wxContextHelp(wxWindow* win = NULL, bool beginHelp = true)
static int LUACALL wxLua_wxContextHelp_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool beginHelp = true
    bool beginHelp = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // wxWindow win = NULL
    wxWindow * win = (argCount >= 1 ? (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow) : NULL);
    // call constructor
    wxContextHelp* returns = new wxContextHelp(win, beginHelp);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxContextHelp);

    return 1;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxContextHelp_methods[] = {
    { "BeginContextHelp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxContextHelp_BeginContextHelp, 1, NULL },
    { "EndContextHelp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxContextHelp_EndContextHelp, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxContextHelp_delete, 1, NULL },
    { "wxContextHelp", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxContextHelp_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxContextHelp_methodCount = sizeof(wxContextHelp_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxHelpController && wxUSE_HELP


#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)
// ---------------------------------------------------------------------------
// Bind class wxContextHelpButton
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxContextHelpButton'
int wxluatype_wxContextHelpButton = WXLUA_TUNKNOWN;

#if ((wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxContextHelpButton_constructor[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxContextHelpButton_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxContextHelpButton_constructor[1] = {{ wxLua_wxContextHelpButton_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 5, s_wxluatypeArray_wxLua_wxContextHelpButton_constructor }};
//     wxContextHelpButton(wxWindow* parent, wxWindowID id = wxID_CONTEXT_HELP, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxBU_AUTODRAW)
static int LUACALL wxLua_wxContextHelpButton_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long style = wxBU_AUTODRAW
    long style = (argCount >= 5 ? (long)wxlua_getnumbertype(L, 5) : wxBU_AUTODRAW);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 4 ? (const wxSize *)wxluaT_getuserdatatype(L, 4, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 3 ? (const wxPoint *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindowID id = wxID_CONTEXT_HELP
    wxWindowID id = (argCount >= 2 ? (wxWindowID)wxlua_getnumbertype(L, 2) : wxID_CONTEXT_HELP);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxContextHelpButton* returns = new wxContextHelpButton(parent, id, *pos, *size, style);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxContextHelpButton);

    return 1;
}

#endif // ((wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)) && (wxLUA_USE_wxPointSizeRect)



// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxContextHelpButton_methods[] = {
#if ((wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)) && (wxLUA_USE_wxPointSizeRect)
    { "wxContextHelpButton", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxContextHelpButton_constructor, 1, NULL },
#endif // ((wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)) && (wxLUA_USE_wxPointSizeRect)

    { 0, 0, 0, 0 },
};

int wxContextHelpButton_methodCount = sizeof(wxContextHelpButton_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxBitmapButton && wxUSE_BMPBUTTON)


#if wxLUA_USE_wxHelpController && wxUSE_HELP
// ---------------------------------------------------------------------------
// Bind class wxHelpProvider
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxHelpProvider'
int wxluatype_wxHelpProvider = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpProvider_AddHelp[] = { &wxluatype_wxHelpProvider, &wxluatype_wxWindow, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxHelpProvider_AddHelp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpProvider_AddHelp[1] = {{ wxLua_wxHelpProvider_AddHelp, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxHelpProvider_AddHelp }};
//     virtual void AddHelp(wxWindow *window, const wxString& text)
static int LUACALL wxLua_wxHelpProvider_AddHelp(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxWindow window
    wxWindow * window = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxHelpProvider * self = (wxHelpProvider *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpProvider);
    // call AddHelp
    self->AddHelp(window, text);

    return 0;
}

static int LUACALL wxLua_wxHelpProvider_Get(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpProvider_Get[1] = {{ wxLua_wxHelpProvider_Get, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None }};
//     static wxHelpProvider *Get()
static int LUACALL wxLua_wxHelpProvider_Get(lua_State *L)
{
    // call Get
    wxHelpProvider* returns = (wxHelpProvider*)wxHelpProvider::Get();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxHelpProvider);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpProvider_GetHelp[] = { &wxluatype_wxHelpProvider, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxHelpProvider_GetHelp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpProvider_GetHelp[1] = {{ wxLua_wxHelpProvider_GetHelp, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpProvider_GetHelp }};
//     virtual wxString GetHelp(const wxWindow *window) // pure virtual
static int LUACALL wxLua_wxHelpProvider_GetHelp(lua_State *L)
{
    // const wxWindow window
    const wxWindow * window = (const wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxHelpProvider * self = (wxHelpProvider *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpProvider);
    // call GetHelp
    wxString returns = (self->GetHelp(window));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpProvider_RemoveHelp[] = { &wxluatype_wxHelpProvider, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxHelpProvider_RemoveHelp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpProvider_RemoveHelp[1] = {{ wxLua_wxHelpProvider_RemoveHelp, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpProvider_RemoveHelp }};
//     virtual void RemoveHelp(wxWindow* window)
static int LUACALL wxLua_wxHelpProvider_RemoveHelp(lua_State *L)
{
    // wxWindow window
    wxWindow * window = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxHelpProvider * self = (wxHelpProvider *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpProvider);
    // call RemoveHelp
    self->RemoveHelp(window);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpProvider_Set[] = { &wxluatype_wxHelpProvider, NULL };
static int LUACALL wxLua_wxHelpProvider_Set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpProvider_Set[1] = {{ wxLua_wxHelpProvider_Set, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxHelpProvider_Set }};
//     static %gc wxHelpProvider *Set(%ungc wxHelpProvider *helpProvider)
static int LUACALL wxLua_wxHelpProvider_Set(lua_State *L)
{
    // wxHelpProvider helpProvider
    wxHelpProvider * helpProvider = (wxHelpProvider *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpProvider);
    if (wxluaO_isgcobject(L, helpProvider)) wxluaO_undeletegcobject(L, helpProvider);
    // call Set
    wxHelpProvider* returns = (wxHelpProvider*)wxHelpProvider::Set(helpProvider);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxHelpProvider(returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxHelpProvider);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpProvider_ShowHelp[] = { &wxluatype_wxHelpProvider, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxHelpProvider_ShowHelp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpProvider_ShowHelp[1] = {{ wxLua_wxHelpProvider_ShowHelp, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpProvider_ShowHelp }};
//     virtual bool ShowHelp(wxWindow *window)
static int LUACALL wxLua_wxHelpProvider_ShowHelp(lua_State *L)
{
    // wxWindow window
    wxWindow * window = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxHelpProvider * self = (wxHelpProvider *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpProvider);
    // call ShowHelp
    bool returns = (self->ShowHelp(window));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)) && (wxCHECK_VERSION(2,8,0))) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpProvider_ShowHelpAtPoint[] = { &wxluatype_wxHelpProvider, &wxluatype_wxWindow, &wxluatype_wxPoint, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxHelpProvider_ShowHelpAtPoint(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpProvider_ShowHelpAtPoint[1] = {{ wxLua_wxHelpProvider_ShowHelpAtPoint, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxHelpProvider_ShowHelpAtPoint }};
//     %wxchkver_2_8 virtual bool ShowHelpAtPoint(wxWindow *window, const wxPoint& pt, wxHelpEvent::Origin origin)
static int LUACALL wxLua_wxHelpProvider_ShowHelpAtPoint(lua_State *L)
{
    // wxHelpEvent::Origin origin
    wxHelpEvent::Origin origin = (wxHelpEvent::Origin)wxlua_getenumtype(L, 4);
    // const wxPoint pt
    const wxPoint * pt = (const wxPoint *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPoint);
    // wxWindow window
    wxWindow * window = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxHelpProvider * self = (wxHelpProvider *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpProvider);
    // call ShowHelpAtPoint
    bool returns = (self->ShowHelpAtPoint(window, *pt, origin));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)) && (wxCHECK_VERSION(2,8,0))) && (wxLUA_USE_wxPointSizeRect)

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpProvider_delete[] = { &wxluatype_wxHelpProvider, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpProvider_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxHelpProvider_delete }};




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxHelpProvider_methods[] = {
    { "AddHelp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpProvider_AddHelp, 1, NULL },
    { "Get", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxHelpProvider_Get, 1, NULL },
    { "GetHelp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpProvider_GetHelp, 1, NULL },
    { "RemoveHelp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpProvider_RemoveHelp, 1, NULL },
    { "Set", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxHelpProvider_Set, 1, NULL },
    { "ShowHelp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpProvider_ShowHelp, 1, NULL },

#if (((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)) && (wxCHECK_VERSION(2,8,0))) && (wxLUA_USE_wxPointSizeRect)
    { "ShowHelpAtPoint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpProvider_ShowHelpAtPoint, 1, NULL },
#endif // (((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)) && (wxCHECK_VERSION(2,8,0))) && (wxLUA_USE_wxPointSizeRect)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxHelpProvider_delete, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxHelpProvider_methodCount = sizeof(wxHelpProvider_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxHelpController && wxUSE_HELP


#if wxLUA_USE_wxHelpController && wxUSE_HELP
// ---------------------------------------------------------------------------
// Bind class wxSimpleHelpProvider
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxSimpleHelpProvider'
int wxluatype_wxSimpleHelpProvider = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxSimpleHelpProvider_delete[] = { &wxluatype_wxSimpleHelpProvider, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSimpleHelpProvider_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxSimpleHelpProvider_delete }};

static int LUACALL wxLua_wxSimpleHelpProvider_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSimpleHelpProvider_constructor[1] = {{ wxLua_wxSimpleHelpProvider_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxSimpleHelpProvider()
static int LUACALL wxLua_wxSimpleHelpProvider_constructor(lua_State *L)
{
    // call constructor
    wxSimpleHelpProvider* returns = new wxSimpleHelpProvider();
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxSimpleHelpProvider((wxSimpleHelpProvider*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSimpleHelpProvider);

    return 1;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxSimpleHelpProvider_methods[] = {
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxSimpleHelpProvider_delete, 1, NULL },
    { "wxSimpleHelpProvider", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxSimpleHelpProvider_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxSimpleHelpProvider_methodCount = sizeof(wxSimpleHelpProvider_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxHelpController && wxUSE_HELP


#if wxLUA_USE_wxHelpController && wxUSE_HELP
// ---------------------------------------------------------------------------
// Bind class wxHelpControllerHelpProvider
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxHelpControllerHelpProvider'
int wxluatype_wxHelpControllerHelpProvider = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerHelpProvider_GetHelpController[] = { &wxluatype_wxHelpControllerHelpProvider, NULL };
static int LUACALL wxLua_wxHelpControllerHelpProvider_GetHelpController(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerHelpProvider_GetHelpController[1] = {{ wxLua_wxHelpControllerHelpProvider_GetHelpController, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxHelpControllerHelpProvider_GetHelpController }};
//     wxHelpController* GetHelpController() const
static int LUACALL wxLua_wxHelpControllerHelpProvider_GetHelpController(lua_State *L)
{
    // get this
    wxHelpControllerHelpProvider * self = (wxHelpControllerHelpProvider *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerHelpProvider);
    // call GetHelpController
    wxHelpController* returns = (wxHelpController*)self->GetHelpController();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxHelpController);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerHelpProvider_SetHelpController[] = { &wxluatype_wxHelpControllerHelpProvider, &wxluatype_wxHelpController, NULL };
static int LUACALL wxLua_wxHelpControllerHelpProvider_SetHelpController(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerHelpProvider_SetHelpController[1] = {{ wxLua_wxHelpControllerHelpProvider_SetHelpController, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpControllerHelpProvider_SetHelpController }};
//     void SetHelpController(wxHelpController* hc)
static int LUACALL wxLua_wxHelpControllerHelpProvider_SetHelpController(lua_State *L)
{
    // wxHelpController hc
    wxHelpController * hc = (wxHelpController *)wxluaT_getuserdatatype(L, 2, wxluatype_wxHelpController);
    // get this
    wxHelpControllerHelpProvider * self = (wxHelpControllerHelpProvider *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerHelpProvider);
    // call SetHelpController
    self->SetHelpController(hc);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerHelpProvider_delete[] = { &wxluatype_wxHelpControllerHelpProvider, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerHelpProvider_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxHelpControllerHelpProvider_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerHelpProvider_constructor[] = { &wxluatype_wxHelpController, NULL };
static int LUACALL wxLua_wxHelpControllerHelpProvider_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerHelpProvider_constructor[1] = {{ wxLua_wxHelpControllerHelpProvider_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 1, s_wxluatypeArray_wxLua_wxHelpControllerHelpProvider_constructor }};
//     wxHelpControllerHelpProvider(wxHelpController* hc = NULL)
static int LUACALL wxLua_wxHelpControllerHelpProvider_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxHelpController hc = NULL
    wxHelpController * hc = (argCount >= 1 ? (wxHelpController *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpController) : NULL);
    // call constructor
    wxHelpControllerHelpProvider* returns = new wxHelpControllerHelpProvider(hc);
    // add to tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxHelpControllerHelpProvider((wxHelpControllerHelpProvider*)returns));
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxHelpControllerHelpProvider);

    return 1;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxHelpControllerHelpProvider_methods[] = {
    { "GetHelpController", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerHelpProvider_GetHelpController, 1, NULL },
    { "SetHelpController", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerHelpProvider_SetHelpController, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxHelpControllerHelpProvider_delete, 1, NULL },
    { "wxHelpControllerHelpProvider", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxHelpControllerHelpProvider_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxHelpControllerHelpProvider_methodCount = sizeof(wxHelpControllerHelpProvider_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxHelpController && wxUSE_HELP


#if wxLUA_USE_wxHelpController && wxUSE_HELP
// ---------------------------------------------------------------------------
// Bind class wxHelpControllerBase
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxHelpControllerBase'
int wxluatype_wxHelpControllerBase = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplayBlock[] = { &wxluatype_wxHelpControllerBase, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxHelpControllerBase_DisplayBlock(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_DisplayBlock[1] = {{ wxLua_wxHelpControllerBase_DisplayBlock, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplayBlock }};
//     virtual bool DisplayBlock(long blockNo)
static int LUACALL wxLua_wxHelpControllerBase_DisplayBlock(lua_State *L)
{
    // long blockNo
    long blockNo = (long)wxlua_getnumbertype(L, 2);
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call DisplayBlock
    bool returns = (self->DisplayBlock(blockNo));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplayContents[] = { &wxluatype_wxHelpControllerBase, NULL };
static int LUACALL wxLua_wxHelpControllerBase_DisplayContents(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_DisplayContents[1] = {{ wxLua_wxHelpControllerBase_DisplayContents, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplayContents }};
//     virtual bool DisplayContents()
static int LUACALL wxLua_wxHelpControllerBase_DisplayContents(lua_State *L)
{
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call DisplayContents
    bool returns = (self->DisplayContents());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplayContextPopup[] = { &wxluatype_wxHelpControllerBase, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxHelpControllerBase_DisplayContextPopup(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_DisplayContextPopup[1] = {{ wxLua_wxHelpControllerBase_DisplayContextPopup, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplayContextPopup }};
//     virtual bool DisplayContextPopup(int contextId)
static int LUACALL wxLua_wxHelpControllerBase_DisplayContextPopup(lua_State *L)
{
    // int contextId
    int contextId = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call DisplayContextPopup
    bool returns = (self->DisplayContextPopup(contextId));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplaySection1[] = { &wxluatype_wxHelpControllerBase, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxHelpControllerBase_DisplaySection1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_DisplaySection1[1] = {{ wxLua_wxHelpControllerBase_DisplaySection1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplaySection1 }};
//     virtual bool DisplaySection(const wxString &section)
static int LUACALL wxLua_wxHelpControllerBase_DisplaySection1(lua_State *L)
{
    // const wxString section
    const wxString section = wxlua_getwxStringtype(L, 2);
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call DisplaySection
    bool returns = (self->DisplaySection(section));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplaySection[] = { &wxluatype_wxHelpControllerBase, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxHelpControllerBase_DisplaySection(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_DisplaySection[1] = {{ wxLua_wxHelpControllerBase_DisplaySection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplaySection }};
//     virtual bool DisplaySection(int sectionNo)
static int LUACALL wxLua_wxHelpControllerBase_DisplaySection(lua_State *L)
{
    // int sectionNo
    int sectionNo = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call DisplaySection
    bool returns = (self->DisplaySection(sectionNo));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplayTextPopup[] = { &wxluatype_wxHelpControllerBase, &wxluatype_TSTRING, &wxluatype_wxPoint, NULL };
static int LUACALL wxLua_wxHelpControllerBase_DisplayTextPopup(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_DisplayTextPopup[1] = {{ wxLua_wxHelpControllerBase_DisplayTextPopup, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplayTextPopup }};
//     virtual bool DisplayTextPopup(const wxString& text, const wxPoint& pos)
static int LUACALL wxLua_wxHelpControllerBase_DisplayTextPopup(lua_State *L)
{
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPoint);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call DisplayTextPopup
    bool returns = (self->DisplayTextPopup(text, *pos));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxPointSizeRect)

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxFrame)
static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_GetFrameParameters[] = { &wxluatype_wxHelpControllerBase, NULL };
static int LUACALL wxLua_wxHelpControllerBase_GetFrameParameters(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_GetFrameParameters[1] = {{ wxLua_wxHelpControllerBase_GetFrameParameters, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxHelpControllerBase_GetFrameParameters }};
// %override wxLua_wxHelpControllerBase_GetFrameParameters
// virtual wxFrame* GetFrameParameters(wxSize* size = NULL, wxPoint* pos = NULL, bool *newFrameEachTime = NULL)
static int LUACALL wxLua_wxHelpControllerBase_GetFrameParameters(lua_State *L)
{
    bool    newFrameEachTime = false;
    wxPoint *pos = new wxPoint();
    wxSize  *size = new wxSize();
    // get this
    wxHelpControllerBase *self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call GetFrameParameters
    wxFrame *returns = self->GetFrameParameters(size, pos, &newFrameEachTime);
    // push the result datatype

    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFrame);
    wxluaT_pushuserdatatype(L, size, wxluatype_wxSize);
    wxluaT_pushuserdatatype(L, pos, wxluatype_wxPoint);
    lua_pushboolean(L, newFrameEachTime);
    // return the number of parameters
    return 4;
}


#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxFrame)

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)
static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_GetParentWindow[] = { &wxluatype_wxHelpControllerBase, NULL };
static int LUACALL wxLua_wxHelpControllerBase_GetParentWindow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_GetParentWindow[1] = {{ wxLua_wxHelpControllerBase_GetParentWindow, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxHelpControllerBase_GetParentWindow }};
//     %wxchkver_2_8 virtual wxWindow* GetParentWindow() const
static int LUACALL wxLua_wxHelpControllerBase_GetParentWindow(lua_State *L)
{
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call GetParentWindow
    wxWindow* returns = (wxWindow*)self->GetParentWindow();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_Initialize[] = { &wxluatype_wxHelpControllerBase, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxHelpControllerBase_Initialize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_Initialize[1] = {{ wxLua_wxHelpControllerBase_Initialize, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpControllerBase_Initialize }};
//     virtual void Initialize(const wxString& file)
static int LUACALL wxLua_wxHelpControllerBase_Initialize(lua_State *L)
{
    // const wxString file
    const wxString file = wxlua_getwxStringtype(L, 2);
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call Initialize
    self->Initialize(file);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_KeywordSearch[] = { &wxluatype_wxHelpControllerBase, &wxluatype_TSTRING, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxHelpControllerBase_KeywordSearch(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_KeywordSearch[1] = {{ wxLua_wxHelpControllerBase_KeywordSearch, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxHelpControllerBase_KeywordSearch }};
//     virtual bool KeywordSearch(const wxString& keyWord, wxHelpSearchMode mode = wxHELP_SEARCH_ALL)
static int LUACALL wxLua_wxHelpControllerBase_KeywordSearch(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxHelpSearchMode mode = wxHELP_SEARCH_ALL
    wxHelpSearchMode mode = (argCount >= 3 ? (wxHelpSearchMode)wxlua_getenumtype(L, 3) : wxHELP_SEARCH_ALL);
    // const wxString keyWord
    const wxString keyWord = wxlua_getwxStringtype(L, 2);
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call KeywordSearch
    bool returns = (self->KeywordSearch(keyWord, mode));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_LoadFile[] = { &wxluatype_wxHelpControllerBase, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxHelpControllerBase_LoadFile(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_LoadFile[1] = {{ wxLua_wxHelpControllerBase_LoadFile, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxHelpControllerBase_LoadFile }};
//     virtual bool LoadFile(const wxString& file = "")
static int LUACALL wxLua_wxHelpControllerBase_LoadFile(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString file = ""
    const wxString file = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxEmptyString));
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call LoadFile
    bool returns = (self->LoadFile(file));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_Quit[] = { &wxluatype_wxHelpControllerBase, NULL };
static int LUACALL wxLua_wxHelpControllerBase_Quit(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_Quit[1] = {{ wxLua_wxHelpControllerBase_Quit, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxHelpControllerBase_Quit }};
//     virtual bool Quit()
static int LUACALL wxLua_wxHelpControllerBase_Quit(lua_State *L)
{
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call Quit
    bool returns = (self->Quit());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_SetFrameParameters[] = { &wxluatype_wxHelpControllerBase, &wxluatype_TSTRING, &wxluatype_wxSize, &wxluatype_wxPoint, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxHelpControllerBase_SetFrameParameters(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_SetFrameParameters[1] = {{ wxLua_wxHelpControllerBase_SetFrameParameters, WXLUAMETHOD_METHOD, 3, 5, s_wxluatypeArray_wxLua_wxHelpControllerBase_SetFrameParameters }};
//     virtual void SetFrameParameters(const wxString& title, const wxSize& size, const wxPoint& pos = wxDefaultPosition, bool newFrameEachTime = false)
static int LUACALL wxLua_wxHelpControllerBase_SetFrameParameters(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool newFrameEachTime = false
    bool newFrameEachTime = (argCount >= 5 ? wxlua_getbooleantype(L, 5) : false);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxSize size
    const wxSize * size = (const wxSize *)wxluaT_getuserdatatype(L, 3, wxluatype_wxSize);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 2);
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call SetFrameParameters
    self->SetFrameParameters(title, *size, *pos, newFrameEachTime);

    return 0;
}

#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxPointSizeRect)

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)
static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_SetParentWindow[] = { &wxluatype_wxHelpControllerBase, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxHelpControllerBase_SetParentWindow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_SetParentWindow[1] = {{ wxLua_wxHelpControllerBase_SetParentWindow, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpControllerBase_SetParentWindow }};
//     %wxchkver_2_8 virtual void SetParentWindow(wxWindow* win)
static int LUACALL wxLua_wxHelpControllerBase_SetParentWindow(lua_State *L)
{
    // wxWindow win
    wxWindow * win = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call SetParentWindow
    self->SetParentWindow(win);

    return 0;
}

#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_SetViewer[] = { &wxluatype_wxHelpControllerBase, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxHelpControllerBase_SetViewer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_SetViewer[1] = {{ wxLua_wxHelpControllerBase_SetViewer, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxHelpControllerBase_SetViewer }};
//     virtual void SetViewer(const wxString& viewer, long flags)
static int LUACALL wxLua_wxHelpControllerBase_SetViewer(lua_State *L)
{
    // long flags
    long flags = (long)wxlua_getnumbertype(L, 3);
    // const wxString viewer
    const wxString viewer = wxlua_getwxStringtype(L, 2);
    // get this
    wxHelpControllerBase * self = (wxHelpControllerBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxHelpControllerBase);
    // call SetViewer
    self->SetViewer(viewer, flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpControllerBase_delete[] = { &wxluatype_wxHelpControllerBase, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxHelpControllerBase_delete }};




#if (wxLUA_USE_wxHelpController && wxUSE_HELP)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpControllerBase_DisplaySection_overload[] =
{
    { wxLua_wxHelpControllerBase_DisplaySection1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplaySection1 },
    { wxLua_wxHelpControllerBase_DisplaySection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxHelpControllerBase_DisplaySection },
};
static int s_wxluafunc_wxLua_wxHelpControllerBase_DisplaySection_overload_count = sizeof(s_wxluafunc_wxLua_wxHelpControllerBase_DisplaySection_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxHelpControllerBase_methods[] = {
    { "DisplayBlock", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_DisplayBlock, 1, NULL },
    { "DisplayContents", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_DisplayContents, 1, NULL },
    { "DisplayContextPopup", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_DisplayContextPopup, 1, NULL },

#if (wxLUA_USE_wxHelpController && wxUSE_HELP)
    { "DisplaySection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_DisplaySection_overload, s_wxluafunc_wxLua_wxHelpControllerBase_DisplaySection_overload_count, 0 },
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP)

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxPointSizeRect)
    { "DisplayTextPopup", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_DisplayTextPopup, 1, NULL },
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxPointSizeRect)

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxFrame)
    { "GetFrameParameters", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_GetFrameParameters, 1, NULL },
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxFrame)

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)
    { "GetParentWindow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_GetParentWindow, 1, NULL },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)

    { "Initialize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_Initialize, 1, NULL },
    { "KeywordSearch", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_KeywordSearch, 1, NULL },
    { "LoadFile", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_LoadFile, 1, NULL },
    { "Quit", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_Quit, 1, NULL },

#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxPointSizeRect)
    { "SetFrameParameters", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_SetFrameParameters, 1, NULL },
#endif // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (wxLUA_USE_wxPointSizeRect)

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)
    { "SetParentWindow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_SetParentWindow, 1, NULL },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxHelpController && wxUSE_HELP)

    { "SetViewer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxHelpControllerBase_SetViewer, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxHelpControllerBase_delete, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxHelpControllerBase_methodCount = sizeof(wxHelpControllerBase_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxHelpController && wxUSE_HELP


#if wxLUA_USE_wxHelpController && wxUSE_HELP
// ---------------------------------------------------------------------------
// Bind class wxHelpController
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxHelpController'
int wxluatype_wxHelpController = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxHelpController_delete[] = { &wxluatype_wxHelpController, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpController_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxHelpController_delete }};

static int LUACALL wxLua_wxHelpController_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxHelpController_constructor[1] = {{ wxLua_wxHelpController_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxHelpController()
static int LUACALL wxLua_wxHelpController_constructor(lua_State *L)
{
    // call constructor
    wxHelpController* returns = new wxHelpController();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxHelpController);

    return 1;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxHelpController_methods[] = {
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxHelpController_delete, 1, NULL },
    { "wxHelpController", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxHelpController_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxHelpController_methodCount = sizeof(wxHelpController_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxHelpController && wxUSE_HELP


#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (defined(__WXMSW__))
// ---------------------------------------------------------------------------
// Bind class wxWinHelpController
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxWinHelpController'
int wxluatype_wxWinHelpController = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxWinHelpController_delete[] = { &wxluatype_wxWinHelpController, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWinHelpController_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxWinHelpController_delete }};

static int LUACALL wxLua_wxWinHelpController_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWinHelpController_constructor[1] = {{ wxLua_wxWinHelpController_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxWinHelpController()
static int LUACALL wxLua_wxWinHelpController_constructor(lua_State *L)
{
    // call constructor
    wxWinHelpController* returns = new wxWinHelpController();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWinHelpController);

    return 1;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxWinHelpController_methods[] = {
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxWinHelpController_delete, 1, NULL },
    { "wxWinHelpController", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxWinHelpController_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxWinHelpController_methodCount = sizeof(wxWinHelpController_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (defined(__WXMSW__))


#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (defined(__WXMSW__))
// ---------------------------------------------------------------------------
// Bind class wxBestHelpController
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxBestHelpController'
int wxluatype_wxBestHelpController = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxBestHelpController_delete[] = { &wxluatype_wxBestHelpController, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxBestHelpController_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxBestHelpController_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxBestHelpController_constructor[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxBestHelpController_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxBestHelpController_constructor[1] = {{ wxLua_wxBestHelpController_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxBestHelpController_constructor }};
//     wxBestHelpController(wxWindow* parentWindow = NULL, int style = wxHF_DEFAULT_STYLE)
static int LUACALL wxLua_wxBestHelpController_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int style = wxHF_DEFAULT_STYLE
    int style = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxHF_DEFAULT_STYLE);
    // wxWindow parentWindow = NULL
    wxWindow * parentWindow = (argCount >= 1 ? (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow) : NULL);
    // call constructor
    wxBestHelpController* returns = new wxBestHelpController(parentWindow, style);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxBestHelpController);

    return 1;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxBestHelpController_methods[] = {
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxBestHelpController_delete, 1, NULL },
    { "wxBestHelpController", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxBestHelpController_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxBestHelpController_methodCount = sizeof(wxBestHelpController_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (defined(__WXMSW__))


#if (wxLUA_USE_wxHelpController && wxUSE_HELP) && (!defined(__WXMSW__))
// ---------------------------------------------------------------------------
// Bind class wxExtHelpController
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxExtHelpController'
int wxluatype_wxExtHelpController = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxExtHelpController_delete[] = { &wxluatype_wxExtHelpController, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxExtHelpController_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxExtHelpController_delete }};

static int LUACALL wxLua_wxExtHelpController_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxExtHelpController_constructor[1] = {{ wxLua_wxExtHelpController_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxExtHelpController()
static int LUACALL wxLua_wxExtHelpController_constructor(lua_State *L)
{
    // call constructor
    wxExtHelpController* returns = new wxExtHelpController();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxExtHelpController);

    return 1;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxExtHelpController_methods[] = {
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxExtHelpController_delete, 1, NULL },
    { "wxExtHelpController", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxExtHelpController_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxExtHelpController_methodCount = sizeof(wxExtHelpController_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxLUA_USE_wxHelpController && wxUSE_HELP) && (!defined(__WXMSW__))

