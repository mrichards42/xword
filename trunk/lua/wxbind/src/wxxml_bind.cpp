// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxxml_xml.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif

#include "wxlua/include/wxlstate.h"
#include "wxbind/include/wxxml_bind.h"



#if wxLUA_USE_wxXML && wxUSE_XML
// ---------------------------------------------------------------------------
// Bind class wxXmlNode
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxXmlNode'
int wxluatype_wxXmlNode = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_AddChild[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_AddChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_AddChild[1] = {{ wxLua_wxXmlNode_AddChild, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_AddChild }};
//     void AddChild(%ungc wxXmlNode *child)
static int LUACALL wxLua_wxXmlNode_AddChild(lua_State *L)
{
    // wxXmlNode child
    wxXmlNode * child = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    if (wxluaO_isgcobject(L, child)) wxluaO_undeletegcobject(L, child);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call AddChild
    self->AddChild(child);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_AddProperty1[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlProperty, NULL };
static int LUACALL wxLua_wxXmlNode_AddProperty1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_AddProperty1[1] = {{ wxLua_wxXmlNode_AddProperty1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_AddProperty1 }};
//     void AddProperty(%ungc wxXmlProperty *prop)
static int LUACALL wxLua_wxXmlNode_AddProperty1(lua_State *L)
{
    // wxXmlProperty prop
    wxXmlProperty * prop = (wxXmlProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlProperty);
    if (wxluaO_isgcobject(L, prop)) wxluaO_undeletegcobject(L, prop);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call AddProperty
    self->AddProperty(prop);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_AddProperty[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_AddProperty(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_AddProperty[1] = {{ wxLua_wxXmlNode_AddProperty, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxXmlNode_AddProperty }};
//     void AddProperty(const wxString& name, const wxString& value)
static int LUACALL wxLua_wxXmlNode_AddProperty(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 3);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call AddProperty
    self->AddProperty(name, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_DeleteProperty[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_DeleteProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_DeleteProperty[1] = {{ wxLua_wxXmlNode_DeleteProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_DeleteProperty }};
//     bool DeleteProperty(const wxString& name)
static int LUACALL wxLua_wxXmlNode_DeleteProperty(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call DeleteProperty
    bool returns = (self->DeleteProperty(name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetChildren[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetChildren(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetChildren[1] = {{ wxLua_wxXmlNode_GetChildren, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetChildren }};
//     wxXmlNode *GetChildren() const
static int LUACALL wxLua_wxXmlNode_GetChildren(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetChildren
    wxXmlNode* returns = (wxXmlNode*)self->GetChildren();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetContent[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetContent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetContent[1] = {{ wxLua_wxXmlNode_GetContent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetContent }};
//     wxString GetContent() const
static int LUACALL wxLua_wxXmlNode_GetContent(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetContent
    wxString returns = (self->GetContent());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetName[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetName[1] = {{ wxLua_wxXmlNode_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetName }};
//     wxString GetName() const
static int LUACALL wxLua_wxXmlNode_GetName(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetNext[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetNext[1] = {{ wxLua_wxXmlNode_GetNext, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetNext }};
//     wxXmlNode *GetNext() const
static int LUACALL wxLua_wxXmlNode_GetNext(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetNext
    wxXmlNode* returns = (wxXmlNode*)self->GetNext();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetParent[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetParent[1] = {{ wxLua_wxXmlNode_GetParent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetParent }};
//     wxXmlNode *GetParent() const
static int LUACALL wxLua_wxXmlNode_GetParent(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetParent
    wxXmlNode* returns = (wxXmlNode*)self->GetParent();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetPropVal1[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_GetPropVal1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetPropVal1[1] = {{ wxLua_wxXmlNode_GetPropVal1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxXmlNode_GetPropVal1 }};
//     wxString GetPropVal(const wxString& propName, const wxString& defaultVal) const
static int LUACALL wxLua_wxXmlNode_GetPropVal1(lua_State *L)
{
    // const wxString defaultVal
    const wxString defaultVal = wxlua_getwxStringtype(L, 3);
    // const wxString propName
    const wxString propName = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetPropVal
    wxString returns = (self->GetPropVal(propName, defaultVal));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#define wxLua_wxXmlNode_GetPropVal wxLua_wxXmlNode_GetPropValPtr
static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetPropVal[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_GetPropVal(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetPropVal[1] = {{ wxLua_wxXmlNode_GetPropVal, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_GetPropVal }};
// %override wxLua_wxXmlNode_GetPropValPtr
// %rename GetPropValPtr bool GetPropVal(const wxString& propName, wxString *value) const;
static int LUACALL wxLua_wxXmlNode_GetPropValPtr(lua_State *L)
{
    // wxString *value
    wxString value;
    // const wxString& propName
    wxString propName = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode *self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetPropVal
    bool returns = self->GetPropVal(propName, &value);
    // push the result number
    lua_pushboolean(L, returns);
    // push the result string
    wxlua_pushwxString(L, value);
    // return the number of parameters
    return 2;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetProperties[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetProperties(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetProperties[1] = {{ wxLua_wxXmlNode_GetProperties, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetProperties }};
//     wxXmlProperty *GetProperties() const
static int LUACALL wxLua_wxXmlNode_GetProperties(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetProperties
    wxXmlProperty* returns = (wxXmlProperty*)self->GetProperties();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetType[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetType[1] = {{ wxLua_wxXmlNode_GetType, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetType }};
//     wxXmlNodeType GetType() const
static int LUACALL wxLua_wxXmlNode_GetType(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetType
    wxXmlNodeType returns = (self->GetType());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_HasProp[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_HasProp(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_HasProp[1] = {{ wxLua_wxXmlNode_HasProp, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_HasProp }};
//     bool HasProp(const wxString& propName) const
static int LUACALL wxLua_wxXmlNode_HasProp(lua_State *L)
{
    // const wxString propName
    const wxString propName = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call HasProp
    bool returns = (self->HasProp(propName));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_InsertChild[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_InsertChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_InsertChild[1] = {{ wxLua_wxXmlNode_InsertChild, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxXmlNode_InsertChild }};
//     void InsertChild(%ungc wxXmlNode *child, wxXmlNode *before_node)
static int LUACALL wxLua_wxXmlNode_InsertChild(lua_State *L)
{
    // wxXmlNode before_node
    wxXmlNode * before_node = (wxXmlNode *)wxluaT_getuserdatatype(L, 3, wxluatype_wxXmlNode);
    // wxXmlNode child
    wxXmlNode * child = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    if (wxluaO_isgcobject(L, child)) wxluaO_undeletegcobject(L, child);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call InsertChild
    self->InsertChild(child, before_node);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_RemoveChild[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_RemoveChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_RemoveChild[1] = {{ wxLua_wxXmlNode_RemoveChild, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_RemoveChild }};
// %override wxLua_wxXmlNode_RemoveChild
//     bool RemoveChild(%gc wxXmlNode *child)
static int LUACALL wxLua_wxXmlNode_RemoveChild(lua_State *L)
{
    // wxXmlNode child
    wxXmlNode * child = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call RemoveChild
    bool returns = (self->RemoveChild(child));

    if (returns && !wxluaO_isgcobject(L, child))
        wxluaO_addgcobject(L, child, wxluatype_wxXmlNode);

    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetChildren[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_SetChildren(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetChildren[1] = {{ wxLua_wxXmlNode_SetChildren, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetChildren }};
//     void SetChildren(%ungc wxXmlNode *child)
static int LUACALL wxLua_wxXmlNode_SetChildren(lua_State *L)
{
    // wxXmlNode child
    wxXmlNode * child = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    if (wxluaO_isgcobject(L, child)) wxluaO_undeletegcobject(L, child);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetChildren
    self->SetChildren(child);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetContent[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_SetContent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetContent[1] = {{ wxLua_wxXmlNode_SetContent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetContent }};
//     void SetContent(const wxString& con)
static int LUACALL wxLua_wxXmlNode_SetContent(lua_State *L)
{
    // const wxString con
    const wxString con = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetContent
    self->SetContent(con);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetName[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_SetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetName[1] = {{ wxLua_wxXmlNode_SetName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetName }};
//     void SetName(const wxString& name)
static int LUACALL wxLua_wxXmlNode_SetName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetName
    self->SetName(name);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetNext[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_SetNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetNext[1] = {{ wxLua_wxXmlNode_SetNext, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetNext }};
//     void SetNext(wxXmlNode *next)
static int LUACALL wxLua_wxXmlNode_SetNext(lua_State *L)
{
    // wxXmlNode next
    wxXmlNode * next = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetNext
    self->SetNext(next);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetParent[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_SetParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetParent[1] = {{ wxLua_wxXmlNode_SetParent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetParent }};
//     void SetParent(wxXmlNode *parent)
static int LUACALL wxLua_wxXmlNode_SetParent(lua_State *L)
{
    // wxXmlNode parent
    wxXmlNode * parent = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetParent
    self->SetParent(parent);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetProperties[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlProperty, NULL };
static int LUACALL wxLua_wxXmlNode_SetProperties(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetProperties[1] = {{ wxLua_wxXmlNode_SetProperties, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetProperties }};
//     void SetProperties(%ungc wxXmlProperty *prop)
static int LUACALL wxLua_wxXmlNode_SetProperties(lua_State *L)
{
    // wxXmlProperty prop
    wxXmlProperty * prop = (wxXmlProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlProperty);
    if (wxluaO_isgcobject(L, prop)) wxluaO_undeletegcobject(L, prop);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetProperties
    self->SetProperties(prop);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetType[] = { &wxluatype_wxXmlNode, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxXmlNode_SetType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetType[1] = {{ wxLua_wxXmlNode_SetType, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetType }};
//     void SetType(wxXmlNodeType type)
static int LUACALL wxLua_wxXmlNode_SetType(lua_State *L)
{
    // wxXmlNodeType type
    wxXmlNodeType type = (wxXmlNodeType)wxlua_getenumtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetType
    self->SetType(type);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_delete[] = { &wxluatype_wxXmlNode, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_constructor2[] = { &wxluatype_wxXmlNode, &wxluatype_TINTEGER, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxXmlProperty, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_constructor2[1] = {{ wxLua_wxXmlNode_constructor2, WXLUAMETHOD_CONSTRUCTOR, 6, 6, s_wxluatypeArray_wxLua_wxXmlNode_constructor2 }};
// %override wxLua_wxXmlNode_constructor2
//     wxXmlNode(wxXmlNode *parent, wxXmlNodeType type, const wxString& name, const wxString& content, wxXmlProperty *props, wxXmlNode *next)
static int LUACALL wxLua_wxXmlNode_constructor2(lua_State *L)
{
    // wxXmlNode next
    wxXmlNode * next = (wxXmlNode *)wxluaT_getuserdatatype(L, 6, wxluatype_wxXmlNode);
    // wxXmlProperty props
    wxXmlProperty * props = (wxXmlProperty *)wxluaT_getuserdatatype(L, 5, wxluatype_wxXmlProperty);
    // const wxString content
    const wxString content = wxlua_getwxStringtype(L, 4);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 3);
    // wxXmlNodeType type
    wxXmlNodeType type = (wxXmlNodeType)wxlua_getenumtype(L, 2);
    // wxXmlNode parent
    wxXmlNode * parent = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call constructor
    wxXmlNode *returns = new wxXmlNode(parent, type, name, content, props, next);
    // add to tracked memory list
    if (parent == NULL)
        wxluaO_addgcobject(L, returns, wxluatype_wxXmlNode);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_constructor1[] = { &wxluatype_TINTEGER, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_constructor1[1] = {{ wxLua_wxXmlNode_constructor1, WXLUAMETHOD_CONSTRUCTOR, 2, 3, s_wxluatypeArray_wxLua_wxXmlNode_constructor1 }};
//     wxXmlNode(wxXmlNodeType type, const wxString& name, const wxString& content = "")
static int LUACALL wxLua_wxXmlNode_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString content = ""
    const wxString content = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // wxXmlNodeType type
    wxXmlNodeType type = (wxXmlNodeType)wxlua_getenumtype(L, 1);
    // call constructor
    wxXmlNode* returns = new wxXmlNode(type, name, content);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlNode);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static int LUACALL wxLua_wxXmlNode_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_constructor[1] = {{ wxLua_wxXmlNode_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxXmlNode()
static int LUACALL wxLua_wxXmlNode_constructor(lua_State *L)
{
    // call constructor
    wxXmlNode* returns = new wxXmlNode();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlNode);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}




#if (wxLUA_USE_wxXML && wxUSE_XML)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_AddProperty_overload[] =
{
    { wxLua_wxXmlNode_AddProperty1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_AddProperty1 },
    { wxLua_wxXmlNode_AddProperty, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxXmlNode_AddProperty },
};
static int s_wxluafunc_wxLua_wxXmlNode_AddProperty_overload_count = sizeof(s_wxluafunc_wxLua_wxXmlNode_AddProperty_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetPropVal_overload[] =
{
    { wxLua_wxXmlNode_GetPropVal1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxXmlNode_GetPropVal1 },
    { wxLua_wxXmlNode_GetPropVal, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_GetPropVal },
};
static int s_wxluafunc_wxLua_wxXmlNode_GetPropVal_overload_count = sizeof(s_wxluafunc_wxLua_wxXmlNode_GetPropVal_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_constructor_overload[] =
{
    { wxLua_wxXmlNode_constructor2, WXLUAMETHOD_CONSTRUCTOR, 6, 6, s_wxluatypeArray_wxLua_wxXmlNode_constructor2 },
    { wxLua_wxXmlNode_constructor1, WXLUAMETHOD_CONSTRUCTOR, 2, 3, s_wxluatypeArray_wxLua_wxXmlNode_constructor1 },
    { wxLua_wxXmlNode_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxXmlNode_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxXmlNode_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxXML && wxUSE_XML)

void wxLua_wxXmlNode_delete_function(void** p)
{
    wxXmlNode* o = (wxXmlNode*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxXmlNode_methods[] = {
    { "AddChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_AddChild, 1, NULL },

#if (wxLUA_USE_wxXML && wxUSE_XML)
    { "AddProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_AddProperty_overload, s_wxluafunc_wxLua_wxXmlNode_AddProperty_overload_count, 0 },
#endif // (wxLUA_USE_wxXML && wxUSE_XML)

    { "DeleteProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_DeleteProperty, 1, NULL },
    { "GetChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetChildren, 1, NULL },
    { "GetContent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetContent, 1, NULL },
    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetName, 1, NULL },
    { "GetNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetNext, 1, NULL },
    { "GetParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetParent, 1, NULL },

#if (wxLUA_USE_wxXML && wxUSE_XML)
    { "GetPropVal", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetPropVal_overload, s_wxluafunc_wxLua_wxXmlNode_GetPropVal_overload_count, 0 },
#endif // (wxLUA_USE_wxXML && wxUSE_XML)

    { "GetProperties", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetProperties, 1, NULL },
    { "GetType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetType, 1, NULL },
    { "HasProp", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_HasProp, 1, NULL },
    { "InsertChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_InsertChild, 1, NULL },
    { "RemoveChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_RemoveChild, 1, NULL },
    { "SetChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetChildren, 1, NULL },
    { "SetContent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetContent, 1, NULL },
    { "SetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetName, 1, NULL },
    { "SetNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetNext, 1, NULL },
    { "SetParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetParent, 1, NULL },
    { "SetProperties", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetProperties, 1, NULL },
    { "SetType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetType, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxXmlNode_delete, 1, NULL },

#if (wxLUA_USE_wxXML && wxUSE_XML)
    { "wxXmlNode", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxXmlNode_constructor_overload, s_wxluafunc_wxLua_wxXmlNode_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxXML && wxUSE_XML)

    { 0, 0, 0, 0 },
};

int wxXmlNode_methodCount = sizeof(wxXmlNode_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxXML && wxUSE_XML


#if wxLUA_USE_wxXML && wxUSE_XML
// ---------------------------------------------------------------------------
// Bind class wxXmlProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxXmlProperty'
int wxluatype_wxXmlProperty = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlProperty_GetName[] = { &wxluatype_wxXmlProperty, NULL };
static int LUACALL wxLua_wxXmlProperty_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlProperty_GetName[1] = {{ wxLua_wxXmlProperty_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlProperty_GetName }};
//     wxString GetName()
static int LUACALL wxLua_wxXmlProperty_GetName(lua_State *L)
{
    // get this
    wxXmlProperty * self = (wxXmlProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlProperty);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlProperty_GetNext[] = { &wxluatype_wxXmlProperty, NULL };
static int LUACALL wxLua_wxXmlProperty_GetNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlProperty_GetNext[1] = {{ wxLua_wxXmlProperty_GetNext, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlProperty_GetNext }};
//     wxXmlProperty *GetNext()
static int LUACALL wxLua_wxXmlProperty_GetNext(lua_State *L)
{
    // get this
    wxXmlProperty * self = (wxXmlProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlProperty);
    // call GetNext
    wxXmlProperty* returns = (wxXmlProperty*)self->GetNext();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlProperty_GetValue[] = { &wxluatype_wxXmlProperty, NULL };
static int LUACALL wxLua_wxXmlProperty_GetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlProperty_GetValue[1] = {{ wxLua_wxXmlProperty_GetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlProperty_GetValue }};
//     wxString GetValue()
static int LUACALL wxLua_wxXmlProperty_GetValue(lua_State *L)
{
    // get this
    wxXmlProperty * self = (wxXmlProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlProperty);
    // call GetValue
    wxString returns = (self->GetValue());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlProperty_SetName[] = { &wxluatype_wxXmlProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlProperty_SetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlProperty_SetName[1] = {{ wxLua_wxXmlProperty_SetName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlProperty_SetName }};
//     void SetName(const wxString& name)
static int LUACALL wxLua_wxXmlProperty_SetName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlProperty * self = (wxXmlProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlProperty);
    // call SetName
    self->SetName(name);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlProperty_SetNext[] = { &wxluatype_wxXmlProperty, &wxluatype_wxXmlProperty, NULL };
static int LUACALL wxLua_wxXmlProperty_SetNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlProperty_SetNext[1] = {{ wxLua_wxXmlProperty_SetNext, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlProperty_SetNext }};
//     void SetNext(wxXmlProperty *next)
static int LUACALL wxLua_wxXmlProperty_SetNext(lua_State *L)
{
    // wxXmlProperty next
    wxXmlProperty * next = (wxXmlProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlProperty);
    // get this
    wxXmlProperty * self = (wxXmlProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlProperty);
    // call SetNext
    self->SetNext(next);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlProperty_SetValue[] = { &wxluatype_wxXmlProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlProperty_SetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlProperty_SetValue[1] = {{ wxLua_wxXmlProperty_SetValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlProperty_SetValue }};
//     void SetValue(const wxString& value)
static int LUACALL wxLua_wxXmlProperty_SetValue(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlProperty * self = (wxXmlProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlProperty);
    // call SetValue
    self->SetValue(value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlProperty_delete[] = { &wxluatype_wxXmlProperty, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlProperty_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxXmlProperty_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlProperty_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxXmlProperty, NULL };
static int LUACALL wxLua_wxXmlProperty_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlProperty_constructor1[1] = {{ wxLua_wxXmlProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 3, s_wxluatypeArray_wxLua_wxXmlProperty_constructor1 }};
//     wxXmlProperty(const wxString& name, const wxString& value, wxXmlProperty *next)
static int LUACALL wxLua_wxXmlProperty_constructor1(lua_State *L)
{
    // wxXmlProperty next
    wxXmlProperty * next = (wxXmlProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxXmlProperty);
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 2);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxXmlProperty* returns = new wxXmlProperty(name, value, next);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlProperty);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlProperty);

    return 1;
}

static int LUACALL wxLua_wxXmlProperty_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlProperty_constructor[1] = {{ wxLua_wxXmlProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxXmlProperty()
static int LUACALL wxLua_wxXmlProperty_constructor(lua_State *L)
{
    // call constructor
    wxXmlProperty* returns = new wxXmlProperty();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlProperty);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlProperty);

    return 1;
}




#if (wxLUA_USE_wxXML && wxUSE_XML)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlProperty_constructor_overload[] =
{
    { wxLua_wxXmlProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 3, s_wxluatypeArray_wxLua_wxXmlProperty_constructor1 },
    { wxLua_wxXmlProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxXmlProperty_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxXmlProperty_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxXML && wxUSE_XML)

void wxLua_wxXmlProperty_delete_function(void** p)
{
    wxXmlProperty* o = (wxXmlProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxXmlProperty_methods[] = {
    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlProperty_GetName, 1, NULL },
    { "GetNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlProperty_GetNext, 1, NULL },
    { "GetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlProperty_GetValue, 1, NULL },
    { "SetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlProperty_SetName, 1, NULL },
    { "SetNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlProperty_SetNext, 1, NULL },
    { "SetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlProperty_SetValue, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxXmlProperty_delete, 1, NULL },

#if (wxLUA_USE_wxXML && wxUSE_XML)
    { "wxXmlProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxXmlProperty_constructor_overload, s_wxluafunc_wxLua_wxXmlProperty_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxXML && wxUSE_XML)

    { 0, 0, 0, 0 },
};

int wxXmlProperty_methodCount = sizeof(wxXmlProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxXML && wxUSE_XML


#if wxLUA_USE_wxXML && wxUSE_XML
// ---------------------------------------------------------------------------
// Bind class wxXmlDocument
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxXmlDocument'
int wxluatype_wxXmlDocument = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetFileEncoding[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetFileEncoding(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetFileEncoding[1] = {{ wxLua_wxXmlDocument_GetFileEncoding, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetFileEncoding }};
//     wxString GetFileEncoding() const;
static int LUACALL wxLua_wxXmlDocument_GetFileEncoding(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetFileEncoding
    wxString returns = (self->GetFileEncoding());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetRoot[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetRoot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetRoot[1] = {{ wxLua_wxXmlDocument_GetRoot, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetRoot }};
//     wxXmlNode *GetRoot() const;
static int LUACALL wxLua_wxXmlDocument_GetRoot(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetRoot
    wxXmlNode* returns = (wxXmlNode*)self->GetRoot();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetVersion[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetVersion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetVersion[1] = {{ wxLua_wxXmlDocument_GetVersion, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetVersion }};
//     wxString GetVersion() const;
static int LUACALL wxLua_wxXmlDocument_GetVersion(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetVersion
    wxString returns = (self->GetVersion());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_IsOk[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_IsOk(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_IsOk[1] = {{ wxLua_wxXmlDocument_IsOk, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_IsOk }};
//     bool IsOk() const;
static int LUACALL wxLua_wxXmlDocument_IsOk(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call IsOk
    bool returns = (self->IsOk());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_Load[] = { &wxluatype_wxXmlDocument, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlDocument_Load(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_Load[1] = {{ wxLua_wxXmlDocument_Load, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxXmlDocument_Load }};
//     bool Load(const wxString& filename, const wxString& encoding = "UTF-8");
static int LUACALL wxLua_wxXmlDocument_Load(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString encoding = "UTF-8"
    const wxString encoding = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxT("UTF-8")));
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call Load
    bool returns = (self->Load(filename, encoding));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_Save[] = { &wxluatype_wxXmlDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlDocument_Save(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_Save[1] = {{ wxLua_wxXmlDocument_Save, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_Save }};
//     bool Save(const wxString& filename) const;
static int LUACALL wxLua_wxXmlDocument_Save(lua_State *L)
{
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call Save
    bool returns = (self->Save(filename));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_SetFileEncoding[] = { &wxluatype_wxXmlDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlDocument_SetFileEncoding(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_SetFileEncoding[1] = {{ wxLua_wxXmlDocument_SetFileEncoding, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_SetFileEncoding }};
//     void SetFileEncoding(const wxString& encoding);
static int LUACALL wxLua_wxXmlDocument_SetFileEncoding(lua_State *L)
{
    // const wxString encoding
    const wxString encoding = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call SetFileEncoding
    self->SetFileEncoding(encoding);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_SetRoot[] = { &wxluatype_wxXmlDocument, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlDocument_SetRoot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_SetRoot[1] = {{ wxLua_wxXmlDocument_SetRoot, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_SetRoot }};
//     void SetRoot(%ungc wxXmlNode *node);
static int LUACALL wxLua_wxXmlDocument_SetRoot(lua_State *L)
{
    // wxXmlNode node
    wxXmlNode * node = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    if (wxluaO_isgcobject(L, node)) wxluaO_undeletegcobject(L, node);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call SetRoot
    self->SetRoot(node);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_SetVersion[] = { &wxluatype_wxXmlDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlDocument_SetVersion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_SetVersion[1] = {{ wxLua_wxXmlDocument_SetVersion, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_SetVersion }};
//     void SetVersion(const wxString& version);
static int LUACALL wxLua_wxXmlDocument_SetVersion(lua_State *L)
{
    // const wxString version
    const wxString version = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call SetVersion
    self->SetVersion(version);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_delete[] = { &wxluatype_wxXmlDocument, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlDocument_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_constructor1[1] = {{ wxLua_wxXmlDocument_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxXmlDocument_constructor1 }};
//     wxXmlDocument(const wxString& filename, const wxString& encoding = "UTF-8");
static int LUACALL wxLua_wxXmlDocument_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString encoding = "UTF-8"
    const wxString encoding = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxT("UTF-8")));
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxXmlDocument* returns = new wxXmlDocument(filename, encoding);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlDocument);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlDocument);

    return 1;
}

static int LUACALL wxLua_wxXmlDocument_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_constructor[1] = {{ wxLua_wxXmlDocument_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxXmlDocument();
static int LUACALL wxLua_wxXmlDocument_constructor(lua_State *L)
{
    // call constructor
    wxXmlDocument* returns = new wxXmlDocument();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlDocument);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlDocument);

    return 1;
}




#if (wxLUA_USE_wxXML && wxUSE_XML)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_constructor_overload[] =
{
    { wxLua_wxXmlDocument_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxXmlDocument_constructor1 },
    { wxLua_wxXmlDocument_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxXmlDocument_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxXmlDocument_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxXML && wxUSE_XML)

void wxLua_wxXmlDocument_delete_function(void** p)
{
    wxXmlDocument* o = (wxXmlDocument*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxXmlDocument_methods[] = {
    { "GetFileEncoding", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetFileEncoding, 1, NULL },
    { "GetRoot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetRoot, 1, NULL },
    { "GetVersion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetVersion, 1, NULL },
    { "IsOk", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_IsOk, 1, NULL },
    { "Load", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_Load, 1, NULL },
    { "Save", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_Save, 1, NULL },
    { "SetFileEncoding", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_SetFileEncoding, 1, NULL },
    { "SetRoot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_SetRoot, 1, NULL },
    { "SetVersion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_SetVersion, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxXmlDocument_delete, 1, NULL },

#if (wxLUA_USE_wxXML && wxUSE_XML)
    { "wxXmlDocument", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxXmlDocument_constructor_overload, s_wxluafunc_wxLua_wxXmlDocument_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxXML && wxUSE_XML)

    { 0, 0, 0, 0 },
};

int wxXmlDocument_methodCount = sizeof(wxXmlDocument_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxXML && wxUSE_XML



// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxxml_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


// ---------------------------------------------------------------------------
// wxLuaGetEventList_wxxml() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_wxxml(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {

        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_wxxml() is called to register %define and %enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_wxxml(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {
#if wxLUA_USE_wxXML && wxUSE_XML
        { "wxXML_ATTRIBUTE_NODE", wxXML_ATTRIBUTE_NODE },
        { "wxXML_CDATA_SECTION_NODE", wxXML_CDATA_SECTION_NODE },
        { "wxXML_COMMENT_NODE", wxXML_COMMENT_NODE },
        { "wxXML_DOCUMENT_FRAG_NODE", wxXML_DOCUMENT_FRAG_NODE },
        { "wxXML_DOCUMENT_NODE", wxXML_DOCUMENT_NODE },
        { "wxXML_DOCUMENT_TYPE_NODE", wxXML_DOCUMENT_TYPE_NODE },
        { "wxXML_ELEMENT_NODE", wxXML_ELEMENT_NODE },
        { "wxXML_ENTITY_NODE", wxXML_ENTITY_NODE },
        { "wxXML_ENTITY_REF_NODE", wxXML_ENTITY_REF_NODE },
        { "wxXML_HTML_DOCUMENT_NODE", wxXML_HTML_DOCUMENT_NODE },
        { "wxXML_NOTATION_NODE", wxXML_NOTATION_NODE },
        { "wxXML_PI_NODE", wxXML_PI_NODE },
        { "wxXML_TEXT_NODE", wxXML_TEXT_NODE },
#endif // wxLUA_USE_wxXML && wxUSE_XML


        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_wxxml() is called to register %define %string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_wxxml(size_t &count)
{
    static wxLuaBindString stringList[] =
    {

        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_wxxml() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_wxxml(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {

        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxxml() is called to register global functions
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxxml() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_wxxml(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {

        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_wxxml() is called to register classes
// ---------------------------------------------------------------------------

static const char* wxluaclassname_wxObject = "wxObject";
static const char* wxluaclassname_wxXmlDocument = "wxXmlDocument";
static const char* wxluaclassname_wxXmlNode = "wxXmlNode";
static const char* wxluaclassname_wxXmlProperty = "wxXmlProperty";

static const char* wxluabaseclassnames_wxXmlDocument[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxXmlDocument[] = { NULL };
// ---------------------------------------------------------------------------
// Lua Tag Method Values and Tables for each Class
// ---------------------------------------------------------------------------

#if wxLUA_USE_wxXML && wxUSE_XML
    extern wxLuaBindMethod wxXmlDocument_methods[];
    extern int wxXmlDocument_methodCount;
    extern void wxLua_wxXmlDocument_delete_function(void** p);
    extern wxLuaBindMethod wxXmlNode_methods[];
    extern int wxXmlNode_methodCount;
    extern void wxLua_wxXmlNode_delete_function(void** p);
    extern wxLuaBindMethod wxXmlProperty_methods[];
    extern int wxXmlProperty_methodCount;
    extern void wxLua_wxXmlProperty_delete_function(void** p);
#endif // wxLUA_USE_wxXML && wxUSE_XML




wxLuaBindClass* wxLuaGetClassList_wxxml(size_t &count)
{
    static wxLuaBindClass classList[] =
    {
#if wxLUA_USE_wxXML && wxUSE_XML
        { wxluaclassname_wxXmlDocument, wxXmlDocument_methods, wxXmlDocument_methodCount, CLASSINFO(wxXmlDocument), &wxluatype_wxXmlDocument, wxluabaseclassnames_wxXmlDocument, wxluabaseclassbinds_wxXmlDocument, NULL, NULL, NULL, 0, &wxLua_wxXmlDocument_delete_function, }, 
        { wxluaclassname_wxXmlNode, wxXmlNode_methods, wxXmlNode_methodCount, NULL, &wxluatype_wxXmlNode, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxXmlNode_delete_function, }, 
        { wxluaclassname_wxXmlProperty, wxXmlProperty_methods, wxXmlProperty_methodCount, NULL, &wxluatype_wxXmlProperty, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxXmlProperty_delete_function, }, 
#endif // wxLUA_USE_wxXML && wxUSE_XML


        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_wxxml() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_wxxml, wxLuaBinding)

wxLuaBinding_wxxml::wxLuaBinding_wxxml() : wxLuaBinding()
{
    m_bindingName   = wxT("wxxml");
    m_nameSpace     = wxT("wx");
    m_classArray    = wxLuaGetClassList_wxxml(m_classCount);
    m_numberArray   = wxLuaGetDefineList_wxxml(m_numberCount);
    m_stringArray   = wxLuaGetStringList_wxxml(m_stringCount);
    m_eventArray    = wxLuaGetEventList_wxxml(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_wxxml(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_wxxml(m_functionCount);
    InitBinding();
}



// ---------------------------------------------------------------------------

wxLuaBinding* wxLuaBinding_wxxml_init()
{
    static wxLuaBinding_wxxml m_binding;

    if (wxLuaBinding::GetBindingArray().Index(&m_binding) == wxNOT_FOUND)
        wxLuaBinding::GetBindingArray().Add(&m_binding);

    return &m_binding;
}


