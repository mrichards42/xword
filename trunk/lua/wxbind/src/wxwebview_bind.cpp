// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxwebview_webview.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif

#include "wxlua/wxlstate.h"
#include "wxbind/include/wxwebview_bind.h"

#ifdef __GNUC__
    #pragma GCC diagnostic ignored "-Wunused-variable"
#endif // __GNUC__


#if wxUSE_WEBVIEW
// ---------------------------------------------------------------------------
// Bind class wxWebViewHandler
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxWebViewHandler'
int wxluatype_wxWebViewHandler = WXLUA_TUNKNOWN;

#if ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)
static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewHandler_GetFile[] = { &wxluatype_wxWebViewHandler, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebViewHandler_GetFile(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewHandler_GetFile[1] = {{ wxLua_wxWebViewHandler_GetFile, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxWebViewHandler_GetFile }};
//     virtual wxFSFile* GetFile(const wxString &uri); // = 0;
static int LUACALL wxLua_wxWebViewHandler_GetFile(lua_State *L)
{
    // const wxString uri
    const wxString uri = wxlua_getwxStringtype(L, 2);
    // get this
    wxWebViewHandler * self = (wxWebViewHandler *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewHandler);
    // call GetFile
    wxFSFile* returns = (wxFSFile*)self->GetFile(uri);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFSFile);

    return 1;
}

#endif // ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewHandler_GetName[] = { &wxluatype_wxWebViewHandler, NULL };
static int LUACALL wxLua_wxWebViewHandler_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewHandler_GetName[1] = {{ wxLua_wxWebViewHandler_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebViewHandler_GetName }};
//     virtual wxString GetName() const;
static int LUACALL wxLua_wxWebViewHandler_GetName(lua_State *L)
{
    // get this
    wxWebViewHandler * self = (wxWebViewHandler *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewHandler);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}




void wxLua_wxWebViewHandler_delete_function(void** p)
{
    wxWebViewHandler* o = (wxWebViewHandler*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxWebViewHandler_methods[] = {
#if ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)
    { "GetFile", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebViewHandler_GetFile, 1, NULL },
#endif // ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)

    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebViewHandler_GetName, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxWebViewHandler_methodCount = sizeof(wxWebViewHandler_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_WEBVIEW


#if wxUSE_WEBVIEW
// ---------------------------------------------------------------------------
// Bind class wxWebViewFactory
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxWebViewFactory'
int wxluatype_wxWebViewFactory = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)
static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewFactory_Create1[] = { &wxluatype_wxWebViewFactory, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebViewFactory_Create1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewFactory_Create1[1] = {{ wxLua_wxWebViewFactory_Create1, WXLUAMETHOD_METHOD, 3, 8, s_wxluatypeArray_wxLua_wxWebViewFactory_Create1 }};
//     virtual wxWebView* Create(wxWindow* parent, wxWindowID id, const wxString& url = wxWebViewDefaultURLStr, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = wxWebViewNameStr); // = 0;
static int LUACALL wxLua_wxWebViewFactory_Create1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = wxWebViewNameStr
    const wxString name = (argCount >= 8 ? wxlua_getwxStringtype(L, 8) : wxString(wxWebViewNameStr));
    // long style = 0
    long style = (argCount >= 7 ? (long)wxlua_getnumbertype(L, 7) : 0);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 6 ? (const wxSize *)wxluaT_getuserdatatype(L, 6, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 5 ? (const wxPoint *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString url = wxWebViewDefaultURLStr
    const wxString url = (argCount >= 4 ? wxlua_getwxStringtype(L, 4) : wxString(wxWebViewDefaultURLStr));
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 3);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxWebViewFactory * self = (wxWebViewFactory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewFactory);
    // call Create
    wxWebView* returns = (wxWebView*)self->Create(parent, id, url, *pos, *size, style, name);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWebView);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewFactory_Create[] = { &wxluatype_wxWebViewFactory, NULL };
static int LUACALL wxLua_wxWebViewFactory_Create(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewFactory_Create[1] = {{ wxLua_wxWebViewFactory_Create, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebViewFactory_Create }};
//     virtual wxWebView* Create(); // = 0;
static int LUACALL wxLua_wxWebViewFactory_Create(lua_State *L)
{
    // get this
    wxWebViewFactory * self = (wxWebViewFactory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewFactory);
    // call Create
    wxWebView* returns = (wxWebView*)self->Create();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWebView);

    return 1;
}




#if ((wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewFactory_Create_overload[] =
{

#if (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)
    { wxLua_wxWebViewFactory_Create1, WXLUAMETHOD_METHOD, 3, 8, s_wxluatypeArray_wxLua_wxWebViewFactory_Create1 },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)
    { wxLua_wxWebViewFactory_Create, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebViewFactory_Create },
};
static int s_wxluafunc_wxLua_wxWebViewFactory_Create_overload_count = sizeof(s_wxluafunc_wxLua_wxWebViewFactory_Create_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)

void wxLua_wxWebViewFactory_delete_function(void** p)
{
    wxWebViewFactory* o = (wxWebViewFactory*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxWebViewFactory_methods[] = {
#if ((wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebViewFactory_Create_overload, s_wxluafunc_wxLua_wxWebViewFactory_Create_overload_count, 0 },
#endif // ((wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)

    { 0, 0, 0, 0 },
};

int wxWebViewFactory_methodCount = sizeof(wxWebViewFactory_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_WEBVIEW


#if wxUSE_WEBVIEW
// ---------------------------------------------------------------------------
// Bind class wxWebView
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxWebView'
int wxluatype_wxWebView = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_CanCopy[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_CanCopy(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_CanCopy[1] = {{ wxLua_wxWebView_CanCopy, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_CanCopy }};
//     virtual bool CanCopy() const; // = 0;
static int LUACALL wxLua_wxWebView_CanCopy(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call CanCopy
    bool returns = (self->CanCopy());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_CanCut[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_CanCut(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_CanCut[1] = {{ wxLua_wxWebView_CanCut, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_CanCut }};
//     virtual bool CanCut() const; // = 0;
static int LUACALL wxLua_wxWebView_CanCut(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call CanCut
    bool returns = (self->CanCut());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_CanGoBack[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_CanGoBack(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_CanGoBack[1] = {{ wxLua_wxWebView_CanGoBack, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_CanGoBack }};
//     virtual bool CanGoBack() const; // = 0;
static int LUACALL wxLua_wxWebView_CanGoBack(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call CanGoBack
    bool returns = (self->CanGoBack());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_CanGoForward[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_CanGoForward(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_CanGoForward[1] = {{ wxLua_wxWebView_CanGoForward, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_CanGoForward }};
//     virtual bool CanGoForward() const; // = 0;
static int LUACALL wxLua_wxWebView_CanGoForward(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call CanGoForward
    bool returns = (self->CanGoForward());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_CanPaste[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_CanPaste(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_CanPaste[1] = {{ wxLua_wxWebView_CanPaste, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_CanPaste }};
//     virtual bool CanPaste() const; // = 0;
static int LUACALL wxLua_wxWebView_CanPaste(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call CanPaste
    bool returns = (self->CanPaste());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_CanRedo[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_CanRedo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_CanRedo[1] = {{ wxLua_wxWebView_CanRedo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_CanRedo }};
//     virtual bool CanRedo() const; // = 0;
static int LUACALL wxLua_wxWebView_CanRedo(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call CanRedo
    bool returns = (self->CanRedo());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_CanSetZoomType[] = { &wxluatype_wxWebView, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxWebView_CanSetZoomType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_CanSetZoomType[1] = {{ wxLua_wxWebView_CanSetZoomType, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxWebView_CanSetZoomType }};
//     virtual bool CanSetZoomType(wxWebViewZoomType type) const; // = 0;
static int LUACALL wxLua_wxWebView_CanSetZoomType(lua_State *L)
{
    // wxWebViewZoomType type
    wxWebViewZoomType type = (wxWebViewZoomType)wxlua_getenumtype(L, 2);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call CanSetZoomType
    bool returns = (self->CanSetZoomType(type));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_CanUndo[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_CanUndo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_CanUndo[1] = {{ wxLua_wxWebView_CanUndo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_CanUndo }};
//     virtual bool CanUndo() const; // = 0;
static int LUACALL wxLua_wxWebView_CanUndo(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call CanUndo
    bool returns = (self->CanUndo());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_ClearHistory[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_ClearHistory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_ClearHistory[1] = {{ wxLua_wxWebView_ClearHistory, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_ClearHistory }};
//     virtual void ClearHistory(); // = 0;
static int LUACALL wxLua_wxWebView_ClearHistory(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call ClearHistory
    self->ClearHistory();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_ClearSelection[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_ClearSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_ClearSelection[1] = {{ wxLua_wxWebView_ClearSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_ClearSelection }};
//     virtual void ClearSelection(); // = 0;
static int LUACALL wxLua_wxWebView_ClearSelection(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call ClearSelection
    self->ClearSelection();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_Copy[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_Copy(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_Copy[1] = {{ wxLua_wxWebView_Copy, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_Copy }};
//     virtual void Copy(); // = 0;
static int LUACALL wxLua_wxWebView_Copy(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call Copy
    self->Copy();

    return 0;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)
static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_Create[] = { &wxluatype_wxWebView, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebView_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_Create[1] = {{ wxLua_wxWebView_Create, WXLUAMETHOD_METHOD, 3, 8, s_wxluatypeArray_wxLua_wxWebView_Create }};
//     virtual bool Create(wxWindow* parent, wxWindowID id, const wxString& url = wxWebViewDefaultURLStr, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = wxWebViewNameStr); // = 0;
static int LUACALL wxLua_wxWebView_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = wxWebViewNameStr
    const wxString name = (argCount >= 8 ? wxlua_getwxStringtype(L, 8) : wxString(wxWebViewNameStr));
    // long style = 0
    long style = (argCount >= 7 ? (long)wxlua_getnumbertype(L, 7) : 0);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 6 ? (const wxSize *)wxluaT_getuserdatatype(L, 6, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 5 ? (const wxPoint *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString url = wxWebViewDefaultURLStr
    const wxString url = (argCount >= 4 ? wxlua_getwxStringtype(L, 4) : wxString(wxWebViewDefaultURLStr));
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 3);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call Create
    bool returns = (self->Create(parent, id, url, *pos, *size, style, name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_Cut[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_Cut(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_Cut[1] = {{ wxLua_wxWebView_Cut, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_Cut }};
//     virtual void Cut(); // = 0;
static int LUACALL wxLua_wxWebView_Cut(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call Cut
    self->Cut();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_DeleteSelection[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_DeleteSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_DeleteSelection[1] = {{ wxLua_wxWebView_DeleteSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_DeleteSelection }};
//     virtual void DeleteSelection(); // = 0;
static int LUACALL wxLua_wxWebView_DeleteSelection(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call DeleteSelection
    self->DeleteSelection();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_EnableContextMenu[] = { &wxluatype_wxWebView, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxWebView_EnableContextMenu(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_EnableContextMenu[1] = {{ wxLua_wxWebView_EnableContextMenu, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxWebView_EnableContextMenu }};
//     virtual void EnableContextMenu(bool enable = true);
static int LUACALL wxLua_wxWebView_EnableContextMenu(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enable = true
    bool enable = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call EnableContextMenu
    self->EnableContextMenu(enable);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_EnableHistory[] = { &wxluatype_wxWebView, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxWebView_EnableHistory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_EnableHistory[1] = {{ wxLua_wxWebView_EnableHistory, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxWebView_EnableHistory }};
//     virtual void EnableHistory(bool enable = true); // = 0;
static int LUACALL wxLua_wxWebView_EnableHistory(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enable = true
    bool enable = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call EnableHistory
    self->EnableHistory(enable);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_Find[] = { &wxluatype_wxWebView, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxWebView_Find(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_Find[1] = {{ wxLua_wxWebView_Find, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxWebView_Find }};
//     virtual long Find(const wxString& text, int flags = wxWEBVIEW_FIND_DEFAULT); // = 0;
static int LUACALL wxLua_wxWebView_Find(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxWEBVIEW_FIND_DEFAULT
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxWEBVIEW_FIND_DEFAULT);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call Find
    long  returns = (self->Find(text, flags));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GetCurrentTitle[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GetCurrentTitle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GetCurrentTitle[1] = {{ wxLua_wxWebView_GetCurrentTitle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GetCurrentTitle }};
//     virtual wxString GetCurrentTitle() const; // = 0;
static int LUACALL wxLua_wxWebView_GetCurrentTitle(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GetCurrentTitle
    wxString returns = (self->GetCurrentTitle());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GetCurrentURL[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GetCurrentURL(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GetCurrentURL[1] = {{ wxLua_wxWebView_GetCurrentURL, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GetCurrentURL }};
//     virtual wxString GetCurrentURL() const; // = 0;
static int LUACALL wxLua_wxWebView_GetCurrentURL(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GetCurrentURL
    wxString returns = (self->GetCurrentURL());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GetNativeBackend[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GetNativeBackend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GetNativeBackend[1] = {{ wxLua_wxWebView_GetNativeBackend, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GetNativeBackend }};
//     virtual void* GetNativeBackend() const; // = 0;
static int LUACALL wxLua_wxWebView_GetNativeBackend(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GetNativeBackend
    void* returns = (void*)self->GetNativeBackend();
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GetPageSource[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GetPageSource(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GetPageSource[1] = {{ wxLua_wxWebView_GetPageSource, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GetPageSource }};
//     virtual wxString GetPageSource() const; // = 0;
static int LUACALL wxLua_wxWebView_GetPageSource(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GetPageSource
    wxString returns = (self->GetPageSource());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GetPageText[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GetPageText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GetPageText[1] = {{ wxLua_wxWebView_GetPageText, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GetPageText }};
//     virtual wxString GetPageText() const; // = 0;
static int LUACALL wxLua_wxWebView_GetPageText(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GetPageText
    wxString returns = (self->GetPageText());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GetSelectedSource[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GetSelectedSource(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GetSelectedSource[1] = {{ wxLua_wxWebView_GetSelectedSource, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GetSelectedSource }};
//     virtual wxString GetSelectedSource() const; // = 0;
static int LUACALL wxLua_wxWebView_GetSelectedSource(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GetSelectedSource
    wxString returns = (self->GetSelectedSource());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GetSelectedText[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GetSelectedText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GetSelectedText[1] = {{ wxLua_wxWebView_GetSelectedText, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GetSelectedText }};
//     virtual wxString GetSelectedText() const; // = 0;
static int LUACALL wxLua_wxWebView_GetSelectedText(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GetSelectedText
    wxString returns = (self->GetSelectedText());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GetZoom[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GetZoom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GetZoom[1] = {{ wxLua_wxWebView_GetZoom, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GetZoom }};
//     virtual wxWebViewZoom GetZoom() const; // = 0;
static int LUACALL wxLua_wxWebView_GetZoom(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GetZoom
    wxWebViewZoom returns = (self->GetZoom());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GetZoomType[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GetZoomType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GetZoomType[1] = {{ wxLua_wxWebView_GetZoomType, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GetZoomType }};
//     virtual wxWebViewZoomType GetZoomType() const; // = 0;
static int LUACALL wxLua_wxWebView_GetZoomType(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GetZoomType
    wxWebViewZoomType returns = (self->GetZoomType());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GoBack[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GoBack(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GoBack[1] = {{ wxLua_wxWebView_GoBack, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GoBack }};
//     virtual void GoBack(); // = 0;
static int LUACALL wxLua_wxWebView_GoBack(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GoBack
    self->GoBack();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_GoForward[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_GoForward(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_GoForward[1] = {{ wxLua_wxWebView_GoForward, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_GoForward }};
//     virtual void GoForward(); // = 0;
static int LUACALL wxLua_wxWebView_GoForward(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call GoForward
    self->GoForward();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_HasSelection[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_HasSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_HasSelection[1] = {{ wxLua_wxWebView_HasSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_HasSelection }};
//     virtual bool HasSelection() const; // = 0;
static int LUACALL wxLua_wxWebView_HasSelection(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call HasSelection
    bool returns = (self->HasSelection());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_IsBusy[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_IsBusy(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_IsBusy[1] = {{ wxLua_wxWebView_IsBusy, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_IsBusy }};
//     virtual bool IsBusy() const; // = 0;
static int LUACALL wxLua_wxWebView_IsBusy(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call IsBusy
    bool returns = (self->IsBusy());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_IsContextMenuEnabled[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_IsContextMenuEnabled(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_IsContextMenuEnabled[1] = {{ wxLua_wxWebView_IsContextMenuEnabled, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_IsContextMenuEnabled }};
//     virtual bool IsContextMenuEnabled() const; // { return m_showMenu; }
static int LUACALL wxLua_wxWebView_IsContextMenuEnabled(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call IsContextMenuEnabled
    bool returns = (self->IsContextMenuEnabled());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_IsEditable[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_IsEditable(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_IsEditable[1] = {{ wxLua_wxWebView_IsEditable, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_IsEditable }};
//     virtual bool IsEditable() const; // = 0;
static int LUACALL wxLua_wxWebView_IsEditable(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call IsEditable
    bool returns = (self->IsEditable());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_LoadURL[] = { &wxluatype_wxWebView, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebView_LoadURL(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_LoadURL[1] = {{ wxLua_wxWebView_LoadURL, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxWebView_LoadURL }};
//     virtual void LoadURL(const wxString& url); // = 0;
static int LUACALL wxLua_wxWebView_LoadURL(lua_State *L)
{
    // const wxString url
    const wxString url = wxlua_getwxStringtype(L, 2);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call LoadURL
    self->LoadURL(url);

    return 0;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)
static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_New1[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebView_New1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_New1[1] = {{ wxLua_wxWebView_New1, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 2, 8, s_wxluatypeArray_wxLua_wxWebView_New1 }};
//     static wxWebView* New(wxWindow* parent, wxWindowID id, const wxString& url = wxWebViewDefaultURLStr, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, const wxString& backend = wxWebViewBackendDefault, long style = 0, const wxString& name = wxWebViewNameStr);
static int LUACALL wxLua_wxWebView_New1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = wxWebViewNameStr
    const wxString name = (argCount >= 8 ? wxlua_getwxStringtype(L, 8) : wxString(wxWebViewNameStr));
    // long style = 0
    long style = (argCount >= 7 ? (long)wxlua_getnumbertype(L, 7) : 0);
    // const wxString backend = wxWebViewBackendDefault
    const wxString backend = (argCount >= 6 ? wxlua_getwxStringtype(L, 6) : wxString(wxWebViewBackendDefault));
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString url = wxWebViewDefaultURLStr
    const wxString url = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxWebViewDefaultURLStr));
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 2);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call New
    wxWebView* returns = (wxWebView*)wxWebView::New(parent, id, url, *pos, *size, backend, style, name);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWebView);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_New[] = { &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebView_New(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_New[1] = {{ wxLua_wxWebView_New, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 1, s_wxluatypeArray_wxLua_wxWebView_New }};
//     static wxWebView* New(const wxString& backend = wxWebViewBackendDefault);
static int LUACALL wxLua_wxWebView_New(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString backend = wxWebViewBackendDefault
    const wxString backend = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxWebViewBackendDefault));
    // call New
    wxWebView* returns = (wxWebView*)wxWebView::New(backend);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWebView);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_Paste[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_Paste(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_Paste[1] = {{ wxLua_wxWebView_Paste, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_Paste }};
//     virtual void Paste(); // = 0;
static int LUACALL wxLua_wxWebView_Paste(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call Paste
    self->Paste();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_Print[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_Print(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_Print[1] = {{ wxLua_wxWebView_Print, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_Print }};
//     virtual void Print(); // = 0;
static int LUACALL wxLua_wxWebView_Print(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call Print
    self->Print();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_Redo[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_Redo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_Redo[1] = {{ wxLua_wxWebView_Redo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_Redo }};
//     virtual void Redo(); // = 0;
static int LUACALL wxLua_wxWebView_Redo(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call Redo
    self->Redo();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_Reload[] = { &wxluatype_wxWebView, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxWebView_Reload(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_Reload[1] = {{ wxLua_wxWebView_Reload, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxWebView_Reload }};
//     virtual void Reload(wxWebViewReloadFlags flags = wxWEBVIEW_RELOAD_DEFAULT); // = 0;
static int LUACALL wxLua_wxWebView_Reload(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxWebViewReloadFlags flags = wxWEBVIEW_RELOAD_DEFAULT
    wxWebViewReloadFlags flags = (argCount >= 2 ? (wxWebViewReloadFlags)wxlua_getenumtype(L, 2) : wxWEBVIEW_RELOAD_DEFAULT);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call Reload
    self->Reload(flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_RunScript[] = { &wxluatype_wxWebView, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebView_RunScript(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_RunScript[1] = {{ wxLua_wxWebView_RunScript, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxWebView_RunScript }};
//     virtual void RunScript(const wxString& javascript); // = 0;
static int LUACALL wxLua_wxWebView_RunScript(lua_State *L)
{
    // const wxString javascript
    const wxString javascript = wxlua_getwxStringtype(L, 2);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call RunScript
    self->RunScript(javascript);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_SelectAll[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_SelectAll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_SelectAll[1] = {{ wxLua_wxWebView_SelectAll, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_SelectAll }};
//     virtual void SelectAll(); // = 0;
static int LUACALL wxLua_wxWebView_SelectAll(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call SelectAll
    self->SelectAll();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_SetEditable[] = { &wxluatype_wxWebView, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxWebView_SetEditable(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_SetEditable[1] = {{ wxLua_wxWebView_SetEditable, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxWebView_SetEditable }};
//     virtual void SetEditable(bool enable = true); // = 0;
static int LUACALL wxLua_wxWebView_SetEditable(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enable = true
    bool enable = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call SetEditable
    self->SetEditable(enable);

    return 0;
}


#if (wxUSE_STREAMS) && (wxUSE_WEBVIEW)
static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_SetPage1[] = { &wxluatype_wxWebView, &wxluatype_wxInputStream, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebView_SetPage1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_SetPage1[1] = {{ wxLua_wxWebView_SetPage1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxWebView_SetPage1 }};
//     void SetPage(wxInputStream& html, wxString baseUrl);
static int LUACALL wxLua_wxWebView_SetPage1(lua_State *L)
{
    // wxString baseUrl
    wxString baseUrl = wxlua_getwxStringtype(L, 3);
    // wxInputStream html
    wxInputStream * html = (wxInputStream *)wxluaT_getuserdatatype(L, 2, wxluatype_wxInputStream);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call SetPage
    self->SetPage(*html, baseUrl);

    return 0;
}

#endif // (wxUSE_STREAMS) && (wxUSE_WEBVIEW)

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_SetPage[] = { &wxluatype_wxWebView, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebView_SetPage(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_SetPage[1] = {{ wxLua_wxWebView_SetPage, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxWebView_SetPage }};
//     void SetPage(const wxString& html, const wxString& baseUrl);
static int LUACALL wxLua_wxWebView_SetPage(lua_State *L)
{
    // const wxString baseUrl
    const wxString baseUrl = wxlua_getwxStringtype(L, 3);
    // const wxString html
    const wxString html = wxlua_getwxStringtype(L, 2);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call SetPage
    self->SetPage(html, baseUrl);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_SetZoom[] = { &wxluatype_wxWebView, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxWebView_SetZoom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_SetZoom[1] = {{ wxLua_wxWebView_SetZoom, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxWebView_SetZoom }};
//     virtual void SetZoom(wxWebViewZoom zoom); // = 0;
static int LUACALL wxLua_wxWebView_SetZoom(lua_State *L)
{
    // wxWebViewZoom zoom
    wxWebViewZoom zoom = (wxWebViewZoom)wxlua_getenumtype(L, 2);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call SetZoom
    self->SetZoom(zoom);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_SetZoomType[] = { &wxluatype_wxWebView, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxWebView_SetZoomType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_SetZoomType[1] = {{ wxLua_wxWebView_SetZoomType, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxWebView_SetZoomType }};
//     virtual void SetZoomType(wxWebViewZoomType zoomType); // = 0;
static int LUACALL wxLua_wxWebView_SetZoomType(lua_State *L)
{
    // wxWebViewZoomType zoomType
    wxWebViewZoomType zoomType = (wxWebViewZoomType)wxlua_getenumtype(L, 2);
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call SetZoomType
    self->SetZoomType(zoomType);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_Stop[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_Stop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_Stop[1] = {{ wxLua_wxWebView_Stop, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_Stop }};
//     virtual void Stop(); // = 0;
static int LUACALL wxLua_wxWebView_Stop(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call Stop
    self->Stop();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebView_Undo[] = { &wxluatype_wxWebView, NULL };
static int LUACALL wxLua_wxWebView_Undo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_Undo[1] = {{ wxLua_wxWebView_Undo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebView_Undo }};
//     virtual void Undo(); // = 0;
static int LUACALL wxLua_wxWebView_Undo(lua_State *L)
{
    // get this
    wxWebView * self = (wxWebView *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebView);
    // call Undo
    self->Undo();

    return 0;
}




#if ((wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_New_overload[] =
{

#if (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)
    { wxLua_wxWebView_New1, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 2, 8, s_wxluatypeArray_wxLua_wxWebView_New1 },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)
    { wxLua_wxWebView_New, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 1, s_wxluatypeArray_wxLua_wxWebView_New },
};
static int s_wxluafunc_wxLua_wxWebView_New_overload_count = sizeof(s_wxluafunc_wxLua_wxWebView_New_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)

#if ((wxUSE_STREAMS) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebView_SetPage_overload[] =
{

#if (wxUSE_STREAMS) && (wxUSE_WEBVIEW)
    { wxLua_wxWebView_SetPage1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxWebView_SetPage1 },
#endif // (wxUSE_STREAMS) && (wxUSE_WEBVIEW)
    { wxLua_wxWebView_SetPage, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxWebView_SetPage },
};
static int s_wxluafunc_wxLua_wxWebView_SetPage_overload_count = sizeof(s_wxluafunc_wxLua_wxWebView_SetPage_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxUSE_STREAMS) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)

void wxLua_wxWebView_delete_function(void** p)
{
    wxWebView* o = (wxWebView*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxWebView_methods[] = {
    { "CanCopy", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_CanCopy, 1, NULL },
    { "CanCut", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_CanCut, 1, NULL },
    { "CanGoBack", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_CanGoBack, 1, NULL },
    { "CanGoForward", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_CanGoForward, 1, NULL },
    { "CanPaste", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_CanPaste, 1, NULL },
    { "CanRedo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_CanRedo, 1, NULL },
    { "CanSetZoomType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_CanSetZoomType, 1, NULL },
    { "CanUndo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_CanUndo, 1, NULL },
    { "ClearHistory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_ClearHistory, 1, NULL },
    { "ClearSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_ClearSelection, 1, NULL },
    { "Copy", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_Copy, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_Create, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW)

    { "Cut", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_Cut, 1, NULL },
    { "DeleteSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_DeleteSelection, 1, NULL },
    { "EnableContextMenu", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_EnableContextMenu, 1, NULL },
    { "EnableHistory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_EnableHistory, 1, NULL },
    { "Find", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_Find, 1, NULL },
    { "GetCurrentTitle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GetCurrentTitle, 1, NULL },
    { "GetCurrentURL", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GetCurrentURL, 1, NULL },
    { "GetNativeBackend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GetNativeBackend, 1, NULL },
    { "GetPageSource", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GetPageSource, 1, NULL },
    { "GetPageText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GetPageText, 1, NULL },
    { "GetSelectedSource", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GetSelectedSource, 1, NULL },
    { "GetSelectedText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GetSelectedText, 1, NULL },
    { "GetZoom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GetZoom, 1, NULL },
    { "GetZoomType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GetZoomType, 1, NULL },
    { "GoBack", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GoBack, 1, NULL },
    { "GoForward", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_GoForward, 1, NULL },
    { "HasSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_HasSelection, 1, NULL },
    { "IsBusy", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_IsBusy, 1, NULL },
    { "IsContextMenuEnabled", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_IsContextMenuEnabled, 1, NULL },
    { "IsEditable", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_IsEditable, 1, NULL },
    { "LoadURL", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_LoadURL, 1, NULL },

#if ((wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)
    { "New", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxWebView_New_overload, s_wxluafunc_wxLua_wxWebView_New_overload_count, 0 },
#endif // ((wxLUA_USE_wxPointSizeRect) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)

    { "Paste", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_Paste, 1, NULL },
    { "Print", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_Print, 1, NULL },
    { "Redo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_Redo, 1, NULL },
    { "Reload", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_Reload, 1, NULL },
    { "RunScript", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_RunScript, 1, NULL },
    { "SelectAll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_SelectAll, 1, NULL },
    { "SetEditable", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_SetEditable, 1, NULL },

#if ((wxUSE_STREAMS) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)
    { "SetPage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_SetPage_overload, s_wxluafunc_wxLua_wxWebView_SetPage_overload_count, 0 },
#endif // ((wxUSE_STREAMS) && (wxUSE_WEBVIEW))||(wxUSE_WEBVIEW)

    { "SetZoom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_SetZoom, 1, NULL },
    { "SetZoomType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_SetZoomType, 1, NULL },
    { "Stop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_Stop, 1, NULL },
    { "Undo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebView_Undo, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxWebView_methodCount = sizeof(wxWebView_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_WEBVIEW


#if wxUSE_WEBVIEW
// ---------------------------------------------------------------------------
// Bind class wxWebViewEvent
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxWebViewEvent'
int wxluatype_wxWebViewEvent = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewEvent_Clone[] = { &wxluatype_wxWebViewEvent, NULL };
static int LUACALL wxLua_wxWebViewEvent_Clone(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewEvent_Clone[1] = {{ wxLua_wxWebViewEvent_Clone, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebViewEvent_Clone }};
//     virtual wxEvent* Clone() const; // { return new wxWebViewEvent(*this); }
static int LUACALL wxLua_wxWebViewEvent_Clone(lua_State *L)
{
    // get this
    wxWebViewEvent * self = (wxWebViewEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewEvent);
    // call Clone
    wxEvent* returns = (wxEvent*)self->Clone();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxEvent);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewEvent_GetTarget[] = { &wxluatype_wxWebViewEvent, NULL };
static int LUACALL wxLua_wxWebViewEvent_GetTarget(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewEvent_GetTarget[1] = {{ wxLua_wxWebViewEvent_GetTarget, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebViewEvent_GetTarget }};
//     const wxString& GetTarget() const; // { return m_target; }
static int LUACALL wxLua_wxWebViewEvent_GetTarget(lua_State *L)
{
    // get this
    wxWebViewEvent * self = (wxWebViewEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewEvent);
    // call GetTarget
    wxString returns = (self->GetTarget());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewEvent_GetURL[] = { &wxluatype_wxWebViewEvent, NULL };
static int LUACALL wxLua_wxWebViewEvent_GetURL(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewEvent_GetURL[1] = {{ wxLua_wxWebViewEvent_GetURL, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebViewEvent_GetURL }};
//     const wxString& GetURL() const; // { return m_url; }
static int LUACALL wxLua_wxWebViewEvent_GetURL(lua_State *L)
{
    // get this
    wxWebViewEvent * self = (wxWebViewEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewEvent);
    // call GetURL
    wxString returns = (self->GetURL());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewEvent_constructor1[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebViewEvent_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewEvent_constructor1[1] = {{ wxLua_wxWebViewEvent_constructor1, WXLUAMETHOD_CONSTRUCTOR, 4, 4, s_wxluatypeArray_wxLua_wxWebViewEvent_constructor1 }};
//     wxWebViewEvent(wxEventType type, int id, const wxString& url, const wxString& target);
static int LUACALL wxLua_wxWebViewEvent_constructor1(lua_State *L)
{
    // const wxString target
    const wxString target = wxlua_getwxStringtype(L, 4);
    // const wxString url
    const wxString url = wxlua_getwxStringtype(L, 3);
    // int id
    int id = (int)wxlua_getnumbertype(L, 2);
    // wxEventType type
    wxEventType type = (wxEventType)wxlua_getnumbertype(L, 1);
    // call constructor
    wxWebViewEvent* returns = new wxWebViewEvent(type, id, url, target);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWebViewEvent);

    return 1;
}

static int LUACALL wxLua_wxWebViewEvent_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewEvent_constructor[1] = {{ wxLua_wxWebViewEvent_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxWebViewEvent(); // {}
static int LUACALL wxLua_wxWebViewEvent_constructor(lua_State *L)
{
    // call constructor
    wxWebViewEvent* returns = new wxWebViewEvent();
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWebViewEvent);

    return 1;
}




#if (wxUSE_WEBVIEW)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewEvent_constructor_overload[] =
{
    { wxLua_wxWebViewEvent_constructor1, WXLUAMETHOD_CONSTRUCTOR, 4, 4, s_wxluatypeArray_wxLua_wxWebViewEvent_constructor1 },
    { wxLua_wxWebViewEvent_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxWebViewEvent_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxWebViewEvent_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_WEBVIEW)

void wxLua_wxWebViewEvent_delete_function(void** p)
{
    wxWebViewEvent* o = (wxWebViewEvent*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxWebViewEvent_methods[] = {
    { "Clone", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebViewEvent_Clone, 1, NULL },
    { "GetTarget", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebViewEvent_GetTarget, 1, NULL },
    { "GetURL", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebViewEvent_GetURL, 1, NULL },

#if (wxUSE_WEBVIEW)
    { "wxWebViewEvent", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxWebViewEvent_constructor_overload, s_wxluafunc_wxLua_wxWebViewEvent_constructor_overload_count, 0 },
#endif // (wxUSE_WEBVIEW)

    { 0, 0, 0, 0 },
};

int wxWebViewEvent_methodCount = sizeof(wxWebViewEvent_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_WEBVIEW


#if wxUSE_WEBVIEW
// ---------------------------------------------------------------------------
// Bind class wxWebViewHistoryItem
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxWebViewHistoryItem'
int wxluatype_wxWebViewHistoryItem = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewHistoryItem_GetTitle[] = { &wxluatype_wxWebViewHistoryItem, NULL };
static int LUACALL wxLua_wxWebViewHistoryItem_GetTitle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewHistoryItem_GetTitle[1] = {{ wxLua_wxWebViewHistoryItem_GetTitle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebViewHistoryItem_GetTitle }};
//     wxString GetTitle();
static int LUACALL wxLua_wxWebViewHistoryItem_GetTitle(lua_State *L)
{
    // get this
    wxWebViewHistoryItem * self = (wxWebViewHistoryItem *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewHistoryItem);
    // call GetTitle
    wxString returns = (self->GetTitle());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewHistoryItem_GetUrl[] = { &wxluatype_wxWebViewHistoryItem, NULL };
static int LUACALL wxLua_wxWebViewHistoryItem_GetUrl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewHistoryItem_GetUrl[1] = {{ wxLua_wxWebViewHistoryItem_GetUrl, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxWebViewHistoryItem_GetUrl }};
//     wxString GetUrl();
static int LUACALL wxLua_wxWebViewHistoryItem_GetUrl(lua_State *L)
{
    // get this
    wxWebViewHistoryItem * self = (wxWebViewHistoryItem *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewHistoryItem);
    // call GetUrl
    wxString returns = (self->GetUrl());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewHistoryItem_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebViewHistoryItem_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewHistoryItem_constructor[1] = {{ wxLua_wxWebViewHistoryItem_constructor, WXLUAMETHOD_CONSTRUCTOR, 2, 2, s_wxluatypeArray_wxLua_wxWebViewHistoryItem_constructor }};
//     wxWebViewHistoryItem(const wxString& url, const wxString& title);
static int LUACALL wxLua_wxWebViewHistoryItem_constructor(lua_State *L)
{
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 2);
    // const wxString url
    const wxString url = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxWebViewHistoryItem* returns = new wxWebViewHistoryItem(url, title);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWebViewHistoryItem);

    return 1;
}




void wxLua_wxWebViewHistoryItem_delete_function(void** p)
{
    wxWebViewHistoryItem* o = (wxWebViewHistoryItem*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxWebViewHistoryItem_methods[] = {
    { "GetTitle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebViewHistoryItem_GetTitle, 1, NULL },
    { "GetUrl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebViewHistoryItem_GetUrl, 1, NULL },
    { "wxWebViewHistoryItem", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxWebViewHistoryItem_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxWebViewHistoryItem_methodCount = sizeof(wxWebViewHistoryItem_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_WEBVIEW


#if wxUSE_WEBVIEW
// ---------------------------------------------------------------------------
// Bind class wxWebViewFSHandler
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxWebViewFSHandler'
int wxluatype_wxWebViewFSHandler = WXLUA_TUNKNOWN;

#if ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)
static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewFSHandler_GetFile[] = { &wxluatype_wxWebViewFSHandler, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebViewFSHandler_GetFile(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewFSHandler_GetFile[1] = {{ wxLua_wxWebViewFSHandler_GetFile, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxWebViewFSHandler_GetFile }};
//     virtual wxFSFile* GetFile(const wxString &uri);
static int LUACALL wxLua_wxWebViewFSHandler_GetFile(lua_State *L)
{
    // const wxString uri
    const wxString uri = wxlua_getwxStringtype(L, 2);
    // get this
    wxWebViewFSHandler * self = (wxWebViewFSHandler *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewFSHandler);
    // call GetFile
    wxFSFile* returns = (wxFSFile*)self->GetFile(uri);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFSFile);

    return 1;
}

#endif // ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewFSHandler_constructor[] = { &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebViewFSHandler_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewFSHandler_constructor[1] = {{ wxLua_wxWebViewFSHandler_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxWebViewFSHandler_constructor }};
//     wxWebViewFSHandler(const wxString& scheme);
static int LUACALL wxLua_wxWebViewFSHandler_constructor(lua_State *L)
{
    // const wxString scheme
    const wxString scheme = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxWebViewFSHandler* returns = new wxWebViewFSHandler(scheme);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWebViewFSHandler);

    return 1;
}




void wxLua_wxWebViewFSHandler_delete_function(void** p)
{
    wxWebViewFSHandler* o = (wxWebViewFSHandler*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxWebViewFSHandler_methods[] = {
#if ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)
    { "GetFile", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebViewFSHandler_GetFile, 1, NULL },
#endif // ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)

    { "wxWebViewFSHandler", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxWebViewFSHandler_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxWebViewFSHandler_methodCount = sizeof(wxWebViewFSHandler_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_WEBVIEW


#if wxUSE_WEBVIEW
// ---------------------------------------------------------------------------
// Bind class wxWebViewArchiveHandler
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxWebViewArchiveHandler'
int wxluatype_wxWebViewArchiveHandler = WXLUA_TUNKNOWN;

#if ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)
static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewArchiveHandler_GetFile[] = { &wxluatype_wxWebViewArchiveHandler, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebViewArchiveHandler_GetFile(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewArchiveHandler_GetFile[1] = {{ wxLua_wxWebViewArchiveHandler_GetFile, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxWebViewArchiveHandler_GetFile }};
//     virtual wxFSFile* GetFile(const wxString &uri);
static int LUACALL wxLua_wxWebViewArchiveHandler_GetFile(lua_State *L)
{
    // const wxString uri
    const wxString uri = wxlua_getwxStringtype(L, 2);
    // get this
    wxWebViewArchiveHandler * self = (wxWebViewArchiveHandler *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWebViewArchiveHandler);
    // call GetFile
    wxFSFile* returns = (wxFSFile*)self->GetFile(uri);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFSFile);

    return 1;
}

#endif // ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)

static wxLuaArgType s_wxluatypeArray_wxLua_wxWebViewArchiveHandler_constructor[] = { &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxWebViewArchiveHandler_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxWebViewArchiveHandler_constructor[1] = {{ wxLua_wxWebViewArchiveHandler_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxWebViewArchiveHandler_constructor }};
//     wxWebViewArchiveHandler(const wxString& scheme);
static int LUACALL wxLua_wxWebViewArchiveHandler_constructor(lua_State *L)
{
    // const wxString scheme
    const wxString scheme = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxWebViewArchiveHandler* returns = new wxWebViewArchiveHandler(scheme);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWebViewArchiveHandler);

    return 1;
}




void wxLua_wxWebViewArchiveHandler_delete_function(void** p)
{
    wxWebViewArchiveHandler* o = (wxWebViewArchiveHandler*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxWebViewArchiveHandler_methods[] = {
#if ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)
    { "GetFile", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxWebViewArchiveHandler_GetFile, 1, NULL },
#endif // ((wxUSE_STREAMS) && (wxUSE_FILESYSTEM)) && (wxUSE_WEBVIEW)

    { "wxWebViewArchiveHandler", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxWebViewArchiveHandler_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxWebViewArchiveHandler_methodCount = sizeof(wxWebViewArchiveHandler_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_WEBVIEW



// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxwebview_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


// ---------------------------------------------------------------------------
// wxLuaGetEventList_wxwebview() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_wxwebview(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {
#if wxUSE_WEBVIEW
        { "wxEVT_WEBVIEW_ERROR", WXLUA_GET_wxEventType_ptr(wxEVT_WEBVIEW_ERROR), &wxluatype_wxWebViewEvent },
        { "wxEVT_WEBVIEW_LOADED", WXLUA_GET_wxEventType_ptr(wxEVT_WEBVIEW_LOADED), &wxluatype_wxWebViewEvent },
        { "wxEVT_WEBVIEW_NAVIGATED", WXLUA_GET_wxEventType_ptr(wxEVT_WEBVIEW_NAVIGATED), &wxluatype_wxWebViewEvent },
        { "wxEVT_WEBVIEW_NAVIGATING", WXLUA_GET_wxEventType_ptr(wxEVT_WEBVIEW_NAVIGATING), &wxluatype_wxWebViewEvent },
        { "wxEVT_WEBVIEW_NEWWINDOW", WXLUA_GET_wxEventType_ptr(wxEVT_WEBVIEW_NEWWINDOW), &wxluatype_wxWebViewEvent },
        { "wxEVT_WEBVIEW_TITLE_CHANGED", WXLUA_GET_wxEventType_ptr(wxEVT_WEBVIEW_TITLE_CHANGED), &wxluatype_wxWebViewEvent },
#endif // wxUSE_WEBVIEW


        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_wxwebview() is called to register #define and enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_wxwebview(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {
#if wxUSE_WEBVIEW
        { "wxWEBVIEW_FIND_BACKWARDS", wxWEBVIEW_FIND_BACKWARDS },
        { "wxWEBVIEW_FIND_DEFAULT", wxWEBVIEW_FIND_DEFAULT },
        { "wxWEBVIEW_FIND_ENTIRE_WORD", wxWEBVIEW_FIND_ENTIRE_WORD },
        { "wxWEBVIEW_FIND_HIGHLIGHT_RESULT", wxWEBVIEW_FIND_HIGHLIGHT_RESULT },
        { "wxWEBVIEW_FIND_MATCH_CASE", wxWEBVIEW_FIND_MATCH_CASE },
        { "wxWEBVIEW_FIND_WRAP", wxWEBVIEW_FIND_WRAP },
        { "wxWEBVIEW_NAV_ERR_AUTH", wxWEBVIEW_NAV_ERR_AUTH },
        { "wxWEBVIEW_NAV_ERR_CERTIFICATE", wxWEBVIEW_NAV_ERR_CERTIFICATE },
        { "wxWEBVIEW_NAV_ERR_CONNECTION", wxWEBVIEW_NAV_ERR_CONNECTION },
        { "wxWEBVIEW_NAV_ERR_NOT_FOUND", wxWEBVIEW_NAV_ERR_NOT_FOUND },
        { "wxWEBVIEW_NAV_ERR_OTHER", wxWEBVIEW_NAV_ERR_OTHER },
        { "wxWEBVIEW_NAV_ERR_REQUEST", wxWEBVIEW_NAV_ERR_REQUEST },
        { "wxWEBVIEW_NAV_ERR_SECURITY", wxWEBVIEW_NAV_ERR_SECURITY },
        { "wxWEBVIEW_NAV_ERR_USER_CANCELLED", wxWEBVIEW_NAV_ERR_USER_CANCELLED },
        { "wxWEBVIEW_RELOAD_DEFAULT", wxWEBVIEW_RELOAD_DEFAULT },
        { "wxWEBVIEW_RELOAD_NO_CACHE", wxWEBVIEW_RELOAD_NO_CACHE },
        { "wxWEBVIEW_ZOOM_LARGE", wxWEBVIEW_ZOOM_LARGE },
        { "wxWEBVIEW_ZOOM_LARGEST", wxWEBVIEW_ZOOM_LARGEST },
        { "wxWEBVIEW_ZOOM_MEDIUM", wxWEBVIEW_ZOOM_MEDIUM },
        { "wxWEBVIEW_ZOOM_SMALL", wxWEBVIEW_ZOOM_SMALL },
        { "wxWEBVIEW_ZOOM_TINY", wxWEBVIEW_ZOOM_TINY },
        { "wxWEBVIEW_ZOOM_TYPE_LAYOUT", wxWEBVIEW_ZOOM_TYPE_LAYOUT },
        { "wxWEBVIEW_ZOOM_TYPE_TEXT", wxWEBVIEW_ZOOM_TYPE_TEXT },
#endif // wxUSE_WEBVIEW


        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_wxwebview() is called to register #define_string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_wxwebview(size_t &count)
{
    static wxLuaBindString stringList[] =
    {
#if wxUSE_WEBVIEW
        { "wxWebViewBackendDefault", wxWebViewBackendDefault, NULL },
        { "wxWebViewBackendIE", wxWebViewBackendIE, NULL },
        { "wxWebViewBackendWebKit", wxWebViewBackendWebKit, NULL },
        { "wxWebViewDefaultURLStr", wxWebViewDefaultURLStr, NULL },
        { "wxWebViewNameStr", wxWebViewNameStr, NULL },
#endif // wxUSE_WEBVIEW


        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_wxwebview() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_wxwebview(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {

        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxwebview() is called to register global functions
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxwebview() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_wxwebview(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {

        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_wxwebview() is called to register classes
// ---------------------------------------------------------------------------

static const char* wxluaclassname_wxControl = "wxControl";
static const char* wxluaclassname_wxNotifyEvent = "wxNotifyEvent";
static const char* wxluaclassname_wxObject = "wxObject";
static const char* wxluaclassname_wxWebView = "wxWebView";
static const char* wxluaclassname_wxWebViewArchiveHandler = "wxWebViewArchiveHandler";
static const char* wxluaclassname_wxWebViewEvent = "wxWebViewEvent";
static const char* wxluaclassname_wxWebViewFSHandler = "wxWebViewFSHandler";
static const char* wxluaclassname_wxWebViewFactory = "wxWebViewFactory";
static const char* wxluaclassname_wxWebViewHandler = "wxWebViewHandler";
static const char* wxluaclassname_wxWebViewHistoryItem = "wxWebViewHistoryItem";

static const char* wxluabaseclassnames_wxWebView[] = { wxluaclassname_wxControl, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWebView[] = { NULL };
static const char* wxluabaseclassnames_wxWebViewArchiveHandler[] = { wxluaclassname_wxWebViewHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWebViewArchiveHandler[] = { NULL };
static const char* wxluabaseclassnames_wxWebViewEvent[] = { wxluaclassname_wxNotifyEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWebViewEvent[] = { NULL };
static const char* wxluabaseclassnames_wxWebViewFSHandler[] = { wxluaclassname_wxWebViewHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWebViewFSHandler[] = { NULL };
static const char* wxluabaseclassnames_wxWebViewFactory[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxWebViewFactory[] = { NULL };
// ---------------------------------------------------------------------------
// Lua Tag Method Values and Tables for each Class
// ---------------------------------------------------------------------------

#if wxUSE_WEBVIEW
    extern wxLuaBindMethod wxWebView_methods[];
    extern int wxWebView_methodCount;
    extern void wxLua_wxWebView_delete_function(void** p);
    extern wxLuaBindMethod wxWebViewArchiveHandler_methods[];
    extern int wxWebViewArchiveHandler_methodCount;
    extern void wxLua_wxWebViewArchiveHandler_delete_function(void** p);
    extern wxLuaBindMethod wxWebViewEvent_methods[];
    extern int wxWebViewEvent_methodCount;
    extern void wxLua_wxWebViewEvent_delete_function(void** p);
    extern wxLuaBindMethod wxWebViewFSHandler_methods[];
    extern int wxWebViewFSHandler_methodCount;
    extern void wxLua_wxWebViewFSHandler_delete_function(void** p);
    extern wxLuaBindMethod wxWebViewFactory_methods[];
    extern int wxWebViewFactory_methodCount;
    extern void wxLua_wxWebViewFactory_delete_function(void** p);
    extern wxLuaBindMethod wxWebViewHandler_methods[];
    extern int wxWebViewHandler_methodCount;
    extern void wxLua_wxWebViewHandler_delete_function(void** p);
    extern wxLuaBindMethod wxWebViewHistoryItem_methods[];
    extern int wxWebViewHistoryItem_methodCount;
    extern void wxLua_wxWebViewHistoryItem_delete_function(void** p);
#endif // wxUSE_WEBVIEW




wxLuaBindClass* wxLuaGetClassList_wxwebview(size_t &count)
{
    static wxLuaBindClass classList[] =
    {
#if wxUSE_WEBVIEW
        { wxluaclassname_wxWebView, wxWebView_methods, wxWebView_methodCount, CLASSINFO(wxWebView), &wxluatype_wxWebView, wxluabaseclassnames_wxWebView, wxluabaseclassbinds_wxWebView, NULL, NULL, NULL, 0, &wxLua_wxWebView_delete_function, }, 
        { wxluaclassname_wxWebViewArchiveHandler, wxWebViewArchiveHandler_methods, wxWebViewArchiveHandler_methodCount, NULL, &wxluatype_wxWebViewArchiveHandler, wxluabaseclassnames_wxWebViewArchiveHandler, wxluabaseclassbinds_wxWebViewArchiveHandler, NULL, NULL, NULL, 0, &wxLua_wxWebViewArchiveHandler_delete_function, }, 
        { wxluaclassname_wxWebViewEvent, wxWebViewEvent_methods, wxWebViewEvent_methodCount, CLASSINFO(wxWebViewEvent), &wxluatype_wxWebViewEvent, wxluabaseclassnames_wxWebViewEvent, wxluabaseclassbinds_wxWebViewEvent, NULL, NULL, NULL, 0, &wxLua_wxWebViewEvent_delete_function, }, 
        { wxluaclassname_wxWebViewFSHandler, wxWebViewFSHandler_methods, wxWebViewFSHandler_methodCount, NULL, &wxluatype_wxWebViewFSHandler, wxluabaseclassnames_wxWebViewFSHandler, wxluabaseclassbinds_wxWebViewFSHandler, NULL, NULL, NULL, 0, &wxLua_wxWebViewFSHandler_delete_function, }, 
        { wxluaclassname_wxWebViewFactory, wxWebViewFactory_methods, wxWebViewFactory_methodCount, CLASSINFO(wxWebViewFactory), &wxluatype_wxWebViewFactory, wxluabaseclassnames_wxWebViewFactory, wxluabaseclassbinds_wxWebViewFactory, NULL, NULL, NULL, 0, &wxLua_wxWebViewFactory_delete_function, }, 
        { wxluaclassname_wxWebViewHandler, wxWebViewHandler_methods, wxWebViewHandler_methodCount, NULL, &wxluatype_wxWebViewHandler, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxWebViewHandler_delete_function, }, 
        { wxluaclassname_wxWebViewHistoryItem, wxWebViewHistoryItem_methods, wxWebViewHistoryItem_methodCount, NULL, &wxluatype_wxWebViewHistoryItem, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxWebViewHistoryItem_delete_function, }, 
#endif // wxUSE_WEBVIEW


        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_wxwebview() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_wxwebview, wxLuaBinding)

wxLuaBinding_wxwebview::wxLuaBinding_wxwebview() : wxLuaBinding()
{
    m_bindingName   = wxT("wxwebview");
    m_nameSpace     = wxT("wxwebview");
    m_classArray    = wxLuaGetClassList_wxwebview(m_classCount);
    m_numberArray   = wxLuaGetDefineList_wxwebview(m_numberCount);
    m_stringArray   = wxLuaGetStringList_wxwebview(m_stringCount);
    m_eventArray    = wxLuaGetEventList_wxwebview(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_wxwebview(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_wxwebview(m_functionCount);
    InitBinding();
}



// ---------------------------------------------------------------------------

wxLuaBinding* wxLuaBinding_wxwebview_init()
{
    static wxLuaBinding_wxwebview m_binding;

    if (wxLuaBinding::GetBindingArray().Index(&m_binding) == wxNOT_FOUND)
        wxLuaBinding::GetBindingArray().Add(&m_binding);

    return &m_binding;
}


