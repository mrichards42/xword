// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxcore_appframe.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#include "wx/wxprec.h"

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif


#include "wxlua/include/wxlstate.h"
#include "wxbind/include/wxcore_bind.h"
#ifdef Above
    #undef Above
#endif
#ifdef Below
    #undef Below
#endif



#if wxLUA_USE_wxApp
// ---------------------------------------------------------------------------
// Bind class wxApp
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxApp'
int wxluatype_wxApp = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_Dispatch[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_Dispatch(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_Dispatch[1] = {{ wxLua_wxApp_Dispatch, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_Dispatch }};
//     void Dispatch()
static int LUACALL wxLua_wxApp_Dispatch(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call Dispatch
    self->Dispatch();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_ExitMainLoop[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_ExitMainLoop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_ExitMainLoop[1] = {{ wxLua_wxApp_ExitMainLoop, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_ExitMainLoop }};
//     void ExitMainLoop()
static int LUACALL wxLua_wxApp_ExitMainLoop(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call ExitMainLoop
    self->ExitMainLoop();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_GetAppName[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_GetAppName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_GetAppName[1] = {{ wxLua_wxApp_GetAppName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_GetAppName }};
//     wxString GetAppName() const
static int LUACALL wxLua_wxApp_GetAppName(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call GetAppName
    wxString returns = (self->GetAppName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_GetClassName[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_GetClassName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_GetClassName[1] = {{ wxLua_wxApp_GetClassName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_GetClassName }};
//     wxString GetClassName() const
static int LUACALL wxLua_wxApp_GetClassName(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call GetClassName
    wxString returns = (self->GetClassName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_GetExitOnFrameDelete[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_GetExitOnFrameDelete(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_GetExitOnFrameDelete[1] = {{ wxLua_wxApp_GetExitOnFrameDelete, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_GetExitOnFrameDelete }};
//     bool GetExitOnFrameDelete() const
static int LUACALL wxLua_wxApp_GetExitOnFrameDelete(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call GetExitOnFrameDelete
    bool returns = (self->GetExitOnFrameDelete());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_GetTopWindow[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_GetTopWindow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_GetTopWindow[1] = {{ wxLua_wxApp_GetTopWindow, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_GetTopWindow }};
//     wxWindow* GetTopWindow() const
static int LUACALL wxLua_wxApp_GetTopWindow(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call GetTopWindow
    wxWindow* returns = (wxWindow*)self->GetTopWindow();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_GetUseBestVisual[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_GetUseBestVisual(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_GetUseBestVisual[1] = {{ wxLua_wxApp_GetUseBestVisual, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_GetUseBestVisual }};
//     bool GetUseBestVisual() const
static int LUACALL wxLua_wxApp_GetUseBestVisual(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call GetUseBestVisual
    bool returns = (self->GetUseBestVisual());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_GetVendorName[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_GetVendorName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_GetVendorName[1] = {{ wxLua_wxApp_GetVendorName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_GetVendorName }};
//     wxString GetVendorName() const
static int LUACALL wxLua_wxApp_GetVendorName(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call GetVendorName
    wxString returns = (self->GetVendorName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_IsActive[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_IsActive(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_IsActive[1] = {{ wxLua_wxApp_IsActive, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_IsActive }};
//     bool IsActive() const
static int LUACALL wxLua_wxApp_IsActive(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call IsActive
    bool returns = (self->IsActive());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static int LUACALL wxLua_wxApp_IsMainLoopRunning(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_IsMainLoopRunning[1] = {{ wxLua_wxApp_IsMainLoopRunning, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None }};
//     static bool IsMainLoopRunning()
static int LUACALL wxLua_wxApp_IsMainLoopRunning(lua_State *L)
{
    // call IsMainLoopRunning
    bool returns = (wxApp::IsMainLoopRunning());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_MainLoop[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_MainLoop(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_MainLoop[1] = {{ wxLua_wxApp_MainLoop, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_MainLoop }};
// %override wxLua_wxApp_MainLoop
//     int MainLoop()
static int LUACALL wxLua_wxApp_MainLoop(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    int returns = 0;

    if (!wxLuaState::sm_wxAppMainLoop_will_run && !wxApp::IsMainLoopRunning())
        returns = self->MainLoop();

    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_Pending[] = { &wxluatype_wxApp, NULL };
static int LUACALL wxLua_wxApp_Pending(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_Pending[1] = {{ wxLua_wxApp_Pending, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxApp_Pending }};
//     bool Pending()
static int LUACALL wxLua_wxApp_Pending(lua_State *L)
{
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call Pending
    bool returns = (self->Pending());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxApp)
static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_SendIdleEvents[] = { &wxluatype_wxApp, &wxluatype_wxWindow, &wxluatype_wxIdleEvent, NULL };
static int LUACALL wxLua_wxApp_SendIdleEvents(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_SendIdleEvents[1] = {{ wxLua_wxApp_SendIdleEvents, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxApp_SendIdleEvents }};
//     %wxchkver_2_6 bool SendIdleEvents(wxWindow* win, wxIdleEvent& event)
static int LUACALL wxLua_wxApp_SendIdleEvents(lua_State *L)
{
    // wxIdleEvent event
    wxIdleEvent * event = (wxIdleEvent *)wxluaT_getuserdatatype(L, 3, wxluatype_wxIdleEvent);
    // wxWindow win
    wxWindow * win = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call SendIdleEvents
    bool returns = (self->SendIdleEvents(win, *event));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxApp)

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_SetAppName[] = { &wxluatype_wxApp, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxApp_SetAppName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_SetAppName[1] = {{ wxLua_wxApp_SetAppName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxApp_SetAppName }};
//     void SetAppName(const wxString& name)
static int LUACALL wxLua_wxApp_SetAppName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call SetAppName
    self->SetAppName(name);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_SetClassName[] = { &wxluatype_wxApp, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxApp_SetClassName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_SetClassName[1] = {{ wxLua_wxApp_SetClassName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxApp_SetClassName }};
//     void SetClassName(const wxString& name)
static int LUACALL wxLua_wxApp_SetClassName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call SetClassName
    self->SetClassName(name);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_SetExitOnFrameDelete[] = { &wxluatype_wxApp, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxApp_SetExitOnFrameDelete(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_SetExitOnFrameDelete[1] = {{ wxLua_wxApp_SetExitOnFrameDelete, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxApp_SetExitOnFrameDelete }};
//     void SetExitOnFrameDelete(bool flag)
static int LUACALL wxLua_wxApp_SetExitOnFrameDelete(lua_State *L)
{
    // bool flag
    bool flag = wxlua_getbooleantype(L, 2);
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call SetExitOnFrameDelete
    self->SetExitOnFrameDelete(flag);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_SetTopWindow[] = { &wxluatype_wxApp, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxApp_SetTopWindow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_SetTopWindow[1] = {{ wxLua_wxApp_SetTopWindow, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxApp_SetTopWindow }};
//     void SetTopWindow(wxWindow* window)
static int LUACALL wxLua_wxApp_SetTopWindow(lua_State *L)
{
    // wxWindow window
    wxWindow * window = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call SetTopWindow
    self->SetTopWindow(window);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_SetUseBestVisual[] = { &wxluatype_wxApp, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxApp_SetUseBestVisual(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_SetUseBestVisual[1] = {{ wxLua_wxApp_SetUseBestVisual, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxApp_SetUseBestVisual }};
//     void SetUseBestVisual(bool flag)
static int LUACALL wxLua_wxApp_SetUseBestVisual(lua_State *L)
{
    // bool flag
    bool flag = wxlua_getbooleantype(L, 2);
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call SetUseBestVisual
    self->SetUseBestVisual(flag);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxApp_SetVendorName[] = { &wxluatype_wxApp, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxApp_SetVendorName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxApp_SetVendorName[1] = {{ wxLua_wxApp_SetVendorName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxApp_SetVendorName }};
//     void SetVendorName(const wxString& name)
static int LUACALL wxLua_wxApp_SetVendorName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxApp * self = (wxApp *)wxluaT_getuserdatatype(L, 1, wxluatype_wxApp);
    // call SetVendorName
    self->SetVendorName(name);

    return 0;
}




// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxApp_methods[] = {
    { "Dispatch", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_Dispatch, 1, NULL },
    { "ExitMainLoop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_ExitMainLoop, 1, NULL },
    { "GetAppName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_GetAppName, 1, NULL },
    { "GetClassName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_GetClassName, 1, NULL },
    { "GetExitOnFrameDelete", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_GetExitOnFrameDelete, 1, NULL },
    { "GetTopWindow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_GetTopWindow, 1, NULL },
    { "GetUseBestVisual", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_GetUseBestVisual, 1, NULL },
    { "GetVendorName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_GetVendorName, 1, NULL },
    { "IsActive", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_IsActive, 1, NULL },
    { "IsMainLoopRunning", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxApp_IsMainLoopRunning, 1, NULL },
    { "MainLoop", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_MainLoop, 1, NULL },
    { "Pending", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_Pending, 1, NULL },

#if (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxApp)
    { "SendIdleEvents", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_SendIdleEvents, 1, NULL },
#endif // (wxCHECK_VERSION(2,6,0)) && (wxLUA_USE_wxApp)

    { "SetAppName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_SetAppName, 1, NULL },
    { "SetClassName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_SetClassName, 1, NULL },
    { "SetExitOnFrameDelete", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_SetExitOnFrameDelete, 1, NULL },
    { "SetTopWindow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_SetTopWindow, 1, NULL },
    { "SetUseBestVisual", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_SetUseBestVisual, 1, NULL },
    { "SetVendorName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxApp_SetVendorName, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxApp_methodCount = sizeof(wxApp_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxApp


#if wxLUA_USE_wxFrame || wxLUA_USE_wxDialog
// ---------------------------------------------------------------------------
// Bind class wxTopLevelWindow
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxTopLevelWindow'
int wxluatype_wxTopLevelWindow = WXLUA_TUNKNOWN;

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_GetDefaultItem[] = { &wxluatype_wxTopLevelWindow, NULL };
static int LUACALL wxLua_wxTopLevelWindow_GetDefaultItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_GetDefaultItem[1] = {{ wxLua_wxTopLevelWindow_GetDefaultItem, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxTopLevelWindow_GetDefaultItem }};
//     %wxchkver_2_8 wxWindow* GetDefaultItem() const
static int LUACALL wxLua_wxTopLevelWindow_GetDefaultItem(lua_State *L)
{
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call GetDefaultItem
    wxWindow* returns = (wxWindow*)self->GetDefaultItem();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

#if (wxLUA_USE_wxIcon) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_GetIcon[] = { &wxluatype_wxTopLevelWindow, NULL };
static int LUACALL wxLua_wxTopLevelWindow_GetIcon(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_GetIcon[1] = {{ wxLua_wxTopLevelWindow_GetIcon, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxTopLevelWindow_GetIcon }};
//     wxIcon GetIcon() const
static int LUACALL wxLua_wxTopLevelWindow_GetIcon(lua_State *L)
{
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call GetIcon
    // allocate a new object using the copy constructor
    wxIcon* returns = new wxIcon(self->GetIcon());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (wxIcon*)returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxIcon);

    return 1;
}

#endif // (wxLUA_USE_wxIcon) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_GetTitle[] = { &wxluatype_wxTopLevelWindow, NULL };
static int LUACALL wxLua_wxTopLevelWindow_GetTitle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_GetTitle[1] = {{ wxLua_wxTopLevelWindow_GetTitle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxTopLevelWindow_GetTitle }};
//     wxString GetTitle() const
static int LUACALL wxLua_wxTopLevelWindow_GetTitle(lua_State *L)
{
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call GetTitle
    wxString returns = (self->GetTitle());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_GetTmpDefaultItem[] = { &wxluatype_wxTopLevelWindow, NULL };
static int LUACALL wxLua_wxTopLevelWindow_GetTmpDefaultItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_GetTmpDefaultItem[1] = {{ wxLua_wxTopLevelWindow_GetTmpDefaultItem, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxTopLevelWindow_GetTmpDefaultItem }};
//     %wxchkver_2_8 wxWindow* GetTmpDefaultItem() const
static int LUACALL wxLua_wxTopLevelWindow_GetTmpDefaultItem(lua_State *L)
{
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call GetTmpDefaultItem
    wxWindow* returns = (wxWindow*)self->GetTmpDefaultItem();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_Iconize[] = { &wxluatype_wxTopLevelWindow, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxTopLevelWindow_Iconize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_Iconize[1] = {{ wxLua_wxTopLevelWindow_Iconize, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxTopLevelWindow_Iconize }};
//     void Iconize(bool iconize)
static int LUACALL wxLua_wxTopLevelWindow_Iconize(lua_State *L)
{
    // bool iconize
    bool iconize = wxlua_getbooleantype(L, 2);
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call Iconize
    self->Iconize(iconize);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_IsActive[] = { &wxluatype_wxTopLevelWindow, NULL };
static int LUACALL wxLua_wxTopLevelWindow_IsActive(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_IsActive[1] = {{ wxLua_wxTopLevelWindow_IsActive, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxTopLevelWindow_IsActive }};
//     bool IsActive() const
static int LUACALL wxLua_wxTopLevelWindow_IsActive(lua_State *L)
{
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call IsActive
    bool returns = (self->IsActive());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_IsFullScreen[] = { &wxluatype_wxTopLevelWindow, NULL };
static int LUACALL wxLua_wxTopLevelWindow_IsFullScreen(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_IsFullScreen[1] = {{ wxLua_wxTopLevelWindow_IsFullScreen, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxTopLevelWindow_IsFullScreen }};
//     bool IsFullScreen() const
static int LUACALL wxLua_wxTopLevelWindow_IsFullScreen(lua_State *L)
{
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call IsFullScreen
    bool returns = (self->IsFullScreen());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_IsIconized[] = { &wxluatype_wxTopLevelWindow, NULL };
static int LUACALL wxLua_wxTopLevelWindow_IsIconized(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_IsIconized[1] = {{ wxLua_wxTopLevelWindow_IsIconized, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxTopLevelWindow_IsIconized }};
//     bool IsIconized() const
static int LUACALL wxLua_wxTopLevelWindow_IsIconized(lua_State *L)
{
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call IsIconized
    bool returns = (self->IsIconized());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_IsMaximized[] = { &wxluatype_wxTopLevelWindow, NULL };
static int LUACALL wxLua_wxTopLevelWindow_IsMaximized(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_IsMaximized[1] = {{ wxLua_wxTopLevelWindow_IsMaximized, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxTopLevelWindow_IsMaximized }};
//     bool IsMaximized() const
static int LUACALL wxLua_wxTopLevelWindow_IsMaximized(lua_State *L)
{
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call IsMaximized
    bool returns = (self->IsMaximized());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_Maximize[] = { &wxluatype_wxTopLevelWindow, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxTopLevelWindow_Maximize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_Maximize[1] = {{ wxLua_wxTopLevelWindow_Maximize, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxTopLevelWindow_Maximize }};
//     void Maximize(bool maximize)
static int LUACALL wxLua_wxTopLevelWindow_Maximize(lua_State *L)
{
    // bool maximize
    bool maximize = wxlua_getbooleantype(L, 2);
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call Maximize
    self->Maximize(maximize);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_RequestUserAttention[] = { &wxluatype_wxTopLevelWindow, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxTopLevelWindow_RequestUserAttention(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_RequestUserAttention[1] = {{ wxLua_wxTopLevelWindow_RequestUserAttention, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxTopLevelWindow_RequestUserAttention }};
//     void RequestUserAttention(int flags = wxUSER_ATTENTION_INFO)
static int LUACALL wxLua_wxTopLevelWindow_RequestUserAttention(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxUSER_ATTENTION_INFO
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxUSER_ATTENTION_INFO);
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call RequestUserAttention
    self->RequestUserAttention(flags);

    return 0;
}


#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_SetDefaultItem[] = { &wxluatype_wxTopLevelWindow, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxTopLevelWindow_SetDefaultItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_SetDefaultItem[1] = {{ wxLua_wxTopLevelWindow_SetDefaultItem, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxTopLevelWindow_SetDefaultItem }};
//     %wxchkver_2_8 wxWindow* SetDefaultItem(wxWindow *win)
static int LUACALL wxLua_wxTopLevelWindow_SetDefaultItem(lua_State *L)
{
    // wxWindow win
    wxWindow * win = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call SetDefaultItem
    wxWindow* returns = (wxWindow*)self->SetDefaultItem(win);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

#if (wxLUA_USE_wxIcon) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_SetIcon[] = { &wxluatype_wxTopLevelWindow, &wxluatype_wxIcon, NULL };
static int LUACALL wxLua_wxTopLevelWindow_SetIcon(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_SetIcon[1] = {{ wxLua_wxTopLevelWindow_SetIcon, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxTopLevelWindow_SetIcon }};
//     void SetIcon(const wxIcon& icon)
static int LUACALL wxLua_wxTopLevelWindow_SetIcon(lua_State *L)
{
    // const wxIcon icon
    const wxIcon * icon = (const wxIcon *)wxluaT_getuserdatatype(L, 2, wxluatype_wxIcon);
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call SetIcon
    self->SetIcon(*icon);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_SetIcons[] = { &wxluatype_wxTopLevelWindow, &wxluatype_wxIconBundle, NULL };
static int LUACALL wxLua_wxTopLevelWindow_SetIcons(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_SetIcons[1] = {{ wxLua_wxTopLevelWindow_SetIcons, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxTopLevelWindow_SetIcons }};
//     void SetIcons(const wxIconBundle& icons)
static int LUACALL wxLua_wxTopLevelWindow_SetIcons(lua_State *L)
{
    // const wxIconBundle icons
    const wxIconBundle * icons = (const wxIconBundle *)wxluaT_getuserdatatype(L, 2, wxluatype_wxIconBundle);
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call SetIcons
    self->SetIcons(*icons);

    return 0;
}

#endif // (wxLUA_USE_wxIcon) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

#if (wxLUA_USE_wxRegion) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_SetShape[] = { &wxluatype_wxTopLevelWindow, &wxluatype_wxRegion, NULL };
static int LUACALL wxLua_wxTopLevelWindow_SetShape(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_SetShape[1] = {{ wxLua_wxTopLevelWindow_SetShape, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxTopLevelWindow_SetShape }};
//     bool SetShape(const wxRegion& region)
static int LUACALL wxLua_wxTopLevelWindow_SetShape(lua_State *L)
{
    // const wxRegion region
    const wxRegion * region = (const wxRegion *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRegion);
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call SetShape
    bool returns = (self->SetShape(*region));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxRegion) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_SetTitle[] = { &wxluatype_wxTopLevelWindow, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxTopLevelWindow_SetTitle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_SetTitle[1] = {{ wxLua_wxTopLevelWindow_SetTitle, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxTopLevelWindow_SetTitle }};
//     virtual void SetTitle(const wxString& title)
static int LUACALL wxLua_wxTopLevelWindow_SetTitle(lua_State *L)
{
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 2);
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call SetTitle
    self->SetTitle(title);

    return 0;
}


#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_SetTmpDefaultItem[] = { &wxluatype_wxTopLevelWindow, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxTopLevelWindow_SetTmpDefaultItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_SetTmpDefaultItem[1] = {{ wxLua_wxTopLevelWindow_SetTmpDefaultItem, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxTopLevelWindow_SetTmpDefaultItem }};
//     %wxchkver_2_8 wxWindow* SetTmpDefaultItem(wxWindow *win)
static int LUACALL wxLua_wxTopLevelWindow_SetTmpDefaultItem(lua_State *L)
{
    // wxWindow win
    wxWindow * win = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call SetTmpDefaultItem
    wxWindow* returns = (wxWindow*)self->SetTmpDefaultItem(win);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

#if (defined(__WXMSW__)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
static wxLuaArgType s_wxluatypeArray_wxLua_wxTopLevelWindow_ShowFullScreen[] = { &wxluatype_wxTopLevelWindow, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxTopLevelWindow_ShowFullScreen(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxTopLevelWindow_ShowFullScreen[1] = {{ wxLua_wxTopLevelWindow_ShowFullScreen, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxTopLevelWindow_ShowFullScreen }};
//     %win bool ShowFullScreen(bool show, long style = wxFULLSCREEN_ALL)
static int LUACALL wxLua_wxTopLevelWindow_ShowFullScreen(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long style = wxFULLSCREEN_ALL
    long style = (argCount >= 3 ? (long)wxlua_getnumbertype(L, 3) : wxFULLSCREEN_ALL);
    // bool show
    bool show = wxlua_getbooleantype(L, 2);
    // get this
    wxTopLevelWindow * self = (wxTopLevelWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxTopLevelWindow);
    // call ShowFullScreen
    bool returns = (self->ShowFullScreen(show, style));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (defined(__WXMSW__)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)



// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxTopLevelWindow_methods[] = {
#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
    { "GetDefaultItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_GetDefaultItem, 1, NULL },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

#if (wxLUA_USE_wxIcon) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
    { "GetIcon", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_GetIcon, 1, NULL },
#endif // (wxLUA_USE_wxIcon) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

    { "GetTitle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_GetTitle, 1, NULL },

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
    { "GetTmpDefaultItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_GetTmpDefaultItem, 1, NULL },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

    { "Iconize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_Iconize, 1, NULL },
    { "IsActive", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_IsActive, 1, NULL },
    { "IsFullScreen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_IsFullScreen, 1, NULL },
    { "IsIconized", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_IsIconized, 1, NULL },
    { "IsMaximized", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_IsMaximized, 1, NULL },
    { "Maximize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_Maximize, 1, NULL },
    { "RequestUserAttention", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_RequestUserAttention, 1, NULL },

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
    { "SetDefaultItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_SetDefaultItem, 1, NULL },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

#if (wxLUA_USE_wxIcon) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
    { "SetIcon", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_SetIcon, 1, NULL },
    { "SetIcons", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_SetIcons, 1, NULL },
#endif // (wxLUA_USE_wxIcon) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

#if (wxLUA_USE_wxRegion) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
    { "SetShape", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_SetShape, 1, NULL },
#endif // (wxLUA_USE_wxRegion) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

    { "SetTitle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_SetTitle, 1, NULL },

#if (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
    { "SetTmpDefaultItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_SetTmpDefaultItem, 1, NULL },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

#if (defined(__WXMSW__)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)
    { "ShowFullScreen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxTopLevelWindow_ShowFullScreen, 1, NULL },
#endif // (defined(__WXMSW__)) && (wxLUA_USE_wxFrame || wxLUA_USE_wxDialog)

    { 0, 0, 0, 0 },
};

int wxTopLevelWindow_methodCount = sizeof(wxTopLevelWindow_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxFrame || wxLUA_USE_wxDialog


#if wxLUA_USE_wxFrame
// ---------------------------------------------------------------------------
// Bind class wxFrame
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxFrame'
int wxluatype_wxFrame = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_Create[] = { &wxluatype_wxFrame, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxFrame_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_Create[1] = {{ wxLua_wxFrame_Create, WXLUAMETHOD_METHOD, 4, 8, s_wxluatypeArray_wxLua_wxFrame_Create }};
//     bool Create(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxFrame")
static int LUACALL wxLua_wxFrame_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxFrame"
    const wxString name = (argCount >= 8 ? wxlua_getwxStringtype(L, 8) : wxString(wxT("wxFrame")));
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (argCount >= 7 ? (long)wxlua_getnumbertype(L, 7) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 6 ? (const wxSize *)wxluaT_getuserdatatype(L, 6, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 5 ? (const wxPoint *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 4);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 3);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call Create
    bool returns = (self->Create(parent, id, title, *pos, *size, style, name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_CreateStatusBar[] = { &wxluatype_wxFrame, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxFrame_CreateStatusBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_CreateStatusBar[1] = {{ wxLua_wxFrame_CreateStatusBar, WXLUAMETHOD_METHOD, 1, 5, s_wxluatypeArray_wxLua_wxFrame_CreateStatusBar }};
//     virtual wxStatusBar* CreateStatusBar(int number = 1, long style = 0, wxWindowID id = wxID_ANY, const wxString& name = "wxStatusBar")
static int LUACALL wxLua_wxFrame_CreateStatusBar(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxStatusBar"
    const wxString name = (argCount >= 5 ? wxlua_getwxStringtype(L, 5) : wxString(wxT("wxStatusBar")));
    // wxWindowID id = wxID_ANY
    wxWindowID id = (argCount >= 4 ? (wxWindowID)wxlua_getnumbertype(L, 4) : wxID_ANY);
    // long style = 0
    long style = (argCount >= 3 ? (long)wxlua_getnumbertype(L, 3) : 0);
    // int number = 1
    int number = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 1);
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call CreateStatusBar
    wxStatusBar* returns = (wxStatusBar*)self->CreateStatusBar(number, style, id, name);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxStatusBar);

    return 1;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_CreateToolBar[] = { &wxluatype_wxFrame, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxFrame_CreateToolBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_CreateToolBar[1] = {{ wxLua_wxFrame_CreateToolBar, WXLUAMETHOD_METHOD, 1, 4, s_wxluatypeArray_wxLua_wxFrame_CreateToolBar }};
//     virtual wxToolBar* CreateToolBar(long style = wxNO_BORDER|wxTB_HORIZONTAL, wxWindowID id = wxID_ANY, const wxString& name = "wxToolBar")
static int LUACALL wxLua_wxFrame_CreateToolBar(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxToolBar"
    const wxString name = (argCount >= 4 ? wxlua_getwxStringtype(L, 4) : wxString(wxT("wxToolBar")));
    // wxWindowID id = wxID_ANY
    wxWindowID id = (argCount >= 3 ? (wxWindowID)wxlua_getnumbertype(L, 3) : wxID_ANY);
    // long style = wxNO_BORDER | wxTB_HORIZONTAL
    long style = (argCount >= 2 ? (long)wxlua_getnumbertype(L, 2) : wxNO_BORDER | wxTB_HORIZONTAL);
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call CreateToolBar
    wxToolBar* returns = (wxToolBar*)self->CreateToolBar(style, id, name);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxToolBar);

    return 1;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_GetClientAreaOrigin[] = { &wxluatype_wxFrame, NULL };
static int LUACALL wxLua_wxFrame_GetClientAreaOrigin(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_GetClientAreaOrigin[1] = {{ wxLua_wxFrame_GetClientAreaOrigin, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFrame_GetClientAreaOrigin }};
//     wxPoint GetClientAreaOrigin() const
static int LUACALL wxLua_wxFrame_GetClientAreaOrigin(lua_State *L)
{
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call GetClientAreaOrigin
    // allocate a new object using the copy constructor
    wxPoint* returns = new wxPoint(self->GetClientAreaOrigin());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxPoint((wxPoint*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint);

    return 1;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_GetMenuBar[] = { &wxluatype_wxFrame, NULL };
static int LUACALL wxLua_wxFrame_GetMenuBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_GetMenuBar[1] = {{ wxLua_wxFrame_GetMenuBar, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFrame_GetMenuBar }};
//     wxMenuBar* GetMenuBar() const
static int LUACALL wxLua_wxFrame_GetMenuBar(lua_State *L)
{
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call GetMenuBar
    wxMenuBar* returns = (wxMenuBar*)self->GetMenuBar();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMenuBar);

    return 1;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_GetStatusBar[] = { &wxluatype_wxFrame, NULL };
static int LUACALL wxLua_wxFrame_GetStatusBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_GetStatusBar[1] = {{ wxLua_wxFrame_GetStatusBar, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFrame_GetStatusBar }};
//     wxStatusBar* GetStatusBar() const
static int LUACALL wxLua_wxFrame_GetStatusBar(lua_State *L)
{
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call GetStatusBar
    wxStatusBar* returns = (wxStatusBar*)self->GetStatusBar();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxStatusBar);

    return 1;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_GetStatusBarPane[] = { &wxluatype_wxFrame, NULL };
static int LUACALL wxLua_wxFrame_GetStatusBarPane(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_GetStatusBarPane[1] = {{ wxLua_wxFrame_GetStatusBarPane, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFrame_GetStatusBarPane }};
//     int GetStatusBarPane()
static int LUACALL wxLua_wxFrame_GetStatusBarPane(lua_State *L)
{
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call GetStatusBarPane
    int returns = (self->GetStatusBarPane());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}


#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_GetToolBar[] = { &wxluatype_wxFrame, NULL };
static int LUACALL wxLua_wxFrame_GetToolBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_GetToolBar[1] = {{ wxLua_wxFrame_GetToolBar, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFrame_GetToolBar }};
//     wxToolBar* GetToolBar() const
static int LUACALL wxLua_wxFrame_GetToolBar(lua_State *L)
{
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call GetToolBar
    wxToolBar* returns = (wxToolBar*)self->GetToolBar();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxToolBar);

    return 1;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)

#if (wxCHECK_VERSION(2,4,0)) && (wxLUA_USE_wxFrame)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_ProcessCommand[] = { &wxluatype_wxFrame, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFrame_ProcessCommand(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_ProcessCommand[1] = {{ wxLua_wxFrame_ProcessCommand, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFrame_ProcessCommand }};
//     %wxchkver_2_4 void ProcessCommand(int id)
static int LUACALL wxLua_wxFrame_ProcessCommand(lua_State *L)
{
    // int id
    int id = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call ProcessCommand
    self->ProcessCommand(id);

    return 0;
}

#endif // (wxCHECK_VERSION(2,4,0)) && (wxLUA_USE_wxFrame)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_SendSizeEvent[] = { &wxluatype_wxFrame, NULL };
static int LUACALL wxLua_wxFrame_SendSizeEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_SendSizeEvent[1] = {{ wxLua_wxFrame_SendSizeEvent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFrame_SendSizeEvent }};
//     void SendSizeEvent()
static int LUACALL wxLua_wxFrame_SendSizeEvent(lua_State *L)
{
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call SendSizeEvent
    self->SendSizeEvent();

    return 0;
}


#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_SetMenuBar[] = { &wxluatype_wxFrame, &wxluatype_wxMenuBar, NULL };
static int LUACALL wxLua_wxFrame_SetMenuBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_SetMenuBar[1] = {{ wxLua_wxFrame_SetMenuBar, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFrame_SetMenuBar }};
//     void SetMenuBar(wxMenuBar* menuBar)
static int LUACALL wxLua_wxFrame_SetMenuBar(lua_State *L)
{
    // wxMenuBar menuBar
    wxMenuBar * menuBar = (wxMenuBar *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMenuBar);
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call SetMenuBar
    self->SetMenuBar(menuBar);

    return 0;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_SetStatusBar[] = { &wxluatype_wxFrame, &wxluatype_wxStatusBar, NULL };
static int LUACALL wxLua_wxFrame_SetStatusBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_SetStatusBar[1] = {{ wxLua_wxFrame_SetStatusBar, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFrame_SetStatusBar }};
//     void SetStatusBar(wxStatusBar* statusBar)
static int LUACALL wxLua_wxFrame_SetStatusBar(lua_State *L)
{
    // wxStatusBar statusBar
    wxStatusBar * statusBar = (wxStatusBar *)wxluaT_getuserdatatype(L, 2, wxluatype_wxStatusBar);
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call SetStatusBar
    self->SetStatusBar(statusBar);

    return 0;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_SetStatusBarPane[] = { &wxluatype_wxFrame, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFrame_SetStatusBarPane(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_SetStatusBarPane[1] = {{ wxLua_wxFrame_SetStatusBarPane, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFrame_SetStatusBarPane }};
//     void SetStatusBarPane(int n)
static int LUACALL wxLua_wxFrame_SetStatusBarPane(lua_State *L)
{
    // int n
    int n = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call SetStatusBarPane
    self->SetStatusBarPane(n);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_SetStatusText[] = { &wxluatype_wxFrame, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFrame_SetStatusText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_SetStatusText[1] = {{ wxLua_wxFrame_SetStatusText, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxFrame_SetStatusText }};
//     virtual void SetStatusText(const wxString& text, int number = 0)
static int LUACALL wxLua_wxFrame_SetStatusText(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int number = 0
    int number = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call SetStatusText
    self->SetStatusText(text, number);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_SetStatusWidths[] = { &wxluatype_wxFrame, &wxluatype_TTABLE, NULL };
static int LUACALL wxLua_wxFrame_SetStatusWidths(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_SetStatusWidths[1] = {{ wxLua_wxFrame_SetStatusWidths, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFrame_SetStatusWidths }};
//     virtual void SetStatusWidths(IntArray_FromLuaTable intTable)
static int LUACALL wxLua_wxFrame_SetStatusWidths(lua_State *L)
{
    // IntArray_FromLuaTable intTable
    int count_ = 0; wxLuaSmartIntArray ptr; int* intTable = NULL; ptr = intTable = wxlua_getintarray(L, 2, count_);
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call SetStatusWidths
    self->SetStatusWidths(count_, intTable);

    return 0;
}


#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_SetToolBar[] = { &wxluatype_wxFrame, &wxluatype_wxToolBar, NULL };
static int LUACALL wxLua_wxFrame_SetToolBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_SetToolBar[1] = {{ wxLua_wxFrame_SetToolBar, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFrame_SetToolBar }};
//     void SetToolBar(wxToolBar* toolBar)
static int LUACALL wxLua_wxFrame_SetToolBar(lua_State *L)
{
    // wxToolBar toolBar
    wxToolBar * toolBar = (wxToolBar *)wxluaT_getuserdatatype(L, 2, wxluatype_wxToolBar);
    // get this
    wxFrame * self = (wxFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFrame);
    // call SetToolBar
    self->SetToolBar(toolBar);

    return 0;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFrame_constructor1[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxFrame_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_constructor1[1] = {{ wxLua_wxFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 7, s_wxluatypeArray_wxLua_wxFrame_constructor1 }};
//     wxFrame(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxFrame")
static int LUACALL wxLua_wxFrame_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxFrame"
    const wxString name = (argCount >= 7 ? wxlua_getwxStringtype(L, 7) : wxString(wxT("wxFrame")));
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 3);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 2);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxFrame* returns = new wxFrame(parent, id, title, *pos, *size, style, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFrame);

    return 1;
}

#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)

static int LUACALL wxLua_wxFrame_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_constructor[1] = {{ wxLua_wxFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxFrame()
static int LUACALL wxLua_wxFrame_constructor(lua_State *L)
{
    // call constructor
    wxFrame* returns = new wxFrame();
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFrame);

    return 1;
}




#if ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_wxFrame)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFrame_constructor_overload[] =
{

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 7, s_wxluatypeArray_wxLua_wxFrame_constructor1 },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxFrame_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxFrame_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_wxFrame)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxFrame_methods[] = {
#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_Create, 1, NULL },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
    { "CreateStatusBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_CreateStatusBar, 1, NULL },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)
    { "CreateToolBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_CreateToolBar, 1, NULL },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)
    { "GetClientAreaOrigin", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_GetClientAreaOrigin, 1, NULL },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { "GetMenuBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_GetMenuBar, 1, NULL },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
    { "GetStatusBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_GetStatusBar, 1, NULL },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

    { "GetStatusBarPane", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_GetStatusBarPane, 1, NULL },

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)
    { "GetToolBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_GetToolBar, 1, NULL },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)

#if (wxCHECK_VERSION(2,4,0)) && (wxLUA_USE_wxFrame)
    { "ProcessCommand", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_ProcessCommand, 1, NULL },
#endif // (wxCHECK_VERSION(2,4,0)) && (wxLUA_USE_wxFrame)

    { "SendSizeEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_SendSizeEvent, 1, NULL },

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMenu && wxUSE_MENUS)
    { "SetMenuBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_SetMenuBar, 1, NULL },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMenu && wxUSE_MENUS)

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
    { "SetStatusBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_SetStatusBar, 1, NULL },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

    { "SetStatusBarPane", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_SetStatusBarPane, 1, NULL },
    { "SetStatusText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_SetStatusText, 1, NULL },
    { "SetStatusWidths", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_SetStatusWidths, 1, NULL },

#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)
    { "SetToolBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFrame_SetToolBar, 1, NULL },
#endif // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxToolbar)

#if ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_wxFrame)
    { "wxFrame", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxFrame_constructor_overload, s_wxluafunc_wxLua_wxFrame_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxPointSizeRect))||(wxLUA_USE_wxFrame)

    { 0, 0, 0, 0 },
};

int wxFrame_methodCount = sizeof(wxFrame_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxFrame


#if (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)
// ---------------------------------------------------------------------------
// Bind class wxMiniFrame
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxMiniFrame'
int wxluatype_wxMiniFrame = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPointSizeRect) && ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame))
static wxLuaArgType s_wxluatypeArray_wxLua_wxMiniFrame_Create[] = { &wxluatype_wxMiniFrame, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxMiniFrame_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMiniFrame_Create[1] = {{ wxLua_wxMiniFrame_Create, WXLUAMETHOD_METHOD, 4, 8, s_wxluatypeArray_wxLua_wxMiniFrame_Create }};
//     bool Create(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxMiniFrame")
static int LUACALL wxLua_wxMiniFrame_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxMiniFrame"
    const wxString name = (argCount >= 8 ? wxlua_getwxStringtype(L, 8) : wxString(wxT("wxMiniFrame")));
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (argCount >= 7 ? (long)wxlua_getnumbertype(L, 7) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 6 ? (const wxSize *)wxluaT_getuserdatatype(L, 6, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 5 ? (const wxPoint *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 4);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 3);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxMiniFrame * self = (wxMiniFrame *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMiniFrame);
    // call Create
    bool returns = (self->Create(parent, id, title, *pos, *size, style, name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxMiniFrame_constructor1[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxMiniFrame_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxMiniFrame_constructor1[1] = {{ wxLua_wxMiniFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 7, s_wxluatypeArray_wxLua_wxMiniFrame_constructor1 }};
//     wxMiniFrame(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "wxMiniFrame")
static int LUACALL wxLua_wxMiniFrame_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxMiniFrame"
    const wxString name = (argCount >= 7 ? wxlua_getwxStringtype(L, 7) : wxString(wxT("wxMiniFrame")));
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : wxDEFAULT_FRAME_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 3);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 2);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxMiniFrame* returns = new wxMiniFrame(parent, id, title, *pos, *size, style, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMiniFrame);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame))

static int LUACALL wxLua_wxMiniFrame_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxMiniFrame_constructor[1] = {{ wxLua_wxMiniFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxMiniFrame()
static int LUACALL wxLua_wxMiniFrame_constructor(lua_State *L)
{
    // call constructor
    wxMiniFrame* returns = new wxMiniFrame();
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMiniFrame);

    return 1;
}




#if ((wxLUA_USE_wxPointSizeRect) && ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)))||((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMiniFrame_constructor_overload[] =
{

#if (wxLUA_USE_wxPointSizeRect) && ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame))
    { wxLua_wxMiniFrame_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 7, s_wxluatypeArray_wxLua_wxMiniFrame_constructor1 },
#endif // (wxLUA_USE_wxPointSizeRect) && ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame))
    { wxLua_wxMiniFrame_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxMiniFrame_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxMiniFrame_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPointSizeRect) && ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)))||((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame))

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxMiniFrame_methods[] = {
#if (wxLUA_USE_wxPointSizeRect) && ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame))
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMiniFrame_Create, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame))

#if ((wxLUA_USE_wxPointSizeRect) && ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)))||((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame))
    { "wxMiniFrame", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxMiniFrame_constructor_overload, s_wxluafunc_wxLua_wxMiniFrame_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_wxPointSizeRect) && ((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)))||((wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame))

    { 0, 0, 0, 0 },
};

int wxMiniFrame_methodCount = sizeof(wxMiniFrame_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxLUA_USE_wxFrame) && (wxLUA_USE_wxMiniFrame)


#if wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR
// ---------------------------------------------------------------------------
// Bind class wxStatusBar
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxStatusBar'
int wxluatype_wxStatusBar = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_Create[] = { &wxluatype_wxStatusBar, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStatusBar_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_Create[1] = {{ wxLua_wxStatusBar_Create, WXLUAMETHOD_METHOD, 3, 5, s_wxluatypeArray_wxLua_wxStatusBar_Create }};
//     bool Create(wxWindow *parent, wxWindowID id, long style = wxST_SIZEGRIP, const wxString& name = "wxStatusBar")
static int LUACALL wxLua_wxStatusBar_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxStatusBar"
    const wxString name = (argCount >= 5 ? wxlua_getwxStringtype(L, 5) : wxString(wxT("wxStatusBar")));
    // long style = wxST_SIZEGRIP
    long style = (argCount >= 4 ? (long)wxlua_getnumbertype(L, 4) : wxST_SIZEGRIP);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 3);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxStatusBar * self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call Create
    bool returns = (self->Create(parent, id, style, name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_GetFieldRect[] = { &wxluatype_wxStatusBar, &wxluatype_TNUMBER, &wxluatype_wxRect, NULL };
static int LUACALL wxLua_wxStatusBar_GetFieldRect(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_GetFieldRect[1] = {{ wxLua_wxStatusBar_GetFieldRect, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStatusBar_GetFieldRect }};
//     virtual bool GetFieldRect(int i, wxRect& rect) const
static int LUACALL wxLua_wxStatusBar_GetFieldRect(lua_State *L)
{
    // wxRect rect
    wxRect * rect = (wxRect *)wxluaT_getuserdatatype(L, 3, wxluatype_wxRect);
    // int i
    int i = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStatusBar * self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call GetFieldRect
    bool returns = (self->GetFieldRect(i, *rect));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_GetFieldsCount[] = { &wxluatype_wxStatusBar, NULL };
static int LUACALL wxLua_wxStatusBar_GetFieldsCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_GetFieldsCount[1] = {{ wxLua_wxStatusBar_GetFieldsCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStatusBar_GetFieldsCount }};
//     int GetFieldsCount() const
static int LUACALL wxLua_wxStatusBar_GetFieldsCount(lua_State *L)
{
    // get this
    wxStatusBar * self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call GetFieldsCount
    int returns = (self->GetFieldsCount());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_GetStatusText[] = { &wxluatype_wxStatusBar, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStatusBar_GetStatusText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_GetStatusText[1] = {{ wxLua_wxStatusBar_GetStatusText, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxStatusBar_GetStatusText }};
//     virtual wxString GetStatusText(int ir = 0) const
static int LUACALL wxLua_wxStatusBar_GetStatusText(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int ir = 0
    int ir = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxStatusBar * self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call GetStatusText
    wxString returns = (self->GetStatusText(ir));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_PopStatusText[] = { &wxluatype_wxStatusBar, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStatusBar_PopStatusText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_PopStatusText[1] = {{ wxLua_wxStatusBar_PopStatusText, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxStatusBar_PopStatusText }};
//     void PopStatusText(int field = 0)
static int LUACALL wxLua_wxStatusBar_PopStatusText(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int field = 0
    int field = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxStatusBar * self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call PopStatusText
    self->PopStatusText(field);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_PushStatusText[] = { &wxluatype_wxStatusBar, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStatusBar_PushStatusText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_PushStatusText[1] = {{ wxLua_wxStatusBar_PushStatusText, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxStatusBar_PushStatusText }};
//     void PushStatusText(const wxString& string, int field = 0)
static int LUACALL wxLua_wxStatusBar_PushStatusText(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int field = 0
    int field = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // const wxString string
    const wxString string = wxlua_getwxStringtype(L, 2);
    // get this
    wxStatusBar * self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call PushStatusText
    self->PushStatusText(string, field);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_SetFieldsCount[] = { &wxluatype_wxStatusBar, &wxluatype_TTABLE, NULL };
static int LUACALL wxLua_wxStatusBar_SetFieldsCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_SetFieldsCount[1] = {{ wxLua_wxStatusBar_SetFieldsCount, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStatusBar_SetFieldsCount }};
// %override wxLua_wxStatusBar_SetFieldsCount
// virtual void SetFieldsCount(int number = 1, int* widths = NULL)
static int LUACALL wxLua_wxStatusBar_SetFieldsCount(lua_State *L)
{
    int  count  = 0;
    int *widths = NULL;

    wxLuaSmartIntArray ptr;

    if (lua_istable(L, 2))
        ptr = widths = wxlua_getintarray(L, 2, count);
    else
        count = wxlua_getintegertype(L, 2);

    // get this
    wxStatusBar *self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call SetFieldsCount
    self->SetFieldsCount(count, widths);
    // return the number of parameters
    return 0;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_SetMinHeight[] = { &wxluatype_wxStatusBar, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStatusBar_SetMinHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_SetMinHeight[1] = {{ wxLua_wxStatusBar_SetMinHeight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStatusBar_SetMinHeight }};
//     void SetMinHeight(int height)
static int LUACALL wxLua_wxStatusBar_SetMinHeight(lua_State *L)
{
    // int height
    int height = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxStatusBar * self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call SetMinHeight
    self->SetMinHeight(height);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_SetStatusStyles[] = { &wxluatype_wxStatusBar, &wxluatype_TTABLE, NULL };
static int LUACALL wxLua_wxStatusBar_SetStatusStyles(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_SetStatusStyles[1] = {{ wxLua_wxStatusBar_SetStatusStyles, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStatusBar_SetStatusStyles }};
//     virtual void SetStatusStyles(IntArray_FromLuaTable intTable)
static int LUACALL wxLua_wxStatusBar_SetStatusStyles(lua_State *L)
{
    // IntArray_FromLuaTable intTable
    int count_ = 0; wxLuaSmartIntArray ptr; int* intTable = NULL; ptr = intTable = wxlua_getintarray(L, 2, count_);
    // get this
    wxStatusBar * self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call SetStatusStyles
    self->SetStatusStyles(count_, intTable);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_SetStatusText[] = { &wxluatype_wxStatusBar, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStatusBar_SetStatusText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_SetStatusText[1] = {{ wxLua_wxStatusBar_SetStatusText, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxStatusBar_SetStatusText }};
//     virtual void SetStatusText(const wxString& text, int i = 0)
static int LUACALL wxLua_wxStatusBar_SetStatusText(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int i = 0
    int i = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxStatusBar * self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call SetStatusText
    self->SetStatusText(text, i);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_SetStatusWidths[] = { &wxluatype_wxStatusBar, &wxluatype_TTABLE, NULL };
static int LUACALL wxLua_wxStatusBar_SetStatusWidths(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_SetStatusWidths[1] = {{ wxLua_wxStatusBar_SetStatusWidths, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxStatusBar_SetStatusWidths }};
//     virtual void SetStatusWidths(IntArray_FromLuaTable intTable)
static int LUACALL wxLua_wxStatusBar_SetStatusWidths(lua_State *L)
{
    // IntArray_FromLuaTable intTable
    int count_ = 0; wxLuaSmartIntArray ptr; int* intTable = NULL; ptr = intTable = wxlua_getintarray(L, 2, count_);
    // get this
    wxStatusBar * self = (wxStatusBar *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStatusBar);
    // call SetStatusWidths
    self->SetStatusWidths(count_, intTable);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStatusBar_constructor1[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStatusBar_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_constructor1[1] = {{ wxLua_wxStatusBar_constructor1, WXLUAMETHOD_CONSTRUCTOR, 2, 4, s_wxluatypeArray_wxLua_wxStatusBar_constructor1 }};
//     wxStatusBar(wxWindow* parent, wxWindowID id, long style = wxST_SIZEGRIP, const wxString& name = "wxStatusBar")
static int LUACALL wxLua_wxStatusBar_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = "wxStatusBar"
    const wxString name = (argCount >= 4 ? wxlua_getwxStringtype(L, 4) : wxString(wxT("wxStatusBar")));
    // long style = wxST_SIZEGRIP
    long style = (argCount >= 3 ? (long)wxlua_getnumbertype(L, 3) : wxST_SIZEGRIP);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wxlua_getnumbertype(L, 2);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxStatusBar* returns = new wxStatusBar(parent, id, style, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxStatusBar);

    return 1;
}

static int LUACALL wxLua_wxStatusBar_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_constructor[1] = {{ wxLua_wxStatusBar_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxStatusBar()
static int LUACALL wxLua_wxStatusBar_constructor(lua_State *L)
{
    // call constructor
    wxStatusBar* returns = new wxStatusBar();
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxStatusBar);

    return 1;
}




#if (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStatusBar_constructor_overload[] =
{
    { wxLua_wxStatusBar_constructor1, WXLUAMETHOD_CONSTRUCTOR, 2, 4, s_wxluatypeArray_wxLua_wxStatusBar_constructor1 },
    { wxLua_wxStatusBar_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxStatusBar_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxStatusBar_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxStatusBar_methods[] = {
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_Create, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
    { "GetFieldRect", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_GetFieldRect, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

    { "GetFieldsCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_GetFieldsCount, 1, NULL },
    { "GetStatusText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_GetStatusText, 1, NULL },
    { "PopStatusText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_PopStatusText, 1, NULL },
    { "PushStatusText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_PushStatusText, 1, NULL },
    { "SetFieldsCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_SetFieldsCount, 1, NULL },
    { "SetMinHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_SetMinHeight, 1, NULL },
    { "SetStatusStyles", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_SetStatusStyles, 1, NULL },
    { "SetStatusText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_SetStatusText, 1, NULL },
    { "SetStatusWidths", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStatusBar_SetStatusWidths, 1, NULL },

#if (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
    { "wxStatusBar", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxStatusBar_constructor_overload, s_wxluafunc_wxLua_wxStatusBar_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

    { 0, 0, 0, 0 },
};

int wxStatusBar_methodCount = sizeof(wxStatusBar_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR

