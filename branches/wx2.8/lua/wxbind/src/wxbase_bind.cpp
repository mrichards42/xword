// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxbase_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#include "wx/wxprec.h"

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif


#include "wxlua/include/wxlstate.h"
#include "wxbind/include/wxbase_bind.h"
#ifdef Above
    #undef Above
#endif
#ifdef Below
    #undef Below
#endif


// ---------------------------------------------------------------------------
// wxLuaGetEventList_wxbase() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_wxbase(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {

        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_wxbase() is called to register %define and %enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_wxbase(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {
#if defined(__WIN16__)
        { "__WIN16__", 1 },
#endif // defined(__WIN16__)

#if defined(__WIN32__)
        { "__WIN32__", 1 },
#endif // defined(__WIN32__)

#if defined(__WIN95__)
        { "__WIN95__", 1 },
#endif // defined(__WIN95__)

#if defined(__WINDOWS__)
        { "__WINDOWS__", 1 },
#endif // defined(__WINDOWS__)

#if defined(__WXBASE__)
        { "__WXBASE__", 1 },
#endif // defined(__WXBASE__)

#if defined(__WXCOCOA__)
        { "__WXCOCOA__", 1 },
#endif // defined(__WXCOCOA__)

#if defined(__WXGTK12__)
        { "__WXGTK12__", 1 },
#endif // defined(__WXGTK12__)

#if defined(__WXGTK20__)
        { "__WXGTK20__", 1 },
#endif // defined(__WXGTK20__)

#if defined(__WXGTK__)
        { "__WXGTK__", 1 },
#endif // defined(__WXGTK__)

#if defined(__WXMAC_CARBON__)
        { "__WXMAC_CARBON__", 1 },
#endif // defined(__WXMAC_CARBON__)

#if defined(__WXMAC_CLASSIC__)
        { "__WXMAC_CLASSIC__", 1 },
#endif // defined(__WXMAC_CLASSIC__)

#if defined(__WXMAC_OSX__)
        { "__WXMAC_OSX__", 1 },
#endif // defined(__WXMAC_OSX__)

#if defined(__WXMAC__)
        { "__WXMAC__", 1 },
#endif // defined(__WXMAC__)

#if defined(__WXMGL__)
        { "__WXMGL__", 1 },
#endif // defined(__WXMGL__)

#if defined(__WXMOTIF20__)
        { "__WXMOTIF20__", 1 },
#endif // defined(__WXMOTIF20__)

#if defined(__WXMOTIF__)
        { "__WXMOTIF__", 1 },
#endif // defined(__WXMOTIF__)

#if defined(__WXMSW__)
        { "__WXMSW__", 1 },
#endif // defined(__WXMSW__)

#if defined(__WXOS2__)
        { "__WXOS2__", 1 },
#endif // defined(__WXOS2__)

#if defined(__WXOSX__)
        { "__WXOSX__", 1 },
#endif // defined(__WXOSX__)

#if defined(__WXPALMOS__)
        { "__WXPALMOS__", 1 },
#endif // defined(__WXPALMOS__)

#if defined(__WXPM__)
        { "__WXPM__", 1 },
#endif // defined(__WXPM__)

#if defined(__WXSTUBS__)
        { "__WXSTUBS__", 1 },
#endif // defined(__WXSTUBS__)

#if defined(__WXUNIVERSAL__)
        { "__WXUNIVERSAL__", 1 },
#endif // defined(__WXUNIVERSAL__)

#if defined(__WXWINCE__)
        { "__WXWINCE__", 1 },
#endif // defined(__WXWINCE__)

#if defined(__WXWINE__)
        { "__WXWINE__", 1 },
#endif // defined(__WXWINE__)

#if defined(__WXX11__)
        { "__WXX11__", 1 },
#endif // defined(__WXX11__)

#if defined(__WXXT__)
        { "__WXXT__", 1 },
#endif // defined(__WXXT__)

#if defined(__X__)
        { "__X__", 1 },
#endif // defined(__X__)

        { "wxABI_VERSION", wxABI_VERSION },
        { "wxARCH_32", wxARCH_32 },
        { "wxARCH_64", wxARCH_64 },
        { "wxARCH_INVALID", wxARCH_INVALID },
        { "wxARCH_MAX", wxARCH_MAX },
        { "wxARE_FILENAMES_CASE_SENSITIVE", wxARE_FILENAMES_CASE_SENSITIVE },

#if !wxCHECK_VERSION(2,8,0)
        { "wxBEOS", wxBEOS },
#endif // !wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxConfig && wxUSE_CONFIG
        { "wxCONFIG_USE_GLOBAL_FILE", wxCONFIG_USE_GLOBAL_FILE },
        { "wxCONFIG_USE_LOCAL_FILE", wxCONFIG_USE_LOCAL_FILE },
        { "wxCONFIG_USE_NO_ESCAPE_CHARACTERS", wxCONFIG_USE_NO_ESCAPE_CHARACTERS },
        { "wxCONFIG_USE_RELATIVE_PATH", wxCONFIG_USE_RELATIVE_PATH },
#endif // wxLUA_USE_wxConfig && wxUSE_CONFIG

#if (wxCHECK_VERSION(2,8,1)) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)
        { "wxCONFIG_USE_SUBDIR", wxCONFIG_USE_SUBDIR },
#endif // (wxCHECK_VERSION(2,8,1)) && (wxLUA_USE_wxConfig && wxUSE_CONFIG)

#if !wxCHECK_VERSION(2,8,0)
        { "wxCOSE_X", wxCOSE_X },
        { "wxCURSES", wxCURSES },
#endif // !wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxFileName
        { "wxDIR", wxDIR },
#endif // wxLUA_USE_wxFileName

#if wxLUA_USE_wxDir
        { "wxDIR_DEFAULT", wxDIR_DEFAULT },
        { "wxDIR_DIRS", wxDIR_DIRS },
        { "wxDIR_DOTDOT", wxDIR_DOTDOT },
        { "wxDIR_FILES", wxDIR_FILES },
        { "wxDIR_HIDDEN", wxDIR_HIDDEN },
#endif // wxLUA_USE_wxDir

        { "wxDL_DEFAULT", wxDL_DEFAULT },
        { "wxDL_GLOBAL", wxDL_GLOBAL },
        { "wxDL_LAZY", wxDL_LAZY },
        { "wxDL_LIBRARY", wxDL_LIBRARY },
        { "wxDL_MODULE", wxDL_MODULE },
        { "wxDL_NOSHARE", wxDL_NOSHARE },
        { "wxDL_NOW", wxDL_NOW },
        { "wxDL_PLUGIN_BASE", wxDL_PLUGIN_BASE },
        { "wxDL_PLUGIN_GUI", wxDL_PLUGIN_GUI },
        { "wxDL_VERBATIM", wxDL_VERBATIM },

#if !wxCHECK_VERSION(2,8,0)
        { "wxDOS", wxDOS },
#endif // !wxCHECK_VERSION(2,8,0)

        { "wxENDIAN_BIG", wxENDIAN_BIG },
        { "wxENDIAN_INVALID", wxENDIAN_INVALID },
        { "wxENDIAN_LITTLE", wxENDIAN_LITTLE },
        { "wxENDIAN_MAX", wxENDIAN_MAX },
        { "wxENDIAN_PDP", wxENDIAN_PDP },

#if wxUSE_STREAMS
        { "wxEOL_DOS", wxEOL_DOS },
        { "wxEOL_MAC", wxEOL_MAC },
        { "wxEOL_NATIVE", wxEOL_NATIVE },
        { "wxEOL_UNIX", wxEOL_UNIX },
#endif // wxUSE_STREAMS

#if wxLUA_USE_wxFileName
        { "wxFILE", wxFILE },
#endif // wxLUA_USE_wxFileName

#if wxLUA_USE_wxFile && wxUSE_FILE
        { "wxFILE_KIND_DISK", wxFILE_KIND_DISK },
        { "wxFILE_KIND_PIPE", wxFILE_KIND_PIPE },
        { "wxFILE_KIND_TERMINAL", wxFILE_KIND_TERMINAL },
        { "wxFILE_KIND_UNKNOWN", wxFILE_KIND_UNKNOWN },
#endif // wxLUA_USE_wxFile && wxUSE_FILE

#if wxUSE_INTL
        { "wxFONTENCODING_ALTERNATIVE", wxFONTENCODING_ALTERNATIVE },
        { "wxFONTENCODING_BIG5", wxFONTENCODING_BIG5 },
        { "wxFONTENCODING_BULGARIAN", wxFONTENCODING_BULGARIAN },
        { "wxFONTENCODING_CP1250", wxFONTENCODING_CP1250 },
        { "wxFONTENCODING_CP1251", wxFONTENCODING_CP1251 },
        { "wxFONTENCODING_CP1252", wxFONTENCODING_CP1252 },
        { "wxFONTENCODING_CP1253", wxFONTENCODING_CP1253 },
        { "wxFONTENCODING_CP1254", wxFONTENCODING_CP1254 },
        { "wxFONTENCODING_CP1255", wxFONTENCODING_CP1255 },
        { "wxFONTENCODING_CP1256", wxFONTENCODING_CP1256 },
        { "wxFONTENCODING_CP1257", wxFONTENCODING_CP1257 },
        { "wxFONTENCODING_CP12_MAX", wxFONTENCODING_CP12_MAX },
        { "wxFONTENCODING_CP437", wxFONTENCODING_CP437 },
        { "wxFONTENCODING_CP850", wxFONTENCODING_CP850 },
        { "wxFONTENCODING_CP852", wxFONTENCODING_CP852 },
        { "wxFONTENCODING_CP855", wxFONTENCODING_CP855 },
        { "wxFONTENCODING_CP866", wxFONTENCODING_CP866 },
        { "wxFONTENCODING_CP874", wxFONTENCODING_CP874 },
        { "wxFONTENCODING_CP932", wxFONTENCODING_CP932 },
        { "wxFONTENCODING_CP936", wxFONTENCODING_CP936 },
        { "wxFONTENCODING_CP949", wxFONTENCODING_CP949 },
        { "wxFONTENCODING_CP950", wxFONTENCODING_CP950 },
        { "wxFONTENCODING_DEFAULT", wxFONTENCODING_DEFAULT },
        { "wxFONTENCODING_EUC_JP", wxFONTENCODING_EUC_JP },
        { "wxFONTENCODING_GB2312", wxFONTENCODING_GB2312 },
        { "wxFONTENCODING_ISO8859_1", wxFONTENCODING_ISO8859_1 },
        { "wxFONTENCODING_ISO8859_10", wxFONTENCODING_ISO8859_10 },
        { "wxFONTENCODING_ISO8859_11", wxFONTENCODING_ISO8859_11 },
        { "wxFONTENCODING_ISO8859_12", wxFONTENCODING_ISO8859_12 },
        { "wxFONTENCODING_ISO8859_13", wxFONTENCODING_ISO8859_13 },
        { "wxFONTENCODING_ISO8859_14", wxFONTENCODING_ISO8859_14 },
        { "wxFONTENCODING_ISO8859_15", wxFONTENCODING_ISO8859_15 },
        { "wxFONTENCODING_ISO8859_2", wxFONTENCODING_ISO8859_2 },
        { "wxFONTENCODING_ISO8859_3", wxFONTENCODING_ISO8859_3 },
        { "wxFONTENCODING_ISO8859_4", wxFONTENCODING_ISO8859_4 },
        { "wxFONTENCODING_ISO8859_5", wxFONTENCODING_ISO8859_5 },
        { "wxFONTENCODING_ISO8859_6", wxFONTENCODING_ISO8859_6 },
        { "wxFONTENCODING_ISO8859_7", wxFONTENCODING_ISO8859_7 },
        { "wxFONTENCODING_ISO8859_8", wxFONTENCODING_ISO8859_8 },
        { "wxFONTENCODING_ISO8859_9", wxFONTENCODING_ISO8859_9 },
        { "wxFONTENCODING_ISO8859_MAX", wxFONTENCODING_ISO8859_MAX },
        { "wxFONTENCODING_KOI8", wxFONTENCODING_KOI8 },
        { "wxFONTENCODING_KOI8_U", wxFONTENCODING_KOI8_U },
        { "wxFONTENCODING_MACARABIC", wxFONTENCODING_MACARABIC },
        { "wxFONTENCODING_MACARABICEXT", wxFONTENCODING_MACARABICEXT },
        { "wxFONTENCODING_MACARMENIAN", wxFONTENCODING_MACARMENIAN },
        { "wxFONTENCODING_MACBENGALI", wxFONTENCODING_MACBENGALI },
        { "wxFONTENCODING_MACBURMESE", wxFONTENCODING_MACBURMESE },
        { "wxFONTENCODING_MACCELTIC", wxFONTENCODING_MACCELTIC },
        { "wxFONTENCODING_MACCENTRALEUR", wxFONTENCODING_MACCENTRALEUR },
        { "wxFONTENCODING_MACCHINESESIMP", wxFONTENCODING_MACCHINESESIMP },
        { "wxFONTENCODING_MACCHINESETRAD", wxFONTENCODING_MACCHINESETRAD },
        { "wxFONTENCODING_MACCROATIAN", wxFONTENCODING_MACCROATIAN },
        { "wxFONTENCODING_MACCYRILLIC", wxFONTENCODING_MACCYRILLIC },
        { "wxFONTENCODING_MACDEVANAGARI", wxFONTENCODING_MACDEVANAGARI },
        { "wxFONTENCODING_MACDINGBATS", wxFONTENCODING_MACDINGBATS },
        { "wxFONTENCODING_MACETHIOPIC", wxFONTENCODING_MACETHIOPIC },
        { "wxFONTENCODING_MACGAELIC", wxFONTENCODING_MACGAELIC },
        { "wxFONTENCODING_MACGEORGIAN", wxFONTENCODING_MACGEORGIAN },
        { "wxFONTENCODING_MACGREEK", wxFONTENCODING_MACGREEK },
        { "wxFONTENCODING_MACGUJARATI", wxFONTENCODING_MACGUJARATI },
        { "wxFONTENCODING_MACGURMUKHI", wxFONTENCODING_MACGURMUKHI },
        { "wxFONTENCODING_MACHEBREW", wxFONTENCODING_MACHEBREW },
        { "wxFONTENCODING_MACICELANDIC", wxFONTENCODING_MACICELANDIC },
        { "wxFONTENCODING_MACJAPANESE", wxFONTENCODING_MACJAPANESE },
        { "wxFONTENCODING_MACKANNADA", wxFONTENCODING_MACKANNADA },
        { "wxFONTENCODING_MACKEYBOARD", wxFONTENCODING_MACKEYBOARD },
        { "wxFONTENCODING_MACKHMER", wxFONTENCODING_MACKHMER },
        { "wxFONTENCODING_MACKOREAN", wxFONTENCODING_MACKOREAN },
        { "wxFONTENCODING_MACLAOTIAN", wxFONTENCODING_MACLAOTIAN },
        { "wxFONTENCODING_MACMALAJALAM", wxFONTENCODING_MACMALAJALAM },
        { "wxFONTENCODING_MACMAX", wxFONTENCODING_MACMAX },
        { "wxFONTENCODING_MACMIN", wxFONTENCODING_MACMIN },
        { "wxFONTENCODING_MACMONGOLIAN", wxFONTENCODING_MACMONGOLIAN },
        { "wxFONTENCODING_MACORIYA", wxFONTENCODING_MACORIYA },
        { "wxFONTENCODING_MACROMAN", wxFONTENCODING_MACROMAN },
        { "wxFONTENCODING_MACROMANIAN", wxFONTENCODING_MACROMANIAN },
        { "wxFONTENCODING_MACSINHALESE", wxFONTENCODING_MACSINHALESE },
        { "wxFONTENCODING_MACSYMBOL", wxFONTENCODING_MACSYMBOL },
        { "wxFONTENCODING_MACTAMIL", wxFONTENCODING_MACTAMIL },
        { "wxFONTENCODING_MACTELUGU", wxFONTENCODING_MACTELUGU },
        { "wxFONTENCODING_MACTHAI", wxFONTENCODING_MACTHAI },
        { "wxFONTENCODING_MACTIBETAN", wxFONTENCODING_MACTIBETAN },
        { "wxFONTENCODING_MACTURKISH", wxFONTENCODING_MACTURKISH },
        { "wxFONTENCODING_MACVIATNAMESE", wxFONTENCODING_MACVIATNAMESE },
        { "wxFONTENCODING_MAX", wxFONTENCODING_MAX },
        { "wxFONTENCODING_SHIFT_JIS", wxFONTENCODING_SHIFT_JIS },
        { "wxFONTENCODING_SYSTEM", wxFONTENCODING_SYSTEM },
        { "wxFONTENCODING_UNICODE", wxFONTENCODING_UNICODE },
        { "wxFONTENCODING_UTF16", wxFONTENCODING_UTF16 },
        { "wxFONTENCODING_UTF16BE", wxFONTENCODING_UTF16BE },
        { "wxFONTENCODING_UTF16LE", wxFONTENCODING_UTF16LE },
        { "wxFONTENCODING_UTF32", wxFONTENCODING_UTF32 },
        { "wxFONTENCODING_UTF32BE", wxFONTENCODING_UTF32BE },
        { "wxFONTENCODING_UTF32LE", wxFONTENCODING_UTF32LE },
        { "wxFONTENCODING_UTF7", wxFONTENCODING_UTF7 },
        { "wxFONTENCODING_UTF8", wxFONTENCODING_UTF8 },
#endif // wxUSE_INTL

#if (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)
        { "wxFS_READ", wxFS_READ },
        { "wxFS_SEEKABLE", wxFS_SEEKABLE },
#endif // (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)

#if wxLUA_USE_wxFile && wxUSE_FILE
        { "wxFromCurrent", wxFromCurrent },
        { "wxFromEnd", wxFromEnd },
        { "wxFromStart", wxFromStart },
#endif // wxLUA_USE_wxFile && wxUSE_FILE

#if !wxCHECK_VERSION(2,8,0)
        { "wxGEOS", wxGEOS },
        { "wxGTK", wxGTK },
        { "wxGTK_BEOS", wxGTK_BEOS },
        { "wxGTK_OS2", wxGTK_OS2 },
        { "wxGTK_WIN32", wxGTK_WIN32 },
#endif // !wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxFile && wxUSE_FILE
        { "wxInvalidOffset", wxInvalidOffset },
#endif // wxLUA_USE_wxFile && wxUSE_FILE

#if wxLUA_USE_wxList && !wxUSE_STL
        { "wxKEY_INTEGER", wxKEY_INTEGER },
        { "wxKEY_NONE", wxKEY_NONE },
        { "wxKEY_STRING", wxKEY_STRING },
#endif // wxLUA_USE_wxList && !wxUSE_STL

#if wxUSE_INTL
        { "wxLANGUAGE_ABKHAZIAN", wxLANGUAGE_ABKHAZIAN },
        { "wxLANGUAGE_AFAR", wxLANGUAGE_AFAR },
        { "wxLANGUAGE_AFRIKAANS", wxLANGUAGE_AFRIKAANS },
        { "wxLANGUAGE_ALBANIAN", wxLANGUAGE_ALBANIAN },
        { "wxLANGUAGE_AMHARIC", wxLANGUAGE_AMHARIC },
        { "wxLANGUAGE_ARABIC", wxLANGUAGE_ARABIC },
        { "wxLANGUAGE_ARABIC_ALGERIA", wxLANGUAGE_ARABIC_ALGERIA },
        { "wxLANGUAGE_ARABIC_BAHRAIN", wxLANGUAGE_ARABIC_BAHRAIN },
        { "wxLANGUAGE_ARABIC_EGYPT", wxLANGUAGE_ARABIC_EGYPT },
        { "wxLANGUAGE_ARABIC_IRAQ", wxLANGUAGE_ARABIC_IRAQ },
        { "wxLANGUAGE_ARABIC_JORDAN", wxLANGUAGE_ARABIC_JORDAN },
        { "wxLANGUAGE_ARABIC_KUWAIT", wxLANGUAGE_ARABIC_KUWAIT },
        { "wxLANGUAGE_ARABIC_LEBANON", wxLANGUAGE_ARABIC_LEBANON },
        { "wxLANGUAGE_ARABIC_LIBYA", wxLANGUAGE_ARABIC_LIBYA },
        { "wxLANGUAGE_ARABIC_MOROCCO", wxLANGUAGE_ARABIC_MOROCCO },
        { "wxLANGUAGE_ARABIC_OMAN", wxLANGUAGE_ARABIC_OMAN },
        { "wxLANGUAGE_ARABIC_QATAR", wxLANGUAGE_ARABIC_QATAR },
        { "wxLANGUAGE_ARABIC_SAUDI_ARABIA", wxLANGUAGE_ARABIC_SAUDI_ARABIA },
        { "wxLANGUAGE_ARABIC_SUDAN", wxLANGUAGE_ARABIC_SUDAN },
        { "wxLANGUAGE_ARABIC_SYRIA", wxLANGUAGE_ARABIC_SYRIA },
        { "wxLANGUAGE_ARABIC_TUNISIA", wxLANGUAGE_ARABIC_TUNISIA },
        { "wxLANGUAGE_ARABIC_UAE", wxLANGUAGE_ARABIC_UAE },
        { "wxLANGUAGE_ARABIC_YEMEN", wxLANGUAGE_ARABIC_YEMEN },
        { "wxLANGUAGE_ARMENIAN", wxLANGUAGE_ARMENIAN },
        { "wxLANGUAGE_ASSAMESE", wxLANGUAGE_ASSAMESE },
        { "wxLANGUAGE_AYMARA", wxLANGUAGE_AYMARA },
        { "wxLANGUAGE_AZERI", wxLANGUAGE_AZERI },
        { "wxLANGUAGE_AZERI_CYRILLIC", wxLANGUAGE_AZERI_CYRILLIC },
        { "wxLANGUAGE_AZERI_LATIN", wxLANGUAGE_AZERI_LATIN },
        { "wxLANGUAGE_BASHKIR", wxLANGUAGE_BASHKIR },
        { "wxLANGUAGE_BASQUE", wxLANGUAGE_BASQUE },
        { "wxLANGUAGE_BELARUSIAN", wxLANGUAGE_BELARUSIAN },
        { "wxLANGUAGE_BENGALI", wxLANGUAGE_BENGALI },
        { "wxLANGUAGE_BHUTANI", wxLANGUAGE_BHUTANI },
        { "wxLANGUAGE_BIHARI", wxLANGUAGE_BIHARI },
        { "wxLANGUAGE_BISLAMA", wxLANGUAGE_BISLAMA },
        { "wxLANGUAGE_BRETON", wxLANGUAGE_BRETON },
        { "wxLANGUAGE_BULGARIAN", wxLANGUAGE_BULGARIAN },
        { "wxLANGUAGE_BURMESE", wxLANGUAGE_BURMESE },
        { "wxLANGUAGE_CAMBODIAN", wxLANGUAGE_CAMBODIAN },
        { "wxLANGUAGE_CATALAN", wxLANGUAGE_CATALAN },
        { "wxLANGUAGE_CHINESE", wxLANGUAGE_CHINESE },
        { "wxLANGUAGE_CHINESE_HONGKONG", wxLANGUAGE_CHINESE_HONGKONG },
        { "wxLANGUAGE_CHINESE_MACAU", wxLANGUAGE_CHINESE_MACAU },
        { "wxLANGUAGE_CHINESE_SIMPLIFIED", wxLANGUAGE_CHINESE_SIMPLIFIED },
        { "wxLANGUAGE_CHINESE_SINGAPORE", wxLANGUAGE_CHINESE_SINGAPORE },
        { "wxLANGUAGE_CHINESE_TAIWAN", wxLANGUAGE_CHINESE_TAIWAN },
        { "wxLANGUAGE_CHINESE_TRADITIONAL", wxLANGUAGE_CHINESE_TRADITIONAL },
        { "wxLANGUAGE_CORSICAN", wxLANGUAGE_CORSICAN },
        { "wxLANGUAGE_CROATIAN", wxLANGUAGE_CROATIAN },
        { "wxLANGUAGE_CZECH", wxLANGUAGE_CZECH },
        { "wxLANGUAGE_DANISH", wxLANGUAGE_DANISH },
        { "wxLANGUAGE_DEFAULT", wxLANGUAGE_DEFAULT },
        { "wxLANGUAGE_DUTCH", wxLANGUAGE_DUTCH },
        { "wxLANGUAGE_DUTCH_BELGIAN", wxLANGUAGE_DUTCH_BELGIAN },
        { "wxLANGUAGE_ENGLISH", wxLANGUAGE_ENGLISH },
        { "wxLANGUAGE_ENGLISH_AUSTRALIA", wxLANGUAGE_ENGLISH_AUSTRALIA },
        { "wxLANGUAGE_ENGLISH_BELIZE", wxLANGUAGE_ENGLISH_BELIZE },
        { "wxLANGUAGE_ENGLISH_BOTSWANA", wxLANGUAGE_ENGLISH_BOTSWANA },
        { "wxLANGUAGE_ENGLISH_CANADA", wxLANGUAGE_ENGLISH_CANADA },
        { "wxLANGUAGE_ENGLISH_CARIBBEAN", wxLANGUAGE_ENGLISH_CARIBBEAN },
        { "wxLANGUAGE_ENGLISH_DENMARK", wxLANGUAGE_ENGLISH_DENMARK },
        { "wxLANGUAGE_ENGLISH_EIRE", wxLANGUAGE_ENGLISH_EIRE },
        { "wxLANGUAGE_ENGLISH_JAMAICA", wxLANGUAGE_ENGLISH_JAMAICA },
        { "wxLANGUAGE_ENGLISH_NEW_ZEALAND", wxLANGUAGE_ENGLISH_NEW_ZEALAND },
        { "wxLANGUAGE_ENGLISH_PHILIPPINES", wxLANGUAGE_ENGLISH_PHILIPPINES },
        { "wxLANGUAGE_ENGLISH_SOUTH_AFRICA", wxLANGUAGE_ENGLISH_SOUTH_AFRICA },
        { "wxLANGUAGE_ENGLISH_TRINIDAD", wxLANGUAGE_ENGLISH_TRINIDAD },
        { "wxLANGUAGE_ENGLISH_UK", wxLANGUAGE_ENGLISH_UK },
        { "wxLANGUAGE_ENGLISH_US", wxLANGUAGE_ENGLISH_US },
        { "wxLANGUAGE_ENGLISH_ZIMBABWE", wxLANGUAGE_ENGLISH_ZIMBABWE },
        { "wxLANGUAGE_ESPERANTO", wxLANGUAGE_ESPERANTO },
        { "wxLANGUAGE_ESTONIAN", wxLANGUAGE_ESTONIAN },
        { "wxLANGUAGE_FAEROESE", wxLANGUAGE_FAEROESE },
        { "wxLANGUAGE_FARSI", wxLANGUAGE_FARSI },
        { "wxLANGUAGE_FIJI", wxLANGUAGE_FIJI },
        { "wxLANGUAGE_FINNISH", wxLANGUAGE_FINNISH },
        { "wxLANGUAGE_FRENCH", wxLANGUAGE_FRENCH },
        { "wxLANGUAGE_FRENCH_BELGIAN", wxLANGUAGE_FRENCH_BELGIAN },
        { "wxLANGUAGE_FRENCH_CANADIAN", wxLANGUAGE_FRENCH_CANADIAN },
        { "wxLANGUAGE_FRENCH_LUXEMBOURG", wxLANGUAGE_FRENCH_LUXEMBOURG },
        { "wxLANGUAGE_FRENCH_MONACO", wxLANGUAGE_FRENCH_MONACO },
        { "wxLANGUAGE_FRENCH_SWISS", wxLANGUAGE_FRENCH_SWISS },
        { "wxLANGUAGE_FRISIAN", wxLANGUAGE_FRISIAN },
        { "wxLANGUAGE_GALICIAN", wxLANGUAGE_GALICIAN },
        { "wxLANGUAGE_GEORGIAN", wxLANGUAGE_GEORGIAN },
        { "wxLANGUAGE_GERMAN", wxLANGUAGE_GERMAN },
        { "wxLANGUAGE_GERMAN_AUSTRIAN", wxLANGUAGE_GERMAN_AUSTRIAN },
        { "wxLANGUAGE_GERMAN_BELGIUM", wxLANGUAGE_GERMAN_BELGIUM },
        { "wxLANGUAGE_GERMAN_LIECHTENSTEIN", wxLANGUAGE_GERMAN_LIECHTENSTEIN },
        { "wxLANGUAGE_GERMAN_LUXEMBOURG", wxLANGUAGE_GERMAN_LUXEMBOURG },
        { "wxLANGUAGE_GERMAN_SWISS", wxLANGUAGE_GERMAN_SWISS },
        { "wxLANGUAGE_GREEK", wxLANGUAGE_GREEK },
        { "wxLANGUAGE_GREENLANDIC", wxLANGUAGE_GREENLANDIC },
        { "wxLANGUAGE_GUARANI", wxLANGUAGE_GUARANI },
        { "wxLANGUAGE_GUJARATI", wxLANGUAGE_GUJARATI },
        { "wxLANGUAGE_HAUSA", wxLANGUAGE_HAUSA },
        { "wxLANGUAGE_HEBREW", wxLANGUAGE_HEBREW },
        { "wxLANGUAGE_HINDI", wxLANGUAGE_HINDI },
        { "wxLANGUAGE_HUNGARIAN", wxLANGUAGE_HUNGARIAN },
        { "wxLANGUAGE_ICELANDIC", wxLANGUAGE_ICELANDIC },
        { "wxLANGUAGE_INDONESIAN", wxLANGUAGE_INDONESIAN },
        { "wxLANGUAGE_INTERLINGUA", wxLANGUAGE_INTERLINGUA },
        { "wxLANGUAGE_INTERLINGUE", wxLANGUAGE_INTERLINGUE },
        { "wxLANGUAGE_INUKTITUT", wxLANGUAGE_INUKTITUT },
        { "wxLANGUAGE_INUPIAK", wxLANGUAGE_INUPIAK },
        { "wxLANGUAGE_IRISH", wxLANGUAGE_IRISH },
        { "wxLANGUAGE_ITALIAN", wxLANGUAGE_ITALIAN },
        { "wxLANGUAGE_ITALIAN_SWISS", wxLANGUAGE_ITALIAN_SWISS },
        { "wxLANGUAGE_JAPANESE", wxLANGUAGE_JAPANESE },
        { "wxLANGUAGE_JAVANESE", wxLANGUAGE_JAVANESE },
        { "wxLANGUAGE_KANNADA", wxLANGUAGE_KANNADA },
        { "wxLANGUAGE_KASHMIRI", wxLANGUAGE_KASHMIRI },
        { "wxLANGUAGE_KASHMIRI_INDIA", wxLANGUAGE_KASHMIRI_INDIA },
        { "wxLANGUAGE_KAZAKH", wxLANGUAGE_KAZAKH },
        { "wxLANGUAGE_KERNEWEK", wxLANGUAGE_KERNEWEK },
        { "wxLANGUAGE_KINYARWANDA", wxLANGUAGE_KINYARWANDA },
        { "wxLANGUAGE_KIRGHIZ", wxLANGUAGE_KIRGHIZ },
        { "wxLANGUAGE_KIRUNDI", wxLANGUAGE_KIRUNDI },
        { "wxLANGUAGE_KONKANI", wxLANGUAGE_KONKANI },
        { "wxLANGUAGE_KOREAN", wxLANGUAGE_KOREAN },
        { "wxLANGUAGE_KURDISH", wxLANGUAGE_KURDISH },
        { "wxLANGUAGE_LAOTHIAN", wxLANGUAGE_LAOTHIAN },
        { "wxLANGUAGE_LATIN", wxLANGUAGE_LATIN },
        { "wxLANGUAGE_LATVIAN", wxLANGUAGE_LATVIAN },
        { "wxLANGUAGE_LINGALA", wxLANGUAGE_LINGALA },
        { "wxLANGUAGE_LITHUANIAN", wxLANGUAGE_LITHUANIAN },
        { "wxLANGUAGE_MACEDONIAN", wxLANGUAGE_MACEDONIAN },
        { "wxLANGUAGE_MALAGASY", wxLANGUAGE_MALAGASY },
        { "wxLANGUAGE_MALAY", wxLANGUAGE_MALAY },
        { "wxLANGUAGE_MALAYALAM", wxLANGUAGE_MALAYALAM },
        { "wxLANGUAGE_MALAY_BRUNEI_DARUSSALAM", wxLANGUAGE_MALAY_BRUNEI_DARUSSALAM },
        { "wxLANGUAGE_MALAY_MALAYSIA", wxLANGUAGE_MALAY_MALAYSIA },
        { "wxLANGUAGE_MALTESE", wxLANGUAGE_MALTESE },
        { "wxLANGUAGE_MANIPURI", wxLANGUAGE_MANIPURI },
        { "wxLANGUAGE_MAORI", wxLANGUAGE_MAORI },
        { "wxLANGUAGE_MARATHI", wxLANGUAGE_MARATHI },
        { "wxLANGUAGE_MOLDAVIAN", wxLANGUAGE_MOLDAVIAN },
        { "wxLANGUAGE_MONGOLIAN", wxLANGUAGE_MONGOLIAN },
        { "wxLANGUAGE_NAURU", wxLANGUAGE_NAURU },
        { "wxLANGUAGE_NEPALI", wxLANGUAGE_NEPALI },
        { "wxLANGUAGE_NEPALI_INDIA", wxLANGUAGE_NEPALI_INDIA },
        { "wxLANGUAGE_NORWEGIAN_BOKMAL", wxLANGUAGE_NORWEGIAN_BOKMAL },
        { "wxLANGUAGE_NORWEGIAN_NYNORSK", wxLANGUAGE_NORWEGIAN_NYNORSK },
        { "wxLANGUAGE_OCCITAN", wxLANGUAGE_OCCITAN },
        { "wxLANGUAGE_ORIYA", wxLANGUAGE_ORIYA },
        { "wxLANGUAGE_OROMO", wxLANGUAGE_OROMO },
        { "wxLANGUAGE_PASHTO", wxLANGUAGE_PASHTO },
        { "wxLANGUAGE_POLISH", wxLANGUAGE_POLISH },
        { "wxLANGUAGE_PORTUGUESE", wxLANGUAGE_PORTUGUESE },
        { "wxLANGUAGE_PORTUGUESE_BRAZILIAN", wxLANGUAGE_PORTUGUESE_BRAZILIAN },
        { "wxLANGUAGE_PUNJABI", wxLANGUAGE_PUNJABI },
        { "wxLANGUAGE_QUECHUA", wxLANGUAGE_QUECHUA },
        { "wxLANGUAGE_RHAETO_ROMANCE", wxLANGUAGE_RHAETO_ROMANCE },
        { "wxLANGUAGE_ROMANIAN", wxLANGUAGE_ROMANIAN },
        { "wxLANGUAGE_RUSSIAN", wxLANGUAGE_RUSSIAN },
        { "wxLANGUAGE_RUSSIAN_UKRAINE", wxLANGUAGE_RUSSIAN_UKRAINE },
        { "wxLANGUAGE_SAMOAN", wxLANGUAGE_SAMOAN },
        { "wxLANGUAGE_SANGHO", wxLANGUAGE_SANGHO },
        { "wxLANGUAGE_SANSKRIT", wxLANGUAGE_SANSKRIT },
        { "wxLANGUAGE_SCOTS_GAELIC", wxLANGUAGE_SCOTS_GAELIC },
        { "wxLANGUAGE_SERBIAN", wxLANGUAGE_SERBIAN },
        { "wxLANGUAGE_SERBIAN_CYRILLIC", wxLANGUAGE_SERBIAN_CYRILLIC },
        { "wxLANGUAGE_SERBIAN_LATIN", wxLANGUAGE_SERBIAN_LATIN },
        { "wxLANGUAGE_SERBO_CROATIAN", wxLANGUAGE_SERBO_CROATIAN },
        { "wxLANGUAGE_SESOTHO", wxLANGUAGE_SESOTHO },
        { "wxLANGUAGE_SETSWANA", wxLANGUAGE_SETSWANA },
        { "wxLANGUAGE_SHONA", wxLANGUAGE_SHONA },
        { "wxLANGUAGE_SINDHI", wxLANGUAGE_SINDHI },
        { "wxLANGUAGE_SINHALESE", wxLANGUAGE_SINHALESE },
        { "wxLANGUAGE_SISWATI", wxLANGUAGE_SISWATI },
        { "wxLANGUAGE_SLOVAK", wxLANGUAGE_SLOVAK },
        { "wxLANGUAGE_SLOVENIAN", wxLANGUAGE_SLOVENIAN },
        { "wxLANGUAGE_SOMALI", wxLANGUAGE_SOMALI },
        { "wxLANGUAGE_SPANISH", wxLANGUAGE_SPANISH },
        { "wxLANGUAGE_SPANISH_ARGENTINA", wxLANGUAGE_SPANISH_ARGENTINA },
        { "wxLANGUAGE_SPANISH_BOLIVIA", wxLANGUAGE_SPANISH_BOLIVIA },
        { "wxLANGUAGE_SPANISH_CHILE", wxLANGUAGE_SPANISH_CHILE },
        { "wxLANGUAGE_SPANISH_COLOMBIA", wxLANGUAGE_SPANISH_COLOMBIA },
        { "wxLANGUAGE_SPANISH_COSTA_RICA", wxLANGUAGE_SPANISH_COSTA_RICA },
        { "wxLANGUAGE_SPANISH_DOMINICAN_REPUBLIC", wxLANGUAGE_SPANISH_DOMINICAN_REPUBLIC },
        { "wxLANGUAGE_SPANISH_ECUADOR", wxLANGUAGE_SPANISH_ECUADOR },
        { "wxLANGUAGE_SPANISH_EL_SALVADOR", wxLANGUAGE_SPANISH_EL_SALVADOR },
        { "wxLANGUAGE_SPANISH_GUATEMALA", wxLANGUAGE_SPANISH_GUATEMALA },
        { "wxLANGUAGE_SPANISH_HONDURAS", wxLANGUAGE_SPANISH_HONDURAS },
        { "wxLANGUAGE_SPANISH_MEXICAN", wxLANGUAGE_SPANISH_MEXICAN },
        { "wxLANGUAGE_SPANISH_MODERN", wxLANGUAGE_SPANISH_MODERN },
        { "wxLANGUAGE_SPANISH_NICARAGUA", wxLANGUAGE_SPANISH_NICARAGUA },
        { "wxLANGUAGE_SPANISH_PANAMA", wxLANGUAGE_SPANISH_PANAMA },
        { "wxLANGUAGE_SPANISH_PARAGUAY", wxLANGUAGE_SPANISH_PARAGUAY },
        { "wxLANGUAGE_SPANISH_PERU", wxLANGUAGE_SPANISH_PERU },
        { "wxLANGUAGE_SPANISH_PUERTO_RICO", wxLANGUAGE_SPANISH_PUERTO_RICO },
        { "wxLANGUAGE_SPANISH_URUGUAY", wxLANGUAGE_SPANISH_URUGUAY },
        { "wxLANGUAGE_SPANISH_US", wxLANGUAGE_SPANISH_US },
        { "wxLANGUAGE_SPANISH_VENEZUELA", wxLANGUAGE_SPANISH_VENEZUELA },
        { "wxLANGUAGE_SUNDANESE", wxLANGUAGE_SUNDANESE },
        { "wxLANGUAGE_SWAHILI", wxLANGUAGE_SWAHILI },
        { "wxLANGUAGE_SWEDISH", wxLANGUAGE_SWEDISH },
        { "wxLANGUAGE_SWEDISH_FINLAND", wxLANGUAGE_SWEDISH_FINLAND },
        { "wxLANGUAGE_TAGALOG", wxLANGUAGE_TAGALOG },
        { "wxLANGUAGE_TAJIK", wxLANGUAGE_TAJIK },
        { "wxLANGUAGE_TAMIL", wxLANGUAGE_TAMIL },
        { "wxLANGUAGE_TATAR", wxLANGUAGE_TATAR },
        { "wxLANGUAGE_TELUGU", wxLANGUAGE_TELUGU },
        { "wxLANGUAGE_THAI", wxLANGUAGE_THAI },
        { "wxLANGUAGE_TIBETAN", wxLANGUAGE_TIBETAN },
        { "wxLANGUAGE_TIGRINYA", wxLANGUAGE_TIGRINYA },
        { "wxLANGUAGE_TONGA", wxLANGUAGE_TONGA },
        { "wxLANGUAGE_TSONGA", wxLANGUAGE_TSONGA },
        { "wxLANGUAGE_TURKISH", wxLANGUAGE_TURKISH },
        { "wxLANGUAGE_TURKMEN", wxLANGUAGE_TURKMEN },
        { "wxLANGUAGE_TWI", wxLANGUAGE_TWI },
        { "wxLANGUAGE_UIGHUR", wxLANGUAGE_UIGHUR },
        { "wxLANGUAGE_UKRAINIAN", wxLANGUAGE_UKRAINIAN },
        { "wxLANGUAGE_UNKNOWN", wxLANGUAGE_UNKNOWN },
        { "wxLANGUAGE_URDU", wxLANGUAGE_URDU },
        { "wxLANGUAGE_URDU_INDIA", wxLANGUAGE_URDU_INDIA },
        { "wxLANGUAGE_URDU_PAKISTAN", wxLANGUAGE_URDU_PAKISTAN },
        { "wxLANGUAGE_USER_DEFINED", wxLANGUAGE_USER_DEFINED },
        { "wxLANGUAGE_UZBEK", wxLANGUAGE_UZBEK },
        { "wxLANGUAGE_UZBEK_CYRILLIC", wxLANGUAGE_UZBEK_CYRILLIC },
        { "wxLANGUAGE_UZBEK_LATIN", wxLANGUAGE_UZBEK_LATIN },
        { "wxLANGUAGE_VIETNAMESE", wxLANGUAGE_VIETNAMESE },
        { "wxLANGUAGE_VOLAPUK", wxLANGUAGE_VOLAPUK },
        { "wxLANGUAGE_WELSH", wxLANGUAGE_WELSH },
        { "wxLANGUAGE_WOLOF", wxLANGUAGE_WOLOF },
        { "wxLANGUAGE_XHOSA", wxLANGUAGE_XHOSA },
        { "wxLANGUAGE_YIDDISH", wxLANGUAGE_YIDDISH },
        { "wxLANGUAGE_YORUBA", wxLANGUAGE_YORUBA },
        { "wxLANGUAGE_ZHUANG", wxLANGUAGE_ZHUANG },
        { "wxLANGUAGE_ZULU", wxLANGUAGE_ZULU },
        { "wxLOCALE_CAT_DATE", wxLOCALE_CAT_DATE },
        { "wxLOCALE_CAT_MAX", wxLOCALE_CAT_MAX },
        { "wxLOCALE_CAT_MONEY", wxLOCALE_CAT_MONEY },
        { "wxLOCALE_CAT_NUMBER", wxLOCALE_CAT_NUMBER },
        { "wxLOCALE_CONV_ENCODING", wxLOCALE_CONV_ENCODING },
        { "wxLOCALE_DECIMAL_POINT", wxLOCALE_DECIMAL_POINT },
        { "wxLOCALE_LOAD_DEFAULT", wxLOCALE_LOAD_DEFAULT },
        { "wxLOCALE_THOUSANDS_SEP", wxLOCALE_THOUSANDS_SEP },
#endif // wxUSE_INTL

#if wxLUA_USE_wxLog && wxUSE_LOG
        { "wxLOG_Debug", wxLOG_Debug },
        { "wxLOG_Error", wxLOG_Error },
        { "wxLOG_FatalError", wxLOG_FatalError },
        { "wxLOG_Info", wxLOG_Info },
        { "wxLOG_Max", wxLOG_Max },
        { "wxLOG_Message", wxLOG_Message },
        { "wxLOG_Progress", wxLOG_Progress },
        { "wxLOG_Status", wxLOG_Status },
        { "wxLOG_Trace", wxLOG_Trace },
        { "wxLOG_User", wxLOG_User },
        { "wxLOG_Warning", wxLOG_Warning },
#endif // wxLUA_USE_wxLog && wxUSE_LOG

#if (wxUSE_INTL) && (wxCHECK_VERSION(2,8,0))
        { "wxLayout_Default", wxLayout_Default },
        { "wxLayout_LeftToRight", wxLayout_LeftToRight },
        { "wxLayout_RightToLeft", wxLayout_RightToLeft },
#endif // (wxUSE_INTL) && (wxCHECK_VERSION(2,8,0))

#if !wxCHECK_VERSION(2,8,0)
        { "wxMAC", wxMAC },
        { "wxMAC_DARWIN", wxMAC_DARWIN },
#endif // !wxCHECK_VERSION(2,8,0)

        { "wxMAJOR_VERSION", wxMAJOR_VERSION },

#if !wxCHECK_VERSION(2,8,0)
        { "wxMGL_DOS", wxMGL_DOS },
        { "wxMGL_OS2", wxMGL_OS2 },
        { "wxMGL_UNIX", wxMGL_UNIX },
        { "wxMGL_WIN32", wxMGL_WIN32 },
        { "wxMGL_X", wxMGL_X },
        { "wxMICROWINDOWS", wxMICROWINDOWS },
#endif // !wxCHECK_VERSION(2,8,0)

        { "wxMINOR_VERSION", wxMINOR_VERSION },

#if !wxCHECK_VERSION(2,8,0)
        { "wxMOTIF_X", wxMOTIF_X },
        { "wxNEXTSTEP", wxNEXTSTEP },
        { "wxOS2_PM", wxOS2_PM },
#endif // !wxCHECK_VERSION(2,8,0)

        { "wxOS_DOS", wxOS_DOS },
        { "wxOS_MAC", wxOS_MAC },
        { "wxOS_MAC_OS", wxOS_MAC_OS },
        { "wxOS_MAC_OSX_DARWIN", wxOS_MAC_OSX_DARWIN },
        { "wxOS_OS2", wxOS_OS2 },
        { "wxOS_UNIX", wxOS_UNIX },
        { "wxOS_UNIX_AIX", wxOS_UNIX_AIX },
        { "wxOS_UNIX_FREEBSD", wxOS_UNIX_FREEBSD },
        { "wxOS_UNIX_HPUX", wxOS_UNIX_HPUX },
        { "wxOS_UNIX_LINUX", wxOS_UNIX_LINUX },
        { "wxOS_UNIX_NETBSD", wxOS_UNIX_NETBSD },
        { "wxOS_UNIX_OPENBSD", wxOS_UNIX_OPENBSD },
        { "wxOS_UNIX_SOLARIS", wxOS_UNIX_SOLARIS },
        { "wxOS_UNKNOWN", wxOS_UNKNOWN },
        { "wxOS_WINDOWS", wxOS_WINDOWS },
        { "wxOS_WINDOWS_9X", wxOS_WINDOWS_9X },
        { "wxOS_WINDOWS_CE", wxOS_WINDOWS_CE },
        { "wxOS_WINDOWS_MICRO", wxOS_WINDOWS_MICRO },
        { "wxOS_WINDOWS_NT", wxOS_WINDOWS_NT },

#if !wxCHECK_VERSION(2,8,0)
        { "wxPALMOS", wxPALMOS },
#endif // !wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxFileName
        { "wxPATH_BEOS", wxPATH_BEOS },
        { "wxPATH_DOS", wxPATH_DOS },
        { "wxPATH_GET_SEPARATOR", wxPATH_GET_SEPARATOR },
        { "wxPATH_GET_VOLUME", wxPATH_GET_VOLUME },
        { "wxPATH_MAC", wxPATH_MAC },
        { "wxPATH_MAX", wxPATH_MAX },
        { "wxPATH_MKDIR_FULL", wxPATH_MKDIR_FULL },
        { "wxPATH_NATIVE", wxPATH_NATIVE },
        { "wxPATH_NORM_ABSOLUTE", wxPATH_NORM_ABSOLUTE },
        { "wxPATH_NORM_ALL", wxPATH_NORM_ALL },
        { "wxPATH_NORM_CASE", wxPATH_NORM_CASE },
        { "wxPATH_NORM_DOTS", wxPATH_NORM_DOTS },
        { "wxPATH_NORM_ENV_VARS", wxPATH_NORM_ENV_VARS },
        { "wxPATH_NORM_LONG", wxPATH_NORM_LONG },
        { "wxPATH_NORM_SHORTCUT", wxPATH_NORM_SHORTCUT },
        { "wxPATH_NORM_TILDE", wxPATH_NORM_TILDE },
        { "wxPATH_OS2", wxPATH_OS2 },
        { "wxPATH_UNIX", wxPATH_UNIX },
        { "wxPATH_VMS", wxPATH_VMS },
        { "wxPATH_WIN", wxPATH_WIN },
#endif // wxLUA_USE_wxFileName

#if !wxCHECK_VERSION(2,8,0)
        { "wxPENWINDOWS", wxPENWINDOWS },
#endif // !wxCHECK_VERSION(2,8,0)

        { "wxPORT_BASE", wxPORT_BASE },
        { "wxPORT_COCOA", wxPORT_COCOA },
        { "wxPORT_DFB", wxPORT_DFB },
        { "wxPORT_GTK", wxPORT_GTK },
        { "wxPORT_MAC", wxPORT_MAC },
        { "wxPORT_MGL", wxPORT_MGL },
        { "wxPORT_MOTIF", wxPORT_MOTIF },
        { "wxPORT_MSW", wxPORT_MSW },
        { "wxPORT_OS2", wxPORT_OS2 },
        { "wxPORT_PALMOS", wxPORT_PALMOS },
        { "wxPORT_PM", wxPORT_PM },
        { "wxPORT_UNKNOWN", wxPORT_UNKNOWN },
        { "wxPORT_WINCE", wxPORT_WINCE },
        { "wxPORT_X11", wxPORT_X11 },
        { "wxRELEASE_NUMBER", wxRELEASE_NUMBER },

#if wxLUA_USE_wxRegEx && wxUSE_REGEX
        { "wxRE_BASIC", wxRE_BASIC },
        { "wxRE_DEFAULT", wxRE_DEFAULT },
        { "wxRE_EXTENDED", wxRE_EXTENDED },
        { "wxRE_ICASE", wxRE_ICASE },
        { "wxRE_NEWLINE", wxRE_NEWLINE },
        { "wxRE_NOSUB", wxRE_NOSUB },
        { "wxRE_NOTBOL", wxRE_NOTBOL },
        { "wxRE_NOTEOL", wxRE_NOTEOL },
#endif // wxLUA_USE_wxRegEx && wxUSE_REGEX

#if wxUSE_STREAMS
        { "wxSTREAM_EOF", wxSTREAM_EOF },
        { "wxSTREAM_NO_ERROR", wxSTREAM_NO_ERROR },
        { "wxSTREAM_READ_ERROR", wxSTREAM_READ_ERROR },
        { "wxSTREAM_WRITE_ERROR", wxSTREAM_WRITE_ERROR },
#endif // wxUSE_STREAMS

        { "wxSUBRELEASE_NUMBER", wxSUBRELEASE_NUMBER },

#if wxLUA_USE_wxFile && wxUSE_FILE
        { "wxS_DEFAULT", wxS_DEFAULT },
        { "wxS_IRGRP", wxS_IRGRP },
        { "wxS_IROTH", wxS_IROTH },
        { "wxS_IRUSR", wxS_IRUSR },
        { "wxS_IWGRP", wxS_IWGRP },
        { "wxS_IWOTH", wxS_IWOTH },
        { "wxS_IWUSR", wxS_IWUSR },
        { "wxS_IXGRP", wxS_IXGRP },
        { "wxS_IXOTH", wxS_IXOTH },
        { "wxS_IXUSR", wxS_IXUSR },
#endif // wxLUA_USE_wxFile && wxUSE_FILE

        { "wxTOKEN_DEFAULT", wxTOKEN_DEFAULT },
        { "wxTOKEN_INVALID", wxTOKEN_INVALID },
        { "wxTOKEN_RET_DELIMS", wxTOKEN_RET_DELIMS },
        { "wxTOKEN_RET_EMPTY", wxTOKEN_RET_EMPTY },
        { "wxTOKEN_RET_EMPTY_ALL", wxTOKEN_RET_EMPTY_ALL },
        { "wxTOKEN_STRTOK", wxTOKEN_STRTOK },

#if !wxCHECK_VERSION(2,8,0)
        { "wxUNIX", wxUNIX },
        { "wxUNKNOWN_PLATFORM", wxUNKNOWN_PLATFORM },
        { "wxWIN32S", wxWIN32S },
        { "wxWIN386", wxWIN386 },
        { "wxWIN95", wxWIN95 },
        { "wxWINDOWS", wxWINDOWS },
        { "wxWINDOWS_CE", wxWINDOWS_CE },
        { "wxWINDOWS_NT", wxWINDOWS_NT },
        { "wxWINDOWS_OS2", wxWINDOWS_OS2 },
        { "wxWINDOWS_POCKETPC", wxWINDOWS_POCKETPC },
        { "wxWINDOWS_SMARTPHONE", wxWINDOWS_SMARTPHONE },
        { "wxX11", wxX11 },
        { "wxXVIEW_X", wxXVIEW_X },
#endif // !wxCHECK_VERSION(2,8,0)


        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_wxbase() is called to register %define %string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_wxbase(size_t &count)
{
    static wxLuaBindString stringList[] =
    {
        { "wxFILE_SEP_DSK", wxT(":") },
        { "wxFILE_SEP_EXT", wxT(".") },
        { "wxFILE_SEP_PATH", wxLua_FILE_SEP_PATH },
        { "wxFILE_SEP_PATH_DOS", wxT("\\") },
        { "wxFILE_SEP_PATH_MAC", wxT(":") },
        { "wxFILE_SEP_PATH_UNIX", wxT("/") },
        { "wxFILE_SEP_PATH_VMS", wxT(".") },
        { "wxPATH_SEP", wxPATH_SEP },
        { "wxPATH_SEP_DOS", wxPATH_SEP_DOS },
        { "wxPATH_SEP_MAC", wxPATH_SEP_MAC },
        { "wxPATH_SEP_UNIX", wxPATH_SEP_UNIX },

#if wxLUA_USE_wxLog && wxUSE_LOG
        { "wxTRACE_MemAlloc", wxTRACE_MemAlloc },
        { "wxTRACE_Messages", wxTRACE_Messages },
#endif // wxLUA_USE_wxLog && wxUSE_LOG

#if (defined(__WXMSW__)) && (wxLUA_USE_wxLog && wxUSE_LOG)
        { "wxTRACE_OleCalls", wxTRACE_OleCalls },
#endif // (defined(__WXMSW__)) && (wxLUA_USE_wxLog && wxUSE_LOG)

#if wxLUA_USE_wxLog && wxUSE_LOG
        { "wxTRACE_RefCount", wxTRACE_RefCount },
        { "wxTRACE_ResAlloc", wxTRACE_ResAlloc },
#endif // wxLUA_USE_wxLog && wxUSE_LOG

        { "wxVERSION_STRING", wxVERSION_STRING },

        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_wxbase() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_wxbase(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {
#if wxLUA_USE_wxDateTime && wxUSE_DATETIME
        { "wxDefaultDateTime", &wxluatype_wxDateTime, &wxDefaultDateTime, NULL },
#endif // wxLUA_USE_wxDateTime && wxUSE_DATETIME

        { "wxTheMimeTypesManager", &wxluatype_wxMimeTypesManager, NULL, (const void **) &wxTheMimeTypesManager },

        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxbase() is called to register global functions
// ---------------------------------------------------------------------------

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxCHECK_VERSION[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// %function bool wxCHECK_VERSION(int major, int minor, int release) // actually a define
static int LUACALL wxLua_function_wxCHECK_VERSION(lua_State *L)
{
    // int release
    int release = (int)wxlua_getnumbertype(L, 3);
    // int minor
    int minor = (int)wxlua_getnumbertype(L, 2);
    // int major
    int major = (int)wxlua_getnumbertype(L, 1);
    // call wxCHECK_VERSION
    bool returns = (wxCHECK_VERSION(major, minor, release));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxCHECK_VERSION[1] = {{ wxLua_function_wxCHECK_VERSION, WXLUAMETHOD_CFUNCTION, 3, 3, s_wxluatypeArray_wxLua_function_wxCHECK_VERSION }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxCHECK_VERSION_FULL[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// %function bool wxCHECK_VERSION_FULL(int major, int minor, int release, int subrel) // actually a define
static int LUACALL wxLua_function_wxCHECK_VERSION_FULL(lua_State *L)
{
    // int subrel
    int subrel = (int)wxlua_getnumbertype(L, 4);
    // int release
    int release = (int)wxlua_getnumbertype(L, 3);
    // int minor
    int minor = (int)wxlua_getnumbertype(L, 2);
    // int major
    int major = (int)wxlua_getnumbertype(L, 1);
    // call wxCHECK_VERSION_FULL
    bool returns = (wxCHECK_VERSION_FULL(major, minor, release, subrel));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxCHECK_VERSION_FULL[1] = {{ wxLua_function_wxCHECK_VERSION_FULL, WXLUAMETHOD_CFUNCTION, 4, 4, s_wxluatypeArray_wxLua_function_wxCHECK_VERSION_FULL }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxConcatFiles[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
// %function bool wxConcatFiles(const wxString& file1, const wxString& file2,const wxString& file3)
static int LUACALL wxLua_function_wxConcatFiles(lua_State *L)
{
    // const wxString file3
    const wxString file3 = wxlua_getwxStringtype(L, 3);
    // const wxString file2
    const wxString file2 = wxlua_getwxStringtype(L, 2);
    // const wxString file1
    const wxString file1 = wxlua_getwxStringtype(L, 1);
    // call wxConcatFiles
    bool returns = (wxConcatFiles(file1, file2, file3));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxConcatFiles[1] = {{ wxLua_function_wxConcatFiles, WXLUAMETHOD_CFUNCTION, 3, 3, s_wxluatypeArray_wxLua_function_wxConcatFiles }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxCopyFile[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
// %function bool wxCopyFile(const wxString& file1, const wxString& file2, bool overwrite = true)
static int LUACALL wxLua_function_wxCopyFile(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool overwrite = true
    bool overwrite = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // const wxString file2
    const wxString file2 = wxlua_getwxStringtype(L, 2);
    // const wxString file1
    const wxString file1 = wxlua_getwxStringtype(L, 1);
    // call wxCopyFile
    bool returns = (wxCopyFile(file1, file2, overwrite));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxCopyFile[1] = {{ wxLua_function_wxCopyFile, WXLUAMETHOD_CFUNCTION, 2, 3, s_wxluatypeArray_wxLua_function_wxCopyFile }};


#if wxLUA_USE_wxObject
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxCreateDynamicObject[] = { &wxluatype_TSTRING, NULL };
// %function wxObject* wxCreateDynamicObject(const wxString& className)
static int LUACALL wxLua_function_wxCreateDynamicObject(lua_State *L)
{
    // const wxString className
    const wxString className = wxlua_getwxStringtype(L, 1);
    // call wxCreateDynamicObject
    wxObject* returns = (wxObject*)wxCreateDynamicObject(className);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxObject);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxCreateDynamicObject[1] = {{ wxLua_function_wxCreateDynamicObject, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxCreateDynamicObject }};

#endif // wxLUA_USE_wxObject

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxDirExists[] = { &wxluatype_TSTRING, NULL };
// %function bool wxDirExists(const wxString& dirname)
static int LUACALL wxLua_function_wxDirExists(lua_State *L)
{
    // const wxString dirname
    const wxString dirname = wxlua_getwxStringtype(L, 1);
    // call wxDirExists
    bool returns = (wxDirExists(dirname));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxDirExists[1] = {{ wxLua_function_wxDirExists, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxDirExists }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxDos2UnixFilename[] = { &wxluatype_TSTRING, NULL };
// %override wxLua_function_wxDos2UnixFilename
// %function wxString wxDos2UnixFilename(const wxString& s)
static int LUACALL wxLua_function_wxDos2UnixFilename(lua_State *L)
{
    wxString str = lua2wx(lua_tostring(L, 1));
    if (!str.IsEmpty())
    {
        // call wxDos2UnixFilename
        wxDos2UnixFilename((wxChar*)str.GetData());
        // push the result string
        wxlua_pushwxString(L, str);

        return 1;
    }
    return 0;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxDos2UnixFilename[1] = {{ wxLua_function_wxDos2UnixFilename, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxDos2UnixFilename }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxEndsWithPathSeparator[] = { &wxluatype_TSTRING, NULL };
// %function bool wxEndsWithPathSeparator(const wxString& pszFileName)
static int LUACALL wxLua_function_wxEndsWithPathSeparator(lua_State *L)
{
    // const wxString pszFileName
    const wxString pszFileName = wxlua_getwxStringtype(L, 1);
    // call wxEndsWithPathSeparator
    bool returns = (wxEndsWithPathSeparator(pszFileName));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxEndsWithPathSeparator[1] = {{ wxLua_function_wxEndsWithPathSeparator, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxEndsWithPathSeparator }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFileExists[] = { &wxluatype_TSTRING, NULL };
// %function bool wxFileExists(const wxString& filename)
static int LUACALL wxLua_function_wxFileExists(lua_State *L)
{
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 1);
    // call wxFileExists
    bool returns = (wxFileExists(filename));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFileExists[1] = {{ wxLua_function_wxFileExists, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxFileExists }};


#if wxLUA_USE_wxDateTime && wxUSE_DATETIME
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFileModificationTime[] = { &wxluatype_TSTRING, NULL };
// %function wxDateTime wxFileModificationTime(const wxString& filename)
static int LUACALL wxLua_function_wxFileModificationTime(lua_State *L)
{
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 1);
    // call wxFileModificationTime
    // allocate a new object using the copy constructor
    wxDateTime* returns = new wxDateTime(wxFileModificationTime(filename));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxDateTime((wxDateTime*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDateTime);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFileModificationTime[1] = {{ wxLua_function_wxFileModificationTime, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxFileModificationTime }};

#endif // wxLUA_USE_wxDateTime && wxUSE_DATETIME

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFileSize[] = { &wxluatype_TSTRING, NULL };
// %override wxLua_function_wxFileSize
// %function long wxFileSize(const wxString& fileName)
static int LUACALL wxLua_function_wxFileSize(lua_State *L)
{
    wxString str = lua2wx(lua_tostring(L, 1));
    if (!str.IsEmpty())
    {
        wxStructStat statstr;
        wxStat(str, &statstr);
        // push the result string
        lua_pushnumber(L, (int)statstr.st_size);

        return 1;
    }
    return 0;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFileSize[1] = {{ wxLua_function_wxFileSize, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxFileSize }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxFindFirstFile[] = { &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
// %function wxString wxFindFirstFile(const wxString& spec, int flags = 0)
static int LUACALL wxLua_function_wxFindFirstFile(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // const wxString spec
    const wxString spec = wxlua_getwxStringtype(L, 1);
    // call wxFindFirstFile
    wxString returns = (wxFindFirstFile(spec, flags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFindFirstFile[1] = {{ wxLua_function_wxFindFirstFile, WXLUAMETHOD_CFUNCTION, 1, 2, s_wxluatypeArray_wxLua_function_wxFindFirstFile }};

// %function wxString wxFindNextFile()
static int LUACALL wxLua_function_wxFindNextFile(lua_State *L)
{
    // call wxFindNextFile
    wxString returns = (wxFindNextFile());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxFindNextFile[1] = {{ wxLua_function_wxFindNextFile, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %function wxString wxGetCwd()
static int LUACALL wxLua_function_wxGetCwd(lua_State *L)
{
    // call wxGetCwd
    wxString returns = (wxGetCwd());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetCwd[1] = {{ wxLua_function_wxGetCwd, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};


#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetElapsedTime[] = { &wxluatype_TBOOLEAN, NULL };
// %wxcompat_2_6 %function long wxGetElapsedTime(bool resetTimer = true) // deprecated in 2.8 use wxStopWatch
static int LUACALL wxLua_function_wxGetElapsedTime(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool resetTimer = true
    bool resetTimer = (argCount >= 1 ? wxlua_getbooleantype(L, 1) : true);
    // call wxGetElapsedTime
    long  returns = (wxGetElapsedTime(resetTimer));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetElapsedTime[1] = {{ wxLua_function_wxGetElapsedTime, WXLUAMETHOD_CFUNCTION, 0, 1, s_wxluatypeArray_wxLua_function_wxGetElapsedTime }};

#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

// %function wxString wxGetEmailAddress()
static int LUACALL wxLua_function_wxGetEmailAddress(lua_State *L)
{
    // call wxGetEmailAddress
    wxString returns = (wxGetEmailAddress());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetEmailAddress[1] = {{ wxLua_function_wxGetEmailAddress, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetEnv[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
// %override wxLua_function_wxGetEnv
// %function bool wxGetEnv(const wxString& var, wxString *value)
static int LUACALL wxLua_function_wxGetEnv(lua_State *L)
{
    wxString var = wxlua_getwxStringtype(L, 1);
    wxString value;
    // call wxGetEnv
    bool returns = wxGetEnv(var, &value);
    // push the result number
    lua_pushboolean(L, returns);
    wxlua_pushwxString(L, value);
    // return the number of parameters
    return 2;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetEnv[1] = {{ wxLua_function_wxGetEnv, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_wxGetEnv }};


#if wxUSE_LONGLONG
// %function wxLongLong wxGetFreeMemory()
static int LUACALL wxLua_function_wxGetFreeMemory(lua_State *L)
{
    // call wxGetFreeMemory
    // allocate a new object using the copy constructor
    wxLongLong* returns = new wxLongLong(wxGetFreeMemory());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxLongLong((wxLongLong*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxLongLong);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetFreeMemory[1] = {{ wxLua_function_wxGetFreeMemory, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxUSE_LONGLONG

// %function wxString wxGetFullHostName()
static int LUACALL wxLua_function_wxGetFullHostName(lua_State *L)
{
    // call wxGetFullHostName
    wxString returns = (wxGetFullHostName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetFullHostName[1] = {{ wxLua_function_wxGetFullHostName, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %function wxString wxGetHomeDir()
static int LUACALL wxLua_function_wxGetHomeDir(lua_State *L)
{
    // call wxGetHomeDir
    wxString returns = (wxGetHomeDir());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetHomeDir[1] = {{ wxLua_function_wxGetHomeDir, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %function wxString wxGetHostName()
static int LUACALL wxLua_function_wxGetHostName(lua_State *L)
{
    // call wxGetHostName
    wxString returns = (wxGetHostName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetHostName[1] = {{ wxLua_function_wxGetHostName, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %function long wxGetLocalTime()
static int LUACALL wxLua_function_wxGetLocalTime(lua_State *L)
{
    // call wxGetLocalTime
    long  returns = (wxGetLocalTime());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetLocalTime[1] = {{ wxLua_function_wxGetLocalTime, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};


#if wxUSE_LONGLONG
// %function wxLongLong wxGetLocalTimeMillis()
static int LUACALL wxLua_function_wxGetLocalTimeMillis(lua_State *L)
{
    // call wxGetLocalTimeMillis
    // allocate a new object using the copy constructor
    wxLongLong* returns = new wxLongLong(wxGetLocalTimeMillis());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, (void*)returns, new wxLua_wxObject_wxLongLong((wxLongLong*)returns));
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxLongLong);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetLocalTimeMillis[1] = {{ wxLua_function_wxGetLocalTimeMillis, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxUSE_LONGLONG

#if wxUSE_INTL
// %function wxLocale* wxGetLocale()
static int LUACALL wxLua_function_wxGetLocale(lua_State *L)
{
    // call wxGetLocale
    wxLocale* returns = (wxLocale*)wxGetLocale();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxLocale);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetLocale[1] = {{ wxLua_function_wxGetLocale, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxUSE_INTL

// %function wxString wxGetOSDirectory()
static int LUACALL wxLua_function_wxGetOSDirectory(lua_State *L)
{
    // call wxGetOSDirectory
    wxString returns = (wxGetOSDirectory());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetOSDirectory[1] = {{ wxLua_function_wxGetOSDirectory, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %function wxString wxGetOsDescription()
static int LUACALL wxLua_function_wxGetOsDescription(lua_State *L)
{
    // call wxGetOsDescription
    wxString returns = (wxGetOsDescription());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetOsDescription[1] = {{ wxLua_function_wxGetOsDescription, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %override wxLua_function_wxGetOsVersion
// %function int wxGetOsVersion(int *major = NULL, int *minor = NULL)
static int LUACALL wxLua_function_wxGetOsVersion(lua_State *L)
{
    // int *minor = NULL
    int minor= 0;
    // int *major = NULL
    int major = 0;
    // call wxGetOsVersion
    int returns = wxGetOsVersion(&major, &minor);
    // push the result numbers
    lua_pushnumber(L, returns);
    lua_pushnumber(L, major);
    lua_pushnumber(L, minor);
    // return the number of parameters
    return 3;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetOsVersion[1] = {{ wxLua_function_wxGetOsVersion, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};


#if (!wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetTranslation1[] = { &wxluatype_TSTRING, NULL };
// !%wxchkver_2_8 %function wxString wxGetTranslation(const wxString& sz)
static int LUACALL wxLua_function_wxGetTranslation1(lua_State *L)
{
    // const wxString sz
    const wxString sz = wxlua_getwxStringtype(L, 1);
    // call wxGetTranslation
    wxString returns = (wxGetTranslation(sz));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetTranslation1[1] = {{ wxLua_function_wxGetTranslation1, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxGetTranslation1 }};

#endif // (!wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)

#if (wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetTranslation[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
// %wxchkver_2_8  %function wxString wxGetTranslation(const wxString& sz, const wxChar* domain=NULL)
static int LUACALL wxLua_function_wxGetTranslation(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxChar domain = NULL
    wxString  domain = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxEmptyString));
    // const wxString sz
    const wxString sz = wxlua_getwxStringtype(L, 1);
    // call wxGetTranslation
    wxString returns = (wxGetTranslation(sz, domain.IsEmpty() ? NULL : domain.c_str()));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetTranslation[1] = {{ wxLua_function_wxGetTranslation, WXLUAMETHOD_CFUNCTION, 1, 2, s_wxluatypeArray_wxLua_function_wxGetTranslation }};

#endif // (wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)

#if (!wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetTranslationPlural1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TINTEGER, NULL };
// !%wxchkver_2_8 %rename wxGetTranslationPlural %function wxString wxGetTranslation(const wxString& sz1, const wxString& sz2, size_t n)
static int LUACALL wxLua_function_wxGetTranslationPlural1(lua_State *L)
{
    // size_t n
    size_t n = (size_t)wxlua_getuintegertype(L, 3);
    // const wxString sz2
    const wxString sz2 = wxlua_getwxStringtype(L, 2);
    // const wxString sz1
    const wxString sz1 = wxlua_getwxStringtype(L, 1);
    // call wxGetTranslation
    wxString returns = (wxGetTranslation(sz1, sz2, n));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetTranslationPlural1[1] = {{ wxLua_function_wxGetTranslationPlural1, WXLUAMETHOD_CFUNCTION, 3, 3, s_wxluatypeArray_wxLua_function_wxGetTranslationPlural1 }};

#endif // (!wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)

#if (wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetTranslationPlural[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TINTEGER, &wxluatype_TSTRING, NULL };
// %wxchkver_2_8  %rename wxGetTranslationPlural %function wxString wxGetTranslation(const wxString& sz1, const wxString& sz2, size_t n, const wxChar* domain=NULL)
static int LUACALL wxLua_function_wxGetTranslationPlural(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxChar domain = NULL
    wxString  domain = (argCount >= 4 ? wxlua_getwxStringtype(L, 4) : wxString(wxEmptyString));
    // size_t n
    size_t n = (size_t)wxlua_getuintegertype(L, 3);
    // const wxString sz2
    const wxString sz2 = wxlua_getwxStringtype(L, 2);
    // const wxString sz1
    const wxString sz1 = wxlua_getwxStringtype(L, 1);
    // call wxGetTranslation
    wxString returns = (wxGetTranslation(sz1, sz2, n, domain.IsEmpty() ? NULL : domain.c_str()));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetTranslationPlural[1] = {{ wxLua_function_wxGetTranslationPlural, WXLUAMETHOD_CFUNCTION, 3, 4, s_wxluatypeArray_wxLua_function_wxGetTranslationPlural }};

#endif // (wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)

// %function long wxGetUTCTime()
static int LUACALL wxLua_function_wxGetUTCTime(lua_State *L)
{
    // call wxGetUTCTime
    long  returns = (wxGetUTCTime());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetUTCTime[1] = {{ wxLua_function_wxGetUTCTime, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxGetUserHome[] = { &wxluatype_TSTRING, NULL };
// %function wxString wxGetUserHome(const wxString& user = "")
static int LUACALL wxLua_function_wxGetUserHome(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString user = ""
    const wxString user = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxEmptyString));
    // call wxGetUserHome
    wxString returns = (wxGetUserHome(user));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetUserHome[1] = {{ wxLua_function_wxGetUserHome, WXLUAMETHOD_CFUNCTION, 0, 1, s_wxluatypeArray_wxLua_function_wxGetUserHome }};

// %function wxString wxGetUserId()
static int LUACALL wxLua_function_wxGetUserId(lua_State *L)
{
    // call wxGetUserId
    wxString returns = (wxGetUserId());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetUserId[1] = {{ wxLua_function_wxGetUserId, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// %function wxString wxGetUserName()
static int LUACALL wxLua_function_wxGetUserName(lua_State *L)
{
    // call wxGetUserName
    wxString returns = (wxGetUserName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxGetUserName[1] = {{ wxLua_function_wxGetUserName, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};


#if wxUSE_ON_FATAL_EXCEPTION
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxHandleFatalExceptions[] = { &wxluatype_TBOOLEAN, NULL };
//     %function bool wxHandleFatalExceptions(bool doIt = true)
static int LUACALL wxLua_function_wxHandleFatalExceptions(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool doIt = true
    bool doIt = (argCount >= 1 ? wxlua_getbooleantype(L, 1) : true);
    // call wxHandleFatalExceptions
    bool returns = (wxHandleFatalExceptions(doIt));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxHandleFatalExceptions[1] = {{ wxLua_function_wxHandleFatalExceptions, WXLUAMETHOD_CFUNCTION, 0, 1, s_wxluatypeArray_wxLua_function_wxHandleFatalExceptions }};

#endif // wxUSE_ON_FATAL_EXCEPTION

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxIsAbsolutePath[] = { &wxluatype_TSTRING, NULL };
// %function bool wxIsAbsolutePath(const wxString& filename)
static int LUACALL wxLua_function_wxIsAbsolutePath(lua_State *L)
{
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 1);
    // call wxIsAbsolutePath
    bool returns = (wxIsAbsolutePath(filename));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxIsAbsolutePath[1] = {{ wxLua_function_wxIsAbsolutePath, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxIsAbsolutePath }};


#if wxCHECK_VERSION(2,8,0)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxIsExecutable[] = { &wxluatype_TSTRING, NULL };
// %wxchkver_2_8 %function bool wxIsExecutable(const wxString &path)
static int LUACALL wxLua_function_wxIsExecutable(lua_State *L)
{
    // const wxString path
    const wxString path = wxlua_getwxStringtype(L, 1);
    // call wxIsExecutable
    bool returns = (wxIsExecutable(path));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxIsExecutable[1] = {{ wxLua_function_wxIsExecutable, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxIsExecutable }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxIsReadable[] = { &wxluatype_TSTRING, NULL };
// %wxchkver_2_8 %function bool wxIsReadable(const wxString &path)
static int LUACALL wxLua_function_wxIsReadable(lua_State *L)
{
    // const wxString path
    const wxString path = wxlua_getwxStringtype(L, 1);
    // call wxIsReadable
    bool returns = (wxIsReadable(path));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxIsReadable[1] = {{ wxLua_function_wxIsReadable, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxIsReadable }};

#endif // wxCHECK_VERSION(2,8,0)

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxIsWild[] = { &wxluatype_TSTRING, NULL };
// %function bool wxIsWild(const wxString& pattern)
static int LUACALL wxLua_function_wxIsWild(lua_State *L)
{
    // const wxString pattern
    const wxString pattern = wxlua_getwxStringtype(L, 1);
    // call wxIsWild
    bool returns = (wxIsWild(pattern));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxIsWild[1] = {{ wxLua_function_wxIsWild, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxIsWild }};


#if wxCHECK_VERSION(2,8,0)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxIsWritable[] = { &wxluatype_TSTRING, NULL };
// %wxchkver_2_8 %function bool wxIsWritable(const wxString &path)
static int LUACALL wxLua_function_wxIsWritable(lua_State *L)
{
    // const wxString path
    const wxString path = wxlua_getwxStringtype(L, 1);
    // call wxIsWritable
    bool returns = (wxIsWritable(path));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxIsWritable[1] = {{ wxLua_function_wxIsWritable, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxIsWritable }};

#endif // wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxLog && wxUSE_LOG
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxLogDebug[] = { &wxluatype_TSTRING, NULL };
// %function void wxLogDebug(const wxString& message)
static int LUACALL wxLua_function_wxLogDebug(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxLogDebug
    wxLogDebug(message);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxLogDebug[1] = {{ wxLua_function_wxLogDebug, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxLogDebug }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxLogError[] = { &wxluatype_TSTRING, NULL };
// %function void wxLogError(const wxString& message)
static int LUACALL wxLua_function_wxLogError(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxLogError
    wxLogError(message);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxLogError[1] = {{ wxLua_function_wxLogError, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxLogError }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxLogFatalError[] = { &wxluatype_TSTRING, NULL };
// %function void wxLogFatalError(const wxString& message)
static int LUACALL wxLua_function_wxLogFatalError(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxLogFatalError
    wxLogFatalError(message);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxLogFatalError[1] = {{ wxLua_function_wxLogFatalError, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxLogFatalError }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxLogMessage[] = { &wxluatype_TSTRING, NULL };
// %function void wxLogMessage(const wxString& message)
static int LUACALL wxLua_function_wxLogMessage(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxLogMessage
    wxLogMessage(message);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxLogMessage[1] = {{ wxLua_function_wxLogMessage, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxLogMessage }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxLogSysError[] = { &wxluatype_TSTRING, NULL };
// %function void wxLogSysError(const wxString& message)
static int LUACALL wxLua_function_wxLogSysError(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxLogSysError
    wxLogSysError(message);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxLogSysError[1] = {{ wxLua_function_wxLogSysError, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxLogSysError }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxLogTrace[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
// %function void wxLogTrace(const wxString& mask, const wxString& message)
static int LUACALL wxLua_function_wxLogTrace(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 2);
    // const wxString mask
    const wxString mask = wxlua_getwxStringtype(L, 1);
    // call wxLogTrace
    wxLogTrace(mask, message);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxLogTrace[1] = {{ wxLua_function_wxLogTrace, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_wxLogTrace }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxLogVerbose[] = { &wxluatype_TSTRING, NULL };
// %function void wxLogVerbose(const wxString& message)
static int LUACALL wxLua_function_wxLogVerbose(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxLogVerbose
    wxLogVerbose(message);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxLogVerbose[1] = {{ wxLua_function_wxLogVerbose, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxLogVerbose }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxLogWarning[] = { &wxluatype_TSTRING, NULL };
// %function void wxLogWarning(const wxString& message)
static int LUACALL wxLua_function_wxLogWarning(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 1);
    // call wxLogWarning
    wxLogWarning(message);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxLogWarning[1] = {{ wxLua_function_wxLogWarning, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxLogWarning }};

#endif // wxLUA_USE_wxLog && wxUSE_LOG

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxMatchWild[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
// %function bool wxMatchWild(const wxString& pattern, const wxString& text, bool dot_special)
static int LUACALL wxLua_function_wxMatchWild(lua_State *L)
{
    // bool dot_special
    bool dot_special = wxlua_getbooleantype(L, 3);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // const wxString pattern
    const wxString pattern = wxlua_getwxStringtype(L, 1);
    // call wxMatchWild
    bool returns = (wxMatchWild(pattern, text, dot_special));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxMatchWild[1] = {{ wxLua_function_wxMatchWild, WXLUAMETHOD_CFUNCTION, 3, 3, s_wxluatypeArray_wxLua_function_wxMatchWild }};


#if wxCHECK_VERSION(2,6,0)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxMicroSleep[] = { &wxluatype_TINTEGER, NULL };
// %wxchkver_2_6 %function void wxMicroSleep(unsigned long microseconds)
static int LUACALL wxLua_function_wxMicroSleep(lua_State *L)
{
    // unsigned long microseconds
    unsigned long microseconds = (unsigned long)wxlua_getuintegertype(L, 1);
    // call wxMicroSleep
    wxMicroSleep(microseconds);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxMicroSleep[1] = {{ wxLua_function_wxMicroSleep, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxMicroSleep }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxMilliSleep[] = { &wxluatype_TINTEGER, NULL };
// %wxchkver_2_6 %function void wxMilliSleep(unsigned long milliseconds)
static int LUACALL wxLua_function_wxMilliSleep(lua_State *L)
{
    // unsigned long milliseconds
    unsigned long milliseconds = (unsigned long)wxlua_getuintegertype(L, 1);
    // call wxMilliSleep
    wxMilliSleep(milliseconds);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxMilliSleep[1] = {{ wxLua_function_wxMilliSleep, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxMilliSleep }};

#endif // wxCHECK_VERSION(2,6,0)

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxMkdir[] = { &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
// %function bool wxMkdir(const wxString& dir, int perm = 0777)
static int LUACALL wxLua_function_wxMkdir(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int perm = 0777
    int perm = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0777);
    // const wxString dir
    const wxString dir = wxlua_getwxStringtype(L, 1);
    // call wxMkdir
    bool returns = (wxMkdir(dir, perm));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxMkdir[1] = {{ wxLua_function_wxMkdir, WXLUAMETHOD_CFUNCTION, 1, 2, s_wxluatypeArray_wxLua_function_wxMkdir }};

// %function wxString wxNow()
static int LUACALL wxLua_function_wxNow(lua_State *L)
{
    // call wxNow
    wxString returns = (wxNow());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxNow[1] = {{ wxLua_function_wxNow, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxPathOnly[] = { &wxluatype_TSTRING, NULL };
// %function wxString wxPathOnly(const wxString& path)
static int LUACALL wxLua_function_wxPathOnly(lua_State *L)
{
    // const wxString path
    const wxString path = wxlua_getwxStringtype(L, 1);
    // call wxPathOnly
    wxString returns = (wxPathOnly(path));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxPathOnly[1] = {{ wxLua_function_wxPathOnly, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxPathOnly }};


#if wxCHECK_VERSION(2,8,0)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxRealPath[] = { &wxluatype_TSTRING, NULL };
// %wxchkver_2_8  %function wxString wxRealPath(const wxString& path)
static int LUACALL wxLua_function_wxRealPath(lua_State *L)
{
    // const wxString path
    const wxString path = wxlua_getwxStringtype(L, 1);
    // call wxRealPath
    wxString returns = (wxRealPath(path));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxRealPath[1] = {{ wxLua_function_wxRealPath, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxRealPath }};

#endif // wxCHECK_VERSION(2,8,0)

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxRemoveFile[] = { &wxluatype_TSTRING, NULL };
// %function bool wxRemoveFile(const wxString& file)
static int LUACALL wxLua_function_wxRemoveFile(lua_State *L)
{
    // const wxString file
    const wxString file = wxlua_getwxStringtype(L, 1);
    // call wxRemoveFile
    bool returns = (wxRemoveFile(file));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxRemoveFile[1] = {{ wxLua_function_wxRemoveFile, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxRemoveFile }};


#if wxCHECK_VERSION(2,8,0)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxRenameFile1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
// %wxchkver_2_8  %function bool wxRenameFile(const wxString& file1, const wxString& file2, bool overwrite = true)
static int LUACALL wxLua_function_wxRenameFile1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool overwrite = true
    bool overwrite = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // const wxString file2
    const wxString file2 = wxlua_getwxStringtype(L, 2);
    // const wxString file1
    const wxString file1 = wxlua_getwxStringtype(L, 1);
    // call wxRenameFile
    bool returns = (wxRenameFile(file1, file2, overwrite));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxRenameFile1[1] = {{ wxLua_function_wxRenameFile1, WXLUAMETHOD_CFUNCTION, 2, 3, s_wxluatypeArray_wxLua_function_wxRenameFile1 }};

#endif // wxCHECK_VERSION(2,8,0)

#if !wxCHECK_VERSION(2,8,0)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxRenameFile[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
// !%wxchkver_2_8 %function bool wxRenameFile(const wxString& file1, const wxString& file2)
static int LUACALL wxLua_function_wxRenameFile(lua_State *L)
{
    // const wxString file2
    const wxString file2 = wxlua_getwxStringtype(L, 2);
    // const wxString file1
    const wxString file1 = wxlua_getwxStringtype(L, 1);
    // call wxRenameFile
    bool returns = (wxRenameFile(file1, file2));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxRenameFile[1] = {{ wxLua_function_wxRenameFile, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_wxRenameFile }};

#endif // !wxCHECK_VERSION(2,8,0)

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxRmdir[] = { &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
// %function bool wxRmdir(const wxString& dir, int flags=0)
static int LUACALL wxLua_function_wxRmdir(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // const wxString dir
    const wxString dir = wxlua_getwxStringtype(L, 1);
    // call wxRmdir
    bool returns = (wxRmdir(dir, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxRmdir[1] = {{ wxLua_function_wxRmdir, WXLUAMETHOD_CFUNCTION, 1, 2, s_wxluatypeArray_wxLua_function_wxRmdir }};


#if wxLUA_USE_wxLog && wxUSE_LOG
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxSafeShowMessage[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
// %function void wxSafeShowMessage(const wxString& title, const wxString& text)
static int LUACALL wxLua_function_wxSafeShowMessage(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 1);
    // call wxSafeShowMessage
    wxSafeShowMessage(title, text);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxSafeShowMessage[1] = {{ wxLua_function_wxSafeShowMessage, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_wxSafeShowMessage }};

#endif // wxLUA_USE_wxLog && wxUSE_LOG

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxSetEnv[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
// %function bool wxSetEnv(const wxString& var, const wxString& value)
static int LUACALL wxLua_function_wxSetEnv(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 2);
    // const wxString var
    const wxString var = wxlua_getwxStringtype(L, 1);
    // call wxSetEnv
    bool returns = (wxSetEnv(var, value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxSetEnv[1] = {{ wxLua_function_wxSetEnv, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_wxSetEnv }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxSetWorkingDirectory[] = { &wxluatype_TSTRING, NULL };
// %function bool wxSetWorkingDirectory(const wxString& dir)
static int LUACALL wxLua_function_wxSetWorkingDirectory(lua_State *L)
{
    // const wxString dir
    const wxString dir = wxlua_getwxStringtype(L, 1);
    // call wxSetWorkingDirectory
    bool returns = (wxSetWorkingDirectory(dir));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxSetWorkingDirectory[1] = {{ wxLua_function_wxSetWorkingDirectory, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxSetWorkingDirectory }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxSleep[] = { &wxluatype_TNUMBER, NULL };
// %function void wxSleep(int secs)
static int LUACALL wxLua_function_wxSleep(lua_State *L)
{
    // int secs
    int secs = (int)wxlua_getnumbertype(L, 1);
    // call wxSleep
    wxSleep(secs);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxSleep[1] = {{ wxLua_function_wxSleep, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxSleep }};


#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
// %wxcompat_2_6 %function void wxStartTimer()                           // deprecated in 2.8 use wxStopWatch
static int LUACALL wxLua_function_wxStartTimer(lua_State *L)
{
    // call wxStartTimer
    wxStartTimer();

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxStartTimer[1] = {{ wxLua_function_wxStartTimer, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

#if wxLUA_USE_wxLog && wxUSE_LOG
// %function unsigned long wxSysErrorCode()
static int LUACALL wxLua_function_wxSysErrorCode(lua_State *L)
{
    // call wxSysErrorCode
    unsigned long returns = (wxSysErrorCode());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxSysErrorCode[1] = {{ wxLua_function_wxSysErrorCode, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxSysErrorMsg[] = { &wxluatype_TINTEGER, NULL };
// %function wxString wxSysErrorMsg(unsigned long nErrCode = 0)
static int LUACALL wxLua_function_wxSysErrorMsg(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // unsigned long nErrCode = 0
    unsigned long nErrCode = (argCount >= 1 ? (unsigned long)wxlua_getuintegertype(L, 1) : 0);
    // call wxSysErrorMsg
    wxString returns = (wxSysErrorMsg(nErrCode));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxSysErrorMsg[1] = {{ wxLua_function_wxSysErrorMsg, WXLUAMETHOD_CFUNCTION, 0, 1, s_wxluatypeArray_wxLua_function_wxSysErrorMsg }};

#endif // wxLUA_USE_wxLog && wxUSE_LOG

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxUnix2DosFilename[] = { &wxluatype_TSTRING, NULL };
// %override wxLua_function_wxUnix2DosFilename
// %function wxString wxUnix2DosFilename(const wxString& s)
static int LUACALL wxLua_function_wxUnix2DosFilename(lua_State *L)
{
    wxString str = lua2wx(lua_tostring(L, 1));
    if (!str.IsEmpty())
    {
        // call wxUnix2DosFilename
        wxUnix2DosFilename((wxChar*)str.GetData());
        // push the result string
        wxlua_pushwxString(L, str);

        return 1;
    }
    return 0;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxUnix2DosFilename[1] = {{ wxLua_function_wxUnix2DosFilename, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxUnix2DosFilename }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_wxUnsetEnv[] = { &wxluatype_TSTRING, NULL };
// %function bool wxUnsetEnv(const wxString& var)
static int LUACALL wxLua_function_wxUnsetEnv(lua_State *L)
{
    // const wxString var
    const wxString var = wxlua_getwxStringtype(L, 1);
    // call wxUnsetEnv
    bool returns = (wxUnsetEnv(var));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxUnsetEnv[1] = {{ wxLua_function_wxUnsetEnv, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxUnsetEnv }};


#if !wxCHECK_VERSION(2,6,0)
static wxLuaArgType s_wxluatypeArray_wxLua_function_wxUsleep[] = { &wxluatype_TINTEGER, NULL };
// !%wxchkver_2_6 %function void wxUsleep(unsigned long milliseconds)
static int LUACALL wxLua_function_wxUsleep(lua_State *L)
{
    // unsigned long milliseconds
    unsigned long milliseconds = (unsigned long)wxlua_getuintegertype(L, 1);
    // call wxUsleep
    wxUsleep(milliseconds);

    return 0;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxUsleep[1] = {{ wxLua_function_wxUsleep, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_wxUsleep }};

#endif // !wxCHECK_VERSION(2,6,0)

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxbase() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_wxbase(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {
        { "wxCHECK_VERSION", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxCHECK_VERSION, 1, NULL },
        { "wxCHECK_VERSION_FULL", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxCHECK_VERSION_FULL, 1, NULL },
        { "wxConcatFiles", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxConcatFiles, 1, NULL },
        { "wxCopyFile", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxCopyFile, 1, NULL },

#if wxLUA_USE_wxObject
        { "wxCreateDynamicObject", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxCreateDynamicObject, 1, NULL },
#endif // wxLUA_USE_wxObject

        { "wxDirExists", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxDirExists, 1, NULL },
        { "wxDos2UnixFilename", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxDos2UnixFilename, 1, NULL },
        { "wxEndsWithPathSeparator", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxEndsWithPathSeparator, 1, NULL },
        { "wxFileExists", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFileExists, 1, NULL },

#if wxLUA_USE_wxDateTime && wxUSE_DATETIME
        { "wxFileModificationTime", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFileModificationTime, 1, NULL },
#endif // wxLUA_USE_wxDateTime && wxUSE_DATETIME

        { "wxFileSize", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFileSize, 1, NULL },
        { "wxFindFirstFile", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFindFirstFile, 1, NULL },
        { "wxFindNextFile", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxFindNextFile, 1, NULL },
        { "wxGetCwd", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetCwd, 1, NULL },

#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
        { "wxGetElapsedTime", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetElapsedTime, 1, NULL },
#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

        { "wxGetEmailAddress", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetEmailAddress, 1, NULL },
        { "wxGetEnv", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetEnv, 1, NULL },

#if wxUSE_LONGLONG
        { "wxGetFreeMemory", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetFreeMemory, 1, NULL },
#endif // wxUSE_LONGLONG

        { "wxGetFullHostName", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetFullHostName, 1, NULL },
        { "wxGetHomeDir", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetHomeDir, 1, NULL },
        { "wxGetHostName", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetHostName, 1, NULL },
        { "wxGetLocalTime", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetLocalTime, 1, NULL },

#if wxUSE_LONGLONG
        { "wxGetLocalTimeMillis", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetLocalTimeMillis, 1, NULL },
#endif // wxUSE_LONGLONG

#if wxUSE_INTL
        { "wxGetLocale", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetLocale, 1, NULL },
#endif // wxUSE_INTL

        { "wxGetOSDirectory", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetOSDirectory, 1, NULL },
        { "wxGetOsDescription", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetOsDescription, 1, NULL },
        { "wxGetOsVersion", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetOsVersion, 1, NULL },

#if (!wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)
        { "wxGetTranslation", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetTranslation1, 1, NULL },
#elif (wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)
        { "wxGetTranslation", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetTranslation, 1, NULL },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)
#if (!wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)
        { "wxGetTranslationPlural", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetTranslationPlural1, 1, NULL },
#elif (wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)
        { "wxGetTranslationPlural", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetTranslationPlural, 1, NULL },
#endif // (wxCHECK_VERSION(2,8,0)) && (wxUSE_INTL)
        { "wxGetUTCTime", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetUTCTime, 1, NULL },
        { "wxGetUserHome", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetUserHome, 1, NULL },
        { "wxGetUserId", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetUserId, 1, NULL },
        { "wxGetUserName", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxGetUserName, 1, NULL },

#if wxUSE_ON_FATAL_EXCEPTION
        { "wxHandleFatalExceptions", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxHandleFatalExceptions, 1, NULL },
#endif // wxUSE_ON_FATAL_EXCEPTION

        { "wxIsAbsolutePath", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxIsAbsolutePath, 1, NULL },

#if wxCHECK_VERSION(2,8,0)
        { "wxIsExecutable", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxIsExecutable, 1, NULL },
        { "wxIsReadable", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxIsReadable, 1, NULL },
#endif // wxCHECK_VERSION(2,8,0)

        { "wxIsWild", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxIsWild, 1, NULL },

#if wxCHECK_VERSION(2,8,0)
        { "wxIsWritable", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxIsWritable, 1, NULL },
#endif // wxCHECK_VERSION(2,8,0)

#if wxLUA_USE_wxLog && wxUSE_LOG
        { "wxLogDebug", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxLogDebug, 1, NULL },
        { "wxLogError", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxLogError, 1, NULL },
        { "wxLogFatalError", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxLogFatalError, 1, NULL },
        { "wxLogMessage", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxLogMessage, 1, NULL },
        { "wxLogSysError", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxLogSysError, 1, NULL },
        { "wxLogTrace", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxLogTrace, 1, NULL },
        { "wxLogVerbose", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxLogVerbose, 1, NULL },
        { "wxLogWarning", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxLogWarning, 1, NULL },
#endif // wxLUA_USE_wxLog && wxUSE_LOG

        { "wxMatchWild", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxMatchWild, 1, NULL },

#if wxCHECK_VERSION(2,6,0)
        { "wxMicroSleep", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxMicroSleep, 1, NULL },
        { "wxMilliSleep", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxMilliSleep, 1, NULL },
#endif // wxCHECK_VERSION(2,6,0)

        { "wxMkdir", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxMkdir, 1, NULL },
        { "wxNow", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxNow, 1, NULL },
        { "wxPathOnly", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxPathOnly, 1, NULL },

#if wxCHECK_VERSION(2,8,0)
        { "wxRealPath", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxRealPath, 1, NULL },
#endif // wxCHECK_VERSION(2,8,0)

        { "wxRemoveFile", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxRemoveFile, 1, NULL },

#if wxCHECK_VERSION(2,8,0)
        { "wxRenameFile", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxRenameFile1, 1, NULL },
#elif !wxCHECK_VERSION(2,8,0)
        { "wxRenameFile", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxRenameFile, 1, NULL },
#endif // !wxCHECK_VERSION(2,8,0)
        { "wxRmdir", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxRmdir, 1, NULL },

#if wxLUA_USE_wxLog && wxUSE_LOG
        { "wxSafeShowMessage", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxSafeShowMessage, 1, NULL },
#endif // wxLUA_USE_wxLog && wxUSE_LOG

        { "wxSetEnv", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxSetEnv, 1, NULL },
        { "wxSetWorkingDirectory", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxSetWorkingDirectory, 1, NULL },
        { "wxSleep", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxSleep, 1, NULL },

#if (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)
        { "wxStartTimer", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxStartTimer, 1, NULL },
#endif // (defined(WXWIN_COMPATIBILITY_2_6) && WXWIN_COMPATIBILITY_2_6)

#if wxLUA_USE_wxLog && wxUSE_LOG
        { "wxSysErrorCode", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxSysErrorCode, 1, NULL },
        { "wxSysErrorMsg", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxSysErrorMsg, 1, NULL },
#endif // wxLUA_USE_wxLog && wxUSE_LOG

        { "wxUnix2DosFilename", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxUnix2DosFilename, 1, NULL },
        { "wxUnsetEnv", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxUnsetEnv, 1, NULL },

#if !wxCHECK_VERSION(2,6,0)
        { "wxUsleep", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxUsleep, 1, NULL },
#endif // !wxCHECK_VERSION(2,6,0)


        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_wxbase() is called to register classes
// ---------------------------------------------------------------------------

static const char* wxluaclassname_wxArchiveFSHandler = "wxArchiveFSHandler";
static const char* wxluaclassname_wxArrayInt = "wxArrayInt";
static const char* wxluaclassname_wxArrayString = "wxArrayString";
static const char* wxluaclassname_wxClassInfo = "wxClassInfo";
static const char* wxluaclassname_wxClientData = "wxClientData";
static const char* wxluaclassname_wxClientDataContainer = "wxClientDataContainer";
static const char* wxluaclassname_wxConfig = "wxConfig";
static const char* wxluaclassname_wxConfigBase = "wxConfigBase";
static const char* wxluaclassname_wxConfigPathChanger = "wxConfigPathChanger";
static const char* wxluaclassname_wxCriticalSection = "wxCriticalSection";
static const char* wxluaclassname_wxCriticalSectionLocker = "wxCriticalSectionLocker";
static const char* wxluaclassname_wxDataInputStream = "wxDataInputStream";
static const char* wxluaclassname_wxDataOutputStream = "wxDataOutputStream";
static const char* wxluaclassname_wxDateSpan = "wxDateSpan";
static const char* wxluaclassname_wxDateTime = "wxDateTime";
static const char* wxluaclassname_wxDateTimeArray = "wxDateTimeArray";
static const char* wxluaclassname_wxDateTimeHolidayAuthority = "wxDateTimeHolidayAuthority";
static const char* wxluaclassname_wxDateTimeWorkDays = "wxDateTimeWorkDays";
static const char* wxluaclassname_wxDir = "wxDir";
static const char* wxluaclassname_wxDynamicLibrary = "wxDynamicLibrary";
static const char* wxluaclassname_wxDynamicLibraryDetails = "wxDynamicLibraryDetails";
static const char* wxluaclassname_wxDynamicLibraryDetailsArray = "wxDynamicLibraryDetailsArray";
static const char* wxluaclassname_wxFSFile = "wxFSFile";
static const char* wxluaclassname_wxFile = "wxFile";
static const char* wxluaclassname_wxFileConfig = "wxFileConfig";
static const char* wxluaclassname_wxFileInputStream = "wxFileInputStream";
static const char* wxluaclassname_wxFileName = "wxFileName";
static const char* wxluaclassname_wxFileOutputStream = "wxFileOutputStream";
static const char* wxluaclassname_wxFileSystem = "wxFileSystem";
static const char* wxluaclassname_wxFileSystemHandler = "wxFileSystemHandler";
static const char* wxluaclassname_wxFileType = "wxFileType";
static const char* wxluaclassname_wxFileTypeInfo = "wxFileTypeInfo";
static const char* wxluaclassname_wxFileType_MessageParameters = "wxFileType_MessageParameters";
static const char* wxluaclassname_wxFilterFSHandler = "wxFilterFSHandler";
static const char* wxluaclassname_wxIconLocation = "wxIconLocation";
static const char* wxluaclassname_wxInputStream = "wxInputStream";
static const char* wxluaclassname_wxInternetFSHandler = "wxInternetFSHandler";
static const char* wxluaclassname_wxLanguageInfo = "wxLanguageInfo";
static const char* wxluaclassname_wxList = "wxList";
static const char* wxluaclassname_wxLocalFSHandler = "wxLocalFSHandler";
static const char* wxluaclassname_wxLocale = "wxLocale";
static const char* wxluaclassname_wxLog = "wxLog";
static const char* wxluaclassname_wxLogBuffer = "wxLogBuffer";
static const char* wxluaclassname_wxLogChain = "wxLogChain";
static const char* wxluaclassname_wxLogNull = "wxLogNull";
static const char* wxluaclassname_wxLogPassThrough = "wxLogPassThrough";
static const char* wxluaclassname_wxLongLong = "wxLongLong";
static const char* wxluaclassname_wxMemoryConfig = "wxMemoryConfig";
static const char* wxluaclassname_wxMemoryInputStream = "wxMemoryInputStream";
static const char* wxluaclassname_wxMimeTypesManager = "wxMimeTypesManager";
static const char* wxluaclassname_wxNode = "wxNode";
static const char* wxluaclassname_wxObject = "wxObject";
static const char* wxluaclassname_wxObjectRefData = "wxObjectRefData";
static const char* wxluaclassname_wxOutputStream = "wxOutputStream";
static const char* wxluaclassname_wxPathList = "wxPathList";
static const char* wxluaclassname_wxPlatformInfo = "wxPlatformInfo";
static const char* wxluaclassname_wxRegEx = "wxRegEx";
static const char* wxluaclassname_wxSingleInstanceChecker = "wxSingleInstanceChecker";
static const char* wxluaclassname_wxSortedArrayString = "wxSortedArrayString";
static const char* wxluaclassname_wxStandardPaths = "wxStandardPaths";
static const char* wxluaclassname_wxStopWatch = "wxStopWatch";
static const char* wxluaclassname_wxStreamBase = "wxStreamBase";
static const char* wxluaclassname_wxString = "wxString";
static const char* wxluaclassname_wxStringClientData = "wxStringClientData";
static const char* wxluaclassname_wxStringTokenizer = "wxStringTokenizer";
static const char* wxluaclassname_wxSystemOptions = "wxSystemOptions";
static const char* wxluaclassname_wxTempFile = "wxTempFile";
static const char* wxluaclassname_wxTimeSpan = "wxTimeSpan";
static const char* wxluaclassname_wxULongLong = "wxULongLong";

static const char* wxluabaseclassnames_wxArchiveFSHandler[] = { wxluaclassname_wxFileSystemHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxArchiveFSHandler[] = { NULL };
static const char* wxluabaseclassnames_wxConfig[] = { wxluaclassname_wxConfigBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxConfig[] = { NULL };
static const char* wxluabaseclassnames_wxDateTimeWorkDays[] = { wxluaclassname_wxDateTimeHolidayAuthority, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDateTimeWorkDays[] = { NULL };
static const char* wxluabaseclassnames_wxFSFile[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFSFile[] = { NULL };
static const char* wxluabaseclassnames_wxFileConfig[] = { wxluaclassname_wxConfigBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileConfig[] = { NULL };
static const char* wxluabaseclassnames_wxFileInputStream[] = { wxluaclassname_wxInputStream, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileInputStream[] = { NULL };
static const char* wxluabaseclassnames_wxFileOutputStream[] = { wxluaclassname_wxOutputStream, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileOutputStream[] = { NULL };
static const char* wxluabaseclassnames_wxFileSystem[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileSystem[] = { NULL };
static const char* wxluabaseclassnames_wxFileSystemHandler[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileSystemHandler[] = { NULL };
static const char* wxluabaseclassnames_wxFilterFSHandler[] = { wxluaclassname_wxFileSystemHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFilterFSHandler[] = { NULL };
static const char* wxluabaseclassnames_wxInputStream[] = { wxluaclassname_wxStreamBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxInputStream[] = { NULL };
static const char* wxluabaseclassnames_wxInternetFSHandler[] = { wxluaclassname_wxFileSystemHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxInternetFSHandler[] = { NULL };
static const char* wxluabaseclassnames_wxList[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxList[] = { NULL };
static const char* wxluabaseclassnames_wxLocalFSHandler[] = { wxluaclassname_wxFileSystemHandler, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLocalFSHandler[] = { NULL };
static const char* wxluabaseclassnames_wxLogBuffer[] = { wxluaclassname_wxLog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLogBuffer[] = { NULL };
static const char* wxluabaseclassnames_wxLogChain[] = { wxluaclassname_wxLog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLogChain[] = { NULL };
static const char* wxluabaseclassnames_wxLogNull[] = { wxluaclassname_wxLog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLogNull[] = { NULL };
static const char* wxluabaseclassnames_wxLogPassThrough[] = { wxluaclassname_wxLogChain, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLogPassThrough[] = { NULL };
static const char* wxluabaseclassnames_wxMemoryConfig[] = { wxluaclassname_wxFileConfig, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMemoryConfig[] = { NULL };
static const char* wxluabaseclassnames_wxMemoryInputStream[] = { wxluaclassname_wxInputStream, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMemoryInputStream[] = { NULL };
static const char* wxluabaseclassnames_wxOutputStream[] = { wxluaclassname_wxStreamBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxOutputStream[] = { NULL };
static const char* wxluabaseclassnames_wxPathList[] = { wxluaclassname_wxArrayString, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPathList[] = { NULL };
static const char* wxluabaseclassnames_wxSortedArrayString[] = { wxluaclassname_wxArrayString, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSortedArrayString[] = { NULL };
static const char* wxluabaseclassnames_wxStringClientData[] = { wxluaclassname_wxClientData, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStringClientData[] = { NULL };
static const char* wxluabaseclassnames_wxStringTokenizer[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStringTokenizer[] = { NULL };
static const char* wxluabaseclassnames_wxSystemOptions[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSystemOptions[] = { NULL };
// ---------------------------------------------------------------------------
// Lua Tag Method Values and Tables for each Class
// ---------------------------------------------------------------------------

#if (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)
    extern wxLuaBindMethod wxArchiveFSHandler_methods[];
    extern int wxArchiveFSHandler_methodCount;
    extern wxLuaBindMethod wxFSFile_methods[];
    extern int wxFSFile_methodCount;
    extern wxLuaBindMethod wxFileSystem_methods[];
    extern int wxFileSystem_methodCount;
    extern wxLuaBindMethod wxFileSystemHandler_methods[];
    extern int wxFileSystemHandler_methodCount;
    extern wxLuaBindMethod wxFilterFSHandler_methods[];
    extern int wxFilterFSHandler_methodCount;
    extern wxLuaBindMethod wxLocalFSHandler_methods[];
    extern int wxLocalFSHandler_methodCount;
#endif // (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)

#if (wxUSE_STREAMS) && (wxUSE_FILESYSTEM) && (wxUSE_FS_INET && wxUSE_SOCKETS)
    extern wxLuaBindMethod wxInternetFSHandler_methods[];
    extern int wxInternetFSHandler_methodCount;
#endif // (wxUSE_STREAMS) && (wxUSE_FILESYSTEM) && (wxUSE_FS_INET && wxUSE_SOCKETS)

extern wxLuaBindMethod wxClientData_methods[];
extern int wxClientData_methodCount;
extern wxLuaBindMethod wxClientDataContainer_methods[];
extern int wxClientDataContainer_methodCount;
extern wxLuaBindMethod wxDynamicLibrary_methods[];
extern int wxDynamicLibrary_methodCount;
extern wxLuaBindMethod wxDynamicLibraryDetails_methods[];
extern int wxDynamicLibraryDetails_methodCount;
extern wxLuaBindMethod wxDynamicLibraryDetailsArray_methods[];
extern int wxDynamicLibraryDetailsArray_methodCount;
extern wxLuaBindMethod wxFileType_methods[];
extern int wxFileType_methodCount;
extern wxLuaBindMethod wxFileType_MessageParameters_methods[];
extern int wxFileType_MessageParameters_methodCount;
extern wxLuaBindMethod wxFileTypeInfo_methods[];
extern int wxFileTypeInfo_methodCount;
extern wxLuaBindMethod wxIconLocation_methods[];
extern int wxIconLocation_methodCount;
extern wxLuaBindMethod wxMimeTypesManager_methods[];
extern int wxMimeTypesManager_methodCount;
extern wxLuaBindMethod wxPathList_methods[];
extern int wxPathList_methodCount;
extern wxLuaBindMethod wxPlatformInfo_methods[];
extern int wxPlatformInfo_methodCount;
extern wxLuaBindMethod wxString_methods[];
extern int wxString_methodCount;
extern wxLuaBindMethod wxStringClientData_methods[];
extern int wxStringClientData_methodCount;
extern wxLuaBindMethod wxStringTokenizer_methods[];
extern int wxStringTokenizer_methodCount;

#if wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxStandardPaths
    extern wxLuaBindMethod wxStandardPaths_methods[];
    extern int wxStandardPaths_methodCount;
    extern wxLuaBindNumber wxStandardPaths_enums[];
    extern int wxStandardPaths_enumCount;
#endif // wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxStandardPaths

#if wxLUA_USE_wxArrayInt
    extern wxLuaBindMethod wxArrayInt_methods[];
    extern int wxArrayInt_methodCount;
#endif // wxLUA_USE_wxArrayInt

#if wxLUA_USE_wxArrayString
    extern wxLuaBindMethod wxArrayString_methods[];
    extern int wxArrayString_methodCount;
    extern wxLuaBindMethod wxSortedArrayString_methods[];
    extern int wxSortedArrayString_methodCount;
#endif // wxLUA_USE_wxArrayString

#if wxLUA_USE_wxClassInfo
    extern wxLuaBindMethod wxClassInfo_methods[];
    extern int wxClassInfo_methodCount;
#endif // wxLUA_USE_wxClassInfo

#if wxLUA_USE_wxConfig && wxUSE_CONFIG
    extern wxLuaBindMethod wxConfig_methods[];
    extern int wxConfig_methodCount;
    extern wxLuaBindMethod wxConfigBase_methods[];
    extern int wxConfigBase_methodCount;
    extern wxLuaBindNumber wxConfigBase_enums[];
    extern int wxConfigBase_enumCount;
    extern wxLuaBindMethod wxConfigPathChanger_methods[];
    extern int wxConfigPathChanger_methodCount;
    extern wxLuaBindMethod wxFileConfig_methods[];
    extern int wxFileConfig_methodCount;
    extern wxLuaBindMethod wxMemoryConfig_methods[];
    extern int wxMemoryConfig_methodCount;
#endif // wxLUA_USE_wxConfig && wxUSE_CONFIG

#if wxLUA_USE_wxCriticalSection && wxUSE_THREADS
    extern wxLuaBindMethod wxCriticalSection_methods[];
    extern int wxCriticalSection_methodCount;
#endif // wxLUA_USE_wxCriticalSection && wxUSE_THREADS

#if wxLUA_USE_wxCriticalSectionLocker
    extern wxLuaBindMethod wxCriticalSectionLocker_methods[];
    extern int wxCriticalSectionLocker_methodCount;
#endif // wxLUA_USE_wxCriticalSectionLocker

#if wxLUA_USE_wxDateSpan && wxUSE_DATETIME
    extern wxLuaBindMethod wxDateSpan_methods[];
    extern int wxDateSpan_methodCount;
#endif // wxLUA_USE_wxDateSpan && wxUSE_DATETIME

#if wxLUA_USE_wxDateTime && wxUSE_DATETIME
    extern wxLuaBindMethod wxDateTime_methods[];
    extern int wxDateTime_methodCount;
    extern wxLuaBindNumber wxDateTime_enums[];
    extern int wxDateTime_enumCount;
    extern wxLuaBindMethod wxDateTimeArray_methods[];
    extern int wxDateTimeArray_methodCount;
#endif // wxLUA_USE_wxDateTime && wxUSE_DATETIME

#if wxLUA_USE_wxDateTimeHolidayAuthority && wxUSE_DATETIME
    extern wxLuaBindMethod wxDateTimeHolidayAuthority_methods[];
    extern int wxDateTimeHolidayAuthority_methodCount;
    extern wxLuaBindMethod wxDateTimeWorkDays_methods[];
    extern int wxDateTimeWorkDays_methodCount;
#endif // wxLUA_USE_wxDateTimeHolidayAuthority && wxUSE_DATETIME

#if wxLUA_USE_wxDir
    extern wxLuaBindMethod wxDir_methods[];
    extern int wxDir_methodCount;
#endif // wxLUA_USE_wxDir

#if wxLUA_USE_wxFile && wxUSE_FILE
    extern wxLuaBindMethod wxFile_methods[];
    extern int wxFile_methodCount;
    extern wxLuaBindNumber wxFile_enums[];
    extern int wxFile_enumCount;
    extern wxLuaBindMethod wxTempFile_methods[];
    extern int wxTempFile_methodCount;
#endif // wxLUA_USE_wxFile && wxUSE_FILE

#if wxLUA_USE_wxFileName
    extern wxLuaBindMethod wxFileName_methods[];
    extern int wxFileName_methodCount;
#endif // wxLUA_USE_wxFileName

#if wxLUA_USE_wxList && !wxUSE_STL
    extern wxLuaBindMethod wxList_methods[];
    extern int wxList_methodCount;
    extern wxLuaBindMethod wxNode_methods[];
    extern int wxNode_methodCount;
#endif // wxLUA_USE_wxList && !wxUSE_STL

#if wxLUA_USE_wxLog && wxUSE_LOG
    extern wxLuaBindMethod wxLog_methods[];
    extern int wxLog_methodCount;
    extern wxLuaBindMethod wxLogBuffer_methods[];
    extern int wxLogBuffer_methodCount;
    extern wxLuaBindMethod wxLogChain_methods[];
    extern int wxLogChain_methodCount;
    extern wxLuaBindMethod wxLogNull_methods[];
    extern int wxLogNull_methodCount;
    extern wxLuaBindMethod wxLogPassThrough_methods[];
    extern int wxLogPassThrough_methodCount;
#endif // wxLUA_USE_wxLog && wxUSE_LOG

#if wxLUA_USE_wxObject
    extern wxLuaBindMethod wxObject_methods[];
    extern int wxObject_methodCount;
    extern wxLuaBindMethod wxObjectRefData_methods[];
    extern int wxObjectRefData_methodCount;
#endif // wxLUA_USE_wxObject

#if wxLUA_USE_wxRegEx && wxUSE_REGEX
    extern wxLuaBindMethod wxRegEx_methods[];
    extern int wxRegEx_methodCount;
#endif // wxLUA_USE_wxRegEx && wxUSE_REGEX

#if wxLUA_USE_wxStopWatch && wxUSE_STOPWATCH
    extern wxLuaBindMethod wxStopWatch_methods[];
    extern int wxStopWatch_methodCount;
#endif // wxLUA_USE_wxStopWatch && wxUSE_STOPWATCH

#if wxLUA_USE_wxSystemOptions
    extern wxLuaBindMethod wxSystemOptions_methods[];
    extern int wxSystemOptions_methodCount;
#endif // wxLUA_USE_wxSystemOptions

#if wxLUA_USE_wxTimeSpan && wxUSE_DATETIME
    extern wxLuaBindMethod wxTimeSpan_methods[];
    extern int wxTimeSpan_methodCount;
#endif // wxLUA_USE_wxTimeSpan && wxUSE_DATETIME

#if wxUSE_INTL
    extern wxLuaBindMethod wxLanguageInfo_methods[];
    extern int wxLanguageInfo_methodCount;
    extern wxLuaBindMethod wxLocale_methods[];
    extern int wxLocale_methodCount;
#endif // wxUSE_INTL

#if wxUSE_LONGLONG
    extern wxLuaBindMethod wxLongLong_methods[];
    extern int wxLongLong_methodCount;
    extern wxLuaBindMethod wxULongLong_methods[];
    extern int wxULongLong_methodCount;
#endif // wxUSE_LONGLONG

#if wxUSE_SNGLINST_CHECKER
    extern wxLuaBindMethod wxSingleInstanceChecker_methods[];
    extern int wxSingleInstanceChecker_methodCount;
#endif // wxUSE_SNGLINST_CHECKER

#if wxUSE_STREAMS
    extern wxLuaBindMethod wxDataInputStream_methods[];
    extern int wxDataInputStream_methodCount;
    extern wxLuaBindMethod wxDataOutputStream_methods[];
    extern int wxDataOutputStream_methodCount;
    extern wxLuaBindMethod wxFileInputStream_methods[];
    extern int wxFileInputStream_methodCount;
    extern wxLuaBindMethod wxFileOutputStream_methods[];
    extern int wxFileOutputStream_methodCount;
    extern wxLuaBindMethod wxInputStream_methods[];
    extern int wxInputStream_methodCount;
    extern wxLuaBindMethod wxMemoryInputStream_methods[];
    extern int wxMemoryInputStream_methodCount;
    extern wxLuaBindMethod wxOutputStream_methods[];
    extern int wxOutputStream_methodCount;
    extern wxLuaBindMethod wxStreamBase_methods[];
    extern int wxStreamBase_methodCount;
#endif // wxUSE_STREAMS




wxLuaBindClass* wxLuaGetClassList_wxbase(size_t &count)
{
    static wxLuaBindClass classList[] =
    {
#if (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)
        { wxluaclassname_wxArchiveFSHandler, wxArchiveFSHandler_methods, wxArchiveFSHandler_methodCount, CLASSINFO(wxArchiveFSHandler), &wxluatype_wxArchiveFSHandler, wxluabaseclassnames_wxArchiveFSHandler, wxluabaseclassbinds_wxArchiveFSHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)

#if wxLUA_USE_wxArrayInt
        { wxluaclassname_wxArrayInt, wxArrayInt_methods, wxArrayInt_methodCount, NULL, &wxluatype_wxArrayInt, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxArrayInt

#if wxLUA_USE_wxArrayString
        { wxluaclassname_wxArrayString, wxArrayString_methods, wxArrayString_methodCount, NULL, &wxluatype_wxArrayString, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxArrayString

#if wxLUA_USE_wxClassInfo
        { wxluaclassname_wxClassInfo, wxClassInfo_methods, wxClassInfo_methodCount, NULL, &wxluatype_wxClassInfo, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxClassInfo

        { wxluaclassname_wxClientData, wxClientData_methods, wxClientData_methodCount, NULL, &wxluatype_wxClientData, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxClientDataContainer, wxClientDataContainer_methods, wxClientDataContainer_methodCount, NULL, &wxluatype_wxClientDataContainer, NULL, NULL, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxConfig && wxUSE_CONFIG
        { wxluaclassname_wxConfig, wxConfig_methods, wxConfig_methodCount, NULL, &wxluatype_wxConfig, wxluabaseclassnames_wxConfig, wxluabaseclassbinds_wxConfig, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxConfigBase, wxConfigBase_methods, wxConfigBase_methodCount, NULL, &wxluatype_wxConfigBase, NULL, NULL, wxConfigBase_enums, wxConfigBase_enumCount, }, 
        { wxluaclassname_wxConfigPathChanger, wxConfigPathChanger_methods, wxConfigPathChanger_methodCount, NULL, &wxluatype_wxConfigPathChanger, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxConfig && wxUSE_CONFIG

#if wxLUA_USE_wxCriticalSection && wxUSE_THREADS
        { wxluaclassname_wxCriticalSection, wxCriticalSection_methods, wxCriticalSection_methodCount, NULL, &wxluatype_wxCriticalSection, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxCriticalSection && wxUSE_THREADS

#if wxLUA_USE_wxCriticalSectionLocker
        { wxluaclassname_wxCriticalSectionLocker, wxCriticalSectionLocker_methods, wxCriticalSectionLocker_methodCount, NULL, &wxluatype_wxCriticalSectionLocker, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxCriticalSectionLocker

#if wxUSE_STREAMS
        { wxluaclassname_wxDataInputStream, wxDataInputStream_methods, wxDataInputStream_methodCount, NULL, &wxluatype_wxDataInputStream, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDataOutputStream, wxDataOutputStream_methods, wxDataOutputStream_methodCount, NULL, &wxluatype_wxDataOutputStream, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_STREAMS

#if wxLUA_USE_wxDateSpan && wxUSE_DATETIME
        { wxluaclassname_wxDateSpan, wxDateSpan_methods, wxDateSpan_methodCount, NULL, &wxluatype_wxDateSpan, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDateSpan && wxUSE_DATETIME

#if wxLUA_USE_wxDateTime && wxUSE_DATETIME
        { wxluaclassname_wxDateTime, wxDateTime_methods, wxDateTime_methodCount, NULL, &wxluatype_wxDateTime, NULL, NULL, wxDateTime_enums, wxDateTime_enumCount, }, 
        { wxluaclassname_wxDateTimeArray, wxDateTimeArray_methods, wxDateTimeArray_methodCount, NULL, &wxluatype_wxDateTimeArray, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDateTime && wxUSE_DATETIME

#if wxLUA_USE_wxDateTimeHolidayAuthority && wxUSE_DATETIME
        { wxluaclassname_wxDateTimeHolidayAuthority, wxDateTimeHolidayAuthority_methods, wxDateTimeHolidayAuthority_methodCount, NULL, &wxluatype_wxDateTimeHolidayAuthority, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDateTimeWorkDays, wxDateTimeWorkDays_methods, wxDateTimeWorkDays_methodCount, NULL, &wxluatype_wxDateTimeWorkDays, wxluabaseclassnames_wxDateTimeWorkDays, wxluabaseclassbinds_wxDateTimeWorkDays, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDateTimeHolidayAuthority && wxUSE_DATETIME

#if wxLUA_USE_wxDir
        { wxluaclassname_wxDir, wxDir_methods, wxDir_methodCount, NULL, &wxluatype_wxDir, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxDir

        { wxluaclassname_wxDynamicLibrary, wxDynamicLibrary_methods, wxDynamicLibrary_methodCount, NULL, &wxluatype_wxDynamicLibrary, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDynamicLibraryDetails, wxDynamicLibraryDetails_methods, wxDynamicLibraryDetails_methodCount, NULL, &wxluatype_wxDynamicLibraryDetails, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxDynamicLibraryDetailsArray, wxDynamicLibraryDetailsArray_methods, wxDynamicLibraryDetailsArray_methodCount, NULL, &wxluatype_wxDynamicLibraryDetailsArray, NULL, NULL, g_wxluanumberArray_None, 0, }, 

#if (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)
        { wxluaclassname_wxFSFile, wxFSFile_methods, wxFSFile_methodCount, CLASSINFO(wxFSFile), &wxluatype_wxFSFile, wxluabaseclassnames_wxFSFile, wxluabaseclassbinds_wxFSFile, g_wxluanumberArray_None, 0, }, 
#endif // (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)

#if wxLUA_USE_wxFile && wxUSE_FILE
        { wxluaclassname_wxFile, wxFile_methods, wxFile_methodCount, NULL, &wxluatype_wxFile, NULL, NULL, wxFile_enums, wxFile_enumCount, }, 
#endif // wxLUA_USE_wxFile && wxUSE_FILE

#if wxLUA_USE_wxConfig && wxUSE_CONFIG
        { wxluaclassname_wxFileConfig, wxFileConfig_methods, wxFileConfig_methodCount, NULL, &wxluatype_wxFileConfig, wxluabaseclassnames_wxFileConfig, wxluabaseclassbinds_wxFileConfig, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxConfig && wxUSE_CONFIG

#if wxUSE_STREAMS
        { wxluaclassname_wxFileInputStream, wxFileInputStream_methods, wxFileInputStream_methodCount, NULL, &wxluatype_wxFileInputStream, wxluabaseclassnames_wxFileInputStream, wxluabaseclassbinds_wxFileInputStream, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_STREAMS

#if wxLUA_USE_wxFileName
        { wxluaclassname_wxFileName, wxFileName_methods, wxFileName_methodCount, NULL, &wxluatype_wxFileName, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFileName

#if wxUSE_STREAMS
        { wxluaclassname_wxFileOutputStream, wxFileOutputStream_methods, wxFileOutputStream_methodCount, NULL, &wxluatype_wxFileOutputStream, wxluabaseclassnames_wxFileOutputStream, wxluabaseclassbinds_wxFileOutputStream, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_STREAMS

#if (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)
        { wxluaclassname_wxFileSystem, wxFileSystem_methods, wxFileSystem_methodCount, CLASSINFO(wxFileSystem), &wxluatype_wxFileSystem, wxluabaseclassnames_wxFileSystem, wxluabaseclassbinds_wxFileSystem, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxFileSystemHandler, wxFileSystemHandler_methods, wxFileSystemHandler_methodCount, CLASSINFO(wxFileSystemHandler), &wxluatype_wxFileSystemHandler, wxluabaseclassnames_wxFileSystemHandler, wxluabaseclassbinds_wxFileSystemHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)

        { wxluaclassname_wxFileType, wxFileType_methods, wxFileType_methodCount, NULL, &wxluatype_wxFileType, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxFileTypeInfo, wxFileTypeInfo_methods, wxFileTypeInfo_methodCount, NULL, &wxluatype_wxFileTypeInfo, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxFileType_MessageParameters, wxFileType_MessageParameters_methods, wxFileType_MessageParameters_methodCount, NULL, &wxluatype_wxFileType_MessageParameters, NULL, NULL, g_wxluanumberArray_None, 0, }, 

#if (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)
        { wxluaclassname_wxFilterFSHandler, wxFilterFSHandler_methods, wxFilterFSHandler_methodCount, CLASSINFO(wxFilterFSHandler), &wxluatype_wxFilterFSHandler, wxluabaseclassnames_wxFilterFSHandler, wxluabaseclassbinds_wxFilterFSHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)

        { wxluaclassname_wxIconLocation, wxIconLocation_methods, wxIconLocation_methodCount, NULL, &wxluatype_wxIconLocation, NULL, NULL, g_wxluanumberArray_None, 0, }, 

#if wxUSE_STREAMS
        { wxluaclassname_wxInputStream, wxInputStream_methods, wxInputStream_methodCount, NULL, &wxluatype_wxInputStream, wxluabaseclassnames_wxInputStream, wxluabaseclassbinds_wxInputStream, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_STREAMS

#if (wxUSE_STREAMS) && (wxUSE_FILESYSTEM) && (wxUSE_FS_INET && wxUSE_SOCKETS)
        { wxluaclassname_wxInternetFSHandler, wxInternetFSHandler_methods, wxInternetFSHandler_methodCount, CLASSINFO(wxInternetFSHandler), &wxluatype_wxInternetFSHandler, wxluabaseclassnames_wxInternetFSHandler, wxluabaseclassbinds_wxInternetFSHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxUSE_STREAMS) && (wxUSE_FILESYSTEM) && (wxUSE_FS_INET && wxUSE_SOCKETS)

#if wxUSE_INTL
        { wxluaclassname_wxLanguageInfo, wxLanguageInfo_methods, wxLanguageInfo_methodCount, NULL, &wxluatype_wxLanguageInfo, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_INTL

#if wxLUA_USE_wxList && !wxUSE_STL
        { wxluaclassname_wxList, wxList_methods, wxList_methodCount, CLASSINFO(wxList), &wxluatype_wxList, wxluabaseclassnames_wxList, wxluabaseclassbinds_wxList, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxList && !wxUSE_STL

#if (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)
        { wxluaclassname_wxLocalFSHandler, wxLocalFSHandler_methods, wxLocalFSHandler_methodCount, CLASSINFO(wxLocalFSHandler), &wxluatype_wxLocalFSHandler, wxluabaseclassnames_wxLocalFSHandler, wxluabaseclassbinds_wxLocalFSHandler, g_wxluanumberArray_None, 0, }, 
#endif // (wxUSE_STREAMS) && (wxUSE_FILESYSTEM)

#if wxUSE_INTL
        { wxluaclassname_wxLocale, wxLocale_methods, wxLocale_methodCount, NULL, &wxluatype_wxLocale, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_INTL

#if wxLUA_USE_wxLog && wxUSE_LOG
        { wxluaclassname_wxLog, wxLog_methods, wxLog_methodCount, NULL, &wxluatype_wxLog, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxLogBuffer, wxLogBuffer_methods, wxLogBuffer_methodCount, NULL, &wxluatype_wxLogBuffer, wxluabaseclassnames_wxLogBuffer, wxluabaseclassbinds_wxLogBuffer, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxLogChain, wxLogChain_methods, wxLogChain_methodCount, NULL, &wxluatype_wxLogChain, wxluabaseclassnames_wxLogChain, wxluabaseclassbinds_wxLogChain, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxLogNull, wxLogNull_methods, wxLogNull_methodCount, NULL, &wxluatype_wxLogNull, wxluabaseclassnames_wxLogNull, wxluabaseclassbinds_wxLogNull, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxLogPassThrough, wxLogPassThrough_methods, wxLogPassThrough_methodCount, NULL, &wxluatype_wxLogPassThrough, wxluabaseclassnames_wxLogPassThrough, wxluabaseclassbinds_wxLogPassThrough, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxLog && wxUSE_LOG

#if wxUSE_LONGLONG
        { wxluaclassname_wxLongLong, wxLongLong_methods, wxLongLong_methodCount, NULL, &wxluatype_wxLongLong, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_LONGLONG

#if wxLUA_USE_wxConfig && wxUSE_CONFIG
        { wxluaclassname_wxMemoryConfig, wxMemoryConfig_methods, wxMemoryConfig_methodCount, NULL, &wxluatype_wxMemoryConfig, wxluabaseclassnames_wxMemoryConfig, wxluabaseclassbinds_wxMemoryConfig, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxConfig && wxUSE_CONFIG

#if wxUSE_STREAMS
        { wxluaclassname_wxMemoryInputStream, wxMemoryInputStream_methods, wxMemoryInputStream_methodCount, NULL, &wxluatype_wxMemoryInputStream, wxluabaseclassnames_wxMemoryInputStream, wxluabaseclassbinds_wxMemoryInputStream, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_STREAMS

        { wxluaclassname_wxMimeTypesManager, wxMimeTypesManager_methods, wxMimeTypesManager_methodCount, NULL, &wxluatype_wxMimeTypesManager, NULL, NULL, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxList && !wxUSE_STL
        { wxluaclassname_wxNode, wxNode_methods, wxNode_methodCount, NULL, &wxluatype_wxNode, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxList && !wxUSE_STL

#if wxLUA_USE_wxObject
        { wxluaclassname_wxObject, wxObject_methods, wxObject_methodCount, CLASSINFO(wxObject), &wxluatype_wxObject, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxObjectRefData, wxObjectRefData_methods, wxObjectRefData_methodCount, NULL, &wxluatype_wxObjectRefData, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxObject

#if wxUSE_STREAMS
        { wxluaclassname_wxOutputStream, wxOutputStream_methods, wxOutputStream_methodCount, NULL, &wxluatype_wxOutputStream, wxluabaseclassnames_wxOutputStream, wxluabaseclassbinds_wxOutputStream, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_STREAMS

        { wxluaclassname_wxPathList, wxPathList_methods, wxPathList_methodCount, NULL, &wxluatype_wxPathList, wxluabaseclassnames_wxPathList, wxluabaseclassbinds_wxPathList, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxPlatformInfo, wxPlatformInfo_methods, wxPlatformInfo_methodCount, NULL, &wxluatype_wxPlatformInfo, NULL, NULL, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxRegEx && wxUSE_REGEX
        { wxluaclassname_wxRegEx, wxRegEx_methods, wxRegEx_methodCount, NULL, &wxluatype_wxRegEx, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxRegEx && wxUSE_REGEX

#if wxUSE_SNGLINST_CHECKER
        { wxluaclassname_wxSingleInstanceChecker, wxSingleInstanceChecker_methods, wxSingleInstanceChecker_methodCount, NULL, &wxluatype_wxSingleInstanceChecker, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_SNGLINST_CHECKER

#if wxLUA_USE_wxArrayString
        { wxluaclassname_wxSortedArrayString, wxSortedArrayString_methods, wxSortedArrayString_methodCount, NULL, &wxluatype_wxSortedArrayString, wxluabaseclassnames_wxSortedArrayString, wxluabaseclassbinds_wxSortedArrayString, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxArrayString

#if wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxStandardPaths
        { wxluaclassname_wxStandardPaths, wxStandardPaths_methods, wxStandardPaths_methodCount, NULL, &wxluatype_wxStandardPaths, NULL, NULL, wxStandardPaths_enums, wxStandardPaths_enumCount, }, 
#endif // wxCHECK_VERSION(2,8,0) && wxLUA_USE_wxStandardPaths

#if wxLUA_USE_wxStopWatch && wxUSE_STOPWATCH
        { wxluaclassname_wxStopWatch, wxStopWatch_methods, wxStopWatch_methodCount, NULL, &wxluatype_wxStopWatch, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxStopWatch && wxUSE_STOPWATCH

#if wxUSE_STREAMS
        { wxluaclassname_wxStreamBase, wxStreamBase_methods, wxStreamBase_methodCount, NULL, &wxluatype_wxStreamBase, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_STREAMS

        { wxluaclassname_wxString, wxString_methods, wxString_methodCount, NULL, &wxluatype_wxString, NULL, NULL, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxStringClientData, wxStringClientData_methods, wxStringClientData_methodCount, NULL, &wxluatype_wxStringClientData, wxluabaseclassnames_wxStringClientData, wxluabaseclassbinds_wxStringClientData, g_wxluanumberArray_None, 0, }, 
        { wxluaclassname_wxStringTokenizer, wxStringTokenizer_methods, wxStringTokenizer_methodCount, NULL, &wxluatype_wxStringTokenizer, wxluabaseclassnames_wxStringTokenizer, wxluabaseclassbinds_wxStringTokenizer, g_wxluanumberArray_None, 0, }, 

#if wxLUA_USE_wxSystemOptions
        { wxluaclassname_wxSystemOptions, wxSystemOptions_methods, wxSystemOptions_methodCount, NULL, &wxluatype_wxSystemOptions, wxluabaseclassnames_wxSystemOptions, wxluabaseclassbinds_wxSystemOptions, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxSystemOptions

#if wxLUA_USE_wxFile && wxUSE_FILE
        { wxluaclassname_wxTempFile, wxTempFile_methods, wxTempFile_methodCount, NULL, &wxluatype_wxTempFile, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxFile && wxUSE_FILE

#if wxLUA_USE_wxTimeSpan && wxUSE_DATETIME
        { wxluaclassname_wxTimeSpan, wxTimeSpan_methods, wxTimeSpan_methodCount, NULL, &wxluatype_wxTimeSpan, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxLUA_USE_wxTimeSpan && wxUSE_DATETIME

#if wxUSE_LONGLONG
        { wxluaclassname_wxULongLong, wxULongLong_methods, wxULongLong_methodCount, NULL, &wxluatype_wxULongLong, NULL, NULL, g_wxluanumberArray_None, 0, }, 
#endif // wxUSE_LONGLONG


        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_wxbase() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_wxbase, wxLuaBinding)

wxLuaBinding_wxbase::wxLuaBinding_wxbase() : wxLuaBinding()
{
    m_bindingName   = wxT("wxbase");
    m_nameSpace     = wxT("wx");
    m_classArray    = wxLuaGetClassList_wxbase(m_classCount);
    m_numberArray   = wxLuaGetDefineList_wxbase(m_numberCount);
    m_stringArray   = wxLuaGetStringList_wxbase(m_stringCount);
    m_eventArray    = wxLuaGetEventList_wxbase(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_wxbase(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_wxbase(m_functionCount);
}

bool wxLuaBinding_wxbase::RegisterBinding(const wxLuaState& wxlState)
{
    bool ret = wxLuaBinding::RegisterBinding(wxlState);

    wxCHECK_MSG(wxlState.Ok(), false, wxT("Invalid wxLuaState"));
    lua_State* L = wxlState.GetLuaState();

    lua_pushlstring(L, "NULL", 4);
    wxluaT_pushuserdatatype(L, NULL, wxluatype_NULL, true, true);
    lua_rawset(L, -3); // set t["NULL"] = userdata(NULL) w/ NULL tag

    p_wxluatype_wxString            = &wxluatype_wxString;
    p_wxluatype_wxArrayString       = &wxluatype_wxArrayString;
    p_wxluatype_wxSortedArrayString = &wxluatype_wxSortedArrayString;
    p_wxluatype_wxArrayInt          = &wxluatype_wxArrayInt;

    return ret;
}


// ---------------------------------------------------------------------------

bool wxLuaBinding_wxbase_init()
{
    static wxLuaBinding_wxbase m_binding;
    if (wxLuaBinding::GetBindingList()->Find(&m_binding)) return false;

    wxLuaBinding::GetBindingList()->Append(&m_binding);
    return true;
}

wxLUA_IMPLEMENT_ENCAPSULATION(wxDynamicLibrary, wxDynamicLibrary)
wxLUA_IMPLEMENT_ENCAPSULATION(wxDynamicLibraryDetails, wxDynamicLibraryDetails)
wxLUA_IMPLEMENT_ENCAPSULATION(wxDynamicLibraryDetailsArray, wxDynamicLibraryDetailsArray)
wxLUA_IMPLEMENT_ENCAPSULATION(wxFileType, wxFileType)
wxLUA_IMPLEMENT_ENCAPSULATION(wxFileType::MessageParameters, wxFileType_MessageParameters)
wxLUA_IMPLEMENT_ENCAPSULATION(wxFileTypeInfo, wxFileTypeInfo)
wxLUA_IMPLEMENT_ENCAPSULATION(wxIconLocation, wxIconLocation)
wxLUA_IMPLEMENT_ENCAPSULATION(wxMimeTypesManager, wxMimeTypesManager)
wxLUA_IMPLEMENT_ENCAPSULATION(wxPathList, wxPathList)
wxLUA_IMPLEMENT_ENCAPSULATION(wxString, wxString)

#if wxLUA_USE_wxArrayInt
wxLUA_IMPLEMENT_ENCAPSULATION(wxArrayInt, wxArrayInt)
#endif // wxLUA_USE_wxArrayInt


#if wxLUA_USE_wxArrayString
wxLUA_IMPLEMENT_ENCAPSULATION(wxArrayString, wxArrayString)
wxLUA_IMPLEMENT_ENCAPSULATION(wxSortedArrayString, wxSortedArrayString)
#endif // wxLUA_USE_wxArrayString


#if wxLUA_USE_wxConfig && wxUSE_CONFIG
wxLUA_IMPLEMENT_ENCAPSULATION(wxConfig, wxConfig)
wxLUA_IMPLEMENT_ENCAPSULATION(wxConfigBase, wxConfigBase)
wxLUA_IMPLEMENT_ENCAPSULATION(wxConfigPathChanger, wxConfigPathChanger)
wxLUA_IMPLEMENT_ENCAPSULATION(wxFileConfig, wxFileConfig)
wxLUA_IMPLEMENT_ENCAPSULATION(wxMemoryConfig, wxMemoryConfig)
#endif // wxLUA_USE_wxConfig && wxUSE_CONFIG


#if wxLUA_USE_wxCriticalSection && wxUSE_THREADS
wxLUA_IMPLEMENT_ENCAPSULATION(wxCriticalSection, wxCriticalSection)
#endif // wxLUA_USE_wxCriticalSection && wxUSE_THREADS


#if wxLUA_USE_wxCriticalSectionLocker
wxLUA_IMPLEMENT_ENCAPSULATION(wxCriticalSectionLocker, wxCriticalSectionLocker)
#endif // wxLUA_USE_wxCriticalSectionLocker


#if wxLUA_USE_wxDateSpan && wxUSE_DATETIME
wxLUA_IMPLEMENT_ENCAPSULATION(wxDateSpan, wxDateSpan)
#endif // wxLUA_USE_wxDateSpan && wxUSE_DATETIME


#if wxLUA_USE_wxDateTime && wxUSE_DATETIME
wxLUA_IMPLEMENT_ENCAPSULATION(wxDateTime, wxDateTime)
wxLUA_IMPLEMENT_ENCAPSULATION(wxDateTimeArray, wxDateTimeArray)
#endif // wxLUA_USE_wxDateTime && wxUSE_DATETIME


#if wxLUA_USE_wxDateTimeHolidayAuthority && wxUSE_DATETIME
wxLUA_IMPLEMENT_ENCAPSULATION(wxDateTimeHolidayAuthority, wxDateTimeHolidayAuthority)
wxLUA_IMPLEMENT_ENCAPSULATION(wxDateTimeWorkDays, wxDateTimeWorkDays)
#endif // wxLUA_USE_wxDateTimeHolidayAuthority && wxUSE_DATETIME


#if wxLUA_USE_wxDir
wxLUA_IMPLEMENT_ENCAPSULATION(wxDir, wxDir)
#endif // wxLUA_USE_wxDir


#if wxLUA_USE_wxFile && wxUSE_FILE
wxLUA_IMPLEMENT_ENCAPSULATION(wxFile, wxFile)
wxLUA_IMPLEMENT_ENCAPSULATION(wxTempFile, wxTempFile)
#endif // wxLUA_USE_wxFile && wxUSE_FILE


#if wxLUA_USE_wxFileName
wxLUA_IMPLEMENT_ENCAPSULATION(wxFileName, wxFileName)
#endif // wxLUA_USE_wxFileName


#if wxLUA_USE_wxLog && wxUSE_LOG
wxLUA_IMPLEMENT_ENCAPSULATION(wxLog, wxLog)
wxLUA_IMPLEMENT_ENCAPSULATION(wxLogBuffer, wxLogBuffer)
wxLUA_IMPLEMENT_ENCAPSULATION(wxLogChain, wxLogChain)
wxLUA_IMPLEMENT_ENCAPSULATION(wxLogNull, wxLogNull)
wxLUA_IMPLEMENT_ENCAPSULATION(wxLogPassThrough, wxLogPassThrough)
#endif // wxLUA_USE_wxLog && wxUSE_LOG


#if wxLUA_USE_wxRegEx && wxUSE_REGEX
wxLUA_IMPLEMENT_ENCAPSULATION(wxRegEx, wxRegEx)
#endif // wxLUA_USE_wxRegEx && wxUSE_REGEX


#if wxLUA_USE_wxStopWatch && wxUSE_STOPWATCH
wxLUA_IMPLEMENT_ENCAPSULATION(wxStopWatch, wxStopWatch)
#endif // wxLUA_USE_wxStopWatch && wxUSE_STOPWATCH


#if wxLUA_USE_wxTimeSpan && wxUSE_DATETIME
wxLUA_IMPLEMENT_ENCAPSULATION(wxTimeSpan, wxTimeSpan)
#endif // wxLUA_USE_wxTimeSpan && wxUSE_DATETIME


#if wxUSE_INTL
wxLUA_IMPLEMENT_ENCAPSULATION(wxLanguageInfo, wxLanguageInfo)
wxLUA_IMPLEMENT_ENCAPSULATION(wxLocale, wxLocale)
#endif // wxUSE_INTL


#if wxUSE_LONGLONG
wxLUA_IMPLEMENT_ENCAPSULATION(wxLongLong, wxLongLong)
wxLUA_IMPLEMENT_ENCAPSULATION(wxULongLong, wxULongLong)
#endif // wxUSE_LONGLONG


#if wxUSE_SNGLINST_CHECKER
wxLUA_IMPLEMENT_ENCAPSULATION(wxSingleInstanceChecker, wxSingleInstanceChecker)
#endif // wxUSE_SNGLINST_CHECKER


#if wxUSE_STREAMS
wxLUA_IMPLEMENT_ENCAPSULATION(wxDataInputStream, wxDataInputStream)
wxLUA_IMPLEMENT_ENCAPSULATION(wxDataOutputStream, wxDataOutputStream)
wxLUA_IMPLEMENT_ENCAPSULATION(wxFileInputStream, wxFileInputStream)
wxLUA_IMPLEMENT_ENCAPSULATION(wxFileOutputStream, wxFileOutputStream)
wxLUA_IMPLEMENT_ENCAPSULATION(wxInputStream, wxInputStream)
wxLUA_IMPLEMENT_ENCAPSULATION(wxMemoryInputStream, wxMemoryInputStream)
wxLUA_IMPLEMENT_ENCAPSULATION(wxOutputStream, wxOutputStream)
#endif // wxUSE_STREAMS


